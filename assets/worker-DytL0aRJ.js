var eh=Object.defineProperty;var th=(Si,In,n)=>In in Si?eh(Si,In,{enumerable:!0,configurable:!0,writable:!0,value:n}):Si[In]=n;var Ae=(Si,In,n)=>th(Si,typeof In!="symbol"?In+"":In,n);(function(){"use strict";var Si;function _mergeNamespaces(n,e){return e.forEach(function(i){i&&typeof i!="string"&&!Array.isArray(i)&&Object.keys(i).forEach(function(o){if(o!=="default"&&!(o in n)){var l=Object.getOwnPropertyDescriptor(i,o);Object.defineProperty(n,o,l.get?l:{enumerable:!0,get:function(){return i[o]}})}})}),Object.freeze(n)}function dispatchCallback(n,e){n&&n(e)}function reverseDictionary(n){return Object.fromEntries(Object.entries(n).map(([e,i])=>[i,e]))}function escapeRegExp(n){return n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}const Callable=class{constructor(){let n=function(...e){return n._call(...e)};return Object.setPrototypeOf(n,new.target.prototype)}_call(...n){throw Error("Must implement _call method in subclass")}};function isTypedArray(n){var e,i,o;return((o=(i=(e=n==null?void 0:n.prototype)==null?void 0:e.__proto__)==null?void 0:i.constructor)==null?void 0:o.name)==="TypedArray"}function isIntegralNumber(n){return Number.isInteger(n)||typeof n=="bigint"}function exists(n){return n!=null}function mergeArrays(...n){return Array.prototype.concat.apply([],n)}var sharp={},ONNX_NODE=Object.freeze({__proto__:null,default:sharp});function getDefaultExportFromCjs(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function getAugmentedNamespace(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var i=function o(){return this instanceof o?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};i.prototype=e.prototype}else i={};return Object.defineProperty(i,"__esModule",{value:!0}),Object.keys(n).forEach(function(o){var l=Object.getOwnPropertyDescriptor(n,o);Object.defineProperty(i,o,l.get?l:{enumerable:!0,get:function(){return n[o]}})}),i}var ortWeb_min$1={exports:{}};const backends={},backendsSortedByPriority=[],registerBackend=(n,e,i)=>{if(e&&typeof e.init=="function"&&typeof e.createSessionHandler=="function"){const o=backends[n];if(o===void 0)backends[n]={backend:e,priority:i};else{if(o.priority>i)return;if(o.priority===i&&o.backend!==e)throw new Error(`cannot register backend "${n}" using priority ${i}`)}if(i>=0){const l=backendsSortedByPriority.indexOf(n);l!==-1&&backendsSortedByPriority.splice(l,1);for(let c=0;c<backendsSortedByPriority.length;c++)if(backends[backendsSortedByPriority[c]].priority<=i){backendsSortedByPriority.splice(c,0,n);return}backendsSortedByPriority.push(n)}return}throw new TypeError("not a valid backend")},resolveBackend=async n=>{const e=n.length===0?backendsSortedByPriority:n,i=[];for(const o of e){const l=backends[o];if(l){if(l.initialized)return l.backend;if(l.aborted)continue;const c=!!l.initPromise;try{return c||(l.initPromise=l.backend.init()),await l.initPromise,l.initialized=!0,l.backend}catch(a){c||i.push({name:o,err:a}),l.aborted=!0}finally{delete l.initPromise}}}throw new Error(`no available backend found. ERR: ${i.map(o=>`[${o.name}] ${o.err}`).join(", ")}`)};class EnvImpl{constructor(){this.wasm={},this.webgl={},this.logLevelInternal="warning"}set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);this.logLevelInternal=e}}get logLevel(){return this.logLevelInternal}}const env$2=new EnvImpl,isBigInt64ArrayAvailable=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",isBigUint64ArrayAvailable=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function",NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);isBigInt64ArrayAvailable&&(NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("int64",BigInt64Array),NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array,"int64")),isBigUint64ArrayAvailable&&(NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("uint64",BigUint64Array),NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array,"uint64"));const calculateSize=n=>{let e=1;for(let i=0;i<n.length;i++){const o=n[i];if(typeof o!="number"||!Number.isSafeInteger(o))throw new TypeError(`dims[${i}] must be an integer, got: ${o}`);if(o<0)throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${o}`);e*=o}return e};let Tensor$2=class Ci{constructor(e,i,o){let l,c,a;if(typeof e=="string")if(l=e,a=o,e==="string"){if(!Array.isArray(i))throw new TypeError("A string tensor's data must be a string array.");c=i}else{const f=NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(e);if(f===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(i))c=f.from(i);else if(i instanceof f)c=i;else throw new TypeError(`A ${l} tensor's data must be type of ${f}`)}else if(a=i,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const f=typeof e[0];if(f==="string")l="string",c=e;else if(f==="boolean")l="bool",c=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${f}.`)}else{const f=NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(e.constructor);if(f===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);l=f,c=e}if(a===void 0)a=[c.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");const h=calculateSize(a);if(h!==c.length)throw new Error(`Tensor's size(${h}) does not match data length(${c.length}).`);this.dims=a,this.type=l,this.data=c,this.size=h}static bufferToTensor(e,i){if(e===void 0)throw new Error("Image buffer must be defined");if(i.height===void 0||i.width===void 0)throw new Error("Image height and width must be defined");const{height:o,width:l}=i,c=i.norm;let a,h;c===void 0||c.mean===void 0?a=255:a=c.mean,c===void 0||c.bias===void 0?h=0:h=c.bias;const f=i.bitmapFormat!==void 0?i.bitmapFormat:"RGBA",p=i.tensorFormat!==void 0&&i.tensorFormat!==void 0?i.tensorFormat:"RGB",d=o*l,r=p==="RGBA"?new Float32Array(d*4):new Float32Array(d*3);let t=4,u=0,s=1,m=2,g=3,b=0,y=d,w=d*2,x=-1;f==="RGB"&&(t=3,u=0,s=1,m=2,g=-1),p==="RGBA"?x=d*3:p==="RBG"?(b=0,w=d,y=d*2):p==="BGR"&&(w=0,y=d,b=d*2);for(let E=0;E<d;E++,u+=t,m+=t,s+=t,g+=t)r[b++]=(e[u]+h)/a,r[y++]=(e[s]+h)/a,r[w++]=(e[m]+h)/a,x!==-1&&g!==-1&&(r[x++]=(e[g]+h)/a);return p==="RGBA"?new Ci("float32",r,[1,4,o,l]):new Ci("float32",r,[1,3,o,l])}static async fromImage(e,i){const o=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,l=typeof ImageData<"u"&&e instanceof ImageData,c=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,a=typeof String<"u"&&(e instanceof String||typeof e=="string");let h,f={};if(o){const p=document.createElement("canvas"),d=p.getContext("2d");if(d!=null){let r=e.naturalHeight,t=e.naturalWidth;if(i!==void 0&&i.resizedHeight!==void 0&&i.resizedWidth!==void 0&&(r=i.resizedHeight,t=i.resizedWidth),i!==void 0){if(f=i,i.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");if(f.tensorFormat="RGBA",i.height!==void 0&&i.height!==r)throw new Error("Image input config height doesn't match HTMLImageElement height");if(f.height=r,i.width!==void 0&&i.width!==t)throw new Error("Image input config width doesn't match HTMLImageElement width");f.width=t}else f.tensorFormat="RGBA",f.height=r,f.width=t;p.width=t,p.height=r,d.drawImage(e,0,0,t,r),h=d.getImageData(0,0,t,r).data}else throw new Error("Can not access image data")}else if(l){const p="RGBA";let d,r;if(i!==void 0&&i.resizedWidth!==void 0&&i.resizedHeight!==void 0?(d=i.resizedHeight,r=i.resizedWidth):(d=e.height,r=e.width),i!==void 0){if(f=i,i.bitmapFormat!==void 0&&i.bitmapFormat!==p)throw new Error("Image input config format must be RGBA for ImageData");f.bitmapFormat="RGBA"}else f.bitmapFormat="RGBA";if(f.height=d,f.width=r,i!==void 0){const t=document.createElement("canvas");t.width=r,t.height=d;const u=t.getContext("2d");if(u!=null)u.putImageData(e,0,0),h=u.getImageData(0,0,r,d).data;else throw new Error("Can not access image data")}else h=e.data}else if(c){if(i===void 0)throw new Error("Please provide image config with format for Imagebitmap");if(i.bitmapFormat!==void 0)throw new Error("Image input config format must be defined for ImageBitmap");const p=document.createElement("canvas").getContext("2d");if(p!=null){const d=e.height,r=e.width;if(p.drawImage(e,0,0,r,d),h=p.getImageData(0,0,r,d).data,i!==void 0){if(i.height!==void 0&&i.height!==d)throw new Error("Image input config height doesn't match ImageBitmap height");if(f.height=d,i.width!==void 0&&i.width!==r)throw new Error("Image input config width doesn't match ImageBitmap width");f.width=r}else f.height=d,f.width=r;return Ci.bufferToTensor(h,f)}else throw new Error("Can not access image data")}else{if(a)return new Promise((p,d)=>{const r=document.createElement("canvas"),t=r.getContext("2d");if(!e||!t)return d();const u=new Image;u.crossOrigin="Anonymous",u.src=e,u.onload=()=>{r.width=u.width,r.height=u.height,t.drawImage(u,0,0,r.width,r.height);const s=t.getImageData(0,0,r.width,r.height);if(i!==void 0){if(i.height!==void 0&&i.height!==r.height)throw new Error("Image input config height doesn't match ImageBitmap height");if(f.height=r.height,i.width!==void 0&&i.width!==r.width)throw new Error("Image input config width doesn't match ImageBitmap width");f.width=r.width}else f.height=r.height,f.width=r.width;p(Ci.bufferToTensor(s.data,f))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(h!==void 0)return Ci.bufferToTensor(h,f);throw new Error("Input data provided is not supported - aborted tensor creation")}toImageData(e){var i,o;const l=document.createElement("canvas").getContext("2d");let c;if(l!=null){const a=this.dims[3],h=this.dims[2],f=this.dims[1],p=e!==void 0&&e.format!==void 0?e.format:"RGB",d=e!==void 0&&((i=e.norm)===null||i===void 0?void 0:i.mean)!==void 0?e.norm.mean:255,r=e!==void 0&&((o=e.norm)===null||o===void 0?void 0:o.bias)!==void 0?e.norm.bias:0,t=h*a;if(e!==void 0){if(e.height!==void 0&&e.height!==h)throw new Error("Image output config height doesn't match tensor height");if(e.width!==void 0&&e.width!==a)throw new Error("Image output config width doesn't match tensor width");if(e.format!==void 0&&f===4&&e.format!=="RGBA"||f===3&&e.format!=="RGB"&&e.format!=="BGR")throw new Error("Tensor format doesn't match input tensor dims")}const u=4;let s=0,m=1,g=2,b=3,y=0,w=t,x=t*2,v=-1;p==="RGBA"?(y=0,w=t,x=t*2,v=t*3):p==="RGB"?(y=0,w=t,x=t*2):p==="RBG"&&(y=0,x=t,w=t*2),c=l.createImageData(a,h);for(let E=0;E<h*a;s+=u,m+=u,g+=u,b+=u,E++)c.data[s]=(this.data[y++]-r)*d,c.data[m]=(this.data[w++]-r)*d,c.data[g]=(this.data[x++]-r)*d,c.data[b]=v===-1?255:(this.data[v++]-r)*d}else throw new Error("Can not access image data");return c}reshape(e){return new Ci(this.type,this.data,e)}};const Tensor$1=Tensor$2;let InferenceSession$2=class ns{constructor(e){this.handler=e}async run(e,i,o){const l={};let c={};if(typeof e!="object"||e===null||e instanceof Tensor$1||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if(typeof i=="object"){if(i===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof Tensor$1)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(i.length===0)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(const p of i){if(typeof p!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(p)===-1)throw new RangeError(`'fetches' contains invalid output name: ${p}.`);l[p]=null}if(typeof o=="object"&&o!==null)c=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else{let p=!1;const d=Object.getOwnPropertyNames(i);for(const r of this.outputNames)if(d.indexOf(r)!==-1){const t=i[r];(t===null||t instanceof Tensor$1)&&(p=!0,a=!1,l[r]=t)}if(p){if(typeof o=="object"&&o!==null)c=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else c=i}}else if(typeof i<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const p of this.inputNames)if(typeof e[p]>"u")throw new Error(`input '${p}' is missing in 'feeds'.`);if(a)for(const p of this.outputNames)l[p]=null;const h=await this.handler.run(e,l,c),f={};for(const p in h)Object.hasOwnProperty.call(h,p)&&(f[p]=new Tensor$1(h[p].type,h[p].data,h[p].dims));return f}static async create(e,i,o,l){let c,a={};if(typeof e=="string"){if(c=e,typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(c=e,typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){const r=e;let t=0,u=e.byteLength;if(typeof i=="object"&&i!==null)a=i;else if(typeof i=="number"){if(t=i,!Number.isSafeInteger(t))throw new RangeError("'byteOffset' must be an integer.");if(t<0||t>=r.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);if(u=e.byteLength-t,typeof o=="number"){if(u=o,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||t+u>r.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${r.byteLength-t}].`);if(typeof l=="object"&&l!==null)a=l;else if(typeof l<"u")throw new TypeError("'options' must be an object.")}else if(typeof o<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof i<"u")throw new TypeError("'options' must be an object.");c=new Uint8Array(r,t,u)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const f=(a.executionProviders||[]).map(r=>typeof r=="string"?r:r.name),d=await(await resolveBackend(f)).createSessionHandler(c,a);return new ns(d)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}};const InferenceSession$1=InferenceSession$2;var lib=Object.freeze({__proto__:null,InferenceSession:InferenceSession$1,Tensor:Tensor$1,env:env$2,registerBackend}),require$$0=getAugmentedNamespace(lib);/*!
* ONNX Runtime Web v1.14.0
* Copyright (c) Microsoft Corporation. All rights reserved.
* Licensed under the MIT License.
*/(function(module,exports){(function(n,e){module.exports=e(require$$0)})(self,__WEBPACK_EXTERNAL_MODULE__1670__=>(()=>{var __webpack_modules__={3474:(n,e,i)=>{var o,l=(o=(o=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(c){function a(){return se.buffer!=ee&&bt(se.buffer),ve}function h(){return se.buffer!=ee&&bt(se.buffer),Ce}function f(){return se.buffer!=ee&&bt(se.buffer),Ge}function p(){return se.buffer!=ee&&bt(se.buffer),De}function d(){return se.buffer!=ee&&bt(se.buffer),ct}var r,t,u;c=c||{},r||(r=c!==void 0?c:{}),r.ready=new Promise(function(A,I){t=A,u=I});var s,m,g,b,y,w,x=Object.assign({},r),v="./this.program",E=(A,I)=>{throw I},O=typeof window=="object",C=typeof importScripts=="function",S=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",N=r.ENVIRONMENT_IS_PTHREAD||!1,Q="";function te(A){return r.locateFile?r.locateFile(A,Q):Q+A}if(S){let A;Q=C?i(908).dirname(Q)+"/":"//",w=()=>{y||(b=i(1384),y=i(908))},s=function(I,L){return w(),I=y.normalize(I),b.readFileSync(I,L?void 0:"utf8")},g=I=>((I=s(I,!0)).buffer||(I=new Uint8Array(I)),I),m=(I,L,W)=>{w(),I=y.normalize(I),b.readFile(I,function(ie,de){ie?W(ie):L(de.buffer)})},1<process.argv.length&&(v=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",function(I){if(!(I instanceof or))throw I}),process.on("unhandledRejection",function(I){throw I}),E=(I,L)=>{if(wn())throw process.exitCode=I,L;L instanceof or||V("exiting due to exception: "+L),process.exit(I)},r.inspect=function(){return"[Emscripten Module object]"};try{A=i(9925)}catch(I){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),I}i.g.Worker=A.Worker}else(O||C)&&(C?Q=self.location.href:typeof document<"u"&&document.currentScript&&(Q=document.currentScript.src),o&&(Q=o),Q=Q.indexOf("blob:")!==0?Q.substr(0,Q.replace(/[?#].*/,"").lastIndexOf("/")+1):"",S||(s=A=>{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText},C&&(g=A=>{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}),m=(A,I,L)=>{var W=new XMLHttpRequest;W.open("GET",A,!0),W.responseType="arraybuffer",W.onload=()=>{W.status==200||W.status==0&&W.response?I(W.response):L()},W.onerror=L,W.send(null)}));S&&typeof performance>"u"&&(i.g.performance=i(6953).performance);var Z=console.log.bind(console),Y=console.warn.bind(console);S&&(w(),Z=A=>b.writeSync(1,A+`
`),Y=A=>b.writeSync(2,A+`
`));var G,R=r.print||Z,V=r.printErr||Y;Object.assign(r,x),x=null,r.thisProgram&&(v=r.thisProgram),r.quit&&(E=r.quit),r.wasmBinary&&(G=r.wasmBinary);var ce=r.noExitRuntime||!1;typeof WebAssembly!="object"&&ot("no native wasm support detected");var se,be,ee,ve,Ce,Ge,De,ct,ht=!1,Wt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function _n(A,I,L){var W=(I>>>=0)+L;for(L=I;A[L]&&!(L>=W);)++L;if(16<L-I&&A.buffer&&Wt)return Wt.decode(A.buffer instanceof SharedArrayBuffer?A.slice(I,L):A.subarray(I,L));for(W="";I<L;){var ie=A[I++];if(128&ie){var de=63&A[I++];if((224&ie)==192)W+=String.fromCharCode((31&ie)<<6|de);else{var Ie=63&A[I++];65536>(ie=(240&ie)==224?(15&ie)<<12|de<<6|Ie:(7&ie)<<18|de<<12|Ie<<6|63&A[I++])?W+=String.fromCharCode(ie):(ie-=65536,W+=String.fromCharCode(55296|ie>>10,56320|1023&ie))}}else W+=String.fromCharCode(ie)}return W}function jt(A,I){return(A>>>=0)?_n(h(),A,I):""}function ln(A,I,L,W){if(!(0<W))return 0;var ie=L>>>=0;W=L+W-1;for(var de=0;de<A.length;++de){var Ie=A.charCodeAt(de);if(55296<=Ie&&57343>=Ie&&(Ie=65536+((1023&Ie)<<10)|1023&A.charCodeAt(++de)),127>=Ie){if(L>=W)break;I[L++>>>0]=Ie}else{if(2047>=Ie){if(L+1>=W)break;I[L++>>>0]=192|Ie>>6}else{if(65535>=Ie){if(L+2>=W)break;I[L++>>>0]=224|Ie>>12}else{if(L+3>=W)break;I[L++>>>0]=240|Ie>>18,I[L++>>>0]=128|Ie>>12&63}I[L++>>>0]=128|Ie>>6&63}I[L++>>>0]=128|63&Ie}}return I[L>>>0]=0,L-ie}function ft(A){for(var I=0,L=0;L<A.length;++L){var W=A.charCodeAt(L);127>=W?I++:2047>=W?I+=2:55296<=W&&57343>=W?(I+=4,++L):I+=3}return I}function bt(A){ee=A,r.HEAP8=ve=new Int8Array(A),r.HEAP16=new Int16Array(A),r.HEAP32=Ge=new Int32Array(A),r.HEAPU8=Ce=new Uint8Array(A),r.HEAPU16=new Uint16Array(A),r.HEAPU32=De=new Uint32Array(A),r.HEAPF32=new Float32Array(A),r.HEAPF64=ct=new Float64Array(A)}N&&(ee=r.buffer);var Lt=r.INITIAL_MEMORY||16777216;if(N)se=r.wasmMemory,ee=r.buffer;else if(r.wasmMemory)se=r.wasmMemory;else if(!((se=new WebAssembly.Memory({initial:Lt/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw V("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),S&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");se&&(ee=se.buffer),Lt=ee.byteLength,bt(ee);var Jt,En=[],An=[],Cn=[],xr=[];function wn(){return ce||!1}function vn(){var A=r.preRun.shift();En.unshift(A)}var Qt,Vt=0,tr=null;function ot(A){throw N?postMessage({cmd:"onAbort",arg:A}):r.onAbort&&r.onAbort(A),V(A="Aborted("+A+")"),ht=!0,A=new WebAssembly.RuntimeError(A+". Build with -sASSERTIONS for more info."),u(A),A}function _r(){return Qt.startsWith("data:application/octet-stream;base64,")}function Tn(){var A=Qt;try{if(A==Qt&&G)return new Uint8Array(G);if(g)return g(A);throw"both async and sync fetching of the wasm failed"}catch(I){ot(I)}}Qt="ort-wasm-threaded.wasm",_r()||(Qt=te(Qt));var Wr={};function or(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}function nr(A){(A=Xe.Vb[A])||ot(),Xe.mc(A)}function Ar(A){var I=Xe.Cc();if(!I)return 6;Xe.ac.push(I),Xe.Vb[A.Ub]=I,I.Ub=A.Ub;var L={cmd:"run",start_routine:A.Ic,arg:A.zc,pthread_ptr:A.Ub};return I.$b=()=>{L.time=performance.now(),I.postMessage(L,A.Nc)},I.loaded&&(I.$b(),delete I.$b),0}function Ht(A){if(N)return Re(1,1,A);wn()||(Xe.oc(),r.onExit&&r.onExit(A),ht=!0),E(A,new or(A))}function wr(A,I){if(!I&&N)throw mt(A),"unwind";wn()||N||(ki(),pn(Cn),Je(0),ar[1].length&&Xr(1,10),ar[2].length&&Xr(2,10),Xe.oc()),Ht(A)}var Xe={Yb:[],ac:[],qc:[],Vb:{},fc:function(){N&&Xe.Ec()},Pc:function(){},Ec:function(){Xe.receiveObjectTransfer=Xe.Gc,Xe.threadInitTLS=Xe.pc,Xe.setExitStatus=Xe.nc,ce=!1},nc:function(){},oc:function(){for(var A of Object.values(Xe.Vb))Xe.mc(A);for(A of Xe.Yb)A.terminate();Xe.Yb=[]},mc:function(A){var I=A.Ub;delete Xe.Vb[I],Xe.Yb.push(A),Xe.ac.splice(Xe.ac.indexOf(A),1),A.Ub=0,Ti(I)},Gc:function(){},pc:function(){Xe.qc.forEach(A=>A())},Fc:function(A,I){A.onmessage=L=>{var W=(L=L.data).cmd;if(A.Ub&&(Xe.Bc=A.Ub),L.targetThread&&L.targetThread!=wi()){var ie=Xe.Vb[L.Qc];ie?ie.postMessage(L,L.transferList):V('Internal error! Worker sent a message "'+W+'" to target pthread '+L.targetThread+", but that thread no longer exists!")}else W==="processProxyingQueue"?ne(L.queue):W==="spawnThread"?Ar(L):W==="cleanupThread"?nr(L.thread):W==="killThread"?(L=L.thread,W=Xe.Vb[L],delete Xe.Vb[L],W.terminate(),Ti(L),Xe.ac.splice(Xe.ac.indexOf(W),1),W.Ub=0):W==="cancelThread"?Xe.Vb[L.thread].postMessage({cmd:"cancel"}):W==="loaded"?(A.loaded=!0,I&&I(A),A.$b&&(A.$b(),delete A.$b)):W==="print"?R("Thread "+L.threadId+": "+L.text):W==="printErr"?V("Thread "+L.threadId+": "+L.text):W==="alert"?alert("Thread "+L.threadId+": "+L.text):L.target==="setimmediate"?A.postMessage(L):W==="onAbort"?r.onAbort&&r.onAbort(L.arg):W&&V("worker sent an unknown command "+W);Xe.Bc=void 0},A.onerror=L=>{throw V("worker sent an error! "+L.filename+":"+L.lineno+": "+L.message),L},S&&(A.on("message",function(L){A.onmessage({data:L})}),A.on("error",function(L){A.onerror(L)}),A.on("detachedExit",function(){})),A.postMessage({cmd:"load",urlOrBlob:r.mainScriptUrlOrBlob||o,wasmMemory:se,wasmModule:be})},yc:function(){var A=te("ort-wasm-threaded.worker.js");Xe.Yb.push(new Worker(A))},Cc:function(){return Xe.Yb.length==0&&(Xe.yc(),Xe.Fc(Xe.Yb[0])),Xe.Yb.pop()}};function pn(A){for(;0<A.length;)A.shift()(r)}function Hr(A){var I=et();return A=A(),pt(I),A}function mt(A){if(N)return Re(2,0,A);try{wr(A)}catch(I){I instanceof or||I=="unwind"||E(1,I)}}r.PThread=Xe,r.establishStackSpace=function(){var A=wi(),I=f()[A+44>>2>>>0];A=f()[A+48>>2>>>0],vr(I,I-A),pt(I)};var bn=[];function Pt(A){var I=bn[A];return I||(A>=bn.length&&(bn.length=A+1),bn[A]=I=Jt.get(A)),I}r.invokeEntryPoint=function(A,I){A=Pt(A)(I),wn()?Xe.nc(A):gi(A)};var Lr,qr,Ir=[],Ee=0,Qe=0;function st(A){this.Zb=A,this.Sb=A-24,this.xc=function(I){p()[this.Sb+4>>2>>>0]=I},this.bc=function(){return p()[this.Sb+4>>2>>>0]},this.wc=function(I){p()[this.Sb+8>>2>>>0]=I},this.Dc=function(){return p()[this.Sb+8>>2>>>0]},this.rc=function(){f()[this.Sb>>2>>>0]=0},this.hc=function(I){I=I?1:0,a()[this.Sb+12>>0>>>0]=I},this.uc=function(){return a()[this.Sb+12>>0>>>0]!=0},this.ic=function(I){I=I?1:0,a()[this.Sb+13>>0>>>0]=I},this.kc=function(){return a()[this.Sb+13>>0>>>0]!=0},this.fc=function(I,L){this.cc(0),this.xc(I),this.wc(L),this.rc(),this.hc(!1),this.ic(!1)},this.sc=function(){Atomics.add(f(),this.Sb>>2,1)},this.Hc=function(){return Atomics.sub(f(),this.Sb>>2,1)===1},this.cc=function(I){p()[this.Sb+16>>2>>>0]=I},this.tc=function(){return p()[this.Sb+16>>2>>>0]},this.vc=function(){if(T(this.bc()))return p()[this.Zb>>2>>>0];var I=this.tc();return I!==0?I:this.Zb}}function _i(A){return Ta(new st(A).Sb)}function Cr(A,I,L,W){return N?Re(3,1,A,I,L,W):Kr(A,I,L,W)}function Kr(A,I,L,W){if(typeof SharedArrayBuffer>"u")return V("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var ie=[];return N&&ie.length===0?Cr(A,I,L,W):(A={Ic:L,Ub:A,zc:W,Nc:ie},N?(A.Oc="spawnThread",postMessage(A,ie),0):Ar(A))}function Mr(A,I,L){return N?Re(4,1,A,I,L):0}function Fr(A,I){if(N)return Re(5,1,A,I)}function Tr(A,I){if(N)return Re(6,1,A,I)}function hn(A,I,L){if(N)return Re(7,1,A,I,L)}function Yr(A,I,L){return N?Re(8,1,A,I,L):0}function rr(A,I){if(N)return Re(9,1,A,I)}function $n(A,I,L){if(N)return Re(10,1,A,I,L)}function Ur(A,I,L,W){if(N)return Re(11,1,A,I,L,W)}function ir(A,I,L,W){if(N)return Re(12,1,A,I,L,W)}function Vr(A,I,L,W){if(N)return Re(13,1,A,I,L,W)}function jr(A){if(N)return Re(14,1,A)}function B(A,I){if(N)return Re(15,1,A,I)}function H(A,I,L){if(N)return Re(16,1,A,I,L)}function ne(A){Atomics.store(f(),A>>2,1),wi()&&xi(A),Atomics.compareExchange(f(),A>>2,1,0)}function ae(A){return p()[A>>>2]+4294967296*f()[A+4>>>2]}function oe(A,I,L,W,ie,de){return N?Re(17,1,A,I,L,W,ie,de):-52}function pe(A,I,L,W,ie,de){if(N)return Re(18,1,A,I,L,W,ie,de)}function Oe(A){var I=ft(A)+1,L=Zr(I);return L&&ln(A,a(),L,I),L}function je(A,I,L){function W(Nt){return(Nt=Nt.toTimeString().match(/\(([A-Za-z ]+)\)$/))?Nt[1]:"GMT"}if(N)return Re(19,1,A,I,L);var ie=new Date().getFullYear(),de=new Date(ie,0,1),Ie=new Date(ie,6,1);ie=de.getTimezoneOffset();var He=Ie.getTimezoneOffset(),It=Math.max(ie,He);f()[A>>2>>>0]=60*It,f()[I>>2>>>0]=+(ie!=He),A=W(de),I=W(Ie),A=Oe(A),I=Oe(I),He<ie?(p()[L>>2>>>0]=A,p()[L+4>>2>>>0]=I):(p()[L>>2>>>0]=I,p()[L+4>>2>>>0]=A)}function Re(A,I){var L=arguments.length-2,W=arguments;return Hr(()=>{for(var ie=$r(8*L),de=ie>>3,Ie=0;Ie<L;Ie++){var He=W[2+Ie];d()[de+Ie>>>0]=He}return vi(A,L,ie,I)})}r.executeNotifiedProxyingQueue=ne,qr=S?()=>{var A=process.hrtime();return 1e3*A[0]+A[1]/1e6}:N?()=>performance.now()-r.__performance_now_clock_drift:()=>performance.now();var dt,wt=[],yn={};function gn(){if(!dt){var A,I={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:v||"./this.program"};for(A in yn)yn[A]===void 0?delete I[A]:I[A]=yn[A];var L=[];for(A in I)L.push(A+"="+I[A]);dt=L}return dt}function le(A,I){if(N)return Re(20,1,A,I);var L=0;return gn().forEach(function(W,ie){var de=I+L;for(ie=p()[A+4*ie>>2>>>0]=de,de=0;de<W.length;++de)a()[ie++>>0>>>0]=W.charCodeAt(de);a()[ie>>0>>>0]=0,L+=W.length+1}),0}function Ct(A,I){if(N)return Re(21,1,A,I);var L=gn();p()[A>>2>>>0]=L.length;var W=0;return L.forEach(function(ie){W+=ie.length+1}),p()[I>>2>>>0]=W,0}function vt(A){return N?Re(22,1,A):52}function er(A,I,L,W){return N?Re(23,1,A,I,L,W):52}function br(A,I,L,W,ie){return N?Re(24,1,A,I,L,W,ie):70}var ar=[null,[],[]];function Xr(A,I){var L=ar[A];I===0||I===10?((A===1?R:V)(_n(L,0)),L.length=0):L.push(I)}function xn(A,I,L,W){if(N)return Re(25,1,A,I,L,W);for(var ie=0,de=0;de<L;de++){var Ie=p()[I>>2>>>0],He=p()[I+4>>2>>>0];I+=8;for(var It=0;It<He;It++)Xr(A,h()[Ie+It>>>0]);ie+=He}return p()[W>>2>>>0]=ie,0}var dn=0;function Dr(A){return A%4==0&&(A%100!=0||A%400==0)}var Ni=[31,29,31,30,31,30,31,31,30,31,30,31],Ai=[31,28,31,30,31,30,31,31,30,31,30,31];function Ei(A,I,L,W){function ie(he,Ft,mn){for(he=typeof he=="number"?he.toString():he||"";he.length<Ft;)he=mn[0]+he;return he}function de(he,Ft){return ie(he,Ft,"0")}function Ie(he,Ft){function mn($i){return 0>$i?-1:0<$i?1:0}var Nr;return(Nr=mn(he.getFullYear()-Ft.getFullYear()))===0&&(Nr=mn(he.getMonth()-Ft.getMonth()))===0&&(Nr=mn(he.getDate()-Ft.getDate())),Nr}function He(he){switch(he.getDay()){case 0:return new Date(he.getFullYear()-1,11,29);case 1:return he;case 2:return new Date(he.getFullYear(),0,3);case 3:return new Date(he.getFullYear(),0,2);case 4:return new Date(he.getFullYear(),0,1);case 5:return new Date(he.getFullYear()-1,11,31);case 6:return new Date(he.getFullYear()-1,11,30)}}function It(he){var Ft=he.Wb;for(he=new Date(new Date(he.Xb+1900,0,1).getTime());0<Ft;){var mn=he.getMonth(),Nr=(Dr(he.getFullYear())?Ni:Ai)[mn];if(!(Ft>Nr-he.getDate())){he.setDate(he.getDate()+Ft);break}Ft-=Nr-he.getDate()+1,he.setDate(1),11>mn?he.setMonth(mn+1):(he.setMonth(0),he.setFullYear(he.getFullYear()+1))}return mn=new Date(he.getFullYear()+1,0,4),Ft=He(new Date(he.getFullYear(),0,4)),mn=He(mn),0>=Ie(Ft,he)?0>=Ie(mn,he)?he.getFullYear()+1:he.getFullYear():he.getFullYear()-1}var Nt=f()[W+40>>2>>>0];for(var fn in W={Lc:f()[W>>2>>>0],Kc:f()[W+4>>2>>>0],dc:f()[W+8>>2>>>0],jc:f()[W+12>>2>>>0],ec:f()[W+16>>2>>>0],Xb:f()[W+20>>2>>>0],Tb:f()[W+24>>2>>>0],Wb:f()[W+28>>2>>>0],Rc:f()[W+32>>2>>>0],Jc:f()[W+36>>2>>>0],Mc:Nt?jt(Nt):""},L=jt(L),Nt={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})L=L.replace(new RegExp(fn,"g"),Nt[fn]);var Sr="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),yr="January February March April May June July August September October November December".split(" ");for(fn in Nt={"%a":function(he){return Sr[he.Tb].substring(0,3)},"%A":function(he){return Sr[he.Tb]},"%b":function(he){return yr[he.ec].substring(0,3)},"%B":function(he){return yr[he.ec]},"%C":function(he){return de((he.Xb+1900)/100|0,2)},"%d":function(he){return de(he.jc,2)},"%e":function(he){return ie(he.jc,2," ")},"%g":function(he){return It(he).toString().substring(2)},"%G":function(he){return It(he)},"%H":function(he){return de(he.dc,2)},"%I":function(he){return(he=he.dc)==0?he=12:12<he&&(he-=12),de(he,2)},"%j":function(he){for(var Ft=0,mn=0;mn<=he.ec-1;Ft+=(Dr(he.Xb+1900)?Ni:Ai)[mn++]);return de(he.jc+Ft,3)},"%m":function(he){return de(he.ec+1,2)},"%M":function(he){return de(he.Kc,2)},"%n":function(){return`
`},"%p":function(he){return 0<=he.dc&&12>he.dc?"AM":"PM"},"%S":function(he){return de(he.Lc,2)},"%t":function(){return"	"},"%u":function(he){return he.Tb||7},"%U":function(he){return de(Math.floor((he.Wb+7-he.Tb)/7),2)},"%V":function(he){var Ft=Math.floor((he.Wb+7-(he.Tb+6)%7)/7);if(2>=(he.Tb+371-he.Wb-2)%7&&Ft++,Ft)Ft==53&&((mn=(he.Tb+371-he.Wb)%7)==4||mn==3&&Dr(he.Xb)||(Ft=1));else{Ft=52;var mn=(he.Tb+7-he.Wb-1)%7;(mn==4||mn==5&&Dr(he.Xb%400-1))&&Ft++}return de(Ft,2)},"%w":function(he){return he.Tb},"%W":function(he){return de(Math.floor((he.Wb+7-(he.Tb+6)%7)/7),2)},"%y":function(he){return(he.Xb+1900).toString().substring(2)},"%Y":function(he){return he.Xb+1900},"%z":function(he){var Ft=0<=(he=he.Jc);return he=Math.abs(he)/60,(Ft?"+":"-")+("0000"+(he/60*100+he%60)).slice(-4)},"%Z":function(he){return he.Mc},"%%":function(){return"%"}},L=L.replace(/%%/g,"\0\0"),Nt)L.includes(fn)&&(L=L.replace(new RegExp(fn,"g"),Nt[fn](W)));return fn=function(he){var Ft=Array(ft(he)+1);return ln(he,Ft,0,Ft.length),Ft}(L=L.replace(/\0\0/g,"%")),fn.length>I?0:(function(he,Ft){a().set(he,Ft>>>0)}(fn,A),fn.length-1)}Xe.fc();var Ea=[null,Ht,mt,Cr,Mr,Fr,Tr,hn,Yr,rr,$n,Ur,ir,Vr,jr,B,H,oe,pe,je,le,Ct,vt,er,br,xn],Vi={b:function(A){return Zr(A+24)+24},n:function(A){return(A=new st(A)).uc()||(A.hc(!0),Ee--),A.ic(!1),Ir.push(A),A.sc(),A.vc()},ma:function(A){throw V("Unexpected exception thrown, this is not properly supported - aborting"),ht=!0,A},x:function(){Tt(0);var A=Ir.pop();if(A.Hc()&&!A.kc()){var I=A.Dc();I&&Pt(I)(A.Zb),_i(A.Zb)}Qe=0},e:function(){var A=Qe;if(!A)return dn=0;var I=new st(A);I.cc(A);var L=I.bc();if(!L)return dn=0,A;for(var W=Array.prototype.slice.call(arguments),ie=0;ie<W.length;ie++){var de=W[ie];if(de===0||de===L)break;if(bi(de,L,I.Sb+16))return dn=de,A}return dn=L,A},l:function(){var A=Qe;if(!A)return dn=0;var I=new st(A);I.cc(A);var L=I.bc();if(!L)return dn=0,A;for(var W=Array.prototype.slice.call(arguments),ie=0;ie<W.length;ie++){var de=W[ie];if(de===0||de===L)break;if(bi(de,L,I.Sb+16))return dn=de,A}return dn=L,A},h:function(){var A=Qe;if(!A)return dn=0;var I=new st(A);I.cc(A);var L=I.bc();if(!L)return dn=0,A;for(var W=Array.prototype.slice.call(arguments),ie=0;ie<W.length;ie++){var de=W[ie];if(de===0||de===L)break;if(bi(de,L,I.Sb+16))return dn=de,A}return dn=L,A},t:_i,M:function(){var A=Ir.pop();A||ot("no exception to throw");var I=A.Zb;throw A.kc()||(Ir.push(A),A.ic(!0),A.hc(!1),Ee++),Qe=I,I},c:function(A,I,L){throw new st(A).fc(I,L),Qe=A,Ee++,A},pa:function(){return Ee},Fa:function(A){Gr(A,!C,1,!O),Xe.pc()},T:function(A){N?postMessage({cmd:"cleanupThread",thread:A}):nr(A)},xa:Kr,j:function(A){throw Qe||(Qe=A),A},H:Mr,Ma:Fr,ua:Tr,wa:hn,oa:Yr,Ka:rr,Ca:$n,Ja:Ur,V:ir,va:Vr,sa:jr,La:B,ta:H,Ta:function(){},X:function(){ot("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},Ua:function(){ot("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},W:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(A,I,L,W){if(A==I)setTimeout(()=>ne(W));else if(N)postMessage({targetThread:A,cmd:"processProxyingQueue",queue:W});else{if(!(A=Xe.Vb[A]))return;A.postMessage({cmd:"processProxyingQueue",queue:W})}return 1},Ea:function(){return-1},Pa:function(A,I){A=new Date(1e3*ae(A)),f()[I>>2>>>0]=A.getUTCSeconds(),f()[I+4>>2>>>0]=A.getUTCMinutes(),f()[I+8>>2>>>0]=A.getUTCHours(),f()[I+12>>2>>>0]=A.getUTCDate(),f()[I+16>>2>>>0]=A.getUTCMonth(),f()[I+20>>2>>>0]=A.getUTCFullYear()-1900,f()[I+24>>2>>>0]=A.getUTCDay(),A=(A.getTime()-Date.UTC(A.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,f()[I+28>>2>>>0]=A},Qa:function(A,I){A=new Date(1e3*ae(A)),f()[I>>2>>>0]=A.getSeconds(),f()[I+4>>2>>>0]=A.getMinutes(),f()[I+8>>2>>>0]=A.getHours(),f()[I+12>>2>>>0]=A.getDate(),f()[I+16>>2>>>0]=A.getMonth(),f()[I+20>>2>>>0]=A.getFullYear()-1900,f()[I+24>>2>>>0]=A.getDay();var L=new Date(A.getFullYear(),0,1),W=(A.getTime()-L.getTime())/864e5|0;f()[I+28>>2>>>0]=W,f()[I+36>>2>>>0]=-60*A.getTimezoneOffset(),W=new Date(A.getFullYear(),6,1).getTimezoneOffset(),A=0|(W!=(L=L.getTimezoneOffset())&&A.getTimezoneOffset()==Math.min(L,W)),f()[I+32>>2>>>0]=A},Ra:function(A){var I=new Date(f()[A+20>>2>>>0]+1900,f()[A+16>>2>>>0],f()[A+12>>2>>>0],f()[A+8>>2>>>0],f()[A+4>>2>>>0],f()[A>>2>>>0],0),L=f()[A+32>>2>>>0],W=I.getTimezoneOffset(),ie=new Date(I.getFullYear(),0,1),de=new Date(I.getFullYear(),6,1).getTimezoneOffset(),Ie=ie.getTimezoneOffset(),He=Math.min(Ie,de);return 0>L?f()[A+32>>2>>>0]=+(de!=Ie&&He==W):0<L!=(He==W)&&(de=Math.max(Ie,de),I.setTime(I.getTime()+6e4*((0<L?He:de)-W))),f()[A+24>>2>>>0]=I.getDay(),L=(I.getTime()-ie.getTime())/864e5|0,f()[A+28>>2>>>0]=L,f()[A>>2>>>0]=I.getSeconds(),f()[A+4>>2>>>0]=I.getMinutes(),f()[A+8>>2>>>0]=I.getHours(),f()[A+12>>2>>>0]=I.getDate(),f()[A+16>>2>>>0]=I.getMonth(),I.getTime()/1e3|0},Aa:oe,Ba:pe,Sa:function A(I,L,W){A.Ac||(A.Ac=!0,je(I,L,W))},y:function(){ot("")},U:function(){if(!S&&!C){var A="Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread";Lr||(Lr={}),Lr[A]||(Lr[A]=1,S&&(A="warning: "+A),V(A))}},ra:function(){return 4294901760},B:qr,Ia:function(A,I,L){h().copyWithin(A>>>0,I>>>0,I+L>>>0)},F:function(){return S?i(3993).cpus().length:navigator.hardwareConcurrency},Da:function(A,I,L){wt.length=I,L>>=3;for(var W=0;W<I;W++)wt[W]=d()[L+W>>>0];return(0>A?Wr[-A-1]:Ea[A]).apply(null,wt)},qa:function(A){var I=h().length;if((A>>>=0)<=I||4294901760<A)return!1;for(var L=1;4>=L;L*=2){var W=I*(1+.2/L);W=Math.min(W,A+100663296);var ie=Math;W=Math.max(A,W),ie=ie.min.call(ie,4294901760,W+(65536-W%65536)%65536);e:{try{se.grow(ie-ee.byteLength+65535>>>16),bt(se.buffer);var de=1;break e}catch{}de=void 0}if(de)return!0}return!1},Na:function(){throw"unwind"},Ga:le,Ha:Ct,J:wr,I:vt,S:er,ga:br,R:xn,d:function(){return dn},na:function A(I,L){A.lc||(A.lc=function(){if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function"){var ie=new Uint8Array(1);return()=>(crypto.getRandomValues(ie),ie[0])}if(S)try{var de=i(Object(function(){var Ie=new Error("Cannot find module 'crypto'");throw Ie.code="MODULE_NOT_FOUND",Ie}()));return()=>de.randomBytes(1)[0]}catch{}return()=>ot("randomDevice")}());for(var W=0;W<L;W++)a()[I+W>>0>>>0]=A.lc();return 0},ia:function(A,I,L){var W=et();try{return Pt(A)(I,L)}catch(ie){if(pt(W),ie!==ie+0)throw ie;Tt(1,0)}},ja:function(A,I,L){var W=et();try{return Pt(A)(I,L)}catch(ie){if(pt(W),ie!==ie+0)throw ie;Tt(1,0)}},K:function(A){var I=et();try{return Pt(A)()}catch(L){if(pt(I),L!==L+0)throw L;Tt(1,0)}},f:function(A,I){var L=et();try{return Pt(A)(I)}catch(W){if(pt(L),W!==W+0)throw W;Tt(1,0)}},P:function(A,I,L){var W=et();try{return Pt(A)(I,L)}catch(ie){if(pt(W),ie!==ie+0)throw ie;Tt(1,0)}},Q:function(A,I,L){var W=et();try{return Pt(A)(I,L)}catch(ie){if(pt(W),ie!==ie+0)throw ie;Tt(1,0)}},k:function(A,I,L){var W=et();try{return Pt(A)(I,L)}catch(ie){if(pt(W),ie!==ie+0)throw ie;Tt(1,0)}},p:function(A,I,L,W){var ie=et();try{return Pt(A)(I,L,W)}catch(de){if(pt(ie),de!==de+0)throw de;Tt(1,0)}},q:function(A,I,L,W,ie){var de=et();try{return Pt(A)(I,L,W,ie)}catch(Ie){if(pt(de),Ie!==Ie+0)throw Ie;Tt(1,0)}},N:function(A,I,L,W,ie,de){var Ie=et();try{return Pt(A)(I,L,W,ie,de)}catch(He){if(pt(Ie),He!==He+0)throw He;Tt(1,0)}},s:function(A,I,L,W,ie,de){var Ie=et();try{return Pt(A)(I,L,W,ie,de)}catch(He){if(pt(Ie),He!==He+0)throw He;Tt(1,0)}},w:function(A,I,L,W,ie,de,Ie){var He=et();try{return Pt(A)(I,L,W,ie,de,Ie)}catch(It){if(pt(He),It!==It+0)throw It;Tt(1,0)}},L:function(A,I,L,W,ie,de,Ie,He){var It=et();try{return Pt(A)(I,L,W,ie,de,Ie,He)}catch(Nt){if(pt(It),Nt!==Nt+0)throw Nt;Tt(1,0)}},E:function(A,I,L,W,ie,de,Ie,He,It,Nt,fn,Sr){var yr=et();try{return Pt(A)(I,L,W,ie,de,Ie,He,It,Nt,fn,Sr)}catch(he){if(pt(yr),he!==he+0)throw he;Tt(1,0)}},aa:function(A,I,L,W,ie,de,Ie,He){var It=et();try{return Me(A,I,L,W,ie,de,Ie,He)}catch(Nt){if(pt(It),Nt!==Nt+0)throw Nt;Tt(1,0)}},_:function(A,I,L,W,ie,de,Ie){var He=et();try{return D(A,I,L,W,ie,de,Ie)}catch(It){if(pt(He),It!==It+0)throw It;Tt(1,0)}},Z:function(A,I,L,W,ie){var de=et();try{return Ye(A,I,L,W,ie)}catch(Ie){if(pt(de),Ie!==Ie+0)throw Ie;Tt(1,0)}},ca:function(A,I,L,W){var ie=et();try{return Se(A,I,L,W)}catch(de){if(pt(ie),de!==de+0)throw de;Tt(1,0)}},$:function(A){var I=et();try{return k(A)}catch(L){if(pt(I),L!==L+0)throw L;Tt(1,0)}},ba:function(A,I){var L=et();try{return Le(A,I)}catch(W){if(pt(L),W!==W+0)throw W;Tt(1,0)}},Y:function(A,I,L){var W=et();try{return F(A,I,L)}catch(ie){if(pt(W),ie!==ie+0)throw ie;Tt(1,0)}},g:function(A){var I=et();try{Pt(A)()}catch(L){if(pt(I),L!==L+0)throw L;Tt(1,0)}},r:function(A,I){var L=et();try{Pt(A)(I)}catch(W){if(pt(L),W!==W+0)throw W;Tt(1,0)}},i:function(A,I,L){var W=et();try{Pt(A)(I,L)}catch(ie){if(pt(W),ie!==ie+0)throw ie;Tt(1,0)}},ha:function(A,I,L,W){var ie=et();try{Pt(A)(I,L,W)}catch(de){if(pt(ie),de!==de+0)throw de;Tt(1,0)}},m:function(A,I,L,W){var ie=et();try{Pt(A)(I,L,W)}catch(de){if(pt(ie),de!==de+0)throw de;Tt(1,0)}},v:function(A,I,L,W,ie){var de=et();try{Pt(A)(I,L,W,ie)}catch(Ie){if(pt(de),Ie!==Ie+0)throw Ie;Tt(1,0)}},u:function(A,I,L,W,ie,de){var Ie=et();try{Pt(A)(I,L,W,ie,de)}catch(He){if(pt(Ie),He!==He+0)throw He;Tt(1,0)}},O:function(A,I,L,W,ie,de,Ie){var He=et();try{Pt(A)(I,L,W,ie,de,Ie)}catch(It){if(pt(He),It!==It+0)throw It;Tt(1,0)}},A:function(A,I,L,W,ie,de,Ie,He){var It=et();try{Pt(A)(I,L,W,ie,de,Ie,He)}catch(Nt){if(pt(It),Nt!==Nt+0)throw Nt;Tt(1,0)}},ka:function(A,I,L,W,ie,de,Ie,He,It){var Nt=et();try{Pt(A)(I,L,W,ie,de,Ie,He,It)}catch(fn){if(pt(Nt),fn!==fn+0)throw fn;Tt(1,0)}},C:function(A,I,L,W,ie,de,Ie,He,It,Nt,fn){var Sr=et();try{Pt(A)(I,L,W,ie,de,Ie,He,It,Nt,fn)}catch(yr){if(pt(Sr),yr!==yr+0)throw yr;Tt(1,0)}},D:function(A,I,L,W,ie,de,Ie,He,It,Nt,fn,Sr,yr,he,Ft,mn){var Nr=et();try{Pt(A)(I,L,W,ie,de,Ie,He,It,Nt,fn,Sr,yr,he,Ft,mn)}catch($i){if(pt(Nr),$i!==$i+0)throw $i;Tt(1,0)}},fa:function(A,I,L,W,ie,de,Ie,He){var It=et();try{J(A,I,L,W,ie,de,Ie,He)}catch(Nt){if(pt(It),Nt!==Nt+0)throw Nt;Tt(1,0)}},da:function(A,I,L,W,ie,de,Ie,He,It,Nt,fn,Sr){var yr=et();try{Te(A,I,L,W,ie,de,Ie,He,It,Nt,fn,Sr)}catch(he){if(pt(yr),he!==he+0)throw he;Tt(1,0)}},ea:function(A,I,L,W,ie,de){var Ie=et();try{ue(A,I,L,W,ie,de)}catch(He){if(pt(Ie),He!==He+0)throw He;Tt(1,0)}},o:function(A){return A},a:se||r.wasmMemory,G:function(A){dn=A},la:Ei,z:function(A,I,L,W){return Ei(A,I,L,W)}};(function(){function A(ie,de){r.asm=ie.exports,Xe.qc.push(r.asm.sb),Jt=r.asm.ub,An.unshift(r.asm.Va),be=de,N||(Vt--,r.monitorRunDependencies&&r.monitorRunDependencies(Vt),Vt==0&&tr&&(ie=tr,tr=null,ie()))}function I(ie){A(ie.instance,ie.module)}function L(ie){return function(){if(!G&&(O||C)){if(typeof fetch=="function"&&!Qt.startsWith("file://"))return fetch(Qt,{credentials:"same-origin"}).then(function(de){if(!de.ok)throw"failed to load wasm binary file at '"+Qt+"'";return de.arrayBuffer()}).catch(function(){return Tn()});if(m)return new Promise(function(de,Ie){m(Qt,function(He){de(new Uint8Array(He))},Ie)})}return Promise.resolve().then(function(){return Tn()})}().then(function(de){return WebAssembly.instantiate(de,W)}).then(function(de){return de}).then(ie,function(de){V("failed to asynchronously prepare wasm: "+de),ot(de)})}var W={a:Vi};if(N||(Vt++,r.monitorRunDependencies&&r.monitorRunDependencies(Vt)),r.instantiateWasm)try{return r.instantiateWasm(W,A)}catch(ie){return V("Module.instantiateWasm callback failed with error: "+ie),!1}(G||typeof WebAssembly.instantiateStreaming!="function"||_r()||Qt.startsWith("file://")||S||typeof fetch!="function"?L(I):fetch(Qt,{credentials:"same-origin"}).then(function(ie){return WebAssembly.instantiateStreaming(ie,W).then(I,function(de){return V("wasm streaming compile failed: "+de),V("falling back to ArrayBuffer instantiation"),L(I)})})).catch(u)})(),r.___wasm_call_ctors=function(){return(r.___wasm_call_ctors=r.asm.Va).apply(null,arguments)},r._OrtInit=function(){return(r._OrtInit=r.asm.Wa).apply(null,arguments)},r._OrtCreateSessionOptions=function(){return(r._OrtCreateSessionOptions=r.asm.Xa).apply(null,arguments)},r._OrtAppendExecutionProvider=function(){return(r._OrtAppendExecutionProvider=r.asm.Ya).apply(null,arguments)},r._OrtAddSessionConfigEntry=function(){return(r._OrtAddSessionConfigEntry=r.asm.Za).apply(null,arguments)},r._OrtReleaseSessionOptions=function(){return(r._OrtReleaseSessionOptions=r.asm._a).apply(null,arguments)},r._OrtCreateSession=function(){return(r._OrtCreateSession=r.asm.$a).apply(null,arguments)},r._OrtReleaseSession=function(){return(r._OrtReleaseSession=r.asm.ab).apply(null,arguments)},r._OrtGetInputCount=function(){return(r._OrtGetInputCount=r.asm.bb).apply(null,arguments)},r._OrtGetOutputCount=function(){return(r._OrtGetOutputCount=r.asm.cb).apply(null,arguments)},r._OrtGetInputName=function(){return(r._OrtGetInputName=r.asm.db).apply(null,arguments)},r._OrtGetOutputName=function(){return(r._OrtGetOutputName=r.asm.eb).apply(null,arguments)},r._OrtFree=function(){return(r._OrtFree=r.asm.fb).apply(null,arguments)},r._OrtCreateTensor=function(){return(r._OrtCreateTensor=r.asm.gb).apply(null,arguments)},r._OrtGetTensorData=function(){return(r._OrtGetTensorData=r.asm.hb).apply(null,arguments)},r._OrtReleaseTensor=function(){return(r._OrtReleaseTensor=r.asm.ib).apply(null,arguments)},r._OrtCreateRunOptions=function(){return(r._OrtCreateRunOptions=r.asm.jb).apply(null,arguments)},r._OrtAddRunConfigEntry=function(){return(r._OrtAddRunConfigEntry=r.asm.kb).apply(null,arguments)},r._OrtReleaseRunOptions=function(){return(r._OrtReleaseRunOptions=r.asm.lb).apply(null,arguments)},r._OrtRun=function(){return(r._OrtRun=r.asm.mb).apply(null,arguments)},r._OrtEndProfiling=function(){return(r._OrtEndProfiling=r.asm.nb).apply(null,arguments)};var wi=r._pthread_self=function(){return(wi=r._pthread_self=r.asm.ob).apply(null,arguments)},Zr=r._malloc=function(){return(Zr=r._malloc=r.asm.pb).apply(null,arguments)},Ta=r._free=function(){return(Ta=r._free=r.asm.qb).apply(null,arguments)},Je=r._fflush=function(){return(Je=r._fflush=r.asm.rb).apply(null,arguments)};r.__emscripten_tls_init=function(){return(r.__emscripten_tls_init=r.asm.sb).apply(null,arguments)};var ki=r.___funcs_on_exit=function(){return(ki=r.___funcs_on_exit=r.asm.tb).apply(null,arguments)},Gr=r.__emscripten_thread_init=function(){return(Gr=r.__emscripten_thread_init=r.asm.vb).apply(null,arguments)};r.__emscripten_thread_crashed=function(){return(r.__emscripten_thread_crashed=r.asm.wb).apply(null,arguments)};var Sn,vi=r._emscripten_run_in_main_runtime_thread_js=function(){return(vi=r._emscripten_run_in_main_runtime_thread_js=r.asm.xb).apply(null,arguments)},xi=r.__emscripten_proxy_execute_task_queue=function(){return(xi=r.__emscripten_proxy_execute_task_queue=r.asm.yb).apply(null,arguments)},Ti=r.__emscripten_thread_free_data=function(){return(Ti=r.__emscripten_thread_free_data=r.asm.zb).apply(null,arguments)},gi=r.__emscripten_thread_exit=function(){return(gi=r.__emscripten_thread_exit=r.asm.Ab).apply(null,arguments)},Tt=r._setThrew=function(){return(Tt=r._setThrew=r.asm.Bb).apply(null,arguments)},vr=r._emscripten_stack_set_limits=function(){return(vr=r._emscripten_stack_set_limits=r.asm.Cb).apply(null,arguments)},et=r.stackSave=function(){return(et=r.stackSave=r.asm.Db).apply(null,arguments)},pt=r.stackRestore=function(){return(pt=r.stackRestore=r.asm.Eb).apply(null,arguments)},$r=r.stackAlloc=function(){return($r=r.stackAlloc=r.asm.Fb).apply(null,arguments)},bi=r.___cxa_can_catch=function(){return(bi=r.___cxa_can_catch=r.asm.Gb).apply(null,arguments)},T=r.___cxa_is_pointer_type=function(){return(T=r.___cxa_is_pointer_type=r.asm.Hb).apply(null,arguments)},k=r.dynCall_j=function(){return(k=r.dynCall_j=r.asm.Ib).apply(null,arguments)},D=r.dynCall_iiiiij=function(){return(D=r.dynCall_iiiiij=r.asm.Jb).apply(null,arguments)},F=r.dynCall_jii=function(){return(F=r.dynCall_jii=r.asm.Kb).apply(null,arguments)},J=r.dynCall_viiiiij=function(){return(J=r.dynCall_viiiiij=r.asm.Lb).apply(null,arguments)},ue=r.dynCall_vjji=function(){return(ue=r.dynCall_vjji=r.asm.Mb).apply(null,arguments)},Te=r.dynCall_viiijjjii=function(){return(Te=r.dynCall_viiijjjii=r.asm.Nb).apply(null,arguments)},Se=r.dynCall_iij=function(){return(Se=r.dynCall_iij=r.asm.Ob).apply(null,arguments)},Le=r.dynCall_ji=function(){return(Le=r.dynCall_ji=r.asm.Pb).apply(null,arguments)},Me=r.dynCall_iiiiiij=function(){return(Me=r.dynCall_iiiiiij=r.asm.Qb).apply(null,arguments)},Ye=r.dynCall_iiij=function(){return(Ye=r.dynCall_iiij=r.asm.Rb).apply(null,arguments)};function Gt(){function A(){if(!Sn&&(Sn=!0,r.calledRun=!0,!ht)&&(N||pn(An),t(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),!N)){if(r.postRun)for(typeof r.postRun=="function"&&(r.postRun=[r.postRun]);r.postRun.length;){var I=r.postRun.shift();xr.unshift(I)}pn(xr)}}if(!(0<Vt))if(N)t(r),N||pn(An),postMessage({cmd:"loaded"});else{if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;)vn();pn(En),0<Vt||(r.setStatus?(r.setStatus("Running..."),setTimeout(function(){setTimeout(function(){r.setStatus("")},1),A()},1)):A())}}if(r.UTF8ToString=jt,r.stringToUTF8=function(A,I,L){return ln(A,h(),I,L)},r.lengthBytesUTF8=ft,r.keepRuntimeAlive=wn,r.wasmMemory=se,r.stackSave=et,r.stackRestore=pt,r.stackAlloc=$r,r.ExitStatus=or,r.PThread=Xe,tr=function A(){Sn||Gt(),Sn||(tr=A)},r.preInit)for(typeof r.preInit=="function"&&(r.preInit=[r.preInit]);0<r.preInit.length;)r.preInit.pop()();return Gt(),c.ready});n.exports=l},932:(n,e,i)=>{var o,l=(o=(o=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(c){var a,h,f;c=c||{},a||(a=c!==void 0?c:{}),a.ready=new Promise(function(B,H){h=B,f=H});var p,d,r,t,u,s,m=Object.assign({},a),g="./this.program",b=(B,H)=>{throw H},y=typeof window=="object",w=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",v="";x?(v=w?i(908).dirname(v)+"/":"//",s=()=>{u||(t=i(1384),u=i(908))},p=function(B,H){return s(),B=u.normalize(B),t.readFileSync(B,H?void 0:"utf8")},r=B=>((B=p(B,!0)).buffer||(B=new Uint8Array(B)),B),d=(B,H,ne)=>{s(),B=u.normalize(B),t.readFile(B,function(ae,oe){ae?ne(ae):H(oe.buffer)})},1<process.argv.length&&(g=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",function(B){if(!(B instanceof An))throw B}),process.on("unhandledRejection",function(B){throw B}),b=(B,H)=>{if(S||0<Wt)throw process.exitCode=B,H;H instanceof An||C("exiting due to exception: "+H),process.exit(B)},a.inspect=function(){return"[Emscripten Module object]"}):(y||w)&&(w?v=self.location.href:typeof document<"u"&&document.currentScript&&(v=document.currentScript.src),o&&(v=o),v=v.indexOf("blob:")!==0?v.substr(0,v.replace(/[?#].*/,"").lastIndexOf("/")+1):"",p=B=>{var H=new XMLHttpRequest;return H.open("GET",B,!1),H.send(null),H.responseText},w&&(r=B=>{var H=new XMLHttpRequest;return H.open("GET",B,!1),H.responseType="arraybuffer",H.send(null),new Uint8Array(H.response)}),d=(B,H,ne)=>{var ae=new XMLHttpRequest;ae.open("GET",B,!0),ae.responseType="arraybuffer",ae.onload=()=>{ae.status==200||ae.status==0&&ae.response?H(ae.response):ne()},ae.onerror=ne,ae.send(null)});var E,O=a.print||console.log.bind(console),C=a.printErr||console.warn.bind(console);Object.assign(a,m),m=null,a.thisProgram&&(g=a.thisProgram),a.quit&&(b=a.quit),a.wasmBinary&&(E=a.wasmBinary);var S=a.noExitRuntime||!1;typeof WebAssembly!="object"&&bt("no native wasm support detected");var N,Q,te,Z,Y,G,R=!1,V=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function ce(B,H,ne){var ae=(H>>>=0)+ne;for(ne=H;B[ne]&&!(ne>=ae);)++ne;if(16<ne-H&&B.buffer&&V)return V.decode(B.subarray(H,ne));for(ae="";H<ne;){var oe=B[H++];if(128&oe){var pe=63&B[H++];if((224&oe)==192)ae+=String.fromCharCode((31&oe)<<6|pe);else{var Oe=63&B[H++];65536>(oe=(240&oe)==224?(15&oe)<<12|pe<<6|Oe:(7&oe)<<18|pe<<12|Oe<<6|63&B[H++])?ae+=String.fromCharCode(oe):(oe-=65536,ae+=String.fromCharCode(55296|oe>>10,56320|1023&oe))}}else ae+=String.fromCharCode(oe)}return ae}function se(B,H){return(B>>>=0)?ce(Z,B,H):""}function be(B,H,ne,ae){if(!(0<ae))return 0;var oe=ne>>>=0;ae=ne+ae-1;for(var pe=0;pe<B.length;++pe){var Oe=B.charCodeAt(pe);if(55296<=Oe&&57343>=Oe&&(Oe=65536+((1023&Oe)<<10)|1023&B.charCodeAt(++pe)),127>=Oe){if(ne>=ae)break;H[ne++>>>0]=Oe}else{if(2047>=Oe){if(ne+1>=ae)break;H[ne++>>>0]=192|Oe>>6}else{if(65535>=Oe){if(ne+2>=ae)break;H[ne++>>>0]=224|Oe>>12}else{if(ne+3>=ae)break;H[ne++>>>0]=240|Oe>>18,H[ne++>>>0]=128|Oe>>12&63}H[ne++>>>0]=128|Oe>>6&63}H[ne++>>>0]=128|63&Oe}}return H[ne>>>0]=0,ne-oe}function ee(B){for(var H=0,ne=0;ne<B.length;++ne){var ae=B.charCodeAt(ne);127>=ae?H++:2047>=ae?H+=2:55296<=ae&&57343>=ae?(H+=4,++ne):H+=3}return H}function ve(){var B=N.buffer;Q=B,a.HEAP8=te=new Int8Array(B),a.HEAP16=new Int16Array(B),a.HEAP32=Y=new Int32Array(B),a.HEAPU8=Z=new Uint8Array(B),a.HEAPU16=new Uint16Array(B),a.HEAPU32=G=new Uint32Array(B),a.HEAPF32=new Float32Array(B),a.HEAPF64=new Float64Array(B)}var Ce,Ge=[],De=[],ct=[],ht=[],Wt=0;function _n(){var B=a.preRun.shift();Ge.unshift(B)}var jt,ln=0,ft=null;function bt(B){throw a.onAbort&&a.onAbort(B),C(B="Aborted("+B+")"),R=!0,B=new WebAssembly.RuntimeError(B+". Build with -sASSERTIONS for more info."),f(B),B}function Lt(){return jt.startsWith("data:application/octet-stream;base64,")}if(jt="ort-wasm.wasm",!Lt()){var Jt=jt;jt=a.locateFile?a.locateFile(Jt,v):v+Jt}function En(){var B=jt;try{if(B==jt&&E)return new Uint8Array(E);if(r)return r(B);throw"both async and sync fetching of the wasm failed"}catch(H){bt(H)}}function An(B){this.name="ExitStatus",this.message="Program terminated with exit("+B+")",this.status=B}function Cn(B){for(;0<B.length;)B.shift()(a)}var xr=[],wn=0,vn=0;function Qt(B){this.Db=B,this.zb=B-24,this.Ub=function(H){G[this.zb+4>>2>>>0]=H},this.Eb=function(){return G[this.zb+4>>2>>>0]},this.Sb=function(H){G[this.zb+8>>2>>>0]=H},this.Wb=function(){return G[this.zb+8>>2>>>0]},this.Tb=function(){Y[this.zb>>2>>>0]=0},this.Ib=function(H){te[this.zb+12>>0>>>0]=H?1:0},this.Pb=function(){return te[this.zb+12>>0>>>0]!=0},this.Jb=function(H){te[this.zb+13>>0>>>0]=H?1:0},this.Lb=function(){return te[this.zb+13>>0>>>0]!=0},this.Rb=function(H,ne){this.Fb(0),this.Ub(H),this.Sb(ne),this.Tb(),this.Ib(!1),this.Jb(!1)},this.Nb=function(){Y[this.zb>>2>>>0]+=1},this.Xb=function(){var H=Y[this.zb>>2>>>0];return Y[this.zb>>2>>>0]=H-1,H===1},this.Fb=function(H){G[this.zb+16>>2>>>0]=H},this.Ob=function(){return G[this.zb+16>>2>>>0]},this.Qb=function(){if(Kr(this.Eb()))return G[this.Db>>2>>>0];var H=this.Ob();return H!==0?H:this.Db}}function Vt(B){return Lr(new Qt(B).zb)}var tr=[];function ot(B){var H=tr[B];return H||(B>=tr.length&&(tr.length=B+1),tr[B]=H=Ce.get(B)),H}function _r(B){var H=ee(B)+1,ne=Pt(H);return ne&&be(B,te,ne,H),ne}var Tn={};function Wr(){if(!or){var B,H={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:g||"./this.program"};for(B in Tn)Tn[B]===void 0?delete H[B]:H[B]=Tn[B];var ne=[];for(B in H)ne.push(B+"="+H[B]);or=ne}return or}var or,nr=[null,[],[]];function Ar(B,H){var ne=nr[B];H===0||H===10?((B===1?O:C)(ce(ne,0)),ne.length=0):ne.push(H)}var Ht=0;function wr(B){return B%4==0&&(B%100!=0||B%400==0)}var Xe=[31,29,31,30,31,30,31,31,30,31,30,31],pn=[31,28,31,30,31,30,31,31,30,31,30,31];function Hr(B,H,ne,ae){function oe(le,Ct,vt){for(le=typeof le=="number"?le.toString():le||"";le.length<Ct;)le=vt[0]+le;return le}function pe(le,Ct){return oe(le,Ct,"0")}function Oe(le,Ct){function vt(br){return 0>br?-1:0<br?1:0}var er;return(er=vt(le.getFullYear()-Ct.getFullYear()))===0&&(er=vt(le.getMonth()-Ct.getMonth()))===0&&(er=vt(le.getDate()-Ct.getDate())),er}function je(le){switch(le.getDay()){case 0:return new Date(le.getFullYear()-1,11,29);case 1:return le;case 2:return new Date(le.getFullYear(),0,3);case 3:return new Date(le.getFullYear(),0,2);case 4:return new Date(le.getFullYear(),0,1);case 5:return new Date(le.getFullYear()-1,11,31);case 6:return new Date(le.getFullYear()-1,11,30)}}function Re(le){var Ct=le.Bb;for(le=new Date(new Date(le.Cb+1900,0,1).getTime());0<Ct;){var vt=le.getMonth(),er=(wr(le.getFullYear())?Xe:pn)[vt];if(!(Ct>er-le.getDate())){le.setDate(le.getDate()+Ct);break}Ct-=er-le.getDate()+1,le.setDate(1),11>vt?le.setMonth(vt+1):(le.setMonth(0),le.setFullYear(le.getFullYear()+1))}return vt=new Date(le.getFullYear()+1,0,4),Ct=je(new Date(le.getFullYear(),0,4)),vt=je(vt),0>=Oe(Ct,le)?0>=Oe(vt,le)?le.getFullYear()+1:le.getFullYear():le.getFullYear()-1}var dt=Y[ae+40>>2>>>0];for(var wt in ae={$b:Y[ae>>2>>>0],Zb:Y[ae+4>>2>>>0],Gb:Y[ae+8>>2>>>0],Kb:Y[ae+12>>2>>>0],Hb:Y[ae+16>>2>>>0],Cb:Y[ae+20>>2>>>0],Ab:Y[ae+24>>2>>>0],Bb:Y[ae+28>>2>>>0],bc:Y[ae+32>>2>>>0],Yb:Y[ae+36>>2>>>0],ac:dt?se(dt):""},ne=se(ne),dt={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})ne=ne.replace(new RegExp(wt,"g"),dt[wt]);var yn="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),gn="January February March April May June July August September October November December".split(" ");for(wt in dt={"%a":function(le){return yn[le.Ab].substring(0,3)},"%A":function(le){return yn[le.Ab]},"%b":function(le){return gn[le.Hb].substring(0,3)},"%B":function(le){return gn[le.Hb]},"%C":function(le){return pe((le.Cb+1900)/100|0,2)},"%d":function(le){return pe(le.Kb,2)},"%e":function(le){return oe(le.Kb,2," ")},"%g":function(le){return Re(le).toString().substring(2)},"%G":function(le){return Re(le)},"%H":function(le){return pe(le.Gb,2)},"%I":function(le){return(le=le.Gb)==0?le=12:12<le&&(le-=12),pe(le,2)},"%j":function(le){for(var Ct=0,vt=0;vt<=le.Hb-1;Ct+=(wr(le.Cb+1900)?Xe:pn)[vt++]);return pe(le.Kb+Ct,3)},"%m":function(le){return pe(le.Hb+1,2)},"%M":function(le){return pe(le.Zb,2)},"%n":function(){return`
`},"%p":function(le){return 0<=le.Gb&&12>le.Gb?"AM":"PM"},"%S":function(le){return pe(le.$b,2)},"%t":function(){return"	"},"%u":function(le){return le.Ab||7},"%U":function(le){return pe(Math.floor((le.Bb+7-le.Ab)/7),2)},"%V":function(le){var Ct=Math.floor((le.Bb+7-(le.Ab+6)%7)/7);if(2>=(le.Ab+371-le.Bb-2)%7&&Ct++,Ct)Ct==53&&((vt=(le.Ab+371-le.Bb)%7)==4||vt==3&&wr(le.Cb)||(Ct=1));else{Ct=52;var vt=(le.Ab+7-le.Bb-1)%7;(vt==4||vt==5&&wr(le.Cb%400-1))&&Ct++}return pe(Ct,2)},"%w":function(le){return le.Ab},"%W":function(le){return pe(Math.floor((le.Bb+7-(le.Ab+6)%7)/7),2)},"%y":function(le){return(le.Cb+1900).toString().substring(2)},"%Y":function(le){return le.Cb+1900},"%z":function(le){var Ct=0<=(le=le.Yb);return le=Math.abs(le)/60,(Ct?"+":"-")+("0000"+(le/60*100+le%60)).slice(-4)},"%Z":function(le){return le.ac},"%%":function(){return"%"}},ne=ne.replace(/%%/g,"\0\0"),dt)ne.includes(wt)&&(ne=ne.replace(new RegExp(wt,"g"),dt[wt](ae)));return wt=function(le){var Ct=Array(ee(le)+1);return be(le,Ct,0,Ct.length),Ct}(ne=ne.replace(/\0\0/g,"%")),wt.length>H?0:(te.set(wt,B>>>0),wt.length-1)}var mt={a:function(B){return Pt(B+24)+24},m:function(B){return(B=new Qt(B)).Pb()||(B.Ib(!0),wn--),B.Jb(!1),xr.push(B),B.Nb(),B.Qb()},ia:function(B){throw C("Unexpected exception thrown, this is not properly supported - aborting"),R=!0,B},w:function(){Ee(0);var B=xr.pop();if(B.Xb()&&!B.Lb()){var H=B.Wb();H&&ot(H)(B.Db),Vt(B.Db)}vn=0},d:function(){var B=vn;if(!B)return Ht=0;var H=new Qt(B);H.Fb(B);var ne=H.Eb();if(!ne)return Ht=0,B;for(var ae=Array.prototype.slice.call(arguments),oe=0;oe<ae.length;oe++){var pe=ae[oe];if(pe===0||pe===ne)break;if(Cr(pe,ne,H.zb+16))return Ht=pe,B}return Ht=ne,B},k:function(){var B=vn;if(!B)return Ht=0;var H=new Qt(B);H.Fb(B);var ne=H.Eb();if(!ne)return Ht=0,B;for(var ae=Array.prototype.slice.call(arguments),oe=0;oe<ae.length;oe++){var pe=ae[oe];if(pe===0||pe===ne)break;if(Cr(pe,ne,H.zb+16))return Ht=pe,B}return Ht=ne,B},g:function(){var B=vn;if(!B)return Ht=0;var H=new Qt(B);H.Fb(B);var ne=H.Eb();if(!ne)return Ht=0,B;for(var ae=Array.prototype.slice.call(arguments),oe=0;oe<ae.length;oe++){var pe=ae[oe];if(pe===0||pe===ne)break;if(Cr(pe,ne,H.zb+16))return Ht=pe,B}return Ht=ne,B},s:Vt,L:function(){var B=xr.pop();B||bt("no exception to throw");var H=B.Db;throw B.Lb()||(xr.push(B),B.Jb(!0),B.Ib(!1),wn++),vn=H,H},b:function(B,H,ne){throw new Qt(B).Rb(H,ne),vn=B,wn++,B},la:function(){return wn},i:function(B){throw vn||(vn=B),B},H:function(){return 0},Ba:function(){},pa:function(){},ra:function(){},ka:function(){return 0},za:function(){},ua:function(){},ya:function(){},R:function(){},qa:function(){},na:function(){},Aa:function(){},oa:function(){},Ha:function(){},Ja:function(){bt("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},Ia:function(){bt("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},S:function(){return Date.now()},Ca:function(){return!0},Da:function(B,H){B=new Date(1e3*(G[B>>>2]+4294967296*Y[B+4>>>2])),Y[H>>2>>>0]=B.getUTCSeconds(),Y[H+4>>2>>>0]=B.getUTCMinutes(),Y[H+8>>2>>>0]=B.getUTCHours(),Y[H+12>>2>>>0]=B.getUTCDate(),Y[H+16>>2>>>0]=B.getUTCMonth(),Y[H+20>>2>>>0]=B.getUTCFullYear()-1900,Y[H+24>>2>>>0]=B.getUTCDay(),Y[H+28>>2>>>0]=(B.getTime()-Date.UTC(B.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Ea:function(B,H){B=new Date(1e3*(G[B>>>2]+4294967296*Y[B+4>>>2])),Y[H>>2>>>0]=B.getSeconds(),Y[H+4>>2>>>0]=B.getMinutes(),Y[H+8>>2>>>0]=B.getHours(),Y[H+12>>2>>>0]=B.getDate(),Y[H+16>>2>>>0]=B.getMonth(),Y[H+20>>2>>>0]=B.getFullYear()-1900,Y[H+24>>2>>>0]=B.getDay();var ne=new Date(B.getFullYear(),0,1);Y[H+28>>2>>>0]=(B.getTime()-ne.getTime())/864e5|0,Y[H+36>>2>>>0]=-60*B.getTimezoneOffset();var ae=new Date(B.getFullYear(),6,1).getTimezoneOffset();ne=ne.getTimezoneOffset(),Y[H+32>>2>>>0]=0|(ae!=ne&&B.getTimezoneOffset()==Math.min(ne,ae))},Fa:function(B){var H=new Date(Y[B+20>>2>>>0]+1900,Y[B+16>>2>>>0],Y[B+12>>2>>>0],Y[B+8>>2>>>0],Y[B+4>>2>>>0],Y[B>>2>>>0],0),ne=Y[B+32>>2>>>0],ae=H.getTimezoneOffset(),oe=new Date(H.getFullYear(),0,1),pe=new Date(H.getFullYear(),6,1).getTimezoneOffset(),Oe=oe.getTimezoneOffset(),je=Math.min(Oe,pe);return 0>ne?Y[B+32>>2>>>0]=+(pe!=Oe&&je==ae):0<ne!=(je==ae)&&(pe=Math.max(Oe,pe),H.setTime(H.getTime()+6e4*((0<ne?je:pe)-ae))),Y[B+24>>2>>>0]=H.getDay(),Y[B+28>>2>>>0]=(H.getTime()-oe.getTime())/864e5|0,Y[B>>2>>>0]=H.getSeconds(),Y[B+4>>2>>>0]=H.getMinutes(),Y[B+8>>2>>>0]=H.getHours(),Y[B+12>>2>>>0]=H.getDate(),Y[B+16>>2>>>0]=H.getMonth(),H.getTime()/1e3|0},sa:function(){return-52},ta:function(){},Ga:function B(H,ne,ae){B.Vb||(B.Vb=!0,function(oe,pe,Oe){function je(gn){return(gn=gn.toTimeString().match(/\(([A-Za-z ]+)\)$/))?gn[1]:"GMT"}var Re=new Date().getFullYear(),dt=new Date(Re,0,1),wt=new Date(Re,6,1);Re=dt.getTimezoneOffset();var yn=wt.getTimezoneOffset();Y[oe>>2>>>0]=60*Math.max(Re,yn),Y[pe>>2>>>0]=+(Re!=yn),oe=je(dt),pe=je(wt),oe=_r(oe),pe=_r(pe),yn<Re?(G[Oe>>2>>>0]=oe,G[Oe+4>>2>>>0]=pe):(G[Oe>>2>>>0]=pe,G[Oe+4>>2>>>0]=oe)}(H,ne,ae))},B:function(){bt("")},ma:function(){return 4294901760},I:x?()=>{var B=process.hrtime();return 1e3*B[0]+B[1]/1e6}:()=>performance.now(),xa:function(B,H,ne){Z.copyWithin(B>>>0,H>>>0,H+ne>>>0)},G:function(B){var H=Z.length;if(4294901760<(B>>>=0))return!1;for(var ne=1;4>=ne;ne*=2){var ae=H*(1+.2/ne);ae=Math.min(ae,B+100663296);var oe=Math;ae=Math.max(B,ae),oe=oe.min.call(oe,4294901760,ae+(65536-ae%65536)%65536);e:{try{N.grow(oe-Q.byteLength+65535>>>16),ve();var pe=1;break e}catch{}pe=void 0}if(pe)return!0}return!1},va:function(B,H){var ne=0;return Wr().forEach(function(ae,oe){var pe=H+ne;for(oe=G[B+4*oe>>2>>>0]=pe,pe=0;pe<ae.length;++pe)te[oe++>>0>>>0]=ae.charCodeAt(pe);te[oe>>0>>>0]=0,ne+=ae.length+1}),0},wa:function(B,H){var ne=Wr();G[B>>2>>>0]=ne.length;var ae=0;return ne.forEach(function(oe){ae+=oe.length+1}),G[H>>2>>>0]=ae,0},ba:function(B){S||0<Wt||(Ir(),Cn(ct),qr(0),nr[1].length&&Ar(1,10),nr[2].length&&Ar(2,10)),S||0<Wt||(a.onExit&&a.onExit(B),R=!0),b(B,new An(B))},E:function(){return 52},Q:function(){return 52},ca:function(){return 70},P:function(B,H,ne,ae){for(var oe=0,pe=0;pe<ne;pe++){var Oe=G[H>>2>>>0],je=G[H+4>>2>>>0];H+=8;for(var Re=0;Re<je;Re++)Ar(B,Z[Oe+Re>>>0]);oe+=je}return G[ae>>2>>>0]=oe,0},c:function(){return Ht},ja:function B(H,ne){B.Mb||(B.Mb=function(){if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function"){var oe=new Uint8Array(1);return()=>(crypto.getRandomValues(oe),oe[0])}if(x)try{var pe=i(Object(function(){var Oe=new Error("Cannot find module 'crypto'");throw Oe.code="MODULE_NOT_FOUND",Oe}()));return()=>pe.randomBytes(1)[0]}catch{}return()=>bt("randomDevice")}());for(var ae=0;ae<ne;ae++)te[H+ae>>0>>>0]=B.Mb();return 0},ea:function(B,H,ne){var ae=Qe();try{return ot(B)(H,ne)}catch(oe){if(st(ae),oe!==oe+0)throw oe;Ee(1,0)}},fa:function(B,H,ne){var ae=Qe();try{return ot(B)(H,ne)}catch(oe){if(st(ae),oe!==oe+0)throw oe;Ee(1,0)}},J:function(B){var H=Qe();try{return ot(B)()}catch(ne){if(st(H),ne!==ne+0)throw ne;Ee(1,0)}},e:function(B,H){var ne=Qe();try{return ot(B)(H)}catch(ae){if(st(ne),ae!==ae+0)throw ae;Ee(1,0)}},N:function(B,H,ne){var ae=Qe();try{return ot(B)(H,ne)}catch(oe){if(st(ae),oe!==oe+0)throw oe;Ee(1,0)}},O:function(B,H,ne){var ae=Qe();try{return ot(B)(H,ne)}catch(oe){if(st(ae),oe!==oe+0)throw oe;Ee(1,0)}},j:function(B,H,ne){var ae=Qe();try{return ot(B)(H,ne)}catch(oe){if(st(ae),oe!==oe+0)throw oe;Ee(1,0)}},o:function(B,H,ne,ae){var oe=Qe();try{return ot(B)(H,ne,ae)}catch(pe){if(st(oe),pe!==pe+0)throw pe;Ee(1,0)}},p:function(B,H,ne,ae,oe){var pe=Qe();try{return ot(B)(H,ne,ae,oe)}catch(Oe){if(st(pe),Oe!==Oe+0)throw Oe;Ee(1,0)}},M:function(B,H,ne,ae,oe,pe){var Oe=Qe();try{return ot(B)(H,ne,ae,oe,pe)}catch(je){if(st(Oe),je!==je+0)throw je;Ee(1,0)}},r:function(B,H,ne,ae,oe,pe){var Oe=Qe();try{return ot(B)(H,ne,ae,oe,pe)}catch(je){if(st(Oe),je!==je+0)throw je;Ee(1,0)}},v:function(B,H,ne,ae,oe,pe,Oe){var je=Qe();try{return ot(B)(H,ne,ae,oe,pe,Oe)}catch(Re){if(st(je),Re!==Re+0)throw Re;Ee(1,0)}},K:function(B,H,ne,ae,oe,pe,Oe,je){var Re=Qe();try{return ot(B)(H,ne,ae,oe,pe,Oe,je)}catch(dt){if(st(Re),dt!==dt+0)throw dt;Ee(1,0)}},D:function(B,H,ne,ae,oe,pe,Oe,je,Re,dt,wt,yn){var gn=Qe();try{return ot(B)(H,ne,ae,oe,pe,Oe,je,Re,dt,wt,yn)}catch(le){if(st(gn),le!==le+0)throw le;Ee(1,0)}},X:function(B,H,ne,ae,oe,pe,Oe,je){var Re=Qe();try{return ir(B,H,ne,ae,oe,pe,Oe,je)}catch(dt){if(st(Re),dt!==dt+0)throw dt;Ee(1,0)}},V:function(B,H,ne,ae,oe,pe,Oe){var je=Qe();try{return Fr(B,H,ne,ae,oe,pe,Oe)}catch(Re){if(st(je),Re!==Re+0)throw Re;Ee(1,0)}},U:function(B,H,ne,ae,oe){var pe=Qe();try{return Vr(B,H,ne,ae,oe)}catch(Oe){if(st(pe),Oe!==Oe+0)throw Oe;Ee(1,0)}},Z:function(B,H,ne,ae){var oe=Qe();try{return $n(B,H,ne,ae)}catch(pe){if(st(oe),pe!==pe+0)throw pe;Ee(1,0)}},W:function(B){var H=Qe();try{return Mr(B)}catch(ne){if(st(H),ne!==ne+0)throw ne;Ee(1,0)}},Y:function(B,H){var ne=Qe();try{return Ur(B,H)}catch(ae){if(st(ne),ae!==ae+0)throw ae;Ee(1,0)}},T:function(B,H,ne){var ae=Qe();try{return Tr(B,H,ne)}catch(oe){if(st(ae),oe!==oe+0)throw oe;Ee(1,0)}},f:function(B){var H=Qe();try{ot(B)()}catch(ne){if(st(H),ne!==ne+0)throw ne;Ee(1,0)}},q:function(B,H){var ne=Qe();try{ot(B)(H)}catch(ae){if(st(ne),ae!==ae+0)throw ae;Ee(1,0)}},h:function(B,H,ne){var ae=Qe();try{ot(B)(H,ne)}catch(oe){if(st(ae),oe!==oe+0)throw oe;Ee(1,0)}},da:function(B,H,ne,ae){var oe=Qe();try{ot(B)(H,ne,ae)}catch(pe){if(st(oe),pe!==pe+0)throw pe;Ee(1,0)}},l:function(B,H,ne,ae){var oe=Qe();try{ot(B)(H,ne,ae)}catch(pe){if(st(oe),pe!==pe+0)throw pe;Ee(1,0)}},t:function(B,H,ne,ae,oe){var pe=Qe();try{ot(B)(H,ne,ae,oe)}catch(Oe){if(st(pe),Oe!==Oe+0)throw Oe;Ee(1,0)}},u:function(B,H,ne,ae,oe,pe){var Oe=Qe();try{ot(B)(H,ne,ae,oe,pe)}catch(je){if(st(Oe),je!==je+0)throw je;Ee(1,0)}},x:function(B,H,ne,ae,oe,pe,Oe){var je=Qe();try{ot(B)(H,ne,ae,oe,pe,Oe)}catch(Re){if(st(je),Re!==Re+0)throw Re;Ee(1,0)}},z:function(B,H,ne,ae,oe,pe,Oe,je){var Re=Qe();try{ot(B)(H,ne,ae,oe,pe,Oe,je)}catch(dt){if(st(Re),dt!==dt+0)throw dt;Ee(1,0)}},ga:function(B,H,ne,ae,oe,pe,Oe,je,Re){var dt=Qe();try{ot(B)(H,ne,ae,oe,pe,Oe,je,Re)}catch(wt){if(st(dt),wt!==wt+0)throw wt;Ee(1,0)}},A:function(B,H,ne,ae,oe,pe,Oe,je,Re,dt,wt){var yn=Qe();try{ot(B)(H,ne,ae,oe,pe,Oe,je,Re,dt,wt)}catch(gn){if(st(yn),gn!==gn+0)throw gn;Ee(1,0)}},C:function(B,H,ne,ae,oe,pe,Oe,je,Re,dt,wt,yn,gn,le,Ct,vt){var er=Qe();try{ot(B)(H,ne,ae,oe,pe,Oe,je,Re,dt,wt,yn,gn,le,Ct,vt)}catch(br){if(st(er),br!==br+0)throw br;Ee(1,0)}},aa:function(B,H,ne,ae,oe,pe,Oe,je){var Re=Qe();try{hn(B,H,ne,ae,oe,pe,Oe,je)}catch(dt){if(st(Re),dt!==dt+0)throw dt;Ee(1,0)}},_:function(B,H,ne,ae,oe,pe,Oe,je,Re,dt,wt,yn){var gn=Qe();try{rr(B,H,ne,ae,oe,pe,Oe,je,Re,dt,wt,yn)}catch(le){if(st(gn),le!==le+0)throw le;Ee(1,0)}},$:function(B,H,ne,ae,oe,pe){var Oe=Qe();try{Yr(B,H,ne,ae,oe,pe)}catch(je){if(st(Oe),je!==je+0)throw je;Ee(1,0)}},n:function(B){return B},F:function(B){Ht=B},ha:Hr,y:function(B,H,ne,ae){return Hr(B,H,ne,ae)}};(function(){function B(oe){a.asm=oe.exports,N=a.asm.Ka,ve(),Ce=a.asm.ib,De.unshift(a.asm.La),ln--,a.monitorRunDependencies&&a.monitorRunDependencies(ln),ln==0&&ft&&(oe=ft,ft=null,oe())}function H(oe){B(oe.instance)}function ne(oe){return function(){if(!E&&(y||w)){if(typeof fetch=="function"&&!jt.startsWith("file://"))return fetch(jt,{credentials:"same-origin"}).then(function(pe){if(!pe.ok)throw"failed to load wasm binary file at '"+jt+"'";return pe.arrayBuffer()}).catch(function(){return En()});if(d)return new Promise(function(pe,Oe){d(jt,function(je){pe(new Uint8Array(je))},Oe)})}return Promise.resolve().then(function(){return En()})}().then(function(pe){return WebAssembly.instantiate(pe,ae)}).then(function(pe){return pe}).then(oe,function(pe){C("failed to asynchronously prepare wasm: "+pe),bt(pe)})}var ae={a:mt};if(ln++,a.monitorRunDependencies&&a.monitorRunDependencies(ln),a.instantiateWasm)try{return a.instantiateWasm(ae,B)}catch(oe){return C("Module.instantiateWasm callback failed with error: "+oe),!1}(E||typeof WebAssembly.instantiateStreaming!="function"||Lt()||jt.startsWith("file://")||x||typeof fetch!="function"?ne(H):fetch(jt,{credentials:"same-origin"}).then(function(oe){return WebAssembly.instantiateStreaming(oe,ae).then(H,function(pe){return C("wasm streaming compile failed: "+pe),C("falling back to ArrayBuffer instantiation"),ne(H)})})).catch(f)})(),a.___wasm_call_ctors=function(){return(a.___wasm_call_ctors=a.asm.La).apply(null,arguments)},a._OrtInit=function(){return(a._OrtInit=a.asm.Ma).apply(null,arguments)},a._OrtCreateSessionOptions=function(){return(a._OrtCreateSessionOptions=a.asm.Na).apply(null,arguments)},a._OrtAppendExecutionProvider=function(){return(a._OrtAppendExecutionProvider=a.asm.Oa).apply(null,arguments)},a._OrtAddSessionConfigEntry=function(){return(a._OrtAddSessionConfigEntry=a.asm.Pa).apply(null,arguments)},a._OrtReleaseSessionOptions=function(){return(a._OrtReleaseSessionOptions=a.asm.Qa).apply(null,arguments)},a._OrtCreateSession=function(){return(a._OrtCreateSession=a.asm.Ra).apply(null,arguments)},a._OrtReleaseSession=function(){return(a._OrtReleaseSession=a.asm.Sa).apply(null,arguments)},a._OrtGetInputCount=function(){return(a._OrtGetInputCount=a.asm.Ta).apply(null,arguments)},a._OrtGetOutputCount=function(){return(a._OrtGetOutputCount=a.asm.Ua).apply(null,arguments)},a._OrtGetInputName=function(){return(a._OrtGetInputName=a.asm.Va).apply(null,arguments)},a._OrtGetOutputName=function(){return(a._OrtGetOutputName=a.asm.Wa).apply(null,arguments)},a._OrtFree=function(){return(a._OrtFree=a.asm.Xa).apply(null,arguments)},a._OrtCreateTensor=function(){return(a._OrtCreateTensor=a.asm.Ya).apply(null,arguments)},a._OrtGetTensorData=function(){return(a._OrtGetTensorData=a.asm.Za).apply(null,arguments)},a._OrtReleaseTensor=function(){return(a._OrtReleaseTensor=a.asm._a).apply(null,arguments)},a._OrtCreateRunOptions=function(){return(a._OrtCreateRunOptions=a.asm.$a).apply(null,arguments)},a._OrtAddRunConfigEntry=function(){return(a._OrtAddRunConfigEntry=a.asm.ab).apply(null,arguments)},a._OrtReleaseRunOptions=function(){return(a._OrtReleaseRunOptions=a.asm.bb).apply(null,arguments)},a._OrtRun=function(){return(a._OrtRun=a.asm.cb).apply(null,arguments)},a._OrtEndProfiling=function(){return(a._OrtEndProfiling=a.asm.db).apply(null,arguments)};var bn,Pt=a._malloc=function(){return(Pt=a._malloc=a.asm.eb).apply(null,arguments)},Lr=a._free=function(){return(Lr=a._free=a.asm.fb).apply(null,arguments)},qr=a._fflush=function(){return(qr=a._fflush=a.asm.gb).apply(null,arguments)},Ir=a.___funcs_on_exit=function(){return(Ir=a.___funcs_on_exit=a.asm.hb).apply(null,arguments)},Ee=a._setThrew=function(){return(Ee=a._setThrew=a.asm.jb).apply(null,arguments)},Qe=a.stackSave=function(){return(Qe=a.stackSave=a.asm.kb).apply(null,arguments)},st=a.stackRestore=function(){return(st=a.stackRestore=a.asm.lb).apply(null,arguments)},_i=a.stackAlloc=function(){return(_i=a.stackAlloc=a.asm.mb).apply(null,arguments)},Cr=a.___cxa_can_catch=function(){return(Cr=a.___cxa_can_catch=a.asm.nb).apply(null,arguments)},Kr=a.___cxa_is_pointer_type=function(){return(Kr=a.___cxa_is_pointer_type=a.asm.ob).apply(null,arguments)},Mr=a.dynCall_j=function(){return(Mr=a.dynCall_j=a.asm.pb).apply(null,arguments)},Fr=a.dynCall_iiiiij=function(){return(Fr=a.dynCall_iiiiij=a.asm.qb).apply(null,arguments)},Tr=a.dynCall_jii=function(){return(Tr=a.dynCall_jii=a.asm.rb).apply(null,arguments)},hn=a.dynCall_viiiiij=function(){return(hn=a.dynCall_viiiiij=a.asm.sb).apply(null,arguments)},Yr=a.dynCall_vjji=function(){return(Yr=a.dynCall_vjji=a.asm.tb).apply(null,arguments)},rr=a.dynCall_viiijjjii=function(){return(rr=a.dynCall_viiijjjii=a.asm.ub).apply(null,arguments)},$n=a.dynCall_iij=function(){return($n=a.dynCall_iij=a.asm.vb).apply(null,arguments)},Ur=a.dynCall_ji=function(){return(Ur=a.dynCall_ji=a.asm.wb).apply(null,arguments)},ir=a.dynCall_iiiiiij=function(){return(ir=a.dynCall_iiiiiij=a.asm.xb).apply(null,arguments)},Vr=a.dynCall_iiij=function(){return(Vr=a.dynCall_iiij=a.asm.yb).apply(null,arguments)};function jr(){function B(){if(!bn&&(bn=!0,a.calledRun=!0,!R)){if(Cn(De),h(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;){var H=a.postRun.shift();ht.unshift(H)}Cn(ht)}}if(!(0<ln)){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)_n();Cn(Ge),0<ln||(a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),B()},1)):B())}}if(a.UTF8ToString=se,a.stringToUTF8=function(B,H,ne){return be(B,Z,H,ne)},a.lengthBytesUTF8=ee,a.stackSave=Qe,a.stackRestore=st,a.stackAlloc=_i,ft=function B(){bn||jr(),bn||(ft=B)},a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return jr(),c.ready});n.exports=l},4537:n=>{n.exports=function(e,i){for(var o=new Array(arguments.length-1),l=0,c=2,a=!0;c<arguments.length;)o[l++]=arguments[c++];return new Promise(function(h,f){o[l]=function(p){if(a)if(a=!1,p)f(p);else{for(var d=new Array(arguments.length-1),r=0;r<d.length;)d[r++]=arguments[r];h.apply(null,d)}};try{e.apply(i||null,o)}catch(p){a&&(a=!1,f(p))}})}},7419:(n,e)=>{var i=e;i.length=function(h){var f=h.length;if(!f)return 0;for(var p=0;--f%4>1&&h.charAt(f)==="=";)++p;return Math.ceil(3*h.length)/4-p};for(var o=new Array(64),l=new Array(123),c=0;c<64;)l[o[c]=c<26?c+65:c<52?c+71:c<62?c-4:c-59|43]=c++;i.encode=function(h,f,p){for(var d,r=null,t=[],u=0,s=0;f<p;){var m=h[f++];switch(s){case 0:t[u++]=o[m>>2],d=(3&m)<<4,s=1;break;case 1:t[u++]=o[d|m>>4],d=(15&m)<<2,s=2;break;case 2:t[u++]=o[d|m>>6],t[u++]=o[63&m],s=0}u>8191&&((r||(r=[])).push(String.fromCharCode.apply(String,t)),u=0)}return s&&(t[u++]=o[d],t[u++]=61,s===1&&(t[u++]=61)),r?(u&&r.push(String.fromCharCode.apply(String,t.slice(0,u))),r.join("")):String.fromCharCode.apply(String,t.slice(0,u))};var a="invalid encoding";i.decode=function(h,f,p){for(var d,r=p,t=0,u=0;u<h.length;){var s=h.charCodeAt(u++);if(s===61&&t>1)break;if((s=l[s])===void 0)throw Error(a);switch(t){case 0:d=s,t=1;break;case 1:f[p++]=d<<2|(48&s)>>4,d=s,t=2;break;case 2:f[p++]=(15&d)<<4|(60&s)>>2,d=s,t=3;break;case 3:f[p++]=(3&d)<<6|s,t=0}}if(t===1)throw Error(a);return p-r},i.test=function(h){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(h)}},9211:n=>{function e(){this._listeners={}}n.exports=e,e.prototype.on=function(i,o,l){return(this._listeners[i]||(this._listeners[i]=[])).push({fn:o,ctx:l||this}),this},e.prototype.off=function(i,o){if(i===void 0)this._listeners={};else if(o===void 0)this._listeners[i]=[];else for(var l=this._listeners[i],c=0;c<l.length;)l[c].fn===o?l.splice(c,1):++c;return this},e.prototype.emit=function(i){var o=this._listeners[i];if(o){for(var l=[],c=1;c<arguments.length;)l.push(arguments[c++]);for(c=0;c<o.length;)o[c].fn.apply(o[c++].ctx,l)}return this}},945:n=>{function e(a){return typeof Float32Array<"u"?function(){var h=new Float32Array([-0]),f=new Uint8Array(h.buffer),p=f[3]===128;function d(s,m,g){h[0]=s,m[g]=f[0],m[g+1]=f[1],m[g+2]=f[2],m[g+3]=f[3]}function r(s,m,g){h[0]=s,m[g]=f[3],m[g+1]=f[2],m[g+2]=f[1],m[g+3]=f[0]}function t(s,m){return f[0]=s[m],f[1]=s[m+1],f[2]=s[m+2],f[3]=s[m+3],h[0]}function u(s,m){return f[3]=s[m],f[2]=s[m+1],f[1]=s[m+2],f[0]=s[m+3],h[0]}a.writeFloatLE=p?d:r,a.writeFloatBE=p?r:d,a.readFloatLE=p?t:u,a.readFloatBE=p?u:t}():function(){function h(p,d,r,t){var u=d<0?1:0;if(u&&(d=-d),d===0)p(1/d>0?0:2147483648,r,t);else if(isNaN(d))p(2143289344,r,t);else if(d>34028234663852886e22)p((u<<31|2139095040)>>>0,r,t);else if(d<11754943508222875e-54)p((u<<31|Math.round(d/1401298464324817e-60))>>>0,r,t);else{var s=Math.floor(Math.log(d)/Math.LN2);p((u<<31|s+127<<23|8388607&Math.round(d*Math.pow(2,-s)*8388608))>>>0,r,t)}}function f(p,d,r){var t=p(d,r),u=2*(t>>31)+1,s=t>>>23&255,m=8388607&t;return s===255?m?NaN:u*(1/0):s===0?1401298464324817e-60*u*m:u*Math.pow(2,s-150)*(m+8388608)}a.writeFloatLE=h.bind(null,i),a.writeFloatBE=h.bind(null,o),a.readFloatLE=f.bind(null,l),a.readFloatBE=f.bind(null,c)}(),typeof Float64Array<"u"?function(){var h=new Float64Array([-0]),f=new Uint8Array(h.buffer),p=f[7]===128;function d(s,m,g){h[0]=s,m[g]=f[0],m[g+1]=f[1],m[g+2]=f[2],m[g+3]=f[3],m[g+4]=f[4],m[g+5]=f[5],m[g+6]=f[6],m[g+7]=f[7]}function r(s,m,g){h[0]=s,m[g]=f[7],m[g+1]=f[6],m[g+2]=f[5],m[g+3]=f[4],m[g+4]=f[3],m[g+5]=f[2],m[g+6]=f[1],m[g+7]=f[0]}function t(s,m){return f[0]=s[m],f[1]=s[m+1],f[2]=s[m+2],f[3]=s[m+3],f[4]=s[m+4],f[5]=s[m+5],f[6]=s[m+6],f[7]=s[m+7],h[0]}function u(s,m){return f[7]=s[m],f[6]=s[m+1],f[5]=s[m+2],f[4]=s[m+3],f[3]=s[m+4],f[2]=s[m+5],f[1]=s[m+6],f[0]=s[m+7],h[0]}a.writeDoubleLE=p?d:r,a.writeDoubleBE=p?r:d,a.readDoubleLE=p?t:u,a.readDoubleBE=p?u:t}():function(){function h(p,d,r,t,u,s){var m=t<0?1:0;if(m&&(t=-t),t===0)p(0,u,s+d),p(1/t>0?0:2147483648,u,s+r);else if(isNaN(t))p(0,u,s+d),p(2146959360,u,s+r);else if(t>17976931348623157e292)p(0,u,s+d),p((m<<31|2146435072)>>>0,u,s+r);else{var g;if(t<22250738585072014e-324)p((g=t/5e-324)>>>0,u,s+d),p((m<<31|g/4294967296)>>>0,u,s+r);else{var b=Math.floor(Math.log(t)/Math.LN2);b===1024&&(b=1023),p(4503599627370496*(g=t*Math.pow(2,-b))>>>0,u,s+d),p((m<<31|b+1023<<20|1048576*g&1048575)>>>0,u,s+r)}}}function f(p,d,r,t,u){var s=p(t,u+d),m=p(t,u+r),g=2*(m>>31)+1,b=m>>>20&2047,y=4294967296*(1048575&m)+s;return b===2047?y?NaN:g*(1/0):b===0?5e-324*g*y:g*Math.pow(2,b-1075)*(y+4503599627370496)}a.writeDoubleLE=h.bind(null,i,0,4),a.writeDoubleBE=h.bind(null,o,4,0),a.readDoubleLE=f.bind(null,l,0,4),a.readDoubleBE=f.bind(null,c,4,0)}(),a}function i(a,h,f){h[f]=255&a,h[f+1]=a>>>8&255,h[f+2]=a>>>16&255,h[f+3]=a>>>24}function o(a,h,f){h[f]=a>>>24,h[f+1]=a>>>16&255,h[f+2]=a>>>8&255,h[f+3]=255&a}function l(a,h){return(a[h]|a[h+1]<<8|a[h+2]<<16|a[h+3]<<24)>>>0}function c(a,h){return(a[h]<<24|a[h+1]<<16|a[h+2]<<8|a[h+3])>>>0}n.exports=e(e)},7199:module=>{function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(n){}return null}module.exports=inquire},6662:n=>{n.exports=function(e,i,o){var l=o||8192,c=l>>>1,a=null,h=l;return function(f){if(f<1||f>c)return e(f);h+f>l&&(a=e(l),h=0);var p=i.call(a,h,h+=f);return 7&h&&(h=1+(7|h)),p}}},4997:(n,e)=>{var i=e;i.length=function(o){for(var l=0,c=0,a=0;a<o.length;++a)(c=o.charCodeAt(a))<128?l+=1:c<2048?l+=2:(64512&c)==55296&&(64512&o.charCodeAt(a+1))==56320?(++a,l+=4):l+=3;return l},i.read=function(o,l,c){if(c-l<1)return"";for(var a,h=null,f=[],p=0;l<c;)(a=o[l++])<128?f[p++]=a:a>191&&a<224?f[p++]=(31&a)<<6|63&o[l++]:a>239&&a<365?(a=((7&a)<<18|(63&o[l++])<<12|(63&o[l++])<<6|63&o[l++])-65536,f[p++]=55296+(a>>10),f[p++]=56320+(1023&a)):f[p++]=(15&a)<<12|(63&o[l++])<<6|63&o[l++],p>8191&&((h||(h=[])).push(String.fromCharCode.apply(String,f)),p=0);return h?(p&&h.push(String.fromCharCode.apply(String,f.slice(0,p))),h.join("")):String.fromCharCode.apply(String,f.slice(0,p))},i.write=function(o,l,c){for(var a,h,f=c,p=0;p<o.length;++p)(a=o.charCodeAt(p))<128?l[c++]=a:a<2048?(l[c++]=a>>6|192,l[c++]=63&a|128):(64512&a)==55296&&(64512&(h=o.charCodeAt(p+1)))==56320?(a=65536+((1023&a)<<10)+(1023&h),++p,l[c++]=a>>18|240,l[c++]=a>>12&63|128,l[c++]=a>>6&63|128,l[c++]=63&a|128):(l[c++]=a>>12|224,l[c++]=a>>6&63|128,l[c++]=63&a|128);return c-f}},3442:(n,e)=>{e.__esModule=!0;var i=function(){function o(l){if(!l)throw new TypeError("Invalid argument; `value` has no value.");this.value=o.EMPTY,l&&o.isGuid(l)&&(this.value=l)}return o.isGuid=function(l){var c=l.toString();return l&&(l instanceof o||o.validator.test(c))},o.create=function(){return new o([o.gen(2),o.gen(1),o.gen(1),o.gen(1),o.gen(3)].join("-"))},o.createEmpty=function(){return new o("emptyguid")},o.parse=function(l){return new o(l)},o.raw=function(){return[o.gen(2),o.gen(1),o.gen(1),o.gen(1),o.gen(3)].join("-")},o.gen=function(l){for(var c="",a=0;a<l;a++)c+=(65536*(1+Math.random())|0).toString(16).substring(1);return c},o.prototype.equals=function(l){return o.isGuid(l)&&this.value===l.toString()},o.prototype.isEmpty=function(){return this.value===o.EMPTY},o.prototype.toString=function(){return this.value},o.prototype.toJSON=function(){return{value:this.value}},o.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),o.EMPTY="00000000-0000-0000-0000-000000000000",o}();e.Guid=i},3720:n=>{n.exports=i;var e=null;try{e=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function i(S,N,Q){this.low=0|S,this.high=0|N,this.unsigned=!!Q}function o(S){return(S&&S.__isLong__)===!0}i.prototype.__isLong__,Object.defineProperty(i.prototype,"__isLong__",{value:!0}),i.isLong=o;var l={},c={};function a(S,N){var Q,te,Z;return N?(Z=0<=(S>>>=0)&&S<256)&&(te=c[S])?te:(Q=f(S,(0|S)<0?-1:0,!0),Z&&(c[S]=Q),Q):(Z=-128<=(S|=0)&&S<128)&&(te=l[S])?te:(Q=f(S,S<0?-1:0,!1),Z&&(l[S]=Q),Q)}function h(S,N){if(isNaN(S))return N?b:g;if(N){if(S<0)return b;if(S>=u)return E}else{if(S<=-s)return O;if(S+1>=s)return v}return S<0?h(-S,N).neg():f(S%t|0,S/t|0,N)}function f(S,N,Q){return new i(S,N,Q)}i.fromInt=a,i.fromNumber=h,i.fromBits=f;var p=Math.pow;function d(S,N,Q){if(S.length===0)throw Error("empty string");if(S==="NaN"||S==="Infinity"||S==="+Infinity"||S==="-Infinity")return g;if(typeof N=="number"?(Q=N,N=!1):N=!!N,(Q=Q||10)<2||36<Q)throw RangeError("radix");var te;if((te=S.indexOf("-"))>0)throw Error("interior hyphen");if(te===0)return d(S.substring(1),N,Q).neg();for(var Z=h(p(Q,8)),Y=g,G=0;G<S.length;G+=8){var R=Math.min(8,S.length-G),V=parseInt(S.substring(G,G+R),Q);if(R<8){var ce=h(p(Q,R));Y=Y.mul(ce).add(h(V))}else Y=(Y=Y.mul(Z)).add(h(V))}return Y.unsigned=N,Y}function r(S,N){return typeof S=="number"?h(S,N):typeof S=="string"?d(S,N):f(S.low,S.high,typeof N=="boolean"?N:S.unsigned)}i.fromString=d,i.fromValue=r;var t=4294967296,u=t*t,s=u/2,m=a(1<<24),g=a(0);i.ZERO=g;var b=a(0,!0);i.UZERO=b;var y=a(1);i.ONE=y;var w=a(1,!0);i.UONE=w;var x=a(-1);i.NEG_ONE=x;var v=f(-1,2147483647,!1);i.MAX_VALUE=v;var E=f(-1,-1,!0);i.MAX_UNSIGNED_VALUE=E;var O=f(0,-2147483648,!1);i.MIN_VALUE=O;var C=i.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*t+(this.low>>>0):this.high*t+(this.low>>>0)},C.toString=function(S){if((S=S||10)<2||36<S)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(O)){var N=h(S),Q=this.div(N),te=Q.mul(N).sub(this);return Q.toString(S)+te.toInt().toString(S)}return"-"+this.neg().toString(S)}for(var Z=h(p(S,6),this.unsigned),Y=this,G="";;){var R=Y.div(Z),V=(Y.sub(R.mul(Z)).toInt()>>>0).toString(S);if((Y=R).isZero())return V+G;for(;V.length<6;)V="0"+V;G=""+V+G}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(O)?64:this.neg().getNumBitsAbs();for(var S=this.high!=0?this.high:this.low,N=31;N>0&&!(S&1<<N);N--);return this.high!=0?N+33:N+1},C.isZero=function(){return this.high===0&&this.low===0},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return(1&this.low)==1},C.isEven=function(){return(1&this.low)==0},C.equals=function(S){return o(S)||(S=r(S)),(this.unsigned===S.unsigned||this.high>>>31!=1||S.high>>>31!=1)&&this.high===S.high&&this.low===S.low},C.eq=C.equals,C.notEquals=function(S){return!this.eq(S)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(S){return this.comp(S)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(S){return this.comp(S)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(S){return this.comp(S)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(S){return this.comp(S)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(S){if(o(S)||(S=r(S)),this.eq(S))return 0;var N=this.isNegative(),Q=S.isNegative();return N&&!Q?-1:!N&&Q?1:this.unsigned?S.high>>>0>this.high>>>0||S.high===this.high&&S.low>>>0>this.low>>>0?-1:1:this.sub(S).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(O)?O:this.not().add(y)},C.neg=C.negate,C.add=function(S){o(S)||(S=r(S));var N=this.high>>>16,Q=65535&this.high,te=this.low>>>16,Z=65535&this.low,Y=S.high>>>16,G=65535&S.high,R=S.low>>>16,V=0,ce=0,se=0,be=0;return se+=(be+=Z+(65535&S.low))>>>16,ce+=(se+=te+R)>>>16,V+=(ce+=Q+G)>>>16,V+=N+Y,f((se&=65535)<<16|(be&=65535),(V&=65535)<<16|(ce&=65535),this.unsigned)},C.subtract=function(S){return o(S)||(S=r(S)),this.add(S.neg())},C.sub=C.subtract,C.multiply=function(S){if(this.isZero())return g;if(o(S)||(S=r(S)),e)return f(e.mul(this.low,this.high,S.low,S.high),e.get_high(),this.unsigned);if(S.isZero())return g;if(this.eq(O))return S.isOdd()?O:g;if(S.eq(O))return this.isOdd()?O:g;if(this.isNegative())return S.isNegative()?this.neg().mul(S.neg()):this.neg().mul(S).neg();if(S.isNegative())return this.mul(S.neg()).neg();if(this.lt(m)&&S.lt(m))return h(this.toNumber()*S.toNumber(),this.unsigned);var N=this.high>>>16,Q=65535&this.high,te=this.low>>>16,Z=65535&this.low,Y=S.high>>>16,G=65535&S.high,R=S.low>>>16,V=65535&S.low,ce=0,se=0,be=0,ee=0;return be+=(ee+=Z*V)>>>16,se+=(be+=te*V)>>>16,be&=65535,se+=(be+=Z*R)>>>16,ce+=(se+=Q*V)>>>16,se&=65535,ce+=(se+=te*R)>>>16,se&=65535,ce+=(se+=Z*G)>>>16,ce+=N*V+Q*R+te*G+Z*Y,f((be&=65535)<<16|(ee&=65535),(ce&=65535)<<16|(se&=65535),this.unsigned)},C.mul=C.multiply,C.divide=function(S){if(o(S)||(S=r(S)),S.isZero())throw Error("division by zero");var N,Q,te;if(e)return this.unsigned||this.high!==-2147483648||S.low!==-1||S.high!==-1?f((this.unsigned?e.div_u:e.div_s)(this.low,this.high,S.low,S.high),e.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:g;if(this.unsigned){if(S.unsigned||(S=S.toUnsigned()),S.gt(this))return b;if(S.gt(this.shru(1)))return w;te=b}else{if(this.eq(O))return S.eq(y)||S.eq(x)?O:S.eq(O)?y:(N=this.shr(1).div(S).shl(1)).eq(g)?S.isNegative()?y:x:(Q=this.sub(S.mul(N)),te=N.add(Q.div(S)));if(S.eq(O))return this.unsigned?b:g;if(this.isNegative())return S.isNegative()?this.neg().div(S.neg()):this.neg().div(S).neg();if(S.isNegative())return this.div(S.neg()).neg();te=g}for(Q=this;Q.gte(S);){N=Math.max(1,Math.floor(Q.toNumber()/S.toNumber()));for(var Z=Math.ceil(Math.log(N)/Math.LN2),Y=Z<=48?1:p(2,Z-48),G=h(N),R=G.mul(S);R.isNegative()||R.gt(Q);)R=(G=h(N-=Y,this.unsigned)).mul(S);G.isZero()&&(G=y),te=te.add(G),Q=Q.sub(R)}return te},C.div=C.divide,C.modulo=function(S){return o(S)||(S=r(S)),e?f((this.unsigned?e.rem_u:e.rem_s)(this.low,this.high,S.low,S.high),e.get_high(),this.unsigned):this.sub(this.div(S).mul(S))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return f(~this.low,~this.high,this.unsigned)},C.and=function(S){return o(S)||(S=r(S)),f(this.low&S.low,this.high&S.high,this.unsigned)},C.or=function(S){return o(S)||(S=r(S)),f(this.low|S.low,this.high|S.high,this.unsigned)},C.xor=function(S){return o(S)||(S=r(S)),f(this.low^S.low,this.high^S.high,this.unsigned)},C.shiftLeft=function(S){return o(S)&&(S=S.toInt()),(S&=63)==0?this:S<32?f(this.low<<S,this.high<<S|this.low>>>32-S,this.unsigned):f(0,this.low<<S-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(S){return o(S)&&(S=S.toInt()),(S&=63)==0?this:S<32?f(this.low>>>S|this.high<<32-S,this.high>>S,this.unsigned):f(this.high>>S-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(S){if(o(S)&&(S=S.toInt()),(S&=63)==0)return this;var N=this.high;return S<32?f(this.low>>>S|N<<32-S,N>>>S,this.unsigned):f(S===32?N:N>>>S-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?f(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:f(this.low,this.high,!0)},C.toBytes=function(S){return S?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var S=this.high,N=this.low;return[255&N,N>>>8&255,N>>>16&255,N>>>24,255&S,S>>>8&255,S>>>16&255,S>>>24]},C.toBytesBE=function(){var S=this.high,N=this.low;return[S>>>24,S>>>16&255,S>>>8&255,255&S,N>>>24,N>>>16&255,N>>>8&255,255&N]},i.fromBytes=function(S,N,Q){return Q?i.fromBytesLE(S,N):i.fromBytesBE(S,N)},i.fromBytesLE=function(S,N){return new i(S[0]|S[1]<<8|S[2]<<16|S[3]<<24,S[4]|S[5]<<8|S[6]<<16|S[7]<<24,N)},i.fromBytesBE=function(S,N){return new i(S[4]<<24|S[5]<<16|S[6]<<8|S[7],S[0]<<24|S[1]<<16|S[2]<<8|S[3],N)}},1446:(n,e,i)=>{var o,l,c,a=i(2100),h=a.Reader,f=a.Writer,p=a.util,d=a.roots.default||(a.roots.default={});d.onnx=((c={}).Version=(o={},(l=Object.create(o))[o[0]="_START_VERSION"]=0,l[o[1]="IR_VERSION_2017_10_10"]=1,l[o[2]="IR_VERSION_2017_10_30"]=2,l[o[3]="IR_VERSION_2017_11_3"]=3,l[o[4]="IR_VERSION_2019_1_22"]=4,l[o[5]="IR_VERSION"]=5,l),c.AttributeProto=function(){function r(t){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],t)for(var u=Object.keys(t),s=0;s<u.length;++s)t[u[s]]!=null&&(this[u[s]]=t[u[s]])}return r.prototype.name="",r.prototype.refAttrName="",r.prototype.docString="",r.prototype.type=0,r.prototype.f=0,r.prototype.i=p.Long?p.Long.fromBits(0,0,!1):0,r.prototype.s=p.newBuffer([]),r.prototype.t=null,r.prototype.g=null,r.prototype.floats=p.emptyArray,r.prototype.ints=p.emptyArray,r.prototype.strings=p.emptyArray,r.prototype.tensors=p.emptyArray,r.prototype.graphs=p.emptyArray,r.create=function(t){return new r(t)},r.encode=function(t,u){if(u||(u=f.create()),t.name!=null&&t.hasOwnProperty("name")&&u.uint32(10).string(t.name),t.f!=null&&t.hasOwnProperty("f")&&u.uint32(21).float(t.f),t.i!=null&&t.hasOwnProperty("i")&&u.uint32(24).int64(t.i),t.s!=null&&t.hasOwnProperty("s")&&u.uint32(34).bytes(t.s),t.t!=null&&t.hasOwnProperty("t")&&d.onnx.TensorProto.encode(t.t,u.uint32(42).fork()).ldelim(),t.g!=null&&t.hasOwnProperty("g")&&d.onnx.GraphProto.encode(t.g,u.uint32(50).fork()).ldelim(),t.floats!=null&&t.floats.length){u.uint32(58).fork();for(var s=0;s<t.floats.length;++s)u.float(t.floats[s]);u.ldelim()}if(t.ints!=null&&t.ints.length){for(u.uint32(66).fork(),s=0;s<t.ints.length;++s)u.int64(t.ints[s]);u.ldelim()}if(t.strings!=null&&t.strings.length)for(s=0;s<t.strings.length;++s)u.uint32(74).bytes(t.strings[s]);if(t.tensors!=null&&t.tensors.length)for(s=0;s<t.tensors.length;++s)d.onnx.TensorProto.encode(t.tensors[s],u.uint32(82).fork()).ldelim();if(t.graphs!=null&&t.graphs.length)for(s=0;s<t.graphs.length;++s)d.onnx.GraphProto.encode(t.graphs[s],u.uint32(90).fork()).ldelim();return t.docString!=null&&t.hasOwnProperty("docString")&&u.uint32(106).string(t.docString),t.type!=null&&t.hasOwnProperty("type")&&u.uint32(160).int32(t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&u.uint32(170).string(t.refAttrName),u},r.encodeDelimited=function(t,u){return this.encode(t,u).ldelim()},r.decode=function(t,u){t instanceof h||(t=h.create(t));for(var s=u===void 0?t.len:t.pos+u,m=new d.onnx.AttributeProto;t.pos<s;){var g=t.uint32();switch(g>>>3){case 1:m.name=t.string();break;case 21:m.refAttrName=t.string();break;case 13:m.docString=t.string();break;case 20:m.type=t.int32();break;case 2:m.f=t.float();break;case 3:m.i=t.int64();break;case 4:m.s=t.bytes();break;case 5:m.t=d.onnx.TensorProto.decode(t,t.uint32());break;case 6:m.g=d.onnx.GraphProto.decode(t,t.uint32());break;case 7:if(m.floats&&m.floats.length||(m.floats=[]),(7&g)==2)for(var b=t.uint32()+t.pos;t.pos<b;)m.floats.push(t.float());else m.floats.push(t.float());break;case 8:if(m.ints&&m.ints.length||(m.ints=[]),(7&g)==2)for(b=t.uint32()+t.pos;t.pos<b;)m.ints.push(t.int64());else m.ints.push(t.int64());break;case 9:m.strings&&m.strings.length||(m.strings=[]),m.strings.push(t.bytes());break;case 10:m.tensors&&m.tensors.length||(m.tensors=[]),m.tensors.push(d.onnx.TensorProto.decode(t,t.uint32()));break;case 11:m.graphs&&m.graphs.length||(m.graphs=[]),m.graphs.push(d.onnx.GraphProto.decode(t,t.uint32()));break;default:t.skipType(7&g)}}return m},r.decodeDelimited=function(t){return t instanceof h||(t=new h(t)),this.decode(t,t.uint32())},r.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!p.isString(t.name))return"name: string expected";if(t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&!p.isString(t.refAttrName))return"refAttrName: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!p.isString(t.docString))return"docString: string expected";if(t.type!=null&&t.hasOwnProperty("type"))switch(t.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:}if(t.f!=null&&t.hasOwnProperty("f")&&typeof t.f!="number")return"f: number expected";if(t.i!=null&&t.hasOwnProperty("i")&&!(p.isInteger(t.i)||t.i&&p.isInteger(t.i.low)&&p.isInteger(t.i.high)))return"i: integer|Long expected";if(t.s!=null&&t.hasOwnProperty("s")&&!(t.s&&typeof t.s.length=="number"||p.isString(t.s)))return"s: buffer expected";if(t.t!=null&&t.hasOwnProperty("t")&&(s=d.onnx.TensorProto.verify(t.t)))return"t."+s;if(t.g!=null&&t.hasOwnProperty("g")&&(s=d.onnx.GraphProto.verify(t.g)))return"g."+s;if(t.floats!=null&&t.hasOwnProperty("floats")){if(!Array.isArray(t.floats))return"floats: array expected";for(var u=0;u<t.floats.length;++u)if(typeof t.floats[u]!="number")return"floats: number[] expected"}if(t.ints!=null&&t.hasOwnProperty("ints")){if(!Array.isArray(t.ints))return"ints: array expected";for(u=0;u<t.ints.length;++u)if(!(p.isInteger(t.ints[u])||t.ints[u]&&p.isInteger(t.ints[u].low)&&p.isInteger(t.ints[u].high)))return"ints: integer|Long[] expected"}if(t.strings!=null&&t.hasOwnProperty("strings")){if(!Array.isArray(t.strings))return"strings: array expected";for(u=0;u<t.strings.length;++u)if(!(t.strings[u]&&typeof t.strings[u].length=="number"||p.isString(t.strings[u])))return"strings: buffer[] expected"}if(t.tensors!=null&&t.hasOwnProperty("tensors")){if(!Array.isArray(t.tensors))return"tensors: array expected";for(u=0;u<t.tensors.length;++u)if(s=d.onnx.TensorProto.verify(t.tensors[u]))return"tensors."+s}if(t.graphs!=null&&t.hasOwnProperty("graphs")){if(!Array.isArray(t.graphs))return"graphs: array expected";for(u=0;u<t.graphs.length;++u){var s;if(s=d.onnx.GraphProto.verify(t.graphs[u]))return"graphs."+s}}return null},r.fromObject=function(t){if(t instanceof d.onnx.AttributeProto)return t;var u=new d.onnx.AttributeProto;switch(t.name!=null&&(u.name=String(t.name)),t.refAttrName!=null&&(u.refAttrName=String(t.refAttrName)),t.docString!=null&&(u.docString=String(t.docString)),t.type){case"UNDEFINED":case 0:u.type=0;break;case"FLOAT":case 1:u.type=1;break;case"INT":case 2:u.type=2;break;case"STRING":case 3:u.type=3;break;case"TENSOR":case 4:u.type=4;break;case"GRAPH":case 5:u.type=5;break;case"FLOATS":case 6:u.type=6;break;case"INTS":case 7:u.type=7;break;case"STRINGS":case 8:u.type=8;break;case"TENSORS":case 9:u.type=9;break;case"GRAPHS":case 10:u.type=10}if(t.f!=null&&(u.f=Number(t.f)),t.i!=null&&(p.Long?(u.i=p.Long.fromValue(t.i)).unsigned=!1:typeof t.i=="string"?u.i=parseInt(t.i,10):typeof t.i=="number"?u.i=t.i:typeof t.i=="object"&&(u.i=new p.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber())),t.s!=null&&(typeof t.s=="string"?p.base64.decode(t.s,u.s=p.newBuffer(p.base64.length(t.s)),0):t.s.length&&(u.s=t.s)),t.t!=null){if(typeof t.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");u.t=d.onnx.TensorProto.fromObject(t.t)}if(t.g!=null){if(typeof t.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");u.g=d.onnx.GraphProto.fromObject(t.g)}if(t.floats){if(!Array.isArray(t.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");u.floats=[];for(var s=0;s<t.floats.length;++s)u.floats[s]=Number(t.floats[s])}if(t.ints){if(!Array.isArray(t.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");for(u.ints=[],s=0;s<t.ints.length;++s)p.Long?(u.ints[s]=p.Long.fromValue(t.ints[s])).unsigned=!1:typeof t.ints[s]=="string"?u.ints[s]=parseInt(t.ints[s],10):typeof t.ints[s]=="number"?u.ints[s]=t.ints[s]:typeof t.ints[s]=="object"&&(u.ints[s]=new p.LongBits(t.ints[s].low>>>0,t.ints[s].high>>>0).toNumber())}if(t.strings){if(!Array.isArray(t.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");for(u.strings=[],s=0;s<t.strings.length;++s)typeof t.strings[s]=="string"?p.base64.decode(t.strings[s],u.strings[s]=p.newBuffer(p.base64.length(t.strings[s])),0):t.strings[s].length&&(u.strings[s]=t.strings[s])}if(t.tensors){if(!Array.isArray(t.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");for(u.tensors=[],s=0;s<t.tensors.length;++s){if(typeof t.tensors[s]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");u.tensors[s]=d.onnx.TensorProto.fromObject(t.tensors[s])}}if(t.graphs){if(!Array.isArray(t.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");for(u.graphs=[],s=0;s<t.graphs.length;++s){if(typeof t.graphs[s]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");u.graphs[s]=d.onnx.GraphProto.fromObject(t.graphs[s])}}return u},r.toObject=function(t,u){u||(u={});var s={};if((u.arrays||u.defaults)&&(s.floats=[],s.ints=[],s.strings=[],s.tensors=[],s.graphs=[]),u.defaults){if(s.name="",s.f=0,p.Long){var m=new p.Long(0,0,!1);s.i=u.longs===String?m.toString():u.longs===Number?m.toNumber():m}else s.i=u.longs===String?"0":0;u.bytes===String?s.s="":(s.s=[],u.bytes!==Array&&(s.s=p.newBuffer(s.s))),s.t=null,s.g=null,s.docString="",s.type=u.enums===String?"UNDEFINED":0,s.refAttrName=""}if(t.name!=null&&t.hasOwnProperty("name")&&(s.name=t.name),t.f!=null&&t.hasOwnProperty("f")&&(s.f=u.json&&!isFinite(t.f)?String(t.f):t.f),t.i!=null&&t.hasOwnProperty("i")&&(typeof t.i=="number"?s.i=u.longs===String?String(t.i):t.i:s.i=u.longs===String?p.Long.prototype.toString.call(t.i):u.longs===Number?new p.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber():t.i),t.s!=null&&t.hasOwnProperty("s")&&(s.s=u.bytes===String?p.base64.encode(t.s,0,t.s.length):u.bytes===Array?Array.prototype.slice.call(t.s):t.s),t.t!=null&&t.hasOwnProperty("t")&&(s.t=d.onnx.TensorProto.toObject(t.t,u)),t.g!=null&&t.hasOwnProperty("g")&&(s.g=d.onnx.GraphProto.toObject(t.g,u)),t.floats&&t.floats.length){s.floats=[];for(var g=0;g<t.floats.length;++g)s.floats[g]=u.json&&!isFinite(t.floats[g])?String(t.floats[g]):t.floats[g]}if(t.ints&&t.ints.length)for(s.ints=[],g=0;g<t.ints.length;++g)typeof t.ints[g]=="number"?s.ints[g]=u.longs===String?String(t.ints[g]):t.ints[g]:s.ints[g]=u.longs===String?p.Long.prototype.toString.call(t.ints[g]):u.longs===Number?new p.LongBits(t.ints[g].low>>>0,t.ints[g].high>>>0).toNumber():t.ints[g];if(t.strings&&t.strings.length)for(s.strings=[],g=0;g<t.strings.length;++g)s.strings[g]=u.bytes===String?p.base64.encode(t.strings[g],0,t.strings[g].length):u.bytes===Array?Array.prototype.slice.call(t.strings[g]):t.strings[g];if(t.tensors&&t.tensors.length)for(s.tensors=[],g=0;g<t.tensors.length;++g)s.tensors[g]=d.onnx.TensorProto.toObject(t.tensors[g],u);if(t.graphs&&t.graphs.length)for(s.graphs=[],g=0;g<t.graphs.length;++g)s.graphs[g]=d.onnx.GraphProto.toObject(t.graphs[g],u);return t.docString!=null&&t.hasOwnProperty("docString")&&(s.docString=t.docString),t.type!=null&&t.hasOwnProperty("type")&&(s.type=u.enums===String?d.onnx.AttributeProto.AttributeType[t.type]:t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&(s.refAttrName=t.refAttrName),s},r.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},r.AttributeType=function(){var t={},u=Object.create(t);return u[t[0]="UNDEFINED"]=0,u[t[1]="FLOAT"]=1,u[t[2]="INT"]=2,u[t[3]="STRING"]=3,u[t[4]="TENSOR"]=4,u[t[5]="GRAPH"]=5,u[t[6]="FLOATS"]=6,u[t[7]="INTS"]=7,u[t[8]="STRINGS"]=8,u[t[9]="TENSORS"]=9,u[t[10]="GRAPHS"]=10,u}(),r}(),c.ValueInfoProto=function(){function r(t){if(t)for(var u=Object.keys(t),s=0;s<u.length;++s)t[u[s]]!=null&&(this[u[s]]=t[u[s]])}return r.prototype.name="",r.prototype.type=null,r.prototype.docString="",r.create=function(t){return new r(t)},r.encode=function(t,u){return u||(u=f.create()),t.name!=null&&t.hasOwnProperty("name")&&u.uint32(10).string(t.name),t.type!=null&&t.hasOwnProperty("type")&&d.onnx.TypeProto.encode(t.type,u.uint32(18).fork()).ldelim(),t.docString!=null&&t.hasOwnProperty("docString")&&u.uint32(26).string(t.docString),u},r.encodeDelimited=function(t,u){return this.encode(t,u).ldelim()},r.decode=function(t,u){t instanceof h||(t=h.create(t));for(var s=u===void 0?t.len:t.pos+u,m=new d.onnx.ValueInfoProto;t.pos<s;){var g=t.uint32();switch(g>>>3){case 1:m.name=t.string();break;case 2:m.type=d.onnx.TypeProto.decode(t,t.uint32());break;case 3:m.docString=t.string();break;default:t.skipType(7&g)}}return m},r.decodeDelimited=function(t){return t instanceof h||(t=new h(t)),this.decode(t,t.uint32())},r.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!p.isString(t.name))return"name: string expected";if(t.type!=null&&t.hasOwnProperty("type")){var u=d.onnx.TypeProto.verify(t.type);if(u)return"type."+u}return t.docString!=null&&t.hasOwnProperty("docString")&&!p.isString(t.docString)?"docString: string expected":null},r.fromObject=function(t){if(t instanceof d.onnx.ValueInfoProto)return t;var u=new d.onnx.ValueInfoProto;if(t.name!=null&&(u.name=String(t.name)),t.type!=null){if(typeof t.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");u.type=d.onnx.TypeProto.fromObject(t.type)}return t.docString!=null&&(u.docString=String(t.docString)),u},r.toObject=function(t,u){u||(u={});var s={};return u.defaults&&(s.name="",s.type=null,s.docString=""),t.name!=null&&t.hasOwnProperty("name")&&(s.name=t.name),t.type!=null&&t.hasOwnProperty("type")&&(s.type=d.onnx.TypeProto.toObject(t.type,u)),t.docString!=null&&t.hasOwnProperty("docString")&&(s.docString=t.docString),s},r.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},r}(),c.NodeProto=function(){function r(t){if(this.input=[],this.output=[],this.attribute=[],t)for(var u=Object.keys(t),s=0;s<u.length;++s)t[u[s]]!=null&&(this[u[s]]=t[u[s]])}return r.prototype.input=p.emptyArray,r.prototype.output=p.emptyArray,r.prototype.name="",r.prototype.opType="",r.prototype.domain="",r.prototype.attribute=p.emptyArray,r.prototype.docString="",r.create=function(t){return new r(t)},r.encode=function(t,u){if(u||(u=f.create()),t.input!=null&&t.input.length)for(var s=0;s<t.input.length;++s)u.uint32(10).string(t.input[s]);if(t.output!=null&&t.output.length)for(s=0;s<t.output.length;++s)u.uint32(18).string(t.output[s]);if(t.name!=null&&t.hasOwnProperty("name")&&u.uint32(26).string(t.name),t.opType!=null&&t.hasOwnProperty("opType")&&u.uint32(34).string(t.opType),t.attribute!=null&&t.attribute.length)for(s=0;s<t.attribute.length;++s)d.onnx.AttributeProto.encode(t.attribute[s],u.uint32(42).fork()).ldelim();return t.docString!=null&&t.hasOwnProperty("docString")&&u.uint32(50).string(t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&u.uint32(58).string(t.domain),u},r.encodeDelimited=function(t,u){return this.encode(t,u).ldelim()},r.decode=function(t,u){t instanceof h||(t=h.create(t));for(var s=u===void 0?t.len:t.pos+u,m=new d.onnx.NodeProto;t.pos<s;){var g=t.uint32();switch(g>>>3){case 1:m.input&&m.input.length||(m.input=[]),m.input.push(t.string());break;case 2:m.output&&m.output.length||(m.output=[]),m.output.push(t.string());break;case 3:m.name=t.string();break;case 4:m.opType=t.string();break;case 7:m.domain=t.string();break;case 5:m.attribute&&m.attribute.length||(m.attribute=[]),m.attribute.push(d.onnx.AttributeProto.decode(t,t.uint32()));break;case 6:m.docString=t.string();break;default:t.skipType(7&g)}}return m},r.decodeDelimited=function(t){return t instanceof h||(t=new h(t)),this.decode(t,t.uint32())},r.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var u=0;u<t.input.length;++u)if(!p.isString(t.input[u]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(u=0;u<t.output.length;++u)if(!p.isString(t.output[u]))return"output: string[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!p.isString(t.name))return"name: string expected";if(t.opType!=null&&t.hasOwnProperty("opType")&&!p.isString(t.opType))return"opType: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!p.isString(t.domain))return"domain: string expected";if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(u=0;u<t.attribute.length;++u){var s=d.onnx.AttributeProto.verify(t.attribute[u]);if(s)return"attribute."+s}}return t.docString!=null&&t.hasOwnProperty("docString")&&!p.isString(t.docString)?"docString: string expected":null},r.fromObject=function(t){if(t instanceof d.onnx.NodeProto)return t;var u=new d.onnx.NodeProto;if(t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.NodeProto.input: array expected");u.input=[];for(var s=0;s<t.input.length;++s)u.input[s]=String(t.input[s])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.NodeProto.output: array expected");for(u.output=[],s=0;s<t.output.length;++s)u.output[s]=String(t.output[s])}if(t.name!=null&&(u.name=String(t.name)),t.opType!=null&&(u.opType=String(t.opType)),t.domain!=null&&(u.domain=String(t.domain)),t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");for(u.attribute=[],s=0;s<t.attribute.length;++s){if(typeof t.attribute[s]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");u.attribute[s]=d.onnx.AttributeProto.fromObject(t.attribute[s])}}return t.docString!=null&&(u.docString=String(t.docString)),u},r.toObject=function(t,u){u||(u={});var s={};if((u.arrays||u.defaults)&&(s.input=[],s.output=[],s.attribute=[]),u.defaults&&(s.name="",s.opType="",s.docString="",s.domain=""),t.input&&t.input.length){s.input=[];for(var m=0;m<t.input.length;++m)s.input[m]=t.input[m]}if(t.output&&t.output.length)for(s.output=[],m=0;m<t.output.length;++m)s.output[m]=t.output[m];if(t.name!=null&&t.hasOwnProperty("name")&&(s.name=t.name),t.opType!=null&&t.hasOwnProperty("opType")&&(s.opType=t.opType),t.attribute&&t.attribute.length)for(s.attribute=[],m=0;m<t.attribute.length;++m)s.attribute[m]=d.onnx.AttributeProto.toObject(t.attribute[m],u);return t.docString!=null&&t.hasOwnProperty("docString")&&(s.docString=t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&(s.domain=t.domain),s},r.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},r}(),c.ModelProto=function(){function r(t){if(this.opsetImport=[],this.metadataProps=[],t)for(var u=Object.keys(t),s=0;s<u.length;++s)t[u[s]]!=null&&(this[u[s]]=t[u[s]])}return r.prototype.irVersion=p.Long?p.Long.fromBits(0,0,!1):0,r.prototype.opsetImport=p.emptyArray,r.prototype.producerName="",r.prototype.producerVersion="",r.prototype.domain="",r.prototype.modelVersion=p.Long?p.Long.fromBits(0,0,!1):0,r.prototype.docString="",r.prototype.graph=null,r.prototype.metadataProps=p.emptyArray,r.create=function(t){return new r(t)},r.encode=function(t,u){if(u||(u=f.create()),t.irVersion!=null&&t.hasOwnProperty("irVersion")&&u.uint32(8).int64(t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&u.uint32(18).string(t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&u.uint32(26).string(t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&u.uint32(34).string(t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&u.uint32(40).int64(t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&u.uint32(50).string(t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&d.onnx.GraphProto.encode(t.graph,u.uint32(58).fork()).ldelim(),t.opsetImport!=null&&t.opsetImport.length)for(var s=0;s<t.opsetImport.length;++s)d.onnx.OperatorSetIdProto.encode(t.opsetImport[s],u.uint32(66).fork()).ldelim();if(t.metadataProps!=null&&t.metadataProps.length)for(s=0;s<t.metadataProps.length;++s)d.onnx.StringStringEntryProto.encode(t.metadataProps[s],u.uint32(114).fork()).ldelim();return u},r.encodeDelimited=function(t,u){return this.encode(t,u).ldelim()},r.decode=function(t,u){t instanceof h||(t=h.create(t));for(var s=u===void 0?t.len:t.pos+u,m=new d.onnx.ModelProto;t.pos<s;){var g=t.uint32();switch(g>>>3){case 1:m.irVersion=t.int64();break;case 8:m.opsetImport&&m.opsetImport.length||(m.opsetImport=[]),m.opsetImport.push(d.onnx.OperatorSetIdProto.decode(t,t.uint32()));break;case 2:m.producerName=t.string();break;case 3:m.producerVersion=t.string();break;case 4:m.domain=t.string();break;case 5:m.modelVersion=t.int64();break;case 6:m.docString=t.string();break;case 7:m.graph=d.onnx.GraphProto.decode(t,t.uint32());break;case 14:m.metadataProps&&m.metadataProps.length||(m.metadataProps=[]),m.metadataProps.push(d.onnx.StringStringEntryProto.decode(t,t.uint32()));break;default:t.skipType(7&g)}}return m},r.decodeDelimited=function(t){return t instanceof h||(t=new h(t)),this.decode(t,t.uint32())},r.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&!(p.isInteger(t.irVersion)||t.irVersion&&p.isInteger(t.irVersion.low)&&p.isInteger(t.irVersion.high)))return"irVersion: integer|Long expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var u=0;u<t.opsetImport.length;++u)if(s=d.onnx.OperatorSetIdProto.verify(t.opsetImport[u]))return"opsetImport."+s}if(t.producerName!=null&&t.hasOwnProperty("producerName")&&!p.isString(t.producerName))return"producerName: string expected";if(t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&!p.isString(t.producerVersion))return"producerVersion: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!p.isString(t.domain))return"domain: string expected";if(t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&!(p.isInteger(t.modelVersion)||t.modelVersion&&p.isInteger(t.modelVersion.low)&&p.isInteger(t.modelVersion.high)))return"modelVersion: integer|Long expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!p.isString(t.docString))return"docString: string expected";if(t.graph!=null&&t.hasOwnProperty("graph")&&(s=d.onnx.GraphProto.verify(t.graph)))return"graph."+s;if(t.metadataProps!=null&&t.hasOwnProperty("metadataProps")){if(!Array.isArray(t.metadataProps))return"metadataProps: array expected";for(u=0;u<t.metadataProps.length;++u){var s;if(s=d.onnx.StringStringEntryProto.verify(t.metadataProps[u]))return"metadataProps."+s}}return null},r.fromObject=function(t){if(t instanceof d.onnx.ModelProto)return t;var u=new d.onnx.ModelProto;if(t.irVersion!=null&&(p.Long?(u.irVersion=p.Long.fromValue(t.irVersion)).unsigned=!1:typeof t.irVersion=="string"?u.irVersion=parseInt(t.irVersion,10):typeof t.irVersion=="number"?u.irVersion=t.irVersion:typeof t.irVersion=="object"&&(u.irVersion=new p.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber())),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");u.opsetImport=[];for(var s=0;s<t.opsetImport.length;++s){if(typeof t.opsetImport[s]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");u.opsetImport[s]=d.onnx.OperatorSetIdProto.fromObject(t.opsetImport[s])}}if(t.producerName!=null&&(u.producerName=String(t.producerName)),t.producerVersion!=null&&(u.producerVersion=String(t.producerVersion)),t.domain!=null&&(u.domain=String(t.domain)),t.modelVersion!=null&&(p.Long?(u.modelVersion=p.Long.fromValue(t.modelVersion)).unsigned=!1:typeof t.modelVersion=="string"?u.modelVersion=parseInt(t.modelVersion,10):typeof t.modelVersion=="number"?u.modelVersion=t.modelVersion:typeof t.modelVersion=="object"&&(u.modelVersion=new p.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber())),t.docString!=null&&(u.docString=String(t.docString)),t.graph!=null){if(typeof t.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");u.graph=d.onnx.GraphProto.fromObject(t.graph)}if(t.metadataProps){if(!Array.isArray(t.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");for(u.metadataProps=[],s=0;s<t.metadataProps.length;++s){if(typeof t.metadataProps[s]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");u.metadataProps[s]=d.onnx.StringStringEntryProto.fromObject(t.metadataProps[s])}}return u},r.toObject=function(t,u){u||(u={});var s={};if((u.arrays||u.defaults)&&(s.opsetImport=[],s.metadataProps=[]),u.defaults){if(p.Long){var m=new p.Long(0,0,!1);s.irVersion=u.longs===String?m.toString():u.longs===Number?m.toNumber():m}else s.irVersion=u.longs===String?"0":0;s.producerName="",s.producerVersion="",s.domain="",p.Long?(m=new p.Long(0,0,!1),s.modelVersion=u.longs===String?m.toString():u.longs===Number?m.toNumber():m):s.modelVersion=u.longs===String?"0":0,s.docString="",s.graph=null}if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&(typeof t.irVersion=="number"?s.irVersion=u.longs===String?String(t.irVersion):t.irVersion:s.irVersion=u.longs===String?p.Long.prototype.toString.call(t.irVersion):u.longs===Number?new p.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber():t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&(s.producerName=t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&(s.producerVersion=t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&(s.domain=t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&(typeof t.modelVersion=="number"?s.modelVersion=u.longs===String?String(t.modelVersion):t.modelVersion:s.modelVersion=u.longs===String?p.Long.prototype.toString.call(t.modelVersion):u.longs===Number?new p.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber():t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&(s.docString=t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&(s.graph=d.onnx.GraphProto.toObject(t.graph,u)),t.opsetImport&&t.opsetImport.length){s.opsetImport=[];for(var g=0;g<t.opsetImport.length;++g)s.opsetImport[g]=d.onnx.OperatorSetIdProto.toObject(t.opsetImport[g],u)}if(t.metadataProps&&t.metadataProps.length)for(s.metadataProps=[],g=0;g<t.metadataProps.length;++g)s.metadataProps[g]=d.onnx.StringStringEntryProto.toObject(t.metadataProps[g],u);return s},r.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},r}(),c.StringStringEntryProto=function(){function r(t){if(t)for(var u=Object.keys(t),s=0;s<u.length;++s)t[u[s]]!=null&&(this[u[s]]=t[u[s]])}return r.prototype.key="",r.prototype.value="",r.create=function(t){return new r(t)},r.encode=function(t,u){return u||(u=f.create()),t.key!=null&&t.hasOwnProperty("key")&&u.uint32(10).string(t.key),t.value!=null&&t.hasOwnProperty("value")&&u.uint32(18).string(t.value),u},r.encodeDelimited=function(t,u){return this.encode(t,u).ldelim()},r.decode=function(t,u){t instanceof h||(t=h.create(t));for(var s=u===void 0?t.len:t.pos+u,m=new d.onnx.StringStringEntryProto;t.pos<s;){var g=t.uint32();switch(g>>>3){case 1:m.key=t.string();break;case 2:m.value=t.string();break;default:t.skipType(7&g)}}return m},r.decodeDelimited=function(t){return t instanceof h||(t=new h(t)),this.decode(t,t.uint32())},r.verify=function(t){return typeof t!="object"||t===null?"object expected":t.key!=null&&t.hasOwnProperty("key")&&!p.isString(t.key)?"key: string expected":t.value!=null&&t.hasOwnProperty("value")&&!p.isString(t.value)?"value: string expected":null},r.fromObject=function(t){if(t instanceof d.onnx.StringStringEntryProto)return t;var u=new d.onnx.StringStringEntryProto;return t.key!=null&&(u.key=String(t.key)),t.value!=null&&(u.value=String(t.value)),u},r.toObject=function(t,u){u||(u={});var s={};return u.defaults&&(s.key="",s.value=""),t.key!=null&&t.hasOwnProperty("key")&&(s.key=t.key),t.value!=null&&t.hasOwnProperty("value")&&(s.value=t.value),s},r.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},r}(),c.TensorAnnotation=function(){function r(t){if(this.quantParameterTensorNames=[],t)for(var u=Object.keys(t),s=0;s<u.length;++s)t[u[s]]!=null&&(this[u[s]]=t[u[s]])}return r.prototype.tensorName="",r.prototype.quantParameterTensorNames=p.emptyArray,r.create=function(t){return new r(t)},r.encode=function(t,u){if(u||(u=f.create()),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&u.uint32(10).string(t.tensorName),t.quantParameterTensorNames!=null&&t.quantParameterTensorNames.length)for(var s=0;s<t.quantParameterTensorNames.length;++s)d.onnx.StringStringEntryProto.encode(t.quantParameterTensorNames[s],u.uint32(18).fork()).ldelim();return u},r.encodeDelimited=function(t,u){return this.encode(t,u).ldelim()},r.decode=function(t,u){t instanceof h||(t=h.create(t));for(var s=u===void 0?t.len:t.pos+u,m=new d.onnx.TensorAnnotation;t.pos<s;){var g=t.uint32();switch(g>>>3){case 1:m.tensorName=t.string();break;case 2:m.quantParameterTensorNames&&m.quantParameterTensorNames.length||(m.quantParameterTensorNames=[]),m.quantParameterTensorNames.push(d.onnx.StringStringEntryProto.decode(t,t.uint32()));break;default:t.skipType(7&g)}}return m},r.decodeDelimited=function(t){return t instanceof h||(t=new h(t)),this.decode(t,t.uint32())},r.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.tensorName!=null&&t.hasOwnProperty("tensorName")&&!p.isString(t.tensorName))return"tensorName: string expected";if(t.quantParameterTensorNames!=null&&t.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(t.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var u=0;u<t.quantParameterTensorNames.length;++u){var s=d.onnx.StringStringEntryProto.verify(t.quantParameterTensorNames[u]);if(s)return"quantParameterTensorNames."+s}}return null},r.fromObject=function(t){if(t instanceof d.onnx.TensorAnnotation)return t;var u=new d.onnx.TensorAnnotation;if(t.tensorName!=null&&(u.tensorName=String(t.tensorName)),t.quantParameterTensorNames){if(!Array.isArray(t.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");u.quantParameterTensorNames=[];for(var s=0;s<t.quantParameterTensorNames.length;++s){if(typeof t.quantParameterTensorNames[s]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");u.quantParameterTensorNames[s]=d.onnx.StringStringEntryProto.fromObject(t.quantParameterTensorNames[s])}}return u},r.toObject=function(t,u){u||(u={});var s={};if((u.arrays||u.defaults)&&(s.quantParameterTensorNames=[]),u.defaults&&(s.tensorName=""),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&(s.tensorName=t.tensorName),t.quantParameterTensorNames&&t.quantParameterTensorNames.length){s.quantParameterTensorNames=[];for(var m=0;m<t.quantParameterTensorNames.length;++m)s.quantParameterTensorNames[m]=d.onnx.StringStringEntryProto.toObject(t.quantParameterTensorNames[m],u)}return s},r.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},r}(),c.GraphProto=function(){function r(t){if(this.node=[],this.initializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],t)for(var u=Object.keys(t),s=0;s<u.length;++s)t[u[s]]!=null&&(this[u[s]]=t[u[s]])}return r.prototype.node=p.emptyArray,r.prototype.name="",r.prototype.initializer=p.emptyArray,r.prototype.docString="",r.prototype.input=p.emptyArray,r.prototype.output=p.emptyArray,r.prototype.valueInfo=p.emptyArray,r.prototype.quantizationAnnotation=p.emptyArray,r.create=function(t){return new r(t)},r.encode=function(t,u){if(u||(u=f.create()),t.node!=null&&t.node.length)for(var s=0;s<t.node.length;++s)d.onnx.NodeProto.encode(t.node[s],u.uint32(10).fork()).ldelim();if(t.name!=null&&t.hasOwnProperty("name")&&u.uint32(18).string(t.name),t.initializer!=null&&t.initializer.length)for(s=0;s<t.initializer.length;++s)d.onnx.TensorProto.encode(t.initializer[s],u.uint32(42).fork()).ldelim();if(t.docString!=null&&t.hasOwnProperty("docString")&&u.uint32(82).string(t.docString),t.input!=null&&t.input.length)for(s=0;s<t.input.length;++s)d.onnx.ValueInfoProto.encode(t.input[s],u.uint32(90).fork()).ldelim();if(t.output!=null&&t.output.length)for(s=0;s<t.output.length;++s)d.onnx.ValueInfoProto.encode(t.output[s],u.uint32(98).fork()).ldelim();if(t.valueInfo!=null&&t.valueInfo.length)for(s=0;s<t.valueInfo.length;++s)d.onnx.ValueInfoProto.encode(t.valueInfo[s],u.uint32(106).fork()).ldelim();if(t.quantizationAnnotation!=null&&t.quantizationAnnotation.length)for(s=0;s<t.quantizationAnnotation.length;++s)d.onnx.TensorAnnotation.encode(t.quantizationAnnotation[s],u.uint32(114).fork()).ldelim();return u},r.encodeDelimited=function(t,u){return this.encode(t,u).ldelim()},r.decode=function(t,u){t instanceof h||(t=h.create(t));for(var s=u===void 0?t.len:t.pos+u,m=new d.onnx.GraphProto;t.pos<s;){var g=t.uint32();switch(g>>>3){case 1:m.node&&m.node.length||(m.node=[]),m.node.push(d.onnx.NodeProto.decode(t,t.uint32()));break;case 2:m.name=t.string();break;case 5:m.initializer&&m.initializer.length||(m.initializer=[]),m.initializer.push(d.onnx.TensorProto.decode(t,t.uint32()));break;case 10:m.docString=t.string();break;case 11:m.input&&m.input.length||(m.input=[]),m.input.push(d.onnx.ValueInfoProto.decode(t,t.uint32()));break;case 12:m.output&&m.output.length||(m.output=[]),m.output.push(d.onnx.ValueInfoProto.decode(t,t.uint32()));break;case 13:m.valueInfo&&m.valueInfo.length||(m.valueInfo=[]),m.valueInfo.push(d.onnx.ValueInfoProto.decode(t,t.uint32()));break;case 14:m.quantizationAnnotation&&m.quantizationAnnotation.length||(m.quantizationAnnotation=[]),m.quantizationAnnotation.push(d.onnx.TensorAnnotation.decode(t,t.uint32()));break;default:t.skipType(7&g)}}return m},r.decodeDelimited=function(t){return t instanceof h||(t=new h(t)),this.decode(t,t.uint32())},r.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var u=0;u<t.node.length;++u)if(s=d.onnx.NodeProto.verify(t.node[u]))return"node."+s}if(t.name!=null&&t.hasOwnProperty("name")&&!p.isString(t.name))return"name: string expected";if(t.initializer!=null&&t.hasOwnProperty("initializer")){if(!Array.isArray(t.initializer))return"initializer: array expected";for(u=0;u<t.initializer.length;++u)if(s=d.onnx.TensorProto.verify(t.initializer[u]))return"initializer."+s}if(t.docString!=null&&t.hasOwnProperty("docString")&&!p.isString(t.docString))return"docString: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(u=0;u<t.input.length;++u)if(s=d.onnx.ValueInfoProto.verify(t.input[u]))return"input."+s}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(u=0;u<t.output.length;++u)if(s=d.onnx.ValueInfoProto.verify(t.output[u]))return"output."+s}if(t.valueInfo!=null&&t.hasOwnProperty("valueInfo")){if(!Array.isArray(t.valueInfo))return"valueInfo: array expected";for(u=0;u<t.valueInfo.length;++u)if(s=d.onnx.ValueInfoProto.verify(t.valueInfo[u]))return"valueInfo."+s}if(t.quantizationAnnotation!=null&&t.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(t.quantizationAnnotation))return"quantizationAnnotation: array expected";for(u=0;u<t.quantizationAnnotation.length;++u){var s;if(s=d.onnx.TensorAnnotation.verify(t.quantizationAnnotation[u]))return"quantizationAnnotation."+s}}return null},r.fromObject=function(t){if(t instanceof d.onnx.GraphProto)return t;var u=new d.onnx.GraphProto;if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.GraphProto.node: array expected");u.node=[];for(var s=0;s<t.node.length;++s){if(typeof t.node[s]!="object")throw TypeError(".onnx.GraphProto.node: object expected");u.node[s]=d.onnx.NodeProto.fromObject(t.node[s])}}if(t.name!=null&&(u.name=String(t.name)),t.initializer){if(!Array.isArray(t.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");for(u.initializer=[],s=0;s<t.initializer.length;++s){if(typeof t.initializer[s]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");u.initializer[s]=d.onnx.TensorProto.fromObject(t.initializer[s])}}if(t.docString!=null&&(u.docString=String(t.docString)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.GraphProto.input: array expected");for(u.input=[],s=0;s<t.input.length;++s){if(typeof t.input[s]!="object")throw TypeError(".onnx.GraphProto.input: object expected");u.input[s]=d.onnx.ValueInfoProto.fromObject(t.input[s])}}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.GraphProto.output: array expected");for(u.output=[],s=0;s<t.output.length;++s){if(typeof t.output[s]!="object")throw TypeError(".onnx.GraphProto.output: object expected");u.output[s]=d.onnx.ValueInfoProto.fromObject(t.output[s])}}if(t.valueInfo){if(!Array.isArray(t.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");for(u.valueInfo=[],s=0;s<t.valueInfo.length;++s){if(typeof t.valueInfo[s]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");u.valueInfo[s]=d.onnx.ValueInfoProto.fromObject(t.valueInfo[s])}}if(t.quantizationAnnotation){if(!Array.isArray(t.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");for(u.quantizationAnnotation=[],s=0;s<t.quantizationAnnotation.length;++s){if(typeof t.quantizationAnnotation[s]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");u.quantizationAnnotation[s]=d.onnx.TensorAnnotation.fromObject(t.quantizationAnnotation[s])}}return u},r.toObject=function(t,u){u||(u={});var s={};if((u.arrays||u.defaults)&&(s.node=[],s.initializer=[],s.input=[],s.output=[],s.valueInfo=[],s.quantizationAnnotation=[]),u.defaults&&(s.name="",s.docString=""),t.node&&t.node.length){s.node=[];for(var m=0;m<t.node.length;++m)s.node[m]=d.onnx.NodeProto.toObject(t.node[m],u)}if(t.name!=null&&t.hasOwnProperty("name")&&(s.name=t.name),t.initializer&&t.initializer.length)for(s.initializer=[],m=0;m<t.initializer.length;++m)s.initializer[m]=d.onnx.TensorProto.toObject(t.initializer[m],u);if(t.docString!=null&&t.hasOwnProperty("docString")&&(s.docString=t.docString),t.input&&t.input.length)for(s.input=[],m=0;m<t.input.length;++m)s.input[m]=d.onnx.ValueInfoProto.toObject(t.input[m],u);if(t.output&&t.output.length)for(s.output=[],m=0;m<t.output.length;++m)s.output[m]=d.onnx.ValueInfoProto.toObject(t.output[m],u);if(t.valueInfo&&t.valueInfo.length)for(s.valueInfo=[],m=0;m<t.valueInfo.length;++m)s.valueInfo[m]=d.onnx.ValueInfoProto.toObject(t.valueInfo[m],u);if(t.quantizationAnnotation&&t.quantizationAnnotation.length)for(s.quantizationAnnotation=[],m=0;m<t.quantizationAnnotation.length;++m)s.quantizationAnnotation[m]=d.onnx.TensorAnnotation.toObject(t.quantizationAnnotation[m],u);return s},r.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},r}(),c.TensorProto=function(){function r(t){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],t)for(var u=Object.keys(t),s=0;s<u.length;++s)t[u[s]]!=null&&(this[u[s]]=t[u[s]])}return r.prototype.dims=p.emptyArray,r.prototype.dataType=0,r.prototype.segment=null,r.prototype.floatData=p.emptyArray,r.prototype.int32Data=p.emptyArray,r.prototype.stringData=p.emptyArray,r.prototype.int64Data=p.emptyArray,r.prototype.name="",r.prototype.docString="",r.prototype.rawData=p.newBuffer([]),r.prototype.externalData=p.emptyArray,r.prototype.dataLocation=0,r.prototype.doubleData=p.emptyArray,r.prototype.uint64Data=p.emptyArray,r.create=function(t){return new r(t)},r.encode=function(t,u){if(u||(u=f.create()),t.dims!=null&&t.dims.length){u.uint32(10).fork();for(var s=0;s<t.dims.length;++s)u.int64(t.dims[s]);u.ldelim()}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&u.uint32(16).int32(t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&d.onnx.TensorProto.Segment.encode(t.segment,u.uint32(26).fork()).ldelim(),t.floatData!=null&&t.floatData.length){for(u.uint32(34).fork(),s=0;s<t.floatData.length;++s)u.float(t.floatData[s]);u.ldelim()}if(t.int32Data!=null&&t.int32Data.length){for(u.uint32(42).fork(),s=0;s<t.int32Data.length;++s)u.int32(t.int32Data[s]);u.ldelim()}if(t.stringData!=null&&t.stringData.length)for(s=0;s<t.stringData.length;++s)u.uint32(50).bytes(t.stringData[s]);if(t.int64Data!=null&&t.int64Data.length){for(u.uint32(58).fork(),s=0;s<t.int64Data.length;++s)u.int64(t.int64Data[s]);u.ldelim()}if(t.name!=null&&t.hasOwnProperty("name")&&u.uint32(66).string(t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&u.uint32(74).bytes(t.rawData),t.doubleData!=null&&t.doubleData.length){for(u.uint32(82).fork(),s=0;s<t.doubleData.length;++s)u.double(t.doubleData[s]);u.ldelim()}if(t.uint64Data!=null&&t.uint64Data.length){for(u.uint32(90).fork(),s=0;s<t.uint64Data.length;++s)u.uint64(t.uint64Data[s]);u.ldelim()}if(t.docString!=null&&t.hasOwnProperty("docString")&&u.uint32(98).string(t.docString),t.externalData!=null&&t.externalData.length)for(s=0;s<t.externalData.length;++s)d.onnx.StringStringEntryProto.encode(t.externalData[s],u.uint32(106).fork()).ldelim();return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&u.uint32(112).int32(t.dataLocation),u},r.encodeDelimited=function(t,u){return this.encode(t,u).ldelim()},r.decode=function(t,u){t instanceof h||(t=h.create(t));for(var s=u===void 0?t.len:t.pos+u,m=new d.onnx.TensorProto;t.pos<s;){var g=t.uint32();switch(g>>>3){case 1:if(m.dims&&m.dims.length||(m.dims=[]),(7&g)==2)for(var b=t.uint32()+t.pos;t.pos<b;)m.dims.push(t.int64());else m.dims.push(t.int64());break;case 2:m.dataType=t.int32();break;case 3:m.segment=d.onnx.TensorProto.Segment.decode(t,t.uint32());break;case 4:if(m.floatData&&m.floatData.length||(m.floatData=[]),(7&g)==2)for(b=t.uint32()+t.pos;t.pos<b;)m.floatData.push(t.float());else m.floatData.push(t.float());break;case 5:if(m.int32Data&&m.int32Data.length||(m.int32Data=[]),(7&g)==2)for(b=t.uint32()+t.pos;t.pos<b;)m.int32Data.push(t.int32());else m.int32Data.push(t.int32());break;case 6:m.stringData&&m.stringData.length||(m.stringData=[]),m.stringData.push(t.bytes());break;case 7:if(m.int64Data&&m.int64Data.length||(m.int64Data=[]),(7&g)==2)for(b=t.uint32()+t.pos;t.pos<b;)m.int64Data.push(t.int64());else m.int64Data.push(t.int64());break;case 8:m.name=t.string();break;case 12:m.docString=t.string();break;case 9:m.rawData=t.bytes();break;case 13:m.externalData&&m.externalData.length||(m.externalData=[]),m.externalData.push(d.onnx.StringStringEntryProto.decode(t,t.uint32()));break;case 14:m.dataLocation=t.int32();break;case 10:if(m.doubleData&&m.doubleData.length||(m.doubleData=[]),(7&g)==2)for(b=t.uint32()+t.pos;t.pos<b;)m.doubleData.push(t.double());else m.doubleData.push(t.double());break;case 11:if(m.uint64Data&&m.uint64Data.length||(m.uint64Data=[]),(7&g)==2)for(b=t.uint32()+t.pos;t.pos<b;)m.uint64Data.push(t.uint64());else m.uint64Data.push(t.uint64());break;default:t.skipType(7&g)}}return m},r.decodeDelimited=function(t){return t instanceof h||(t=new h(t)),this.decode(t,t.uint32())},r.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var u=0;u<t.dims.length;++u)if(!(p.isInteger(t.dims[u])||t.dims[u]&&p.isInteger(t.dims[u].low)&&p.isInteger(t.dims[u].high)))return"dims: integer|Long[] expected"}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&!p.isInteger(t.dataType))return"dataType: integer expected";if(t.segment!=null&&t.hasOwnProperty("segment")&&(s=d.onnx.TensorProto.Segment.verify(t.segment)))return"segment."+s;if(t.floatData!=null&&t.hasOwnProperty("floatData")){if(!Array.isArray(t.floatData))return"floatData: array expected";for(u=0;u<t.floatData.length;++u)if(typeof t.floatData[u]!="number")return"floatData: number[] expected"}if(t.int32Data!=null&&t.hasOwnProperty("int32Data")){if(!Array.isArray(t.int32Data))return"int32Data: array expected";for(u=0;u<t.int32Data.length;++u)if(!p.isInteger(t.int32Data[u]))return"int32Data: integer[] expected"}if(t.stringData!=null&&t.hasOwnProperty("stringData")){if(!Array.isArray(t.stringData))return"stringData: array expected";for(u=0;u<t.stringData.length;++u)if(!(t.stringData[u]&&typeof t.stringData[u].length=="number"||p.isString(t.stringData[u])))return"stringData: buffer[] expected"}if(t.int64Data!=null&&t.hasOwnProperty("int64Data")){if(!Array.isArray(t.int64Data))return"int64Data: array expected";for(u=0;u<t.int64Data.length;++u)if(!(p.isInteger(t.int64Data[u])||t.int64Data[u]&&p.isInteger(t.int64Data[u].low)&&p.isInteger(t.int64Data[u].high)))return"int64Data: integer|Long[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!p.isString(t.name))return"name: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!p.isString(t.docString))return"docString: string expected";if(t.rawData!=null&&t.hasOwnProperty("rawData")&&!(t.rawData&&typeof t.rawData.length=="number"||p.isString(t.rawData)))return"rawData: buffer expected";if(t.externalData!=null&&t.hasOwnProperty("externalData")){if(!Array.isArray(t.externalData))return"externalData: array expected";for(u=0;u<t.externalData.length;++u){var s;if(s=d.onnx.StringStringEntryProto.verify(t.externalData[u]))return"externalData."+s}}if(t.dataLocation!=null&&t.hasOwnProperty("dataLocation"))switch(t.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:}if(t.doubleData!=null&&t.hasOwnProperty("doubleData")){if(!Array.isArray(t.doubleData))return"doubleData: array expected";for(u=0;u<t.doubleData.length;++u)if(typeof t.doubleData[u]!="number")return"doubleData: number[] expected"}if(t.uint64Data!=null&&t.hasOwnProperty("uint64Data")){if(!Array.isArray(t.uint64Data))return"uint64Data: array expected";for(u=0;u<t.uint64Data.length;++u)if(!(p.isInteger(t.uint64Data[u])||t.uint64Data[u]&&p.isInteger(t.uint64Data[u].low)&&p.isInteger(t.uint64Data[u].high)))return"uint64Data: integer|Long[] expected"}return null},r.fromObject=function(t){if(t instanceof d.onnx.TensorProto)return t;var u=new d.onnx.TensorProto;if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.TensorProto.dims: array expected");u.dims=[];for(var s=0;s<t.dims.length;++s)p.Long?(u.dims[s]=p.Long.fromValue(t.dims[s])).unsigned=!1:typeof t.dims[s]=="string"?u.dims[s]=parseInt(t.dims[s],10):typeof t.dims[s]=="number"?u.dims[s]=t.dims[s]:typeof t.dims[s]=="object"&&(u.dims[s]=new p.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber())}if(t.dataType!=null&&(u.dataType=0|t.dataType),t.segment!=null){if(typeof t.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");u.segment=d.onnx.TensorProto.Segment.fromObject(t.segment)}if(t.floatData){if(!Array.isArray(t.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");for(u.floatData=[],s=0;s<t.floatData.length;++s)u.floatData[s]=Number(t.floatData[s])}if(t.int32Data){if(!Array.isArray(t.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");for(u.int32Data=[],s=0;s<t.int32Data.length;++s)u.int32Data[s]=0|t.int32Data[s]}if(t.stringData){if(!Array.isArray(t.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");for(u.stringData=[],s=0;s<t.stringData.length;++s)typeof t.stringData[s]=="string"?p.base64.decode(t.stringData[s],u.stringData[s]=p.newBuffer(p.base64.length(t.stringData[s])),0):t.stringData[s].length&&(u.stringData[s]=t.stringData[s])}if(t.int64Data){if(!Array.isArray(t.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");for(u.int64Data=[],s=0;s<t.int64Data.length;++s)p.Long?(u.int64Data[s]=p.Long.fromValue(t.int64Data[s])).unsigned=!1:typeof t.int64Data[s]=="string"?u.int64Data[s]=parseInt(t.int64Data[s],10):typeof t.int64Data[s]=="number"?u.int64Data[s]=t.int64Data[s]:typeof t.int64Data[s]=="object"&&(u.int64Data[s]=new p.LongBits(t.int64Data[s].low>>>0,t.int64Data[s].high>>>0).toNumber())}if(t.name!=null&&(u.name=String(t.name)),t.docString!=null&&(u.docString=String(t.docString)),t.rawData!=null&&(typeof t.rawData=="string"?p.base64.decode(t.rawData,u.rawData=p.newBuffer(p.base64.length(t.rawData)),0):t.rawData.length&&(u.rawData=t.rawData)),t.externalData){if(!Array.isArray(t.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");for(u.externalData=[],s=0;s<t.externalData.length;++s){if(typeof t.externalData[s]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");u.externalData[s]=d.onnx.StringStringEntryProto.fromObject(t.externalData[s])}}switch(t.dataLocation){case"DEFAULT":case 0:u.dataLocation=0;break;case"EXTERNAL":case 1:u.dataLocation=1}if(t.doubleData){if(!Array.isArray(t.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");for(u.doubleData=[],s=0;s<t.doubleData.length;++s)u.doubleData[s]=Number(t.doubleData[s])}if(t.uint64Data){if(!Array.isArray(t.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");for(u.uint64Data=[],s=0;s<t.uint64Data.length;++s)p.Long?(u.uint64Data[s]=p.Long.fromValue(t.uint64Data[s])).unsigned=!0:typeof t.uint64Data[s]=="string"?u.uint64Data[s]=parseInt(t.uint64Data[s],10):typeof t.uint64Data[s]=="number"?u.uint64Data[s]=t.uint64Data[s]:typeof t.uint64Data[s]=="object"&&(u.uint64Data[s]=new p.LongBits(t.uint64Data[s].low>>>0,t.uint64Data[s].high>>>0).toNumber(!0))}return u},r.toObject=function(t,u){u||(u={});var s={};if((u.arrays||u.defaults)&&(s.dims=[],s.floatData=[],s.int32Data=[],s.stringData=[],s.int64Data=[],s.doubleData=[],s.uint64Data=[],s.externalData=[]),u.defaults&&(s.dataType=0,s.segment=null,s.name="",u.bytes===String?s.rawData="":(s.rawData=[],u.bytes!==Array&&(s.rawData=p.newBuffer(s.rawData))),s.docString="",s.dataLocation=u.enums===String?"DEFAULT":0),t.dims&&t.dims.length){s.dims=[];for(var m=0;m<t.dims.length;++m)typeof t.dims[m]=="number"?s.dims[m]=u.longs===String?String(t.dims[m]):t.dims[m]:s.dims[m]=u.longs===String?p.Long.prototype.toString.call(t.dims[m]):u.longs===Number?new p.LongBits(t.dims[m].low>>>0,t.dims[m].high>>>0).toNumber():t.dims[m]}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&(s.dataType=t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&(s.segment=d.onnx.TensorProto.Segment.toObject(t.segment,u)),t.floatData&&t.floatData.length)for(s.floatData=[],m=0;m<t.floatData.length;++m)s.floatData[m]=u.json&&!isFinite(t.floatData[m])?String(t.floatData[m]):t.floatData[m];if(t.int32Data&&t.int32Data.length)for(s.int32Data=[],m=0;m<t.int32Data.length;++m)s.int32Data[m]=t.int32Data[m];if(t.stringData&&t.stringData.length)for(s.stringData=[],m=0;m<t.stringData.length;++m)s.stringData[m]=u.bytes===String?p.base64.encode(t.stringData[m],0,t.stringData[m].length):u.bytes===Array?Array.prototype.slice.call(t.stringData[m]):t.stringData[m];if(t.int64Data&&t.int64Data.length)for(s.int64Data=[],m=0;m<t.int64Data.length;++m)typeof t.int64Data[m]=="number"?s.int64Data[m]=u.longs===String?String(t.int64Data[m]):t.int64Data[m]:s.int64Data[m]=u.longs===String?p.Long.prototype.toString.call(t.int64Data[m]):u.longs===Number?new p.LongBits(t.int64Data[m].low>>>0,t.int64Data[m].high>>>0).toNumber():t.int64Data[m];if(t.name!=null&&t.hasOwnProperty("name")&&(s.name=t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&(s.rawData=u.bytes===String?p.base64.encode(t.rawData,0,t.rawData.length):u.bytes===Array?Array.prototype.slice.call(t.rawData):t.rawData),t.doubleData&&t.doubleData.length)for(s.doubleData=[],m=0;m<t.doubleData.length;++m)s.doubleData[m]=u.json&&!isFinite(t.doubleData[m])?String(t.doubleData[m]):t.doubleData[m];if(t.uint64Data&&t.uint64Data.length)for(s.uint64Data=[],m=0;m<t.uint64Data.length;++m)typeof t.uint64Data[m]=="number"?s.uint64Data[m]=u.longs===String?String(t.uint64Data[m]):t.uint64Data[m]:s.uint64Data[m]=u.longs===String?p.Long.prototype.toString.call(t.uint64Data[m]):u.longs===Number?new p.LongBits(t.uint64Data[m].low>>>0,t.uint64Data[m].high>>>0).toNumber(!0):t.uint64Data[m];if(t.docString!=null&&t.hasOwnProperty("docString")&&(s.docString=t.docString),t.externalData&&t.externalData.length)for(s.externalData=[],m=0;m<t.externalData.length;++m)s.externalData[m]=d.onnx.StringStringEntryProto.toObject(t.externalData[m],u);return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&(s.dataLocation=u.enums===String?d.onnx.TensorProto.DataLocation[t.dataLocation]:t.dataLocation),s},r.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},r.DataType=function(){var t={},u=Object.create(t);return u[t[0]="UNDEFINED"]=0,u[t[1]="FLOAT"]=1,u[t[2]="UINT8"]=2,u[t[3]="INT8"]=3,u[t[4]="UINT16"]=4,u[t[5]="INT16"]=5,u[t[6]="INT32"]=6,u[t[7]="INT64"]=7,u[t[8]="STRING"]=8,u[t[9]="BOOL"]=9,u[t[10]="FLOAT16"]=10,u[t[11]="DOUBLE"]=11,u[t[12]="UINT32"]=12,u[t[13]="UINT64"]=13,u[t[14]="COMPLEX64"]=14,u[t[15]="COMPLEX128"]=15,u[t[16]="BFLOAT16"]=16,u}(),r.Segment=function(){function t(u){if(u)for(var s=Object.keys(u),m=0;m<s.length;++m)u[s[m]]!=null&&(this[s[m]]=u[s[m]])}return t.prototype.begin=p.Long?p.Long.fromBits(0,0,!1):0,t.prototype.end=p.Long?p.Long.fromBits(0,0,!1):0,t.create=function(u){return new t(u)},t.encode=function(u,s){return s||(s=f.create()),u.begin!=null&&u.hasOwnProperty("begin")&&s.uint32(8).int64(u.begin),u.end!=null&&u.hasOwnProperty("end")&&s.uint32(16).int64(u.end),s},t.encodeDelimited=function(u,s){return this.encode(u,s).ldelim()},t.decode=function(u,s){u instanceof h||(u=h.create(u));for(var m=s===void 0?u.len:u.pos+s,g=new d.onnx.TensorProto.Segment;u.pos<m;){var b=u.uint32();switch(b>>>3){case 1:g.begin=u.int64();break;case 2:g.end=u.int64();break;default:u.skipType(7&b)}}return g},t.decodeDelimited=function(u){return u instanceof h||(u=new h(u)),this.decode(u,u.uint32())},t.verify=function(u){return typeof u!="object"||u===null?"object expected":u.begin!=null&&u.hasOwnProperty("begin")&&!(p.isInteger(u.begin)||u.begin&&p.isInteger(u.begin.low)&&p.isInteger(u.begin.high))?"begin: integer|Long expected":u.end!=null&&u.hasOwnProperty("end")&&!(p.isInteger(u.end)||u.end&&p.isInteger(u.end.low)&&p.isInteger(u.end.high))?"end: integer|Long expected":null},t.fromObject=function(u){if(u instanceof d.onnx.TensorProto.Segment)return u;var s=new d.onnx.TensorProto.Segment;return u.begin!=null&&(p.Long?(s.begin=p.Long.fromValue(u.begin)).unsigned=!1:typeof u.begin=="string"?s.begin=parseInt(u.begin,10):typeof u.begin=="number"?s.begin=u.begin:typeof u.begin=="object"&&(s.begin=new p.LongBits(u.begin.low>>>0,u.begin.high>>>0).toNumber())),u.end!=null&&(p.Long?(s.end=p.Long.fromValue(u.end)).unsigned=!1:typeof u.end=="string"?s.end=parseInt(u.end,10):typeof u.end=="number"?s.end=u.end:typeof u.end=="object"&&(s.end=new p.LongBits(u.end.low>>>0,u.end.high>>>0).toNumber())),s},t.toObject=function(u,s){s||(s={});var m={};if(s.defaults){if(p.Long){var g=new p.Long(0,0,!1);m.begin=s.longs===String?g.toString():s.longs===Number?g.toNumber():g}else m.begin=s.longs===String?"0":0;p.Long?(g=new p.Long(0,0,!1),m.end=s.longs===String?g.toString():s.longs===Number?g.toNumber():g):m.end=s.longs===String?"0":0}return u.begin!=null&&u.hasOwnProperty("begin")&&(typeof u.begin=="number"?m.begin=s.longs===String?String(u.begin):u.begin:m.begin=s.longs===String?p.Long.prototype.toString.call(u.begin):s.longs===Number?new p.LongBits(u.begin.low>>>0,u.begin.high>>>0).toNumber():u.begin),u.end!=null&&u.hasOwnProperty("end")&&(typeof u.end=="number"?m.end=s.longs===String?String(u.end):u.end:m.end=s.longs===String?p.Long.prototype.toString.call(u.end):s.longs===Number?new p.LongBits(u.end.low>>>0,u.end.high>>>0).toNumber():u.end),m},t.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},t}(),r.DataLocation=function(){var t={},u=Object.create(t);return u[t[0]="DEFAULT"]=0,u[t[1]="EXTERNAL"]=1,u}(),r}(),c.TensorShapeProto=function(){function r(t){if(this.dim=[],t)for(var u=Object.keys(t),s=0;s<u.length;++s)t[u[s]]!=null&&(this[u[s]]=t[u[s]])}return r.prototype.dim=p.emptyArray,r.create=function(t){return new r(t)},r.encode=function(t,u){if(u||(u=f.create()),t.dim!=null&&t.dim.length)for(var s=0;s<t.dim.length;++s)d.onnx.TensorShapeProto.Dimension.encode(t.dim[s],u.uint32(10).fork()).ldelim();return u},r.encodeDelimited=function(t,u){return this.encode(t,u).ldelim()},r.decode=function(t,u){t instanceof h||(t=h.create(t));for(var s=u===void 0?t.len:t.pos+u,m=new d.onnx.TensorShapeProto;t.pos<s;){var g=t.uint32();g>>>3==1?(m.dim&&m.dim.length||(m.dim=[]),m.dim.push(d.onnx.TensorShapeProto.Dimension.decode(t,t.uint32()))):t.skipType(7&g)}return m},r.decodeDelimited=function(t){return t instanceof h||(t=new h(t)),this.decode(t,t.uint32())},r.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dim!=null&&t.hasOwnProperty("dim")){if(!Array.isArray(t.dim))return"dim: array expected";for(var u=0;u<t.dim.length;++u){var s=d.onnx.TensorShapeProto.Dimension.verify(t.dim[u]);if(s)return"dim."+s}}return null},r.fromObject=function(t){if(t instanceof d.onnx.TensorShapeProto)return t;var u=new d.onnx.TensorShapeProto;if(t.dim){if(!Array.isArray(t.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");u.dim=[];for(var s=0;s<t.dim.length;++s){if(typeof t.dim[s]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");u.dim[s]=d.onnx.TensorShapeProto.Dimension.fromObject(t.dim[s])}}return u},r.toObject=function(t,u){u||(u={});var s={};if((u.arrays||u.defaults)&&(s.dim=[]),t.dim&&t.dim.length){s.dim=[];for(var m=0;m<t.dim.length;++m)s.dim[m]=d.onnx.TensorShapeProto.Dimension.toObject(t.dim[m],u)}return s},r.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},r.Dimension=function(){function t(s){if(s)for(var m=Object.keys(s),g=0;g<m.length;++g)s[m[g]]!=null&&(this[m[g]]=s[m[g]])}var u;return t.prototype.dimValue=p.Long?p.Long.fromBits(0,0,!1):0,t.prototype.dimParam="",t.prototype.denotation="",Object.defineProperty(t.prototype,"value",{get:p.oneOfGetter(u=["dimValue","dimParam"]),set:p.oneOfSetter(u)}),t.create=function(s){return new t(s)},t.encode=function(s,m){return m||(m=f.create()),s.dimValue!=null&&s.hasOwnProperty("dimValue")&&m.uint32(8).int64(s.dimValue),s.dimParam!=null&&s.hasOwnProperty("dimParam")&&m.uint32(18).string(s.dimParam),s.denotation!=null&&s.hasOwnProperty("denotation")&&m.uint32(26).string(s.denotation),m},t.encodeDelimited=function(s,m){return this.encode(s,m).ldelim()},t.decode=function(s,m){s instanceof h||(s=h.create(s));for(var g=m===void 0?s.len:s.pos+m,b=new d.onnx.TensorShapeProto.Dimension;s.pos<g;){var y=s.uint32();switch(y>>>3){case 1:b.dimValue=s.int64();break;case 2:b.dimParam=s.string();break;case 3:b.denotation=s.string();break;default:s.skipType(7&y)}}return b},t.decodeDelimited=function(s){return s instanceof h||(s=new h(s)),this.decode(s,s.uint32())},t.verify=function(s){if(typeof s!="object"||s===null)return"object expected";var m={};if(s.dimValue!=null&&s.hasOwnProperty("dimValue")&&(m.value=1,!(p.isInteger(s.dimValue)||s.dimValue&&p.isInteger(s.dimValue.low)&&p.isInteger(s.dimValue.high))))return"dimValue: integer|Long expected";if(s.dimParam!=null&&s.hasOwnProperty("dimParam")){if(m.value===1)return"value: multiple values";if(m.value=1,!p.isString(s.dimParam))return"dimParam: string expected"}return s.denotation!=null&&s.hasOwnProperty("denotation")&&!p.isString(s.denotation)?"denotation: string expected":null},t.fromObject=function(s){if(s instanceof d.onnx.TensorShapeProto.Dimension)return s;var m=new d.onnx.TensorShapeProto.Dimension;return s.dimValue!=null&&(p.Long?(m.dimValue=p.Long.fromValue(s.dimValue)).unsigned=!1:typeof s.dimValue=="string"?m.dimValue=parseInt(s.dimValue,10):typeof s.dimValue=="number"?m.dimValue=s.dimValue:typeof s.dimValue=="object"&&(m.dimValue=new p.LongBits(s.dimValue.low>>>0,s.dimValue.high>>>0).toNumber())),s.dimParam!=null&&(m.dimParam=String(s.dimParam)),s.denotation!=null&&(m.denotation=String(s.denotation)),m},t.toObject=function(s,m){m||(m={});var g={};return m.defaults&&(g.denotation=""),s.dimValue!=null&&s.hasOwnProperty("dimValue")&&(typeof s.dimValue=="number"?g.dimValue=m.longs===String?String(s.dimValue):s.dimValue:g.dimValue=m.longs===String?p.Long.prototype.toString.call(s.dimValue):m.longs===Number?new p.LongBits(s.dimValue.low>>>0,s.dimValue.high>>>0).toNumber():s.dimValue,m.oneofs&&(g.value="dimValue")),s.dimParam!=null&&s.hasOwnProperty("dimParam")&&(g.dimParam=s.dimParam,m.oneofs&&(g.value="dimParam")),s.denotation!=null&&s.hasOwnProperty("denotation")&&(g.denotation=s.denotation),g},t.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},t}(),r}(),c.TypeProto=function(){function r(u){if(u)for(var s=Object.keys(u),m=0;m<s.length;++m)u[s[m]]!=null&&(this[s[m]]=u[s[m]])}var t;return r.prototype.tensorType=null,r.prototype.denotation="",Object.defineProperty(r.prototype,"value",{get:p.oneOfGetter(t=["tensorType"]),set:p.oneOfSetter(t)}),r.create=function(u){return new r(u)},r.encode=function(u,s){return s||(s=f.create()),u.tensorType!=null&&u.hasOwnProperty("tensorType")&&d.onnx.TypeProto.Tensor.encode(u.tensorType,s.uint32(10).fork()).ldelim(),u.denotation!=null&&u.hasOwnProperty("denotation")&&s.uint32(50).string(u.denotation),s},r.encodeDelimited=function(u,s){return this.encode(u,s).ldelim()},r.decode=function(u,s){u instanceof h||(u=h.create(u));for(var m=s===void 0?u.len:u.pos+s,g=new d.onnx.TypeProto;u.pos<m;){var b=u.uint32();switch(b>>>3){case 1:g.tensorType=d.onnx.TypeProto.Tensor.decode(u,u.uint32());break;case 6:g.denotation=u.string();break;default:u.skipType(7&b)}}return g},r.decodeDelimited=function(u){return u instanceof h||(u=new h(u)),this.decode(u,u.uint32())},r.verify=function(u){if(typeof u!="object"||u===null)return"object expected";if(u.tensorType!=null&&u.hasOwnProperty("tensorType")){var s=d.onnx.TypeProto.Tensor.verify(u.tensorType);if(s)return"tensorType."+s}return u.denotation!=null&&u.hasOwnProperty("denotation")&&!p.isString(u.denotation)?"denotation: string expected":null},r.fromObject=function(u){if(u instanceof d.onnx.TypeProto)return u;var s=new d.onnx.TypeProto;if(u.tensorType!=null){if(typeof u.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");s.tensorType=d.onnx.TypeProto.Tensor.fromObject(u.tensorType)}return u.denotation!=null&&(s.denotation=String(u.denotation)),s},r.toObject=function(u,s){s||(s={});var m={};return s.defaults&&(m.denotation=""),u.tensorType!=null&&u.hasOwnProperty("tensorType")&&(m.tensorType=d.onnx.TypeProto.Tensor.toObject(u.tensorType,s),s.oneofs&&(m.value="tensorType")),u.denotation!=null&&u.hasOwnProperty("denotation")&&(m.denotation=u.denotation),m},r.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},r.Tensor=function(){function u(s){if(s)for(var m=Object.keys(s),g=0;g<m.length;++g)s[m[g]]!=null&&(this[m[g]]=s[m[g]])}return u.prototype.elemType=0,u.prototype.shape=null,u.create=function(s){return new u(s)},u.encode=function(s,m){return m||(m=f.create()),s.elemType!=null&&s.hasOwnProperty("elemType")&&m.uint32(8).int32(s.elemType),s.shape!=null&&s.hasOwnProperty("shape")&&d.onnx.TensorShapeProto.encode(s.shape,m.uint32(18).fork()).ldelim(),m},u.encodeDelimited=function(s,m){return this.encode(s,m).ldelim()},u.decode=function(s,m){s instanceof h||(s=h.create(s));for(var g=m===void 0?s.len:s.pos+m,b=new d.onnx.TypeProto.Tensor;s.pos<g;){var y=s.uint32();switch(y>>>3){case 1:b.elemType=s.int32();break;case 2:b.shape=d.onnx.TensorShapeProto.decode(s,s.uint32());break;default:s.skipType(7&y)}}return b},u.decodeDelimited=function(s){return s instanceof h||(s=new h(s)),this.decode(s,s.uint32())},u.verify=function(s){if(typeof s!="object"||s===null)return"object expected";if(s.elemType!=null&&s.hasOwnProperty("elemType")&&!p.isInteger(s.elemType))return"elemType: integer expected";if(s.shape!=null&&s.hasOwnProperty("shape")){var m=d.onnx.TensorShapeProto.verify(s.shape);if(m)return"shape."+m}return null},u.fromObject=function(s){if(s instanceof d.onnx.TypeProto.Tensor)return s;var m=new d.onnx.TypeProto.Tensor;if(s.elemType!=null&&(m.elemType=0|s.elemType),s.shape!=null){if(typeof s.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");m.shape=d.onnx.TensorShapeProto.fromObject(s.shape)}return m},u.toObject=function(s,m){m||(m={});var g={};return m.defaults&&(g.elemType=0,g.shape=null),s.elemType!=null&&s.hasOwnProperty("elemType")&&(g.elemType=s.elemType),s.shape!=null&&s.hasOwnProperty("shape")&&(g.shape=d.onnx.TensorShapeProto.toObject(s.shape,m)),g},u.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},u}(),r}(),c.OperatorSetIdProto=function(){function r(t){if(t)for(var u=Object.keys(t),s=0;s<u.length;++s)t[u[s]]!=null&&(this[u[s]]=t[u[s]])}return r.prototype.domain="",r.prototype.version=p.Long?p.Long.fromBits(0,0,!1):0,r.create=function(t){return new r(t)},r.encode=function(t,u){return u||(u=f.create()),t.domain!=null&&t.hasOwnProperty("domain")&&u.uint32(10).string(t.domain),t.version!=null&&t.hasOwnProperty("version")&&u.uint32(16).int64(t.version),u},r.encodeDelimited=function(t,u){return this.encode(t,u).ldelim()},r.decode=function(t,u){t instanceof h||(t=h.create(t));for(var s=u===void 0?t.len:t.pos+u,m=new d.onnx.OperatorSetIdProto;t.pos<s;){var g=t.uint32();switch(g>>>3){case 1:m.domain=t.string();break;case 2:m.version=t.int64();break;default:t.skipType(7&g)}}return m},r.decodeDelimited=function(t){return t instanceof h||(t=new h(t)),this.decode(t,t.uint32())},r.verify=function(t){return typeof t!="object"||t===null?"object expected":t.domain!=null&&t.hasOwnProperty("domain")&&!p.isString(t.domain)?"domain: string expected":t.version!=null&&t.hasOwnProperty("version")&&!(p.isInteger(t.version)||t.version&&p.isInteger(t.version.low)&&p.isInteger(t.version.high))?"version: integer|Long expected":null},r.fromObject=function(t){if(t instanceof d.onnx.OperatorSetIdProto)return t;var u=new d.onnx.OperatorSetIdProto;return t.domain!=null&&(u.domain=String(t.domain)),t.version!=null&&(p.Long?(u.version=p.Long.fromValue(t.version)).unsigned=!1:typeof t.version=="string"?u.version=parseInt(t.version,10):typeof t.version=="number"?u.version=t.version:typeof t.version=="object"&&(u.version=new p.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber())),u},r.toObject=function(t,u){u||(u={});var s={};if(u.defaults)if(s.domain="",p.Long){var m=new p.Long(0,0,!1);s.version=u.longs===String?m.toString():u.longs===Number?m.toNumber():m}else s.version=u.longs===String?"0":0;return t.domain!=null&&t.hasOwnProperty("domain")&&(s.domain=t.domain),t.version!=null&&t.hasOwnProperty("version")&&(typeof t.version=="number"?s.version=u.longs===String?String(t.version):t.version:s.version=u.longs===String?p.Long.prototype.toString.call(t.version):u.longs===Number?new p.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber():t.version),s},r.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},r}(),c),n.exports=d},2100:(n,e,i)=>{n.exports=i(9482)},9482:(n,e,i)=>{var o=e;function l(){o.util._configure(),o.Writer._configure(o.BufferWriter),o.Reader._configure(o.BufferReader)}o.build="minimal",o.Writer=i(1173),o.BufferWriter=i(3155),o.Reader=i(1408),o.BufferReader=i(593),o.util=i(9693),o.rpc=i(5994),o.roots=i(5054),o.configure=l,l()},1408:(n,e,i)=>{n.exports=f;var o,l=i(9693),c=l.LongBits,a=l.utf8;function h(m,g){return RangeError("index out of range: "+m.pos+" + "+(g||1)+" > "+m.len)}function f(m){this.buf=m,this.pos=0,this.len=m.length}var p,d=typeof Uint8Array<"u"?function(m){if(m instanceof Uint8Array||Array.isArray(m))return new f(m);throw Error("illegal buffer")}:function(m){if(Array.isArray(m))return new f(m);throw Error("illegal buffer")},r=function(){return l.Buffer?function(m){return(f.create=function(g){return l.Buffer.isBuffer(g)?new o(g):d(g)})(m)}:d};function t(){var m=new c(0,0),g=0;if(!(this.len-this.pos>4)){for(;g<3;++g){if(this.pos>=this.len)throw h(this);if(m.lo=(m.lo|(127&this.buf[this.pos])<<7*g)>>>0,this.buf[this.pos++]<128)return m}return m.lo=(m.lo|(127&this.buf[this.pos++])<<7*g)>>>0,m}for(;g<4;++g)if(m.lo=(m.lo|(127&this.buf[this.pos])<<7*g)>>>0,this.buf[this.pos++]<128)return m;if(m.lo=(m.lo|(127&this.buf[this.pos])<<28)>>>0,m.hi=(m.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return m;if(g=0,this.len-this.pos>4){for(;g<5;++g)if(m.hi=(m.hi|(127&this.buf[this.pos])<<7*g+3)>>>0,this.buf[this.pos++]<128)return m}else for(;g<5;++g){if(this.pos>=this.len)throw h(this);if(m.hi=(m.hi|(127&this.buf[this.pos])<<7*g+3)>>>0,this.buf[this.pos++]<128)return m}throw Error("invalid varint encoding")}function u(m,g){return(m[g-4]|m[g-3]<<8|m[g-2]<<16|m[g-1]<<24)>>>0}function s(){if(this.pos+8>this.len)throw h(this,8);return new c(u(this.buf,this.pos+=4),u(this.buf,this.pos+=4))}f.create=r(),f.prototype._slice=l.Array.prototype.subarray||l.Array.prototype.slice,f.prototype.uint32=(p=4294967295,function(){if(p=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128||(p=(p|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)||(p=(p|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)||(p=(p|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)||(p=(p|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128))return p;if((this.pos+=5)>this.len)throw this.pos=this.len,h(this,10);return p}),f.prototype.int32=function(){return 0|this.uint32()},f.prototype.sint32=function(){var m=this.uint32();return m>>>1^-(1&m)|0},f.prototype.bool=function(){return this.uint32()!==0},f.prototype.fixed32=function(){if(this.pos+4>this.len)throw h(this,4);return u(this.buf,this.pos+=4)},f.prototype.sfixed32=function(){if(this.pos+4>this.len)throw h(this,4);return 0|u(this.buf,this.pos+=4)},f.prototype.float=function(){if(this.pos+4>this.len)throw h(this,4);var m=l.float.readFloatLE(this.buf,this.pos);return this.pos+=4,m},f.prototype.double=function(){if(this.pos+8>this.len)throw h(this,4);var m=l.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,m},f.prototype.bytes=function(){var m=this.uint32(),g=this.pos,b=this.pos+m;if(b>this.len)throw h(this,m);return this.pos+=m,Array.isArray(this.buf)?this.buf.slice(g,b):g===b?new this.buf.constructor(0):this._slice.call(this.buf,g,b)},f.prototype.string=function(){var m=this.bytes();return a.read(m,0,m.length)},f.prototype.skip=function(m){if(typeof m=="number"){if(this.pos+m>this.len)throw h(this,m);this.pos+=m}else do if(this.pos>=this.len)throw h(this);while(128&this.buf[this.pos++]);return this},f.prototype.skipType=function(m){switch(m){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(m=7&this.uint32())!=4;)this.skipType(m);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+m+" at offset "+this.pos)}return this},f._configure=function(m){o=m,f.create=r(),o._configure();var g=l.Long?"toLong":"toNumber";l.merge(f.prototype,{int64:function(){return t.call(this)[g](!1)},uint64:function(){return t.call(this)[g](!0)},sint64:function(){return t.call(this).zzDecode()[g](!1)},fixed64:function(){return s.call(this)[g](!0)},sfixed64:function(){return s.call(this)[g](!1)}})}},593:(n,e,i)=>{n.exports=c;var o=i(1408);(c.prototype=Object.create(o.prototype)).constructor=c;var l=i(9693);function c(a){o.call(this,a)}c._configure=function(){l.Buffer&&(c.prototype._slice=l.Buffer.prototype.slice)},c.prototype.string=function(){var a=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+a,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+a,this.len))},c._configure()},5054:n=>{n.exports={}},5994:(n,e,i)=>{e.Service=i(7948)},7948:(n,e,i)=>{n.exports=l;var o=i(9693);function l(c,a,h){if(typeof c!="function")throw TypeError("rpcImpl must be a function");o.EventEmitter.call(this),this.rpcImpl=c,this.requestDelimited=!!a,this.responseDelimited=!!h}(l.prototype=Object.create(o.EventEmitter.prototype)).constructor=l,l.prototype.rpcCall=function c(a,h,f,p,d){if(!p)throw TypeError("request must be specified");var r=this;if(!d)return o.asPromise(c,r,a,h,f,p);if(r.rpcImpl)try{return r.rpcImpl(a,h[r.requestDelimited?"encodeDelimited":"encode"](p).finish(),function(t,u){if(t)return r.emit("error",t,a),d(t);if(u!==null){if(!(u instanceof f))try{u=f[r.responseDelimited?"decodeDelimited":"decode"](u)}catch(s){return r.emit("error",s,a),d(s)}return r.emit("data",u,a),d(null,u)}r.end(!0)})}catch(t){return r.emit("error",t,a),void setTimeout(function(){d(t)},0)}else setTimeout(function(){d(Error("already ended"))},0)},l.prototype.end=function(c){return this.rpcImpl&&(c||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}},1945:(n,e,i)=>{n.exports=l;var o=i(9693);function l(f,p){this.lo=f>>>0,this.hi=p>>>0}var c=l.zero=new l(0,0);c.toNumber=function(){return 0},c.zzEncode=c.zzDecode=function(){return this},c.length=function(){return 1};var a=l.zeroHash="\0\0\0\0\0\0\0\0";l.fromNumber=function(f){if(f===0)return c;var p=f<0;p&&(f=-f);var d=f>>>0,r=(f-d)/4294967296>>>0;return p&&(r=~r>>>0,d=~d>>>0,++d>4294967295&&(d=0,++r>4294967295&&(r=0))),new l(d,r)},l.from=function(f){if(typeof f=="number")return l.fromNumber(f);if(o.isString(f)){if(!o.Long)return l.fromNumber(parseInt(f,10));f=o.Long.fromString(f)}return f.low||f.high?new l(f.low>>>0,f.high>>>0):c},l.prototype.toNumber=function(f){if(!f&&this.hi>>>31){var p=1+~this.lo>>>0,d=~this.hi>>>0;return p||(d=d+1>>>0),-(p+4294967296*d)}return this.lo+4294967296*this.hi},l.prototype.toLong=function(f){return o.Long?new o.Long(0|this.lo,0|this.hi,!!f):{low:0|this.lo,high:0|this.hi,unsigned:!!f}};var h=String.prototype.charCodeAt;l.fromHash=function(f){return f===a?c:new l((h.call(f,0)|h.call(f,1)<<8|h.call(f,2)<<16|h.call(f,3)<<24)>>>0,(h.call(f,4)|h.call(f,5)<<8|h.call(f,6)<<16|h.call(f,7)<<24)>>>0)},l.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},l.prototype.zzEncode=function(){var f=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^f)>>>0,this.lo=(this.lo<<1^f)>>>0,this},l.prototype.zzDecode=function(){var f=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^f)>>>0,this.hi=(this.hi>>>1^f)>>>0,this},l.prototype.length=function(){var f=this.lo,p=(this.lo>>>28|this.hi<<4)>>>0,d=this.hi>>>24;return d===0?p===0?f<16384?f<128?1:2:f<2097152?3:4:p<16384?p<128?5:6:p<2097152?7:8:d<128?9:10}},9693:function(n,e,i){var o=e;function l(a,h,f){for(var p=Object.keys(h),d=0;d<p.length;++d)a[p[d]]!==void 0&&f||(a[p[d]]=h[p[d]]);return a}function c(a){function h(f,p){if(!(this instanceof h))return new h(f,p);Object.defineProperty(this,"message",{get:function(){return f}}),Error.captureStackTrace?Error.captureStackTrace(this,h):Object.defineProperty(this,"stack",{value:new Error().stack||""}),p&&l(this,p)}return(h.prototype=Object.create(Error.prototype)).constructor=h,Object.defineProperty(h.prototype,"name",{get:function(){return a}}),h.prototype.toString=function(){return this.name+": "+this.message},h}o.asPromise=i(4537),o.base64=i(7419),o.EventEmitter=i(9211),o.float=i(945),o.inquire=i(7199),o.utf8=i(4997),o.pool=i(6662),o.LongBits=i(1945),o.isNode=!!(i.g!==void 0&&i.g&&i.g.process&&i.g.process.versions&&i.g.process.versions.node),o.global=o.isNode&&i.g||typeof window<"u"&&window||typeof self<"u"&&self||this,o.emptyArray=Object.freeze?Object.freeze([]):[],o.emptyObject=Object.freeze?Object.freeze({}):{},o.isInteger=Number.isInteger||function(a){return typeof a=="number"&&isFinite(a)&&Math.floor(a)===a},o.isString=function(a){return typeof a=="string"||a instanceof String},o.isObject=function(a){return a&&typeof a=="object"},o.isset=o.isSet=function(a,h){var f=a[h];return!(f==null||!a.hasOwnProperty(h))&&(typeof f!="object"||(Array.isArray(f)?f.length:Object.keys(f).length)>0)},o.Buffer=function(){try{var a=o.inquire("buffer").Buffer;return a.prototype.utf8Write?a:null}catch{return null}}(),o._Buffer_from=null,o._Buffer_allocUnsafe=null,o.newBuffer=function(a){return typeof a=="number"?o.Buffer?o._Buffer_allocUnsafe(a):new o.Array(a):o.Buffer?o._Buffer_from(a):typeof Uint8Array>"u"?a:new Uint8Array(a)},o.Array=typeof Uint8Array<"u"?Uint8Array:Array,o.Long=o.global.dcodeIO&&o.global.dcodeIO.Long||o.global.Long||o.inquire("long"),o.key2Re=/^true|false|0|1$/,o.key32Re=/^-?(?:0|[1-9][0-9]*)$/,o.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,o.longToHash=function(a){return a?o.LongBits.from(a).toHash():o.LongBits.zeroHash},o.longFromHash=function(a,h){var f=o.LongBits.fromHash(a);return o.Long?o.Long.fromBits(f.lo,f.hi,h):f.toNumber(!!h)},o.merge=l,o.lcFirst=function(a){return a.charAt(0).toLowerCase()+a.substring(1)},o.newError=c,o.ProtocolError=c("ProtocolError"),o.oneOfGetter=function(a){for(var h={},f=0;f<a.length;++f)h[a[f]]=1;return function(){for(var p=Object.keys(this),d=p.length-1;d>-1;--d)if(h[p[d]]===1&&this[p[d]]!==void 0&&this[p[d]]!==null)return p[d]}},o.oneOfSetter=function(a){return function(h){for(var f=0;f<a.length;++f)a[f]!==h&&delete this[a[f]]}},o.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},o._configure=function(){var a=o.Buffer;a?(o._Buffer_from=a.from!==Uint8Array.from&&a.from||function(h,f){return new a(h,f)},o._Buffer_allocUnsafe=a.allocUnsafe||function(h){return new a(h)}):o._Buffer_from=o._Buffer_allocUnsafe=null}},1173:(n,e,i)=>{n.exports=r;var o,l=i(9693),c=l.LongBits,a=l.base64,h=l.utf8;function f(y,w,x){this.fn=y,this.len=w,this.next=void 0,this.val=x}function p(){}function d(y){this.head=y.head,this.tail=y.tail,this.len=y.len,this.next=y.states}function r(){this.len=0,this.head=new f(p,0,0),this.tail=this.head,this.states=null}var t=function(){return l.Buffer?function(){return(r.create=function(){return new o})()}:function(){return new r}};function u(y,w,x){w[x]=255&y}function s(y,w){this.len=y,this.next=void 0,this.val=w}function m(y,w,x){for(;y.hi;)w[x++]=127&y.lo|128,y.lo=(y.lo>>>7|y.hi<<25)>>>0,y.hi>>>=7;for(;y.lo>127;)w[x++]=127&y.lo|128,y.lo=y.lo>>>7;w[x++]=y.lo}function g(y,w,x){w[x]=255&y,w[x+1]=y>>>8&255,w[x+2]=y>>>16&255,w[x+3]=y>>>24}r.create=t(),r.alloc=function(y){return new l.Array(y)},l.Array!==Array&&(r.alloc=l.pool(r.alloc,l.Array.prototype.subarray)),r.prototype._push=function(y,w,x){return this.tail=this.tail.next=new f(y,w,x),this.len+=w,this},s.prototype=Object.create(f.prototype),s.prototype.fn=function(y,w,x){for(;y>127;)w[x++]=127&y|128,y>>>=7;w[x]=y},r.prototype.uint32=function(y){return this.len+=(this.tail=this.tail.next=new s((y>>>=0)<128?1:y<16384?2:y<2097152?3:y<268435456?4:5,y)).len,this},r.prototype.int32=function(y){return y<0?this._push(m,10,c.fromNumber(y)):this.uint32(y)},r.prototype.sint32=function(y){return this.uint32((y<<1^y>>31)>>>0)},r.prototype.uint64=function(y){var w=c.from(y);return this._push(m,w.length(),w)},r.prototype.int64=r.prototype.uint64,r.prototype.sint64=function(y){var w=c.from(y).zzEncode();return this._push(m,w.length(),w)},r.prototype.bool=function(y){return this._push(u,1,y?1:0)},r.prototype.fixed32=function(y){return this._push(g,4,y>>>0)},r.prototype.sfixed32=r.prototype.fixed32,r.prototype.fixed64=function(y){var w=c.from(y);return this._push(g,4,w.lo)._push(g,4,w.hi)},r.prototype.sfixed64=r.prototype.fixed64,r.prototype.float=function(y){return this._push(l.float.writeFloatLE,4,y)},r.prototype.double=function(y){return this._push(l.float.writeDoubleLE,8,y)};var b=l.Array.prototype.set?function(y,w,x){w.set(y,x)}:function(y,w,x){for(var v=0;v<y.length;++v)w[x+v]=y[v]};r.prototype.bytes=function(y){var w=y.length>>>0;if(!w)return this._push(u,1,0);if(l.isString(y)){var x=r.alloc(w=a.length(y));a.decode(y,x,0),y=x}return this.uint32(w)._push(b,w,y)},r.prototype.string=function(y){var w=h.length(y);return w?this.uint32(w)._push(h.write,w,y):this._push(u,1,0)},r.prototype.fork=function(){return this.states=new d(this),this.head=this.tail=new f(p,0,0),this.len=0,this},r.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new f(p,0,0),this.len=0),this},r.prototype.ldelim=function(){var y=this.head,w=this.tail,x=this.len;return this.reset().uint32(x),x&&(this.tail.next=y.next,this.tail=w,this.len+=x),this},r.prototype.finish=function(){for(var y=this.head.next,w=this.constructor.alloc(this.len),x=0;y;)y.fn(y.val,w,x),x+=y.len,y=y.next;return w},r._configure=function(y){o=y,r.create=t(),o._configure()}},3155:(n,e,i)=>{n.exports=c;var o=i(1173);(c.prototype=Object.create(o.prototype)).constructor=c;var l=i(9693);function c(){o.call(this)}function a(h,f,p){h.length<40?l.utf8.write(h,f,p):f.utf8Write?f.utf8Write(h,p):f.write(h,p)}c._configure=function(){c.alloc=l._Buffer_allocUnsafe,c.writeBytesBuffer=l.Buffer&&l.Buffer.prototype instanceof Uint8Array&&l.Buffer.prototype.set.name==="set"?function(h,f,p){f.set(h,p)}:function(h,f,p){if(h.copy)h.copy(f,p,0,h.length);else for(var d=0;d<h.length;)f[p++]=h[d++]}},c.prototype.bytes=function(h){l.isString(h)&&(h=l._Buffer_from(h,"base64"));var f=h.length>>>0;return this.uint32(f),f&&this._push(c.writeBytesBuffer,f,h),this},c.prototype.string=function(h){var f=l.Buffer.byteLength(h);return this.uint32(f),f&&this._push(a,f,h),this},c._configure()},7714:(n,e,i)=>{e.R=void 0;const o=i(6919),l=i(7448);e.R=new class{async init(){}async createSessionHandler(c,a){const h=new o.Session(a);return await h.loadModel(c),new l.OnnxjsSessionHandler(h)}}},4200:(n,e,i)=>{e.c8=e.rX=void 0;const o=i(1670),l=i(5381),c=i(2157),a=i(2306);e.rX=()=>{if((typeof o.env.wasm.initTimeout!="number"||o.env.wasm.initTimeout<0)&&(o.env.wasm.initTimeout=0),typeof o.env.wasm.simd!="boolean"&&(o.env.wasm.simd=!0),typeof o.env.wasm.proxy!="boolean"&&(o.env.wasm.proxy=!1),typeof o.env.wasm.numThreads!="number"||!Number.isInteger(o.env.wasm.numThreads)||o.env.wasm.numThreads<=0){const h=typeof navigator>"u"?(0,l.cpus)().length:navigator.hardwareConcurrency;o.env.wasm.numThreads=Math.min(4,Math.ceil((h||1)/2))}},e.c8=new class{async init(){(0,e.rX)(),await(0,c.initWasm)()}async createSessionHandler(h,f){const p=new a.OnnxruntimeWebAssemblySessionHandler;return await p.loadModel(h,f),Promise.resolve(p)}}},6018:function(n,e,i){var o=this&&this.__createBinding||(Object.create?function(a,h,f,p){p===void 0&&(p=f);var d=Object.getOwnPropertyDescriptor(h,f);d&&!("get"in d?!h.__esModule:d.writable||d.configurable)||(d={enumerable:!0,get:function(){return h[f]}}),Object.defineProperty(a,p,d)}:function(a,h,f,p){p===void 0&&(p=f),a[p]=h[f]}),l=this&&this.__exportStar||function(a,h){for(var f in a)f==="default"||Object.prototype.hasOwnProperty.call(h,f)||o(h,a,f)};Object.defineProperty(e,"__esModule",{value:!0}),l(i(1670),e);const c=i(1670);{const a=i(7714).R;(0,c.registerBackend)("webgl",a,-10)}{const a=i(4200).c8;(0,c.registerBackend)("cpu",a,10),(0,c.registerBackend)("wasm",a,10),(0,c.registerBackend)("xnnpack",a,9)}},246:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createAttributeWithCacheKey=void 0;class i{constructor(l){Object.assign(this,l)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(l=>`${this[l]}`).join(";")),this._cacheKey}}e.createAttributeWithCacheKey=o=>new i(o)},7778:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Attribute=void 0;const o=i(1446),l=i(9395),c=i(9162),a=i(2517);var h=l.onnxruntime.experimental.fbs;class f{constructor(d){if(this._attributes=new Map,d!=null){for(const r of d)r instanceof o.onnx.AttributeProto?this._attributes.set(r.name,[f.getValue(r),f.getType(r)]):r instanceof h.Attribute&&this._attributes.set(r.name(),[f.getValue(r),f.getType(r)]);if(this._attributes.size<d.length)throw new Error("duplicated attribute names")}}set(d,r,t){this._attributes.set(d,[t,r])}delete(d){this._attributes.delete(d)}getFloat(d,r){return this.get(d,"float",r)}getInt(d,r){return this.get(d,"int",r)}getString(d,r){return this.get(d,"string",r)}getTensor(d,r){return this.get(d,"tensor",r)}getFloats(d,r){return this.get(d,"floats",r)}getInts(d,r){return this.get(d,"ints",r)}getStrings(d,r){return this.get(d,"strings",r)}getTensors(d,r){return this.get(d,"tensors",r)}get(d,r,t){const u=this._attributes.get(d);if(u===void 0){if(t!==void 0)return t;throw new Error(`required attribute not found: ${d}`)}if(u[1]!==r)throw new Error(`type mismatch: expected ${r} but got ${u[1]}`);return u[0]}static getType(d){const r=d instanceof o.onnx.AttributeProto?d.type:d.type();switch(r){case o.onnx.AttributeProto.AttributeType.FLOAT:return"float";case o.onnx.AttributeProto.AttributeType.INT:return"int";case o.onnx.AttributeProto.AttributeType.STRING:return"string";case o.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case o.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case o.onnx.AttributeProto.AttributeType.INTS:return"ints";case o.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case o.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${o.onnx.AttributeProto.AttributeType[r]}`)}}static getValue(d){const r=d instanceof o.onnx.AttributeProto?d.type:d.type();if(r===o.onnx.AttributeProto.AttributeType.GRAPH||r===o.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");const t=this.getValueNoCheck(d);if(r===o.onnx.AttributeProto.AttributeType.INT&&a.LongUtil.isLong(t))return a.LongUtil.longToNumber(t);if(r===o.onnx.AttributeProto.AttributeType.INTS){const u=t,s=new Array(u.length);for(let m=0;m<u.length;m++){const g=u[m];s[m]=a.LongUtil.longToNumber(g)}return s}if(r===o.onnx.AttributeProto.AttributeType.TENSOR)return d instanceof o.onnx.AttributeProto?c.Tensor.fromProto(t):c.Tensor.fromOrtTensor(t);if(r===o.onnx.AttributeProto.AttributeType.TENSORS){if(d instanceof o.onnx.AttributeProto)return t.map(u=>c.Tensor.fromProto(u));if(d instanceof h.Attribute)return t.map(u=>c.Tensor.fromOrtTensor(u))}if(r===o.onnx.AttributeProto.AttributeType.STRING&&d instanceof o.onnx.AttributeProto){const u=t;return(0,a.decodeUtf8String)(u)}return r===o.onnx.AttributeProto.AttributeType.STRINGS&&d instanceof o.onnx.AttributeProto?t.map(a.decodeUtf8String):t}static getValueNoCheck(d){return d instanceof o.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(d):this.getValueNoCheckFromOrtFormat(d)}static getValueNoCheckFromOnnxFormat(d){switch(d.type){case o.onnx.AttributeProto.AttributeType.FLOAT:return d.f;case o.onnx.AttributeProto.AttributeType.INT:return d.i;case o.onnx.AttributeProto.AttributeType.STRING:return d.s;case o.onnx.AttributeProto.AttributeType.TENSOR:return d.t;case o.onnx.AttributeProto.AttributeType.GRAPH:return d.g;case o.onnx.AttributeProto.AttributeType.FLOATS:return d.floats;case o.onnx.AttributeProto.AttributeType.INTS:return d.ints;case o.onnx.AttributeProto.AttributeType.STRINGS:return d.strings;case o.onnx.AttributeProto.AttributeType.TENSORS:return d.tensors;case o.onnx.AttributeProto.AttributeType.GRAPHS:return d.graphs;default:throw new Error(`unsupported attribute type: ${o.onnx.AttributeProto.AttributeType[d.type]}`)}}static getValueNoCheckFromOrtFormat(d){switch(d.type()){case h.AttributeType.FLOAT:return d.f();case h.AttributeType.INT:return d.i();case h.AttributeType.STRING:return d.s();case h.AttributeType.TENSOR:return d.t();case h.AttributeType.GRAPH:return d.g();case h.AttributeType.FLOATS:return d.floatsArray();case h.AttributeType.INTS:{const r=[];for(let t=0;t<d.intsLength();t++)r.push(d.ints(t));return r}case h.AttributeType.STRINGS:{const r=[];for(let t=0;t<d.stringsLength();t++)r.push(d.strings(t));return r}case h.AttributeType.TENSORS:{const r=[];for(let t=0;t<d.tensorsLength();t++)r.push(d.tensors(t));return r}default:throw new Error(`unsupported attribute type: ${h.AttributeType[d.type()]}`)}}}e.Attribute=f},7091:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.resolveBackend=e.backend=void 0;const o=i(5038),l=new Map;async function c(a){const h=e.backend;if(h[a]!==void 0&&function(f){const p=f;return"initialize"in p&&typeof p.initialize=="function"&&"createSessionHandler"in p&&typeof p.createSessionHandler=="function"&&"dispose"in p&&typeof p.dispose=="function"}(h[a])){const f=h[a];let p=f.initialize();if(typeof p=="object"&&"then"in p&&(p=await p),p)return l.set(a,f),f}}e.backend={webgl:new o.WebGLBackend},e.resolveBackend=async function a(h){if(!h)return a(["webgl"]);{const f=typeof h=="string"?[h]:h;for(const p of f){const d=l.get(p);if(d)return d;const r=await c(p);if(r)return r}}throw new Error("no available backend to use")}},5038:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WebGLBackend=void 0;const o=i(1670),l=i(6231),c=i(6416),a=i(7305);e.WebGLBackend=class{get contextId(){return o.env.webgl.contextId}set contextId(h){o.env.webgl.contextId=h}get matmulMaxBatchSize(){return o.env.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(h){o.env.webgl.matmulMaxBatchSize=h}get textureCacheMode(){return o.env.webgl.textureCacheMode}set textureCacheMode(h){o.env.webgl.textureCacheMode=h}get pack(){return o.env.webgl.pack}set pack(h){o.env.webgl.pack=h}get async(){return o.env.webgl.async}set async(h){o.env.webgl.async=h}initialize(){try{return this.glContext=(0,a.createWebGLContext)(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),l.Logger.setWithEnv(o.env),l.Logger.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(h){return l.Logger.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${h}`),!1}}createSessionHandler(h){return new c.WebGLSessionHandler(this,h)}dispose(){this.glContext.dispose()}}},5107:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.CoordsGlslLib=void 0;const o=i(2517),l=i(8520),c=i(5060),a=i(7859),h=i(9390);class f extends l.GlslLib{constructor(d){super(d)}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},this.offsetToCoords()),this.coordsToOffset()),this.toVec()),this.valueFrom()),this.getCommonUtilFuncs()),this.getInputsSamplingSnippets()),this.getOutputSamplingSnippet())}getCustomTypes(){return{}}offsetToCoords(){return{offsetToCoords:new l.GlslLibRoutine(`
      vec2 offsetToCoords(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){return{coordsToOffset:new l.GlslLibRoutine(`
      int coordsToOffset(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){const d=this.context.outputTextureLayout;return d.isPacked?this.getPackedOutputSamplingSnippet(d):this.getUnpackedOutputSamplingSnippet(d)}getPackedOutputSamplingSnippet(d){const r=d.unpackedShape,t=[d.width,d.height],u={},s="getOutputCoords";switch(r.length){case 0:u[s]=this.getOutputScalarCoords();break;case 1:u[s]=this.getOutputPacked1DCoords(r,t);break;case 2:u[s]=this.getOutputPacked2DCoords(r,t);break;case 3:u[s]=this.getOutputPacked3DCoords(r,t);break;default:u[s]=this.getOutputPackedNDCoords(r,t)}const m=`
      void setOutput(vec4 val) {
        ${(0,c.getGlsl)(this.context.glContext.version).output} = val;
      }
    `;return u.floatTextureSetRGBA=new l.GlslLibRoutine(m),u}getUnpackedOutputSamplingSnippet(d){const r=d.unpackedShape,t=[d.width,d.height],u={},s="getOutputCoords";switch(r.length){case 0:u[s]=this.getOutputScalarCoords();break;case 1:u[s]=this.getOutputUnpacked1DCoords(r,t);break;case 2:u[s]=this.getOutputUnpacked2DCoords(r,t);break;case 3:u[s]=this.getOutputUnpacked3DCoords(r,t);break;case 4:u[s]=this.getOutputUnpacked4DCoords(r,t);break;case 5:u[s]=this.getOutputUnpacked5DCoords(r,t);break;case 6:u[s]=this.getOutputUnpacked6DCoords(r,t);break;default:throw new Error(`Unsupported output dimensionality: ${r.length}`)}const m=`
        void setOutput(float val) {
          ${(0,c.getGlsl)(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `;return u.floatTextureSetR=new l.GlslLibRoutine(m),u}getOutputScalarCoords(){return new l.GlslLibRoutine(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(d,r){const t=r;let u="";return t[0]===1?(u=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${t[1]}.0);
          }
        `,new l.GlslLibRoutine(u)):t[1]===1?(u=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${t[0]}.0);
          }
        `,new l.GlslLibRoutine(u)):(u=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${t[0]}, ${t[1]}));
          return 2 * (resTexRC.y * ${t[0]} + resTexRC.x);
        }
      `,new l.GlslLibRoutine(u))}getOutputPacked2DCoords(d,r){let t="";if(o.ArrayUtil.arraysEqual(d,r))return t=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${r[0]}, ${r[1]}));
        }
      `,new l.GlslLibRoutine(t);const u=r,s=Math.ceil(d[1]/2);return t=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${u[0]}, ${u[1]}));

          int index = resTexRC.y * ${u[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${s}) * 2;
          int c = 2 * (index / ${s});

          return ivec2(r, c);
        }
      `,new l.GlslLibRoutine(t)}getOutputPacked3DCoords(d,r){const t=[r[0],r[1]],u=Math.ceil(d[2]/2),s=u*Math.ceil(d[1]/2),m=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;

          int b = index / ${s};
          index -= b * ${s};

          // reverse r and c order for packed texture
          int r = imod(index, ${u}) * 2;
          int c = 2 * (index / ${u});

          return ivec3(b, r, c);
        }
      `;return new l.GlslLibRoutine(m)}getOutputPackedNDCoords(d,r){const t=[r[0],r[1]],u=Math.ceil(d[d.length-1]/2),s=u*Math.ceil(d[d.length-2]/2);let m=s,g="",b="b, r, c";for(let w=2;w<d.length-1;w++)m*=d[d.length-w-1],g=`
      int b${w} = index / ${m};
      index -= b${w} * ${m};
    `+g,b=`b${w}, `+b;const y=`
      ivec${d.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.y * ${t[0]} + resTexRC.x;

        ${g}

        int b = index / ${s};
        index -= b * ${s};

        // reverse r and c order for packed texture
        int r = imod(index, ${u}) * 2;
        int c = 2 * (index / ${u});

        return ivec${d.length}(${b});
      }
    `;return new l.GlslLibRoutine(y)}getOutputUnpacked1DCoords(d,r){const t=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${r[0]}, ${r[1]}));
          return resTexRC.y * ${r[0]} + resTexRC.x;
        }
      `;return new l.GlslLibRoutine(t)}getOutputUnpacked2DCoords(d,r){const t=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${r[0]}, ${r[1]}));
          int index = resTexRC.y * ${r[0]} + resTexRC.x;
          int r = index / ${d[1]};
          int c = index - r * ${d[1]};
          return ivec2(r, c);
        }
      `;return new l.GlslLibRoutine(t)}getOutputUnpacked3DCoords(d,r){let t="";const u=d.length;let s=null;u<2&&(s=[]),s=new Array(u-1),s[u-2]=d[u-1];for(let b=u-3;b>=0;--b)s[b]=s[b+1]*d[b+1];const m=["r","c","d"],g=s.map((b,y)=>`int ${m[y]} = index / ${b}; ${y===s.length-1?`int ${m[y+1]} = index - ${m[y]} * ${b}`:`index -= ${m[y]} * ${b}`};`).join("");return t=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${r[0]}, ${r[1]}));
          int index = resTexRC.y * ${r[0]} + resTexRC.x;
          ${g}
          return ivec3(r, c, d);
        }
      `,new l.GlslLibRoutine(t)}getOutputUnpacked4DCoords(d,r){let t="";const u=d.length;let s=null;u<2&&(s=[]),s=new Array(u-1),s[u-2]=d[u-1];for(let b=u-3;b>=0;--b)s[b]=s[b+1]*d[b+1];const m=["r","c","d","d2"],g=s.map((b,y)=>`int ${m[y]} = index / ${b}; ${y===s.length-1?`int ${m[y+1]} = index - ${m[y]} * ${b}`:`index -= ${m[y]} * ${b}`};`).join("");return t=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${r[0]}, ${r[1]}));
          int index = resTexRC.y * ${r[0]} + resTexRC.x;
          ${g}
          return ivec4(r, c, d, d2);
        }
      `,new l.GlslLibRoutine(t)}getOutputUnpacked5DCoords(d,r){let t="";const u=d.length;let s=null;u<2&&(s=[]),s=new Array(u-1),s[u-2]=d[u-1];for(let b=u-3;b>=0;--b)s[b]=s[b+1]*d[b+1];const m=["r","c","d","d2","d3"],g=s.map((b,y)=>`int ${m[y]} = index / ${b}; ${y===s.length-1?`int ${m[y+1]} = index - ${m[y]} * ${b}`:`index -= ${m[y]} * ${b}`};`).join("");return t=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${r[0]}, ${r[1]}));
          int index = resTexRC.y * ${r[0]} + resTexRC.x;
          ${g}
          return ivec5(r, c, d, d2, d3);
        }
      `,new l.GlslLibRoutine(t)}getOutputUnpacked6DCoords(d,r){let t="";const u=d.length;let s=null;u<2&&(s=[]),s=new Array(u-1),s[u-2]=d[u-1];for(let b=u-3;b>=0;--b)s[b]=s[b+1]*d[b+1];const m=["r","c","d","d2","d3","d4"],g=s.map((b,y)=>`int ${m[y]} = index / ${b}; ${y===s.length-1?`int ${m[y+1]} = index - ${m[y]} * ${b}`:`index -= ${m[y]} * ${b}`};`).join("");return t=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${r[0]}, ${r[1]}));
         int index = resTexRC.y * ${r[0]} + resTexRC.x;
         ${g}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new l.GlslLibRoutine(t)}getCommonUtilFuncs(){const d={};let r="uvFromFlat";d[r]=new l.GlslLibRoutine(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),r="packedUVfrom1D",d[r]=new l.GlslLibRoutine(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),r="packedUVfrom2D",d[r]=new l.GlslLibRoutine(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),r="packedUVfrom3D",d[r]=new l.GlslLibRoutine(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),r="sampleTexture";const t=(0,c.getGlsl)(this.context.glContext.version);return d[r]=new l.GlslLibRoutine(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${t.texture2D}(textureSampler, uv).r;
        }`),d}getInputsSamplingSnippets(){const d={},r=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((t,u)=>{const s=this.context.inputTextureLayouts[u],m=(0,h.generateShaderFuncNameFromInputSamplerName)(t);s.isPacked?d[m]=this.getPackedSamplerFromInput(m,t,s):d[m]=this.getUnpackedSamplerFromInput(m,t,s);const g=(0,h.generateShaderFuncNameFromInputSamplerNameAtOutCoords)(t);s.unpackedShape.length<=r.unpackedShape.length&&(s.isPacked?d[g]=this.getPackedSamplerAtOutputCoords(g,s,r,t):d[g]=this.getUnpackedSamplerAtOutputCoords(g,s,r,t))}),d}getPackedSamplerAtOutputCoords(d,r,t,u){const s=r.unpackedShape,m=t.unpackedShape,g=u,b=(0,h.generateShaderFuncNameFromInputSamplerName)(g),y=s.length,w=m.length,x=o.BroadcastUtil.getBroadcastDims(s,m),v=(0,h.getCoordsDataType)(w),E=w-y;let O;const C=(0,h.getGlChannels)();O=y===0?"":w<2&&x.length>=1?"coords = 0;":x.map(Y=>`coords.${C[Y+E]} = 0;`).join(`
`);let S="";S=w<2&&y>0?"coords":s.map((Y,G)=>`coords.${C[G+E]}`).join(", ");let N="return outputValue;";const Q=o.ShapeUtil.size(s)===1,te=o.ShapeUtil.size(m)===1;if(y!==1||Q||te){if(Q&&!te)N=w===1?`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:`
          return vec4(outputValue.x);
        `;else if(x.length){const Y=y-2,G=y-1;x.indexOf(Y)>-1&&x.indexOf(G)>-1?N="return vec4(outputValue.x);":x.indexOf(Y)>-1?N="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":x.indexOf(G)>-1&&(N="return vec4(outputValue.xx, outputValue.zz);")}}else N=`
        return vec4(outputValue.xy, outputValue.xy);
      `;const Z=`
      vec4 ${d}() {
        ${v} coords = getOutputCoords();
        
        int lastDim = coords.${C[w-1]};
        coords.${C[w-1]} = coords.${C[w-2]};
        coords.${C[w-2]} = lastDim;
      
        ${O}
        vec4 outputValue = ${b}(${S});
        ${N}
      }
    `;return new l.GlslLibRoutine(Z,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(d,r,t,u){const s=[t.width,t.height],m=[r.width,r.height],g=r.unpackedShape.length,b=t.unpackedShape.length,y=r.unpackedShape,w=t.unpackedShape,x=(0,h.generateShaderFuncNameFromInputSamplerName)(u);if(g===b&&o.ArrayUtil.arraysEqual(m,s)){const te=`
          float ${d}() {
            return sampleTexture(${u}, TexCoords);
          }
        `;return new l.GlslLibRoutine(te,["coordinates.sampleTexture"])}const v=(0,h.getCoordsDataType)(b),E=o.BroadcastUtil.getBroadcastDims(y,w),O=b-g;let C;const S=(0,h.getGlChannels)();C=g===0?"":b<2&&E.length>=1?"coords = 0;":E.map(te=>`coords.${S[te+O]} = 0;`).join(`
`);let N="";N=b<2&&g>0?"coords":r.unpackedShape.map((te,Z)=>`coords.${S[Z+O]}`).join(", ");const Q=`
        float ${d}() {
          ${v} coords = getOutputCoords();
          ${C}
          return ${x}(${N});
        }
      `;return new l.GlslLibRoutine(Q,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(d,r,t){switch(t.unpackedShape.length){case 0:return this.getPackedSamplerScalar(d,r);case 1:return this.getPackedSampler1D(d,r,t);case 2:return this.getPackedSampler2D(d,r,t);case 3:return this.getPackedSampler3D(d,r,t);default:return this.getPackedSamplerND(d,r,t)}}getUnpackedSamplerFromInput(d,r,t){const u=t.unpackedShape;switch(u.length){case 0:return this.getUnpackedSamplerScalar(d,r,t);case 1:return this.getUnpackedSampler1D(d,r,t);case 2:return this.getUnpackedSampler2D(d,r,t);case 3:return this.getUnpackedSampler3D(d,r,t);case 4:return this.getUnpackedSampler4D(d,r,t);case 5:return this.getUnpackedSampler5D(d,r,t);case 6:return this.getUnpackedSampler6D(d,r,t);default:throw new Error(`Unsupported dimension ${u.length}-D`)}}getPackedSamplerScalar(d,r){const t=`
          vec4 ${d}() {
            return ${(0,c.getGlsl)(this.context.glContext.version).texture2D}(${r}, halfCR);
          }
        `;return new l.GlslLibRoutine(t)}getPackedSampler1D(d,r,t){const u=[t.width,t.height],s=[u[1],u[0]],m=(0,c.getGlsl)(this.context.glContext.version),g=`vec4 ${d}(int index) {
      vec2 uv = packedUVfrom1D(
      ${s[0]}, ${s[1]}, index);
      return ${m.texture2D}(${r}, uv);
    }`;return new l.GlslLibRoutine(g,["coordinates.packedUVfrom1D"])}getPackedSampler2D(d,r,t){const u=t.unpackedShape,s=[t.width,t.height],m=(0,c.getGlsl)(this.context.glContext.version),g=s[0],b=s[1];if(s!=null&&o.ArrayUtil.arraysEqual(u,s)){const v=`vec4 ${d}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${b}.0, ${g}.0);
        return ${m.texture2D}(${r}, uv);
      }`;return new l.GlslLibRoutine(v)}const y=s,w=Math.ceil(u[1]/2),x=`vec4 ${d}(int row, int col) {
      vec2 uv = packedUVfrom2D(${y[1]}, ${y[0]}, ${w}, row, col);
      return ${m.texture2D}(${r}, uv);
    }`;return new l.GlslLibRoutine(x,["coordinates.packedUVfrom2D"])}getPackedSampler3D(d,r,t){const u=t.unpackedShape,s=[t.width,t.height],m=[s[0],s[1]],g=(0,c.getGlsl)(this.context.glContext.version);if(u[0]===1){const v=u.slice(1),E=[1,2],O=(0,h.squeezeInputShape)(u,v),C=["b","row","col"],S=JSON.parse(JSON.stringify(t));S.unpackedShape=O;const N=this.getPackedSamplerFromInput(d,r,S),Q=`${N.routineBody}
      vec4 ${d}(int b, int row, int col) {
        return ${d}(${(0,h.getSqueezedParams)(C,E)});
      } `;return new l.GlslLibRoutine(Q,N.dependencies)}const b=m[0],y=m[1],w=Math.ceil(u[2]/2),x=`vec4 ${d}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${y}, ${b}, ${w*Math.ceil(u[1]/2)}, ${w}, b, row, col);
      return ${g.texture2D}(${r}, uv);}`;return new l.GlslLibRoutine(x,["coordinates.packedUVfrom3D"])}getPackedSamplerND(d,r,t){const u=t.unpackedShape,s=u.length,m=[t.width,t.height],g=(0,c.getGlsl)(this.context.glContext.version),b=[m[0],m[1]],y=b[1],w=b[0],x=Math.ceil(u[s-1]/2);let v=x*Math.ceil(u[s-2]/2),E="int b, int row, int col",O=`b * ${v} + (row / 2) * ${x} + (col / 2)`;for(let S=2;S<s-1;S++)E=`int b${S}, `+E,v*=u[s-S-1],O=`b${S} * ${v} + `+O;const C=`vec4 ${d}(${E}) {
      int index = ${O};
      int texR = index / ${w};
      int texC = index - texR * ${w};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${w}, ${y});
      return ${g.texture2D}(${r}, uv);
    }`;return new l.GlslLibRoutine(C)}getUnpackedSamplerScalar(d,r,t){const[u,s]=[t.width,t.height];if(u===1&&s===1){const g=`
          float ${d}() {
            return sampleTexture(${r}, halfCR);
          }
        `;return new l.GlslLibRoutine(g,["coordinates.sampleTexture"])}const m=`
        float ${d}() {
          int offset_${r} = coordsToOffset(TexCoords, ${u}, ${s});
          vec2 uv = uvFromFlat(${u}, ${s}, offset_${r});
          return sampleTexture(${r}, uv);
        }
      `;return new l.GlslLibRoutine(m,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(d,r,t){const u=t.width,s=t.height;if(s===1&&u===1){const g=`
        float ${d}(int index) {
          return sampleTexture(${r}, halfCR);
        }
      `;return new l.GlslLibRoutine(g,["coordinates.sampleTexture"])}if(s===1){const g=`
          float ${d}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${u}.0, 0.5);
            return sampleTexture(${r}, uv);
          }
        `;return new l.GlslLibRoutine(g,["coordinates.sampleTexture"])}if(u===1){const g=`
          float ${d}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${s}.0);
            return sampleTexture(${r}, uv);
          }
        `;return new l.GlslLibRoutine(g,["coordinates.sampleTexture"])}const m=`
        float ${d}(int index) {
          vec2 uv = uvFromFlat(${u}, ${s}, index);
          return sampleTexture(${r}, uv);
        }
      `;return new l.GlslLibRoutine(m,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(d,r,t){const u=t.unpackedShape,s=[t.height,t.width];if(s!=null&&o.ArrayUtil.arraysEqual(u,s)){const v=`
          float ${d}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${s[1]}.0, ${s[0]}.0);
            return sampleTexture(${r}, uv);
          }
        `;return new l.GlslLibRoutine(v,["coordinates.sampleTexture"])}const{newShape:m,keptDims:g}=(0,a.squeezeShape)(u),b=m;if(b.length<u.length){const v=(0,h.squeezeInputShape)(u,b),E=JSON.parse(JSON.stringify(t));E.unpackedShape=v;const O=["col","row"],C=`
          ${this.getUnpackedSamplerFromInput(d,r,E).routineBody}
          float ${d}(int row, int col) {
            return ${d}(${(0,h.getSqueezedParams)(O,g)});
          }
        `;return new l.GlslLibRoutine(C,["coordinates.sampleTexture"])}const y=s[1],w=s[0];if(w===1){const v=`
          float ${d}(int row, int col) {
            int offset_${r} = coordsToOffset(TexCoords, ${y}, ${w});
            float index = dot(vec3(row, col, offset_${r}), vec3(${u[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${y}.0);
            return sampleTexture(${r}, uv);
          }
        `;return new l.GlslLibRoutine(v,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(y===1){const v=`
          float ${d}(int row, int col) {
            int offset_${r} = coordsToOffset(TexCoords, ${y}, ${w});
            float index = dot(vec3(row, col, offset_${r}), vec3(${u[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${w}.0, 0.5);
            return sampleTexture(${r}, uv);
          }
        `;return new l.GlslLibRoutine(v,["coordinates.sampleTexture","coordinates.coordsToOffset"])}const x=`
        float ${d}(int row, int col) {
          int index = col * ${u[1]} + row;
          vec2 uv = uvFromFlat(${y}, ${w}, index);
          return sampleTexture(${r}, uv);
        }
      `;return new l.GlslLibRoutine(x,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(d,r,t){const u=t.unpackedShape,s=u[1]*u[2],m=u[2],{newShape:g,keptDims:b}=(0,a.squeezeShape)(u),y=g;if(y.length<u.length){const x=(0,h.squeezeInputShape)(u,y),v=["batch","col","row"],E=JSON.parse(JSON.stringify(t));E.unpackedShape=x;const O=this.getUnpackedSamplerFromInput(d,r,E),C=b.reverse(),S=`
          ${O.routineBody}
          float ${d}(int batch, int row, int col) {
            return ${d}(${(0,h.getSqueezedParams)(v,C)});
          }
        `;return new l.GlslLibRoutine(S,O.dependencies)}const w=`
          float ${d}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${s} + col * ${m} + row;
            vec2 uv = uvFromFlat(${t.width}, ${t.height}, index);
            return sampleTexture(${r}, uv);
          }
      `;return new l.GlslLibRoutine(w,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(d,r,t){const u=t.unpackedShape,s=u[3],m=u[2]*s,g=`
        float ${d}(int row, int col, int depth, int depth2) {
          int index = row * ${u[1]*m} + col * ${m} +
              depth2 * ${s} + depth;
          vec2 uv = uvFromFlat(${t.width}, ${t.height}, index);
          return sampleTexture(${r}, uv);
        }
      `;return new l.GlslLibRoutine(g,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(d,r,t){const u=t.unpackedShape,s=u[4],m=u[3]*s,g=u[2]*m,b=u[1]*g,{newShape:y,keptDims:w}=(0,a.squeezeShape)(u);if(y.length<u.length){const v=(0,h.squeezeInputShape)(u,y),E=["row","col","depth","depth2","depth3"],O=JSON.parse(JSON.stringify(t));O.unpackedShape=v;const C=`
          ${this.getUnpackedSamplerFromInput(d,r,O).routineBody}
          float ${d}(int row, int col, int depth, int depth2, int depth3) {
            return ${d}(${(0,h.getSqueezedParams)(E,w)});
          }
        `;return new l.GlslLibRoutine(C,["coordinates.sampleTexture","coordinates.uvFromFlat"])}const x=`
        float ${d}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${b} + col * ${g} + depth * ${m} +
          depth3 * ${s} + depth2;
          vec2 uv = uvFromFlat(${t.width}, ${t.height}, index);
          return sampleTexture(${r}, uv);
        }
      `;return new l.GlslLibRoutine(x,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(d,r,t){const u=t.unpackedShape,s=u[5],m=u[4]*s,g=u[3]*m,b=u[2]*g,y=u[1]*b,{newShape:w,keptDims:x}=(0,a.squeezeShape)(u);if(w.length<u.length){const E=(0,h.squeezeInputShape)(u,w),O=["row","col","depth","depth2","depth3","depth4"],C=JSON.parse(JSON.stringify(t));C.unpackedShape=E;const S=`
            ${this.getUnpackedSamplerFromInput(d,r,C).routineBody}
            float ${d}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${d}(${(0,h.getSqueezedParams)(O,x)});
            }
          `;return new l.GlslLibRoutine(S,["coordinates.sampleTexture","coordinates.uvFromFlat"])}const v=`
          float ${d}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${y} + col * ${b} + depth * ${g} +
            depth2 * ${m} + depth3 * ${s} + depth4;
            vec2 uv = uvFromFlat(${t.width}, ${t.height}, index);
            return sampleTexture(${r}, uv);
          }
        `;return new l.GlslLibRoutine(v,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){const d=this.context.outputTextureLayout,r=d.shape.length,t=d.strides,u=d.width,s=d.height,m=[];for(let b=0;b<r-1;++b)m.push(`
        c[${b}] = offset / ${t[b]};`),m.push(`
        offset -= c[${b}] * ${t[b]};`);m.push(`
        c[${r-1}] = offset;`);const g=`
      void toVec(vec2 texCoords, out int c[${r}]) {
        int offset = coordsToOffset(texCoords, ${u}, ${s});
        ${m.join("")}
      }
      void toVec(int offset, out int c[${r}]) {
        ${m.join("")}
      }
    `;return{toVec:new l.GlslLibRoutine(g,["coordinates.coordsToOffset"])}}valueFrom(){const d={};return this.context.programInfo.inputNames.forEach((r,t)=>{const u=this.context.inputTextureLayouts[t],s=(u.unpackedShape.length>0?u.unpackedShape:u.shape).length;let m=`_${r}`;d[m]=new l.GlslLibRoutine(this.getValueFromSingle(r,s,u.width,u.height,!1),[`shapeUtils.indicesToOffset${m}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),m+="_T",d[m]=new l.GlslLibRoutine(this.getValueFromSingle(r,s,u.width,u.height,!0),[`shapeUtils.indicesToOffset${m}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),d}getValueFromSingle(d,r,t,u,s){let m=`_${d}`;return s&&(m+="_T"),`
        float ${m}(int m[${r}]) {
          int offset = indicesToOffset${m}(m);
          vec2 coords = offsetToCoords(offset, ${t}, ${u});
          float value = getColorAsFloat(${(0,c.getGlsl)(this.context.glContext.version).texture2D}(${d}, coords));
          return value;
        }
        `}getPackedValueFrom(d,r,t,u,s){let m=`_${d}_Pack`;return s&&(m+="_T"),`
        vec4 ${m}(int m[${r}]) {
          int offset = indicesToOffset_${d}(m);
          vec2 coords = offsetToCoords(offset, ${t}, ${u});
          return ${(0,c.getGlsl)(this.context.glContext.version).texture2D}(${d}, coords);
        }
        `}}e.CoordsGlslLib=f},8520:(n,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),e.TopologicalSortGlslRoutines=e.GlslLibRoutineNode=e.GlslLibRoutine=e.GlslLib=e.GlslContext=e.FunctionType=void 0,(i=e.FunctionType||(e.FunctionType={}))[i.ValueBased=0]="ValueBased",i[i.Positional=1]="Positional",e.GlslContext=class{constructor(o,l,c,a){this.glContext=o,this.programInfo=l,this.inputTextureLayouts=c,this.outputTextureLayout=a}},e.GlslLib=class{constructor(o){this.context=o}},e.GlslLibRoutine=class{constructor(o,l){this.routineBody=o,this.dependencies=l}},e.GlslLibRoutineNode=class{constructor(o,l,c){this.name=o,this.dependencies=c||[],l&&(this.routineBody=l)}addDependency(o){o&&this.dependencies.push(o)}},e.TopologicalSortGlslRoutines=class{static returnOrderedNodes(o){if(!o||o.length===0)return[];if(o.length===1)return o;const l=new Set,c=new Set,a=new Array;return this.createOrderedNodes(o,l,c,a),a}static createOrderedNodes(o,l,c,a){for(let h=0;h<o.length;++h)this.dfsTraverse(o[h],l,c,a)}static dfsTraverse(o,l,c,a){if(!o||c.has(o.name))return;if(l.has(o.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");l.add(o.name);const h=o.dependencies;if(h&&h.length>0)for(let f=0;f<h.length;++f)this.dfsTraverse(h[f],l,c,a);a.push(o),c.add(o.name),l.delete(o.name)}}},7341:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.EncodingGlslLib=void 0;const o=i(8520);class l extends o.GlslLib{constructor(a){super(a)}getFunctions(){return Object.assign(Object.assign({},this.encodeFloat32()),this.decodeFloat32())}getCustomTypes(){return{}}encodeFloat32(){return{encode:new o.GlslLibRoutine(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new o.GlslLibRoutine(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){const a=l.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new o.GlslLibRoutine(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${a}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){const a=l.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new o.GlslLibRoutine(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${a}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){const a=new ArrayBuffer(4),h=new Uint32Array(a),f=new Uint8Array(a);if(h[0]=3735928559,f[0]===239)return!0;if(f[0]===222)return!1;throw new Error("unknown endianness")}}e.EncodingGlslLib=l},9894:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.FragColorGlslLib=void 0;const o=i(8520),l=i(5060);class c extends o.GlslLib{constructor(h){super(h)}getFunctions(){return Object.assign(Object.assign({},this.setFragColor()),this.getColorAsFloat())}getCustomTypes(){return{}}setFragColor(){const h=(0,l.getGlsl)(this.context.glContext.version);return{setFragColor:new o.GlslLibRoutine(`
        void setFragColor(float value) {
            ${h.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new o.GlslLibRoutine(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}e.FragColorGlslLib=c},2848:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.replaceInlines=void 0;const i=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm;e.replaceInlines=function(o){const l={};let c;for(;(c=i.exec(o))!==null;){const a=c[3].split(",").map(h=>{const f=h.trim().split(" ");return f&&f.length===2?{type:f[0],name:f[1]}:null}).filter(h=>h!==null);l[c[2]]={params:a,body:c[4]}}for(const a in l){const h="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;".replace("__FUNC__",a),f=new RegExp(h,"gm");for(;(c=f.exec(o))!==null;){const p=c[1],d=c[2],r=c[3].split(","),t=p?`${p} ${d};`:"";let u=l[a].body,s="";l[a].params.forEach((g,b)=>{g&&(s+=`${g.type} ${g.name} = ${r[b]};
`)}),u=`${s}
 ${u}`,u=u.replace("return",`${d} = `);const m=`
      ${t}
      {
        ${u}
      }
      `;o=o.replace(c[0],m)}}return o.replace(i,"")}},8879:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.GlslPreprocessor=void 0;const o=i(8520),l=i(2848),c=i(5483),a=i(5060);e.GlslPreprocessor=class{constructor(h,f,p,d){this.libs={},this.glslLibRoutineDependencyGraph={},this.context=new o.GlslContext(h,f,p,d),Object.keys(c.glslRegistry).forEach(t=>{const u=new c.glslRegistry[t](this.context);this.libs[t]=u});const r=this.glslLibRoutineDependencyGraph;for(const t in this.libs){const u=this.libs[t].getFunctions();for(const s in u){const m=t+"."+s;let g;r[m]?(g=r[m],g.routineBody=u[s].routineBody):(g=new o.GlslLibRoutineNode(m,u[s].routineBody),r[m]=g);const b=u[s].dependencies;if(b)for(let y=0;y<b.length;++y)if(r[b[y]])g.addDependency(r[b[y]]);else{const w=new o.GlslLibRoutineNode(b[y]);r[b[y]]=w,g.addDependency(w)}}}}preprocess(){const h=this.context.programInfo;let f=h.shaderSource;return this.context.programInfo.hasMain||(f=`${f}
      ${(0,a.getDefaultFragShaderMain)(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),f=(0,l.replaceInlines)(f),`${(0,a.getFragShaderPreamble)(this.context.glContext.version)}
    ${this.getUniforms(h.inputNames,h.variables)}
    ${this.getImports(f)}
    ${f}`}getImports(h){const f=this.selectGlslLibRoutinesToBeIncluded(h);if(f.length===0)return"";let p="";for(let d=0;d<f.length;++d){if(!f[d].routineBody)throw new Error(`Missing body for the Glsl Library routine: ${f[d].name}`);p+=f[d].routineBody+`
`}return p}selectGlslLibRoutinesToBeIncluded(h){const f=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(p=>{const d=p.split(".")[1];h.indexOf(d)!==-1&&f.push(this.glslLibRoutineDependencyGraph[p])}),o.TopologicalSortGlslRoutines.returnOrderedNodes(f)}getUniforms(h,f){const p=[];if(h)for(const d of h)p.push(`uniform sampler2D ${d};`);if(f)for(const d of f)p.push(`uniform ${d.type} ${d.name}${d.arrayLength?`[${d.arrayLength}]`:""};`);return p.join(`
`)}}},5483:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.glslRegistry=void 0;const o=i(5107),l=i(7341),c=i(9894),a=i(2655),h=i(3891);e.glslRegistry={encoding:l.EncodingGlslLib,fragcolor:c.FragColorGlslLib,vec:h.VecGlslLib,shapeUtils:a.ShapeUtilsGlslLib,coordinates:o.CoordsGlslLib}},2655:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ShapeUtilsGlslLib=void 0;const o=i(8520);class l extends o.GlslLib{constructor(a){super(a)}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},this.bcastIndex()),this.bcastMatmulIndex()),this.offsetToIndices()),this.indicesToOffset()),this.incrementIndices())}getCustomTypes(){return{}}bcastIndex(){const a=this.context.outputTextureLayout.shape.length,h={};return this.context.programInfo.inputNames.forEach((f,p)=>{const d=this.context.inputTextureLayouts[p].unpackedShape;if(d.length<=a){const r=d.length,t=a-r,u=`bcastIndices_${f}`;let s="";for(let g=0;g<r;++g)s+=`
          realIndices[${g}] = int( mod(float(bcastedIndices[${t+g}]), ${d[g]}.0) );
          `;const m=`
        void ${u} (int bcastedIndices[${a}], out int realIndices[${r}]) {
          ${s}
        }
        `;h[u]=new o.GlslLibRoutine(m)}}),h}bcastMatmulIndex(){const a=this.context.outputTextureLayout.shape.length,h={};return this.context.programInfo.inputNames.forEach((f,p)=>{const d=this.context.inputTextureLayouts[p].shape;if(!(d.length<2||d.length>a)){const r=d.length,t=a-r,u=`bcastMatmulIndices_${f}`;let s="";for(let g=0;g<r-2;++g)s+=`
          realIndices[${g}] = int( mod(float(bcastedIndices[${t+g}]), ${d[g]}.0) );
          `;const m=`
        void ${u}(int bcastedIndices[${a}], out int realIndices[${r}]) {
          ${s}
          realIndices[${r-1}] = bcastedIndices[${a-1}];
          realIndices[${r-2}] = bcastedIndices[${a-2}];
        }
        `;h[u]=new o.GlslLibRoutine(m)}}),h}indicesToOffset(){const a={};return this.context.programInfo.inputNames.forEach((h,f)=>{const p=this.context.inputTextureLayouts[f].shape,d=this.context.inputTextureLayouts[f].strides,r=p.length;let t=`indicesToOffset_${h}`;a[t]=new o.GlslLibRoutine(l.indexToOffsetSingle(t,r,d)),t=`indicesToOffset_${h}_T`,a[t]=new o.GlslLibRoutine(l.indexToOffsetSingle(t,r,d.slice().reverse()))}),a}static indexToOffsetSingle(a,h,f){let p="";for(let d=h-1;d>=0;--d)p+=`
        offset += indices[${d}] * ${f[d]};
        `;return`
      int ${a}(int indices[${h}]) {
        int offset = 0;
        ${p}
        return offset;
      }
      `}offsetToIndices(){const a={};return this.context.programInfo.inputNames.forEach((h,f)=>{const p=this.context.inputTextureLayouts[f].shape,d=this.context.inputTextureLayouts[f].strides,r=p.length;let t=`offsetToIndices_${h}`;a[t]=new o.GlslLibRoutine(l.offsetToIndicesSingle(t,r,d)),t=`offsetToIndices_${h}_T`,a[t]=new o.GlslLibRoutine(l.offsetToIndicesSingle(t,r,d.slice().reverse()))}),a}static offsetToIndicesSingle(a,h,f){const p=[];for(let d=0;d<h-1;++d)p.push(`
      indices[${d}] = offset / ${f[d]};`),p.push(`
        offset -= indices[${d}] * ${f[d]};`);return p.push(`
      indices[${h-1}] = offset;`),`
      void ${a}(int offset, out int indices[${h}]) {
        ${p.join("")}
      }
      `}incrementIndices(){const a={};return this.context.programInfo.inputNames.forEach((h,f)=>{const p=this.context.inputTextureLayouts[f].shape,d=p.length,r=`incrementIndices_${h}`;let t="";for(let s=0;s<d;++s)t+=`
        shape[${s}] = ${p[s]};`;const u=`
        void ${r}(int axis, out int indices[${d}]) {
          int shape[${d}];
          ${t};
          for(int i = ${d} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;a[r]=new o.GlslLibRoutine(u)}),a}}e.ShapeUtilsGlslLib=l},5060:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getDefaultFragShaderMain=e.getFragShaderPreamble=e.getVertexShaderSource=e.getGlsl=void 0;const i={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},o={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"};function l(c){return c===1?i:o}e.getGlsl=l,e.getVertexShaderSource=function(c){const a=l(c);return`${a.version}
      precision highp float;
      ${a.attribute} vec3 position;
      ${a.attribute} vec2 textureCoord;

      ${a.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`},e.getFragShaderPreamble=function(c){const a=l(c);return`${a.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${a.varyingFrag} vec2 TexCoords;
    ${a.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `},e.getDefaultFragShaderMain=function(c,a){return`
  void main() {
    int indices[${a}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${l(c).output} = result;
  }
  `}},3891:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.VecGlslLib=void 0;const o=i(8520);class l extends o.GlslLib{constructor(a){super(a)}getCustomTypes(){return{}}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign({},this.binaryVecFunctions()),this.copyVec()),this.setVecItem()),this.getVecItem())}binaryVecFunctions(){const a=this.context.outputTextureLayout.shape.length,h={add:"+=",sub:"-=",mul:"*=",div:"/="},f={};for(const p in h){const d=`${p}Vec`;let r="";for(let u=0;u<a;++u)r+=`
          dest[${u}] ${h[p]} src[${u}];
          `;const t=`
        void ${d}(int src[${a}], out int dest[${a}]) {
          ${r}
        }
        `;f[d]=new o.GlslLibRoutine(t)}return f}copyVec(){const a=this.context.outputTextureLayout.shape.length;let h="";for(let p=0;p<a;++p)h+=`
        dest[${p}] = src[${p}];
        `;const f=`
      void copyVec(int src[${a}], out int dest[${a}]) {
        ${h}
      }
      `;return{copyVec:new o.GlslLibRoutine(f)}}setVecItem(){const a=this.context.outputTextureLayout.shape.length;let h=`
        if(index < 0)
            index =${a} + index;
        if (index == 0)
            m[0] = value;
        `;for(let p=1;p<a-1;++p)h+=`
        else if (index == ${p})
            m[${p}] = value;
            `;h+=`
        else
            m[${a-1}] = value;
        `;const f=`
      void setVecItem(out int m[${a}], int index, int value) {
        ${h}
      }
        `;return{setVecItem:new o.GlslLibRoutine(f)}}getVecItem(){const a=this.context.outputTextureLayout.shape.length;let h=`
        if(index < 0)
            index = ${a} + index;
        if (index == 0)
            return m[0];
      `;for(let p=1;p<a-1;++p)h+=`
        else if (index == ${p})
            return m[${p}];
      `;h+=`
        else
            return m[${a-1}];
        `;const f=`
      int getVecItem(int m[${a}], int index) {
        ${h}
      }
    `;return{getVecItem:new o.GlslLibRoutine(f)}}}e.VecGlslLib=l},8316:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WebGLInferenceHandler=void 0;const o=i(6231),l=i(9162),c=i(2517),a=i(2403),h=i(7019),f=i(8710),p=i(5611),d=i(4057),r=i(2039);e.WebGLInferenceHandler=class{constructor(t){this.session=t,this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(t,u){return(0,d.calculateTextureWidthAndHeight)(this.session.layoutStrategy,t,u)}executeProgram(t,u){if(u.length<t.inputNames.length)throw new Error(`Input size mustn't be less than ${t.inputNames.length}.`);if(t.inputNames.length!==t.inputTypes.length)throw new Error("input names size does not match input types");const s=[];for(let x=0;x<t.inputNames.length;++x)s[x]=this.getOrCreateTextureData(u[x],t.inputTypes[x]);const m=((x,v)=>{const E=v.map(C=>`${C.unpackedShape.join(",")};${C.width}x${C.height}`).join("_");let O=x.name;return x.cacheHint&&(O+="["+x.cacheHint+"]"),O+=":"+E,O})(t,s);let g=this.session.programManager.getArtifact(m);const b=g?g.programInfo:typeof t.get=="function"?t.get():t,y=(0,d.createTextureLayoutFromTextureType)(this.session.layoutStrategy,b.output.dims,b.output.textureType),w=this.createTextureData(y,b.output.type);return g||(g=this.session.programManager.build(b,s,w),this.session.programManager.setArtifact(m,g)),this.runProgram(g,s,w),w}run(t,u){return this.executeProgram(t,u).tensor}runProgram(t,u,s){for(let m=0;m<u.length;++m)if(!!u[m].isPacked!=(t.programInfo.inputTypes[m]===r.TextureType.packed))throw new Error(`input[${m}] property packed inconsistent`);if(!!s.isPacked!=(t.programInfo.output.textureType===r.TextureType.packed))throw new Error("output property packed inconsistent");this.session.programManager.run(t,u,s)}getOrCreateTextureData(t,u){let s=this.getTextureData(t.dataId,u===r.TextureType.packed);if(!s&&(s=this.getTextureData(t.dataId,u!==r.TextureType.packed),s))return u===r.TextureType.packed?this.pack(s):this.unpack(s);if(!s){const m=(0,d.createTextureLayoutFromTextureType)(this.session.layoutStrategy,t.dims,u);if(u===r.TextureType.packedLastDimension){const y=t.dims;if(y.length===4){const w=[y[0],Math.ceil(y[1]*y[2]*y[3]/4)],x=(0,d.createTextureLayoutFromTextureType)(this.session.layoutStrategy,w,u);let v=t.numberData;if(y[1]*y[2]*y[3]%4!=0){const E=y[0],O=y[1]*y[2]*y[3],C=Math.ceil(O*1/4)*4;v=new Float32Array(E*C);for(let S=0;S<E;++S){const N=S*O,Q=S*C+S%1*O;v.set(t.numberData.subarray(N,N+O),Q)}}return this.createTextureData(x,t.type,v,t,1)}}if(u===r.TextureType.packed){const g=(0,d.createTextureLayoutFromShape)(this.session.layoutStrategy,t.dims,1,[],{reverseWH:!0}),b=this.createTextureData(g,t.type,t.numberData,t,1);s=this.pack(b)}else s=this.createTextureData(m,t.type,t.numberData,t,1)}return s}createTextureDataFromLayoutBindTensor(t,u,s,m){return this.createTextureData(t,u,s,m,1)}createTextureData(t,u,s,m,g){o.Logger.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(t)}]`);const b=this.session.textureManager.createTextureFromLayout(u,t,s,g);return this.createTextureDataFromTexture(t,u,b,m)}reshapeUnpacked(t,u){const s=this.getOrCreateTextureData(t,r.TextureType.unpacked),m={channels:s.channels,height:s.height,width:s.width,shape:u.length!==0?u:[1],strides:c.ShapeUtil.computeStrides(u),unpackedShape:u};return this.createTextureDataFromTexture(m,t.type,s.texture).tensor}reshapePacked(t,u){const s=this.getOrCreateTextureData(t,r.TextureType.packed);if((0,h.isReshapeCheap)(t.dims,u)){const w={channels:s.channels,height:s.height,width:s.width,shape:u.length!==0?u:[1],strides:c.ShapeUtil.computeStrides(u),unpackedShape:u,isPacked:!0};return this.createTextureDataFromTexture(w,t.type,s.texture).tensor}const m=(0,h.processDims3D)(t.dims),g=(0,h.processDims3D)(u),b=this.reshapePacked(t,m),y=this.run((0,h.createPackedReshape3DProgramInfoLoader)(this,b,g),[b]);return this.reshapePacked(y,u)}cast(t,u){const s=this.getOrCreateTextureData(t,r.TextureType.unpacked);return this.createTextureDataFromTexture(s,u,s.texture).tensor}createTextureDataFromTexture(t,u,s,m,g){const b=Object.assign(Object.assign({},t),{tensor:m||new l.Tensor(t.unpackedShape,u,y=>this.readTexture(b),async y=>this.readTextureAsync(b),void 0,g),texture:s});return this.setTextureData(b.tensor.dataId,b,t.isPacked),b}getTextureData(t,u=!1){return this.session.isInitializer(t)?this.session.getTextureData(t,u):u?this.packedTextureDataCache.get(t):this.unpackedTextureDataCache.get(t)}setTextureData(t,u,s=!1){this.session.isInitializer(t)?this.session.setTextureData(t,u,s):(s?this.packedTextureDataCache:this.unpackedTextureDataCache).set(t,u)}isTextureLayoutCached(t,u=!1){return!!this.getTextureData(t.dataId,u)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(t=>this.session.textureManager.releaseTexture(t)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(t=>this.session.textureManager.releaseTexture(t)),this.unpackedTextureDataCache=new Map}readTexture(t){return t.isPacked?this.readTexture(this.unpack(t)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(t,t.tensor.type,t.channels):this.session.textureManager.readUint8TextureAsFloat((0,f.encodeAsUint8)(this,t))}async readTextureAsync(t){return t.isPacked?this.readTextureAsync(this.unpack(t)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(t,t.tensor.type,t.channels):this.session.textureManager.readUint8TextureAsFloat((0,f.encodeAsUint8)(this,t))}pack(t){return this.executeProgram((0,a.createPackProgramInfoLoader)(this,t.tensor),[t.tensor])}unpack(t){return this.executeProgram((0,p.createUnpackProgramInfoLoader)(this,t.tensor),[t.tensor])}}},1640:function(n,e,i){var o=this&&this.__createBinding||(Object.create?function(se,be,ee,ve){ve===void 0&&(ve=ee);var Ce=Object.getOwnPropertyDescriptor(be,ee);Ce&&!("get"in Ce?!be.__esModule:Ce.writable||Ce.configurable)||(Ce={enumerable:!0,get:function(){return be[ee]}}),Object.defineProperty(se,ve,Ce)}:function(se,be,ee,ve){ve===void 0&&(ve=ee),se[ve]=be[ee]}),l=this&&this.__setModuleDefault||(Object.create?function(se,be){Object.defineProperty(se,"default",{enumerable:!0,value:be})}:function(se,be){se.default=be}),c=this&&this.__importStar||function(se){if(se&&se.__esModule)return se;var be={};if(se!=null)for(var ee in se)ee!=="default"&&Object.prototype.hasOwnProperty.call(se,ee)&&o(be,se,ee);return l(be,se),be};Object.defineProperty(e,"__esModule",{value:!0}),e.WEBGL_OP_RESOLVE_RULES=void 0;const a=i(2898),h=c(i(7839)),f=i(4196),p=i(2069),d=i(8138),r=i(9663),t=i(5193),u=i(7992),s=i(1253),m=i(4776),g=i(6572),b=i(3346),y=i(5623),w=i(2870),x=i(2143),v=i(4939),E=i(718),O=i(2268),C=i(8117),S=i(2278),N=i(5524),Q=i(5975),te=i(3933),Z=i(6558),Y=i(5723),G=i(3738),R=c(i(4909)),V=i(8428),ce=i(9793);e.WEBGL_OP_RESOLVE_RULES=[["Abs","","6+",R.abs],["Acos","","7+",R.acos],["Add","","7+",h.add],["And","","7+",h.and],["Asin","","7+",R.asin],["Atan","","7+",R.atan],["AveragePool","","7+",x.averagePool,x.parseAveragePoolAttributes],["BatchNormalization","","7+",a.batchNormalization,a.parseBatchNormalizationAttributes],["Cast","","6+",f.cast,f.parseCastAttributes],["Ceil","","6+",R.ceil],["Clip","","6-10",R.clip,R.parseClipAttributes],["Clip","","11+",R.clipV11],["Concat","","4+",p.concat,p.parseConcatAttributes],["Conv","","1+",d.conv,d.parseConvAttributes],["ConvTranspose","","1+",r.convTranspose,r.parseConvTransposeAttributes],["Cos","","7+",R.cos],["Div","","7+",h.div],["Dropout","","7+",R.identity],["DepthToSpace","","1+",t.depthToSpace,t.parseDepthToSpaceAttributes],["Equal","","7+",h.equal],["Elu","","6+",R.elu,R.parseEluAttributes],["Exp","","6+",R.exp],["Flatten","","1+",u.flatten,u.parseFlattenAttributes],["Floor","","6+",R.floor],["FusedConv","com.microsoft","1+",d.conv,d.parseConvAttributes],["Gather","","1+",s.gather,s.parseGatherAttributes],["Gemm","","7-10",m.gemm,m.parseGemmAttributesV7],["Gemm","","11+",m.gemm,m.parseGemmAttributesV11],["GlobalAveragePool","","1+",x.globalAveragePool,x.parseGlobalAveragePoolAttributes],["GlobalMaxPool","","1+",x.globalMaxPool],["Greater","","7+",h.greater],["Identity","","1+",R.identity],["ImageScaler","","1+",g.imageScaler,g.parseImageScalerAttributes],["InstanceNormalization","","6+",b.instanceNormalization,b.parseInstanceNormalizationAttributes],["LeakyRelu","","6+",R.leakyRelu,R.parseLeakyReluAttributes],["Less","","7+",h.less],["Log","","6+",R.log],["MatMul","","1+",y.matMul,y.parseMatMulAttributes],["MaxPool","","1+",x.maxPool,x.parseMaxPoolAttributes],["Mul","","7+",h.mul],["Neg","","6+",R.neg],["Not","","1+",R.not],["Or","","7+",h.or],["Pad","","2-10",w.padV2,w.parsePadAttributesV2],["Pad","","11+",w.padV11,w.parsePadAttributesV11],["Pow","","7+",h.pow],["PRelu","","7+",h.pRelu],["ReduceLogSum","","1+",v.reduceLogSum,v.parseReduceAttributes],["ReduceMax","","1+",v.reduceMax,v.parseReduceAttributes],["ReduceMean","","1+",v.reduceMean,v.parseReduceAttributes],["ReduceMin","","1+",v.reduceMin,v.parseReduceAttributes],["ReduceProd","","1+",v.reduceProd,v.parseReduceAttributes],["ReduceSum","","1-12",v.reduceSum,v.parseReduceAttributes],["ReduceSumSquare","","1+",v.reduceLogSumSquare,v.parseReduceAttributes],["Relu","","6+",R.relu],["Reshape","","5+",E.reshape],["Resize","","10",O.resize,O.parseResizeAttributesV10],["Resize","","11+",O.resize,O.parseResizeAttributesV11],["Shape","","1+",C.shape],["Sigmoid","","6+",R.sigmoid],["Sin","","7+",R.sin],["Slice","","10+",S.sliceV10],["Slice","","1-9",S.slice,S.parseSliceAttributes],["Softmax","","1-12",N.softmax,N.parseSoftmaxAttributes],["Softmax","","13+",N.softmaxV13,N.parseSoftmaxAttributesV13],["Split","","2-12",Q.split,Q.parseSplitAttributes],["Sqrt","","6+",R.sqrt],["Squeeze","","1-12",te.squeeze,te.parseSqueezeAttributes],["Squeeze","","13+",te.squeezeV13],["Sub","","7+",h.sub],["Sum","","6+",Z.sum],["Tan","","7+",R.tan],["Tanh","","6+",R.tanh],["Tile","","6+",Y.tile],["Transpose","","1+",G.transpose,G.parseTransposeAttributes],["Upsample","","7-8",ce.upsample,ce.parseUpsampleAttributesV7],["Upsample","","9",ce.upsample,ce.parseUpsampleAttributesV9],["Unsqueeze","","1-12",V.unsqueeze,V.parseUnsqueezeAttributes],["Unsqueeze","","13+",V.unsqueezeV13],["Xor","","7+",h.xor]]},2898:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseBatchNormalizationAttributes=e.batchNormalization=void 0;const o=i(246),l=i(5060),c=i(2039),a={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[c.TextureType.unpacked,c.TextureType.unpacked,c.TextureType.unpacked,c.TextureType.unpacked,c.TextureType.unpacked]};e.batchNormalization=(p,d,r)=>(f(d),[p.run(Object.assign(Object.assign({},a),{cacheHint:r.cacheKey,get:()=>h(p,d,r)}),d)]),e.parseBatchNormalizationAttributes=p=>{const d=p.attributes.getFloat("epsilon",1e-5),r=p.attributes.getFloat("momentum",.9),t=p.attributes.getInt("spatial",1);return(0,o.createAttributeWithCacheKey)({epsilon:d,momentum:r,spatial:t})};const h=(p,d,r)=>{const t=(0,l.getGlsl)(p.session.backend.glContext.version),u=d[0].dims.length,[s,m]=p.calculateTextureWidthAndHeight(d[1].dims,c.TextureType.unpacked),g=`
  float process(int[${u}] indices) {
    vec2 position = offsetToCoords(indices[1], ${s}, ${m});
    float scale = getColorAsFloat(${t.texture2D}(Scale, position));
    float mean = getColorAsFloat(${t.texture2D}(Mean, position));
    float variance = getColorAsFloat(${t.texture2D}(Variance, position));
    float b = getColorAsFloat(${t.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${r.epsilon})) ) + b;
  }`;return Object.assign(Object.assign({},a),{output:{dims:d[0].dims,type:d[0].type,textureType:c.TextureType.unpacked},shaderSource:g})},f=p=>{if(!p||p.length!==5)throw new Error("BatchNormalization requires 5 inputs.");const d=p[0],r=p[1],t=p[2],u=p[3],s=p[4];if(d.dims.length<3||r.dims.length!==1||t.dims.length!==1||u.dims.length!==1||s.dims.length!==1)throw new Error("invalid input shape.");if(r.dims[0]!==d.dims[1]||t.dims[0]!==d.dims[1]||u.dims[0]!==d.dims[1]||s.dims[0]!==d.dims[1])throw new Error("invalid input shape.");if(d.type!=="float32"&&d.type!=="float64"||r.type!=="float32"&&r.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||u.type!=="float32"&&u.type!=="float64"||s.type!=="float32"&&s.type!=="float64")throw new Error("invalid input tensor types.")}},7839:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.xor=e.sub=e.pRelu=e.pow=e.or=e.mul=e.less=e.greater=e.equal=e.div=e.and=e.add=e.glslPRelu=e.glslPow=e.glslXor=e.glslOr=e.glslAnd=e.glslLess=e.glslGreater=e.glslEqual=e.glslSub=e.glslMul=e.glslDiv=e.glslAdd=void 0;const o=i(2517),l=i(8520),c=i(5060),a=i(2039);function h(){const v="add_";return{body:`
  float ${v}(float a, float b) {
    return a + b;
  }
  vec4 ${v}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:v,type:l.FunctionType.ValueBased}}function f(){const v="div_";return{body:`
  float ${v}(float a, float b) {
    return a / b;
  }
  vec4 ${v}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:v,type:l.FunctionType.ValueBased}}function p(){const v="mul_";return{body:`
  float ${v}(float a, float b) {
    return a * b;
  }
  vec4 ${v}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:v,type:l.FunctionType.ValueBased}}function d(){const v="sub_";return{body:`
  float ${v}(float a, float b) {
    return a - b;
  }
  vec4 ${v}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:v,type:l.FunctionType.ValueBased}}function r(){const v="equal_";return{body:`
  float ${v}(float a, float b) {
    return float(a == b);
  }
  vec4 ${v}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:v,type:l.FunctionType.ValueBased}}function t(){const v="greater_";return{body:`
  float ${v}(float a, float b) {
    return float(a > b);
  }
  vec4 ${v}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:v,type:l.FunctionType.ValueBased}}function u(){const v="less_";return{body:`
  float ${v}(float a, float b) {
    return float(a < b);
  }
  vec4 ${v}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:v,type:l.FunctionType.ValueBased}}function s(){const v="and_";return{body:`
  float ${v}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${v}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:v,type:l.FunctionType.ValueBased}}function m(){const v="or_";return{body:`
  float ${v}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${v}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:v,type:l.FunctionType.ValueBased}}function g(){const v="xor_";return{body:`
  float ${v}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${v}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:v,type:l.FunctionType.ValueBased}}function b(){return function(v){const E=`${v}_`;return{body:`
  float ${E}(float a, float b) {
    return ${v}(a, b);
  }
  vec4 ${E}(vec4 v1, vec4 v2) {
    return ${v}(v1, v2);
  }
  `,name:E,type:l.FunctionType.ValueBased}}("pow")}function y(){const v="prelu_";return{body:`
  float ${v}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${v}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:v,type:l.FunctionType.ValueBased}}e.glslAdd=h,e.glslDiv=f,e.glslMul=p,e.glslSub=d,e.glslEqual=r,e.glslGreater=t,e.glslLess=u,e.glslAnd=s,e.glslOr=m,e.glslXor=g,e.glslPow=b,e.glslPRelu=y;const w=(v,E,O,C=E[0].type,S)=>{const N=v.session.pack?a.TextureType.packed:a.TextureType.unpacked;return{name:O.name,inputNames:["A","B"],inputTypes:[N,N],cacheHint:S,get:()=>x(v,E,O,C)}},x=(v,E,O,C=E[0].type)=>{const S=v.session.pack?a.TextureType.packed:a.TextureType.unpacked,N=!o.ShapeUtil.areEqual(E[0].dims,E[1].dims);let Q=E[0].dims;const te=v.session.pack;if(N){const G=o.BroadcastUtil.calcShape(E[0].dims,E[1].dims,!1);if(!G)throw new Error("Can't perform binary op on the given tensors");Q=G;const R=Q.length,V=E[0].dims.length!==0?E[0].dims.length:1,ce=E[1].dims.length!==0?E[1].dims.length:1,se=E[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",be=E[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",ee=(0,c.getGlsl)(v.session.backend.glContext.version),ve=te?`
      ${O.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${O.name}(a, b);
        ${ee.output} = result;
      }`:`
      ${O.body}
      float process(int indices[${R}]) {
        int aindices[${V}];
        int bindices[${ce}];
        ${se}
        ${be}
        return ${O.name}(_A(aindices), _B(bindices));
      }`;return{name:O.name,inputNames:["A","B"],inputTypes:[S,S],output:{dims:Q,type:C,textureType:S},shaderSource:ve,hasMain:te}}const Z=(0,c.getGlsl)(v.session.backend.glContext.version),Y=`
    ${O.body}
    void main() {
      vec4 v1 = ${Z.texture2D}(A, TexCoords);
      vec4 v2 = ${Z.texture2D}(B, TexCoords);
      vec4 result = ${O.name}(v1, v2);
      ${Z.output} = result;
    }
    `;return{name:O.name,inputNames:["A","B"],inputTypes:[S,S],output:{dims:E[0].dims,type:C,textureType:S},shaderSource:Y,hasMain:!0}};e.add=(v,E)=>[v.run(w(v,E,h()),E)],e.and=(v,E)=>[v.run(w(v,E,s(),"bool"),E)],e.div=(v,E)=>[v.run(w(v,E,f()),E)],e.equal=(v,E)=>[v.run(w(v,E,r(),"bool"),E)],e.greater=(v,E)=>[v.run(w(v,E,t(),"bool"),E)],e.less=(v,E)=>[v.run(w(v,E,u(),"bool"),E)],e.mul=(v,E)=>[v.run(w(v,E,p()),E)],e.or=(v,E)=>[v.run(w(v,E,m(),"bool"),E)],e.pow=(v,E)=>[v.run(w(v,E,b()),E)],e.pRelu=(v,E)=>[v.run(w(v,E,y()),E)],e.sub=(v,E)=>[v.run(w(v,E,d()),E)],e.xor=(v,E)=>[v.run(w(v,E,g(),"bool"),E)]},4196:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseCastAttributes=e.cast=void 0;const o=i(2517);e.cast=(c,a,h)=>(l(a),[c.cast(a[0],h)]),e.parseCastAttributes=c=>o.ProtoUtil.tensorDataTypeFromProto(c.attributes.getInt("to"));const l=c=>{if(!c||c.length!==1)throw new Error("Cast requires 1 input.");if(c[0].type==="string")throw new Error("Invalid input type.")}},1163:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createPackedConcatProgramInfoLoader=void 0;const o=i(5060),l=i(2039),c=i(9390),a=i(2827);e.createPackedConcatProgramInfoLoader=(f,p,d)=>{const r=(t=p.length,u=d.cacheKey,{name:"Concat (packed)",inputNames:Array.from({length:t},(s,m)=>`X${m}`),inputTypes:Array(t).fill(l.TextureType.packed),cacheHint:u});var t,u;return Object.assign(Object.assign({},r),{get:()=>((s,m,g,b)=>{const y=g[0].dims.slice();if(b>=y.length||b<-1*y.length)throw new Error("axis specified for concat doesn't match input dimensionality");b<0&&(b=y.length+b);const w=y.slice(0);for(let se=1;se<g.length;se++){const be=g[se].dims.slice();for(let ee=0;ee<y.length;ee++)if(ee===b)w[b]+=be[ee];else if(y[ee]!==be[ee])throw new Error("non concat dimensions must match")}const x=w.length,v=(0,a.getChannels)("coords",x),E=(0,c.getCoordsDataType)(x),O=(0,a.unpackFromChannel)(),C=g.map(se=>se.dims),S=(0,c.getGlChannels)(x),N=new Array(C.length-1);N[0]=C[0][b];for(let se=1;se<N.length;se++)N[se]=N[se-1]+C[se][b];const Q=S[b],te=S.slice(-2),Z=S.join();let Y=`if (${Q} < ${N[0]}) {
        return getChannel(
            getX0(${Z}), vec2(${te.join()}));
        }`;for(let se=1;se<N.length;se++){const be=N[se-1];Y+=`
            if (${Q} < ${N[se]}  && ${Q} >= ${N[se-1]}) {
              return getChannel(
                getX${se}(${h(S,Q,be)}),
                vec2(${h(te,Q,be)}));
            }`}const G=N.length,R=N[N.length-1];Y+=`
            return getChannel(
              getX${G}(${h(S,Q,R)}),
              vec2(${h(te,Q,R)}));`;const V=(0,o.getGlsl)(s.session.backend.glContext.version),ce=`
          ${O}
          float getValue(${S.map(se=>"int "+se)}) {
            ${Y}
          }

          void main() {
            ${E} coords = getOutputCoords();
            int lastDim = coords.${S[x-1]};
            coords.${S[x-1]} = coords.${S[x-2]};
            coords.${S[x-2]} = lastDim;

            vec4 result = vec4(getValue(${v}), 0., 0., 0.);

            ${v[x-1]} = ${v[x-1]} + 1;
            if (${v[x-1]} < ${w[x-1]}) {
              result.g = getValue(${v});
            }

            ${v[x-2]} = ${v[x-2]} + 1;
            if (${v[x-2]} < ${w[x-2]}) {
              result.a = getValue(${v});
            }

            ${v[x-1]} = ${v[x-1]} - 1;
            if (${v[x-2]} < ${w[x-2]} &&
                ${v[x-1]} < ${w[x-1]}) {
              result.b = getValue(${v});
            }
            ${V.output} = result;
          }
        `;return Object.assign(Object.assign({},m),{output:{dims:w,type:g[0].type,textureType:l.TextureType.packed},shaderSource:ce,hasMain:!0})})(f,r,p,d.axis)})};const h=(f,p,d)=>{const r=f.indexOf(p);return f.map((t,u)=>u===r?`${t} - ${d}`:t).join()}},2069:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseConcatAttributes=e.concat=void 0;const o=i(246),l=i(2039),c=i(1163);e.concat=(t,u,s)=>(r(u),t.session.pack&&u[0].dims.length>1?[t.run((0,c.createPackedConcatProgramInfoLoader)(t,u,s),u)]:[t.run(a(t,u,s),u)]);const a=(t,u,s)=>{const m=(g=u.length,b=s.cacheKey,{name:"Concat",inputNames:Array.from({length:g},(y,w)=>`X${w}`),inputTypes:Array(g).fill(l.TextureType.unpacked),cacheHint:b});var g,b;return Object.assign(Object.assign({},m),{get:()=>((y,w,x,v)=>{const E=x[0].dims.slice();if(v>=E.length||v<-1*E.length)throw new Error("axis specified for concat doesn't match input dimensionality");v<0&&(v=E.length+v);const O=E.slice(0);for(let Z=1;Z<x.length;Z++){const Y=x[Z].dims.slice();for(let G=0;G<E.length;G++)if(G===v)O[v]+=Y[G];else if(E[G]!==Y[G])throw new Error("non concat dimensions must match")}const C=O.length,S=new Array(x.length);let N=0;for(let Z=0;Z<S.length;++Z)N+=x[Z].dims[v],S[Z]=N;let Q="";Q=x.length<5?h(S):f(S);const te=`
        ${p(x.length,C)}
        ${d(S)}
        ${Q}
        float process(int indices[${C}]) {
          int textureIndex = getTextureWhereDataResides (indices[${v}]);

          if(textureIndex != 0) {
            indices[${v}] = indices[${v}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return Object.assign(Object.assign({},w),{output:{dims:O,type:x[0].type,textureType:l.TextureType.unpacked},shaderSource:te})})(0,m,u,s.axis)})},h=t=>`int getTextureWhereDataResides(int index) {
      ${t.map((u,s)=>`if(index<${u}) {return ${s};}
`).join("")}
    }`,f=t=>h(t),p=(t,u)=>{const s=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${u}]) {`];for(let m=0;m<t;++m)m===0?s.push(`	if (textureIndex == ${m}) { return _X${m}(indices); }`):m===t-1?s.push(`	else { return _X${m}(indices); }`):s.push(`	else if (textureIndex == ${m}) { return _X${m}(indices); }`);return s.push("	}"),s.join(`
`)},d=t=>{const u=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let s=0;s<t.length;++s)s===0?u.push(`	if (index == ${s}) { return ${t[s]}; }`):s===t.length-1?u.push(`	else { return ${t[s]}; }`):u.push(`	else if (index == ${s}) { return ${t[s]}; }`);return u.push("	}"),u.join(`
`)};e.parseConcatAttributes=t=>(0,o.createAttributeWithCacheKey)({axis:t.attributes.getInt("axis")});const r=t=>{if(!t||t.length<1)throw new Error("too few inputs");const u=t[0].type,s=t[0].dims.length;if(u==="string")throw new Error("string tensor is not supported yet");for(const m of t){if(m.type!==u)throw new Error("input tensors should be one type");if(m.dims.length!==s)throw new Error("input tensors should have the same shape")}}},4770:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createUnpackedGroupedConvProgramInfoLoader=void 0;const o=i(6231),l=i(5060),c=i(2039),a=i(8138),h=i(2823);e.createUnpackedGroupedConvProgramInfoLoader=(f,p,d)=>{const r=(t=p.length>2,u=d.cacheKey,{name:"GroupedConv",inputNames:t?["X","W","Bias"]:["X","W"],inputTypes:t?[c.TextureType.unpacked,c.TextureType.unpacked,c.TextureType.unpacked]:[c.TextureType.unpacked,c.TextureType.unpacked],cacheHint:u});var t,u;return Object.assign(Object.assign({},r),{get:()=>((s,m,g,b)=>{const y=m.length>2?"value += getBias(output_channel);":"",w=m[0].dims.slice(),x=m[1].dims.slice(),v=x[0]/b.group;o.Logger.verbose("GroupedConv",`autpPad:${b.autoPad}, dilations:${b.dilations}, group:${b.group}, kernelShape:${b.kernelShape}, pads:${b.pads}, strides:${b.strides}`);const E=(0,a.calculateOutputShape)(w,x,b.dilations,b.pads,b.strides),O=(0,l.getGlsl)(s.session.backend.glContext.version),{activationFunction:C,applyActivation:S}=(0,h.getActivationSnippet)(b),N=`
  const ivec2 strides = ivec2(${b.strides[0]}, ${b.strides[1]});
  const ivec2 pads = ivec2(${b.pads[0]}, ${b.pads[1]});
  ${C}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${v};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${x[1]}; wInChannel++) {
      int input_channel = group_id * ${x[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${x[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${b.dilations[0]};

        if (xHeight < 0 || xHeight >= ${w[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${x[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${b.dilations[1]};
          if (xWidth < 0 || xWidth >= ${w[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${y}
    ${S}
    ${O.output} = vec4(value, .0, .0, .0);
  }
`;return Object.assign(Object.assign({},g),{output:{dims:E,type:m[0].type,textureType:c.TextureType.unpacked},shaderSource:N,hasMain:!0})})(f,p,r,d)})}},1386:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.conv2DPacked=e.conv2DPackedPointwise=void 0;const o=i(8138),l=i(8555),c=i(708);e.conv2DPackedPointwise=(a,h,f)=>{const p=h[0].dims,d=h[1].dims,r=(0,o.calculateOutputShape)(p,d,f.dilations,f.pads,f.strides),t=a.reshapePacked(h[0],[p[1],p[2]*p[3]]),u=a.reshapePacked(h[1],[d[0],d[1]]),s=h.length>2?[u,t,h[2]]:[u,t],m=a.run((0,c.createPackedMatmulProgramInfoLoader)(a,s,f),s);return a.reshapePacked(m,r)},e.conv2DPacked=(a,h,f)=>{const p=h[0].dims,d=h[1].dims,r=(0,o.calculateOutputShape)(p,d,f.dilations,f.pads,f.strides),t=a.run((0,l.createPackedIm2ColProgramInfoLoader)(a,h[0],h[1],r,f),[h[0]]),u=a.reshapePacked(h[1],[d[0],d[1]*d[2]*d[3]]),s=h.length===3?[u,t,h[2]]:[u,t],m=a.run((0,c.createPackedMatmulProgramInfoLoader)(a,s,f),s);return a.reshapePacked(m,r)}},9663:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseConvTransposeAttributes=e.convTranspose=void 0;const o=i(246),l=i(5060),c=i(2039),a=i(2823),h=(u,s,m,g,b,y)=>(u-1)*s+m+(g-1)*b+1-y,f=(u,s,m,g,b)=>{const y=Math.floor(u/2);s==="SAME_UPPER"?(m[g]=y,m[b]=u-y):s==="SAME_LOWER"&&(m[g]=u-y,m[b]=y)};e.convTranspose=(u,s,m)=>(t(s,m),p(u,s,m));const p=(u,s,m)=>{const g=r(m,s);return[d(u,s,g)]},d=(u,s,m)=>u.run(((g,b,y)=>{const w=(x=b.length>2,v=y.cacheKey,{name:"ConvTranspose",inputNames:x?["X","W","B"]:["X","W"],inputTypes:x?[c.TextureType.unpacked,c.TextureType.unpacked,c.TextureType.unpacked]:[c.TextureType.unpacked,c.TextureType.unpacked],cacheHint:v});var x,v;return Object.assign(Object.assign({},w),{get:()=>((E,O,C,S)=>{const N=O.length>2?"getB(output_channel)":"0.0",Q=O[0].dims,te=O[1].dims,Z=te[1],Y=te[0]/S.group,G=[O[0].dims[0],O[1].dims[1]*S.group,...S.outputShape],R=(0,l.getGlsl)(E.session.backend.glContext.version),{activationFunction:V,applyActivation:ce}=(0,a.getActivationSnippet)(S),se=`
  const ivec2 strides = ivec2(${S.strides[0]}, ${S.strides[1]});
  const ivec2 pads = ivec2(${S.pads[0]}, ${S.pads[1]});
  ${V}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${Z};
    int wOutChannel = output_channel - group_id * ${Z};

    float value = ${N};
    for (int inChannelOffset = 0; inChannelOffset < ${Y}; inChannelOffset++) {
      int input_channel = group_id * ${Y} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${te[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${te[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${S.dilations[0]}, wHOff * ${S.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${Q[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${Q[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${ce}
    ${R.output} = vec4(value, .0, .0, .0);
  }
`;return Object.assign(Object.assign({},C),{output:{dims:G,type:O[0].type,textureType:c.TextureType.unpacked},shaderSource:se,hasMain:!0})})(g,b,w,y)})})(u,s,m),s),r=(u,s)=>{const m=u.kernelShape.slice();if(u.kernelShape.length===0)for(let w=2;w<s[1].dims.length;++w)m.push(s[1].dims[w]);const g=u.pads.slice(),b=u.outputShape.slice();((w,x,v,E,O,C,S,N)=>{const Q=w.length-2,te=N.length===0;for(let Z=0;Z<Q;++Z){const Y=te?w[Z+2]*C[Z]:N[Z],G=h(w[Z+2],C[Z],O[Z],x[Z],v[Z],Y);f(G,E,O,Z,Z+Q),te&&N.push(C[Z]*(w[Z+2]-1)+S[Z]+(x[Z]-1)*v[Z]+1-O[Z]-O[Z+Q])}})(s[0].dims,m,u.dilations,u.autoPad,g,u.strides,u.outputPadding,b);const y=Object.assign({},u);return Object.assign(y,{kernelShape:m,pads:g,outputShape:b,cacheKey:u.cacheKey}),y};e.parseConvTransposeAttributes=u=>{const s=u.attributes,m=(0,a.parseInternalActivationAttributes)(s),g=s.getString("auto_pad","NOTSET"),b=s.getInts("dilations",[1,1]),y=s.getInt("group",1),w=s.getInts("kernel_shape",[]),x=s.getInts("output_padding",[0,0]),v=s.getInts("output_shape",[]),E=s.getInts("pads",[0,0,0,0]),O=s.getInts("strides",[1,1]);return(0,o.createAttributeWithCacheKey)(Object.assign({autoPad:g,dilations:b,group:y,kernelShape:w,outputPadding:x,outputShape:v,pads:E,strides:O},m))};const t=(u,s)=>{if(!u||u.length!==2&&u.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(u[0].dims.length!==4||u[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");if(u[0].dims[1]!==u[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");const m=u[1].dims[1]*s.group;if(u.length===3&&(u[2].dims.length!==1||u[2].dims[0]!==m))throw new Error("invalid bias");const g=u[0].dims.length-2;if(s.dilations.length!==g)throw new Error(`dilations should be ${g}D`);if(s.strides.length!==g)throw new Error(`strides should be ${g}D`);if(s.pads.length!==2*g)throw new Error(`pads should be ${2*g}D`);if(s.outputPadding.length!==g)throw new Error(`output_padding should be ${g}D`);if(s.kernelShape.length!==0&&s.kernelShape.length!==u[1].dims.length-2)throw new Error("invalid kernel shape");if(s.outputShape.length!==0&&s.outputShape.length!==u[0].dims.length-2)throw new Error("invalid output shape");if(u[0].type!=="float32"||u[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(u.length===3&&u[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}},8138:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseConvAttributes=e.conv=e.calculateOutputShape=void 0;const o=i(246),l=i(2517),c=i(4770),a=i(1386),h=i(9828),f=i(2823),p=i(3248),d=i(5623);e.calculateOutputShape=(g,b,y,w,x)=>{const v=g[0],E=g.slice(2),O=E.length,C=b[0],S=b.slice(2).map((Q,te)=>Q+(Q-1)*(y[te]-1)),N=E.map((Q,te)=>Q+w[te]+w[te+O]).map((Q,te)=>Math.floor((Q-S[te]+x[te])/x[te]));return[v,C].concat(...N)},e.conv=(g,b,y)=>(m(b,y),r(g,b,y));const r=(g,b,y)=>{const w=s(y,b),x=g.session.pack,v=w.kernelShape[0]===1&&w.kernelShape[1]===1;return w.group>1?[g.run((0,c.createUnpackedGroupedConvProgramInfoLoader)(g,b,w),b)]:v&&x?[t(g,b,w)]:x&&b[0].dims.length===4&&b[0].dims[0]===1&&!v?[(0,a.conv2DPacked)(g,b,w)]:[u(g,b,w)]},t=(g,b,y)=>{const w=b[0].dims,x=b[1].dims,v=(0,e.calculateOutputShape)(w,x,y.dilations,y.pads,y.strides),E=g.reshapeUnpacked(b[0],[w[1],w[2]*w[3]]),O=g.reshapeUnpacked(b[1],[x[0],x[1]]),C=b.length>2?[O,E,b[2]]:[O,E],S=g.run((0,d.createMatmulProgramInfoLoader)(C,y),C);return g.reshapeUnpacked(S,v)},u=(g,b,y)=>{const w=b[0].dims,x=b[1].dims,v=(0,e.calculateOutputShape)(w,x,y.dilations,y.pads,y.strides),E=g.run((0,p.createIm2ColProgramInfoLoader)(g,b[0],b[1],v,y),[b[0]]),O=b.length===3?[E,b[1],b[2]]:[E,b[1]];return g.run((0,h.createDotProductProgramInfoLoader)(g,b,v,y),O)},s=(g,b)=>{const y=g.kernelShape.slice();if(g.kernelShape.length===0)for(let v=2;v<b[1].dims.length;++v)y.push(b[1].dims[v]);const w=g.pads.slice();l.PoolConvUtil.adjustPadsBasedOnAutoPad(b[0].dims,g.strides,g.dilations,y,w,g.autoPad);const x=Object.assign({},g);return Object.assign(x,{kernelShape:y,pads:w,cacheKey:g.cacheKey}),x};e.parseConvAttributes=g=>{const b=g.attributes,y=(0,f.parseInternalActivationAttributes)(b),w=b.getString("auto_pad","NOTSET"),x=b.getInts("dilations",[1,1]),v=b.getInt("group",1),E=b.getInts("kernel_shape",[]),O=b.getInts("pads",[0,0,0,0]),C=b.getInts("strides",[1,1]);return(0,o.createAttributeWithCacheKey)(Object.assign({autoPad:w,dilations:x,group:v,kernelShape:E,pads:O,strides:C},y))};const m=(g,b)=>{if(!g||g.length!==2&&g.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(g[0].dims.length!==4||g[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");if(g[0].dims[1]!==g[1].dims[1]*b.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(g.length===3&&(g[2].dims.length!==1||g[1].dims[0]!==g[2].dims[0]))throw new Error("invalid bias");const y=g[0].dims.length-2;if(b.dilations.length!==y)throw new Error(`dilations should be ${y}D`);if(b.strides.length!==y)throw new Error(`strides should be ${y}D`);if(b.pads.length!==2*y)throw new Error(`pads should be ${2*y}D`);if(b.kernelShape.length!==0&&b.kernelShape.length!==g[1].dims.length-2)throw new Error("invalid kernel shape");if(g[0].type!=="float32"||g[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(g.length===3&&g[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}},5193:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseDepthToSpaceAttributes=e.depthToSpace=void 0;const o=i(3738);e.depthToSpace=(c,a,h)=>{l(a);const f=h.blocksize,p=f*f,d=h.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],r=h.mode==="DCR"?[a[0].dims[0],f,f,a[0].dims[1]/p,a[0].dims[2],a[0].dims[3]]:[a[0].dims[0],a[0].dims[1]/p,f,f,a[0].dims[2],a[0].dims[3]],t=c.reshapeUnpacked(a[0],r),u={perm:d,cacheKey:`${d}`},[s]=(0,o.transpose)(c,[t],u),m=[a[0].dims[0],a[0].dims[1]/p,a[0].dims[2]*f,a[0].dims[3]*f];return[c.reshapeUnpacked(s,m)]},e.parseDepthToSpaceAttributes=c=>{const a=c.attributes.getInt("blocksize");if(a<1)throw new Error(`blocksize must be >= 1, but got : ${a} for DepthToSpace`);const h=c.attributes.getString("mode","DCR");if(h!=="DCR"&&h!=="CRD")throw new Error(`unrecognized mode: ${h} for DepthToSpace`);return{mode:h,blocksize:a}};const l=c=>{if(c.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${c.length}`);if(c[0].type==="string"||c[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}},9828:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createDotProductProgramInfoLoader=void 0;const o=i(2517),l=i(5060),c=i(2039),a=i(2823),h=i(3248);e.createDotProductProgramInfoLoader=(f,p,d,r)=>{const t=((u,s)=>({name:"ConvDotProduct",inputNames:u?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:u?[c.TextureType.unpacked,c.TextureType.packedLastDimension,c.TextureType.unpacked]:[c.TextureType.unpacked,c.TextureType.packedLastDimension],cacheKey:s.activationCacheKey}))(p.length>2,r);return Object.assign(Object.assign({},t),{get:()=>((u,s,m,g,b)=>{const y=m[0].dims,w=m[1].dims,x=[w[0],Math.ceil(y[1]*w[2]*w[3]/4)],v=(0,h.calculateIm2ColDims)(y,w,g),[E,O]=u.calculateTextureWidthAndHeight(x,c.TextureType.packedLastDimension),C=o.ShapeUtil.computeStrides(v),[S,N]=u.calculateTextureWidthAndHeight(v,c.TextureType.packedLastDimension),Q=g.length,te=m.length<3?"0.0":"_B(b)",Z=Math.ceil(y[1]*w[2]*w[3]/4),{activationFunction:Y,applyActivation:G}=(0,a.getActivationSnippet)(b),R=(0,l.getGlsl)(u.session.backend.glContext.version),V=`
${Y}
float process(int indices[${Q}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${C[0]} + im2col[1] * ${C[1]} + im2col[2] * ${C[2]};
  int kernelOffset = indices[1] * ${x[1]};
  float value = ${te};
  for (int i = 0; i < ${Z}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${S}, ${N});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${E}, ${O});
    value += dot(${R.texture2D}(Im2Col, im2colCoords), ${R.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${G}
  return value;
}`;return Object.assign(Object.assign({},s),{output:{dims:g,type:m[0].type,textureType:c.TextureType.unpacked},shaderSource:V})})(f,t,p,d,r)})}},7992:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseFlattenAttributes=e.flatten=void 0;const o=i(2517);e.flatten=(c,a,h)=>{l(a,h);const f=o.ShapeUtil.flattenShape(a[0].dims,h);return[c.reshapeUnpacked(a[0],f)]},e.parseFlattenAttributes=c=>c.attributes.getInt("axis",1);const l=(c,a)=>{if(!c||c.length!==1)throw new Error("Flatten requires 1 input.");const h=c[0].dims.length;if(h===0)throw new Error("scalar tensor is not supported.");if(a<-h||a>h)throw new Error("Invalid axis");if(c[0].type==="string")throw new Error("string tensor is not supported.")}},2823:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseInternalActivationAttributes=e.getActivationSnippet=void 0;const o=i(2517),l=i(4909);e.getActivationSnippet=function(c){let a;switch(c.activation){case"Relu":a=(0,l.glslRelu)();break;case"Sigmoid":a=(0,l.glslSigmoid)();break;case"Clip":a=(0,l.glslClip)(c.clipMin,c.clipMax);break;default:return{activationFunction:"",applyActivation:""}}const h=a.name;return{activationFunction:a.body,applyActivation:`value = ${h}_(value);`}},e.parseInternalActivationAttributes=c=>{const a=c.getString("activation","");if(a==="Clip"){const[h,f]=c.getFloats("activation_params",[o.MIN_CLIP,o.MAX_CLIP]);return{activation:a,clipMax:f,clipMin:h,activationCacheKey:`${a}:${h},${f}`}}return{activation:a,activationCacheKey:a}}},1253:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseGatherAttributes=e.gather=void 0;const o=i(246),l=i(782),c=i(2517),a=i(2039);e.gather=(d,r,t)=>(p(r,t.axis),[d.run(f(d,r,t),r)]),e.parseGatherAttributes=d=>(0,o.createAttributeWithCacheKey)({axis:d.attributes.getInt("axis",0)});const h={name:"Gather",inputNames:["A","B"],inputTypes:[a.TextureType.unpacked,a.TextureType.unpacked]},f=(d,r,t)=>{const u=Object.assign(Object.assign({},h),{cacheHint:t.cacheKey});return Object.assign(Object.assign({},u),{get:()=>((s,m,g,b)=>{const y=g[0].dims.slice(),w=g[1].dims.slice(),x=new Array(y.length+w.length-1);b=c.ShapeUtil.normalizeAxis(b,y.length);const v=[];for(let O=0;O<x.length;O++)O<b?(x[O]=y[O],v.push(`inputIdx[${O}] = outputIdx[${O}];`)):O<b+w.length?(x[O]=w[O-b],v.push(`indexDataIdx[${O-b}] = outputIdx[${O}];`)):(x[O]=y[O-w.length+1],v.push(`inputIdx[${O-w.length+1}] = outputIdx[${O}];`));const E=`
      float process(int outputIdx[${x.length||1}]) {
        int inputIdx[${y.length}];
        int indexDataIdx[${w.length||1}];
        indexDataIdx[0] = 0;
        ${v.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${b}] = idx < 0 ? idx + ${y[b]} : idx;
        return _A(inputIdx);
      }`;return Object.assign(Object.assign({},m),{output:{dims:x,type:g[0].type,textureType:a.TextureType.unpacked},shaderSource:E})})(0,u,r,t.axis)})},p=(d,r)=>{if(!d||d.length!==2)throw new Error("Gather requires 2 inputs.");const t=d[0].dims.length;if(t<1)throw new Error("Invalid input shape.");if(r<-t||r>t-1)throw new Error("Invalid axis.");if(l.NUMBER_TYPES.indexOf(d[0].type)===-1)throw new Error("Invaid input type.");if(d[1].type!=="int32"&&d[1].type!=="int16")throw new Error("Invaid input type.")}},4776:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseGemmAttributesV11=e.parseGemmAttributesV7=e.gemm=void 0;const o=i(246),l=i(2517),c=i(2039);e.gemm=(d,r,t)=>(p(r,t),[d.run(h(r,t),r)]);const a=(d,r)=>{const t=d.attributes.getInt("transA",0)!==0,u=d.attributes.getInt("transB",0)!==0,s=d.attributes.getFloat("alpha",1),m=d.attributes.getFloat("beta",1);return(0,o.createAttributeWithCacheKey)({transA:t,transB:u,alpha:s,beta:m,isOptionalC:r})};e.parseGemmAttributesV7=d=>a(d,!1),e.parseGemmAttributesV11=d=>a(d,!0);const h=(d,r)=>{const t={name:"Gemm",inputNames:d.length===3?["A","B","C"]:["A","B"],inputTypes:d.length===3?[c.TextureType.unpacked,c.TextureType.unpacked,c.TextureType.unpacked]:[c.TextureType.unpacked,c.TextureType.unpacked],key:r.cacheKey};return Object.assign(Object.assign({},t),{get:()=>f(t,d,r)})},f=(d,r,t)=>{const u=r[0].dims.slice(),s=r[1].dims.slice(),[m,g]=l.GemmUtil.getShapeOfGemmResult(u,t.transA,s,t.transB,r.length===3?r[2].dims:void 0),b=[m,g];if(!b)throw new Error("Can't use gemm on the given tensors");let y=u[u.length-1],w="";t.transA&&(y=u[0]),t.transA&&t.transB?w="value += _A_T(a) * _B_T(b);":t.transA&&!t.transB?w="value += _A_T(a) * _B(b);":!t.transA&&t.transB?w="value += _A(a) * _B_T(b);":t.transA||t.transB||(w="value += _A(a) * _B(b);");const x=b.length,v=`
      float process(int indices[${x}]) {
          int a[${x}];
          int b[${x}];
          ${r.length===3?`int c[${r[2].dims.length}];`:""}

          copyVec(indices, a);
          copyVec(indices, b);
          ${r.length===3?"bcastIndices_C(indices, c);":""}

          float value = 0.0;
          for (int k=0; k<${y}; ++k) {
              a[${x-1}] = k;
              b[${x-2}] = k;
              ${w}
          }

          value = value * alpha;
          ${r.length===3?"value += beta * _C(c);":""}
          return value;
      }`;return Object.assign(Object.assign({},d),{output:{dims:b,type:r[0].type,textureType:c.TextureType.unpacked},variables:[{name:"alpha",type:"float",data:t.alpha},{name:"beta",type:"float",data:t.beta}],shaderSource:v})},p=(d,r)=>{if(!d)throw new Error("Input is missing");if(r.isOptionalC&&(d.length<2||d.length>3))throw new Error("Invaid input shape.");if(!r.isOptionalC&&d.length!==3)throw new Error("Gemm requires 3 inputs");if(d.length===3&&d[2].dims.length!==1&&d[2].dims.length!==2)throw new Error("Invalid input shape of C");if(d[0].type!=="float32"&&d[0].type!=="float64"||d[1].type!=="float32"&&d[1].type!=="float64"||d.length===3&&d[2].type!=="float32"&&d[2].type!=="float64")throw new Error("Invalid input type.");if(d[0].type!==d[1].type||d.length===3&&d[0].type!==d[2].type)throw new Error("Input types are mismatched")}},8555:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createPackedIm2ColProgramInfoLoader=void 0;const o=i(5060),l=i(2039),c=i(2827);e.createPackedIm2ColProgramInfoLoader=(a,h,f,p,d)=>{const r=(t=d.cacheKey,{name:"Im2Col (packed)",inputNames:["A"],inputTypes:[l.TextureType.packed],cacheHint:t});var t;return Object.assign(Object.assign({},r),{get:()=>((u,s,m,g,b,y)=>{const w=m.dims,x=g.dims,v=b.length,E=[x[1]*x[2]*x[3],b[2]*b[3]],O=x[2]*x[3],C=(0,c.unpackFromChannel)(),S=(0,o.getGlsl)(u.session.backend.glContext.version);let N="";for(let te=0;te<=1;te++)for(let Z=0;Z<=1;Z++)N+=`
            blockIndex = rc.x + ${Z};
            pos = rc.y + ${te};

            if(blockIndex < ${E[1]} && pos < ${E[0]}) {
              offsetY = int(blockIndex / (${b[v-1]})) * ${y.strides[0]} -
                ${y.pads[0]};
              d0 = offsetY + ${y.dilations[0]} * (imod(pos, ${O}) / ${x[2]});

              if(d0 < ${w[2]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${b[v-1]}) * ${y.strides[1]} -
                  ${y.pads[1]};
                d1 = offsetX + ${y.dilations[1]} * imod(imod(pos, ${O}), ${x[2]});

                if(d1 < ${w[3]} && d1 >= 0) {

                  ch = int(float(pos)/ ${O}.);
                    innerDims = vec2(d0, d1);
                    result[${2*te+Z}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;const Q=`
      ${C}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${N}
          ${S.output} = result;
      }
            `;return Object.assign(Object.assign({},s),{output:{dims:E,type:m.type,textureType:l.TextureType.packed},shaderSource:Q,hasMain:!0})})(a,r,h,f,p,d)})}},3248:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.calculateIm2ColDims=e.createIm2ColProgramInfoLoader=void 0;const o=i(2039);e.createIm2ColProgramInfoLoader=(l,c,a,h,f)=>{const p=(d=f.cacheKey,{name:"Im2Col",inputNames:["X"],inputTypes:[o.TextureType.unpacked],cacheHint:d});var d;return Object.assign(Object.assign({},p),{get:()=>((r,t,u,s,m,g)=>{const b=u.dims,y=s.dims,w=m.length,x=(0,e.calculateIm2ColDims)(b,y,m,4),v=`
        const int XC = ${b[1]};
        const int XH = ${b[2]};
        const int XW = ${b[3]};
        const int KH = ${g.kernelShape[0]};
        const int KW = ${g.kernelShape[1]};
        const int dilationH = ${g.dilations[0]};
        const int dilationW = ${g.dilations[1]};
        const int strideH = ${g.strides[0]};
        const int strideW = ${g.strides[1]};
        const int padH = ${g.pads[0]};
        const int padW = ${g.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${w}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${b.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return Object.assign(Object.assign({},t),{output:{dims:x,type:u.type,textureType:o.TextureType.packedLastDimension},shaderSource:v})})(0,p,c,a,h,f)})},e.calculateIm2ColDims=(l,c,a,h=4)=>[a[0],a[2],a[3],Math.ceil(l[1]*c[2]*c[3]/h)]},6572:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseImageScalerAttributes=e.imageScaler=void 0;const o=i(246),l=i(2039);e.imageScaler=(p,d,r)=>(f(d),[p.run(a(p,d,r),d)]),e.parseImageScalerAttributes=p=>{const d=p.attributes.getFloat("scale"),r=p.attributes.getFloats("bias");return(0,o.createAttributeWithCacheKey)({scale:d,bias:r})};const c={name:"ImageScaler",inputNames:["X"],inputTypes:[l.TextureType.unpacked]},a=(p,d,r)=>{const t=Object.assign(Object.assign({},c),{cacheHint:r.cacheKey});return Object.assign(Object.assign({},t),{get:()=>((u,s,m,g)=>{const b=m[0].dims.slice(),y=b.length,w=`
      ${h(g.bias.length)}
      float process(int indices[${y}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return Object.assign(Object.assign({},s),{output:{dims:b,type:m[0].type,textureType:l.TextureType.unpacked},variables:[{name:"bias",type:"float",arrayLength:g.bias.length,data:g.bias},{name:"scale",type:"float",data:g.scale}],shaderSource:w})})(0,t,d,r)})},h=p=>{const d=[`float getBias(float bias[${p}], int channel) {`];for(let r=0;r<p;++r)r===0?d.push(`	if (channel == ${r}) { return bias[${r}]; }`):r===p-1?d.push(`	else { return bias[${r}]; }`):d.push(`	else if (channel == ${r}) { return bias[${r}]; }`);return d.push("	}"),d.join(`
`)},f=p=>{if(!p||p.length!==1)throw new Error("ImageScaler requires 1 input.");if(p[0].dims.length!==4)throw new Error("Invalid input shape.");if(p[0].type!=="float32"&&p[0].type!=="float64")throw new Error("Invalid input type.")}},3346:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseInstanceNormalizationAttributes=e.instanceNormalization=void 0;const o=i(5060),l=i(2039);e.instanceNormalization=(d,r,t)=>{p(r);const u=d.run(a(r[0]),r);return[d.run(f(d,r[0],t,u.dims),[r[0],u,r[1],r[2]])]},e.parseInstanceNormalizationAttributes=d=>d.attributes.getFloat("epsilon",1e-5);const c={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[l.TextureType.unpacked]},a=d=>Object.assign(Object.assign({},c),{get:()=>((r,t)=>{const u=t.dims.slice(),s=u[1],m=u[2]*u[3],g=[u[0],s],b=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${u[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${u[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${m});
        temp = 0.0;
        for(int a2=0; a2<${u[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${u[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${m});

        return v;
      }`;return Object.assign(Object.assign({},r),{output:{dims:g,type:t.type,textureType:l.TextureType.packedLastDimension},shaderSource:b})})(c,d)}),h={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[l.TextureType.unpacked,l.TextureType.packedLastDimension,l.TextureType.unpacked,l.TextureType.unpacked]},f=(d,r,t,u)=>{const s=Object.assign(Object.assign({},h),{cacheHint:`${t}`});return Object.assign(Object.assign({},s),{get:()=>((m,g,b,y,w)=>{const x=(0,o.getGlsl)(m.session.backend.glContext.version),[v,E]=m.calculateTextureWidthAndHeight(w,l.TextureType.packedLastDimension),[O,C]=[v/4,E],S=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${O}, ${C});
        return ${x.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return Object.assign(Object.assign({},g),{output:{dims:b.dims,type:b.type,textureType:l.TextureType.unpacked},variables:[{name:"epsilon",type:"float",data:y}],shaderSource:S})})(d,s,r,t,u)})},p=d=>{if(!d||d.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");const r=d[0],t=d[1],u=d[2];if(r.dims.length<3||t.dims.length!==1||u.dims.length!==1)throw new Error("Invalid input shape.");if(t.dims[0]!==r.dims[1]||u.dims[0]!==r.dims[1])throw new Error("Input shapes are mismatched.");if(r.type!=="float32"&&r.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||u.type!=="float32"&&u.type!=="float64")throw new Error("Invalid input type.");if(d[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}},708:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createPackedMatmulProgramInfoLoader=void 0;const o=i(2517),l=i(5060),c=i(2039),a=i(9390),h=i(2823),f=i(5623);e.createPackedMatmulProgramInfoLoader=(p,d,r)=>{const t=(u=d.length>2,s=r.activationCacheKey,{name:"MatMul (packed)",inputNames:u?["A","B","Bias"]:["A","B"],inputTypes:u?[c.TextureType.packed,c.TextureType.packed,c.TextureType.packed]:[c.TextureType.packed,c.TextureType.packed],cacheHint:s});var u,s;return Object.assign(Object.assign({},t),{get:()=>((m,g,b,y)=>{const w=b.length>2,x=w?"value += getBiasForMatmul();":"",v=b[0].dims,E=b[1].dims,O=o.BroadcastUtil.calcShape(v,E,!0),C=!o.ShapeUtil.areEqual(b[0].dims,b[1].dims);if(!O)throw new Error("Can't use matmul on the given tensors");const S=v[v.length-1],N=Math.ceil(S/2),Q=v.length,te=E.length,Z=(0,l.getGlsl)(m.session.backend.glContext.version),Y=(0,a.getCoordsDataType)(O.length),G=O.length,R=(0,a.getGlChannels)(),{activationFunction:V,applyActivation:ce}=(0,h.getActivationSnippet)(y),se=w?`${(0,f.getBiasForMatmul)(Y,R,b[2].dims,O,!0)}`:"",be=C?`${function(Ge,De,ct,ht){let Wt=[],_n=[];const jt=ct[0].dims,ln=ct[1].dims,ft=jt.length,bt=ln.length,Lt=ht.length,Jt=Lt-ft,En=Lt-bt;Wt=jt.map((Qt,Vt)=>`coords.${De[Vt+Jt]}`),Wt[ft-1]="i*2",Wt.join(", "),_n=ln.map((Qt,Vt)=>`coords.${De[Vt+En]}`),_n[bt-2]="i*2",_n.join(", ");const An=o.BroadcastUtil.getBroadcastDims(jt,ht),Cn=o.BroadcastUtil.getBroadcastDims(ln,ht),xr=An.map(Qt=>`coords.${De[Qt+Jt]} = 0;`).join(`
`),wn=Cn.map(Qt=>`coords.${De[Qt+En]} = 0;`).join(`
`),vn=`int lastDim = coords.${De[Lt-1]};
  coords.${De[Lt-1]} = coords.${De[Lt-2]};
  coords.${De[Lt-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${Ge} coords = getOutputCoords();
  ${vn}
  ${xr}
  vec4 outputValue = getA(${Wt});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${Ge} coords = getOutputCoords();
  ${vn}
  ${wn}
  vec4 outputValue = getB(${_n});
  return outputValue;
}`}(Y,R,b,O)}`:"",ee=C?"getAAtOutCoordsMatmul(i)":`getA(${function(Ge,De){let ct="";for(let ht=0;ht<De-2;ht++)ct+=`rc.${Ge[ht]}, `;return ct+=`rc.${Ge[De-2]}, i*2`,ct}(R,Q)})`,ve=C?"getBAtOutCoordsMatmul(i)":`getB(${function(Ge,De){let ct="";for(let ht=0;ht<De-2;ht++)ct+=`rc.${Ge[ht]}, `;return ct+=`i*2, rc.${Ge[De-1]}`,ct}(R,te)})`,Ce=`
            ${be}
            ${se}
            ${V}
            void main() {
              ${C?"":`${Y} rc =
          getOutputCoords(); int lastDim = rc.${R[G-1]}; rc.${R[G-1]} =
          rc.${R[G-2]}; rc.${R[G-2]} = lastDim;
      `}

              vec4 value = vec4(0);
              for (int i = 0; i < ${N}; i++) {
                vec4 a = ${ee};
                vec4 b = ${ve};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${x}
              ${ce}
              ${Z.output} = value;
            }`;return Object.assign(Object.assign({},g),{output:{dims:O,type:b[0].type,textureType:c.TextureType.packed},shaderSource:Ce,hasMain:!0})})(p,t,d,r)})}},5623:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getBiasForMatmul=e.createMatmulProgramInfoLoader=e.parseMatMulAttributes=e.matMul=void 0;const o=i(2517),l=i(2039),c=i(9390),a=i(2823),h=i(708);function f(r,t){const u=(s=r.length>2,m=t.activationCacheKey,{name:"MatMul",inputNames:s?["A","B","Bias"]:["A","B"],inputTypes:s?[l.TextureType.unpacked,l.TextureType.unpacked,l.TextureType.unpacked]:[l.TextureType.unpacked,l.TextureType.unpacked],cacheHint:m});var s,m;return Object.assign(Object.assign({},u),{get:()=>function(g,b,y){const w=b[0].dims,x=b[1].dims,v=o.BroadcastUtil.calcShape(w,x,!0);if(!v)throw new Error("Can't use matmul on the given tensors");const E=(0,c.getCoordsDataType)(v.length),O=(0,c.getGlChannels)(),{activationFunction:C,applyActivation:S}=(0,a.getActivationSnippet)(y),N=b.length>2,Q=N?"value += getBiasForMatmul();":"",te=N?`${d(E,O,b[2].dims,v,!1)}`:"",Z=v.length,Y=w.length,G=x.length,R=`
    ${C}
    ${te}
    float process(int indices[${Z}]) {
        int a[${Y}];
        int b[${G}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${w[w.length-1]}; ++k) {
            a[${Y-1}] = k;
            b[${G-2}] = k;
            value += _A(a) * _B(b);
        }
        ${Q}
        ${S}
        return value;
    }`;return Object.assign(Object.assign({},g),{output:{dims:v,type:b[0].type,textureType:l.TextureType.unpacked},shaderSource:R})}(u,r,t)})}e.matMul=(r,t,u)=>(p(t),r.session.pack?[r.run((0,h.createPackedMatmulProgramInfoLoader)(r,t,u),t)]:[r.run(f(t,u),t)]),e.parseMatMulAttributes=r=>(0,a.parseInternalActivationAttributes)(r.attributes),e.createMatmulProgramInfoLoader=f;const p=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64")throw new Error("inputs should be float type");if(r[0].type!==r[1].type)throw new Error("inputs types should match")};function d(r,t,u,s,m){let g="";const b=u.length,y=s.length,w=y-b;g=y<2&&b>0?"coords":u.map((E,O)=>`coords.${t[O+w]}`).join(", ");const x=o.BroadcastUtil.getBroadcastDims(u,s).map(E=>`coords.${t[E+w]} = 0;`).join(`
`);let v="vec4(outputValue.xx, outputValue.yy)";return o.ShapeUtil.size(u)===1&&(v="vec4(outputValue.x)"),m?`
vec4 getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${x}
  vec4 outputValue = getBias(${g});
  return ${v};
}`:`
float getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${x}
  return getBias(coords.x);
}`}e.getBiasForMatmul=d},2403:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createPackProgramInfoLoader=void 0;const o=i(5060),l=i(2039),c=i(9390),a=i(2827),h={name:"pack",inputNames:["A"],inputTypes:[l.TextureType.unpackedReversed]};e.createPackProgramInfoLoader=(f,p)=>Object.assign(Object.assign({},h),{get:()=>((d,r)=>{const t=(0,o.getGlsl)(d.session.backend.glContext.version),u=r.dims,s=u.length,m=r.dims.length,g=(0,c.getCoordsDataType)(m),b=(0,a.getChannels)("rc",m),y=(w=m,x=b,v=u[u.length-2],E=u[u.length-1],w===0||w===1?"":`
    int r = ${x[w-2]};
    int c = ${x[w-1]};
    int rp1 = ${x[w-2]} + 1;
    int cp1 = ${x[w-1]} + 1;
    bool rEdge = rp1 >= ${E};
    bool cEdge = cp1 >= ${v};
    `);var w,x,v,E;let O;O=s===0?[1,1]:s===1?[u[0],1]:[u[m-1],u[m-2]];const C=function(Q,te,Z){if(Q===0)return"false";if(Q===1)return`rc > ${te[0]}`;let Y="";for(let G=Q-2;G<Q;G++)Y+=`${Z[G]} >= ${te[G-Q+2]}`,G<Q-1&&(Y+="||");return Y}(m,O,b),S=function(Q,te){const Z=Q.length;if(Z===0)return"getA(), 0, 0, 0";if(Z===1)return`getA(rc),
            rc + 1 >= ${Q[0]} ? 0. : getA(rc + 1),
            0, 0`;let Y="";if(Z>2)for(let G=0;G<Z-2;++G)Y+=`${te[G]},`;return`getA(${Y}r, c),
          rEdge ? 0. : getA(${Y}rp1, c),
          cEdge ? 0. : getA(${Y}r, cp1),
          rEdge || cEdge ? 0. : getA(${Y}rp1, cp1)`}(u,b),N=`
        void main() {
          ${g} rc = getOutputCoords();

          if(${C}) {
            ${t.output} = vec4(0);
          } else {
            ${y}

            ${t.output} = vec4(${S});
          }
        }
      `;return Object.assign(Object.assign({},h),{hasMain:!0,output:{dims:r.dims,type:r.type,textureType:l.TextureType.packed},shaderSource:N})})(f,p)})},2827:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.unpackFromChannel=e.getChannels=e.getVecChannels=void 0;const o=i(9390);function l(c,a){return(0,o.getGlChannels)(a).map(h=>`${c}.${h}`)}e.getVecChannels=l,e.getChannels=function(c,a){return a===1?[c]:l(c,a)},e.unpackFromChannel=function(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}},2870:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parsePadAttributesV11=e.padV11=e.parsePadAttributesV2=e.padV2=void 0;const o=i(246),l=i(2517),c=i(5060),a=i(2039),h={name:"Pad",inputNames:["A"],inputTypes:[a.TextureType.unpacked]};e.padV2=(g,b,y)=>(d(b),[g.run(Object.assign(Object.assign({},h),{cacheHint:y.cacheKey,get:()=>p(g,b[0],y)}),b)]),e.parsePadAttributesV2=g=>{const b=g.attributes.getString("mode","constant"),y=g.attributes.getFloat("value",0),w=g.attributes.getInts("pads");return(0,o.createAttributeWithCacheKey)({mode:b,value:y,pads:w})},e.padV11=(g,b,y)=>{r(b);const w=f(g,b,y);return(0,e.padV2)(g,[b[0]],w)},e.parsePadAttributesV11=g=>g.attributes.getString("mode","constant");const f=(g,b,y)=>{if(!g.session.isInitializer(b[1].dataId)||b.length>=3&&!g.session.isInitializer(b[2].dataId))throw new Error("dynamic pad attributes are not allowed");const w=Array.from(b[1].integerData),x=b.length>=3?b[2].floatData[0]:0;return(0,o.createAttributeWithCacheKey)({mode:y,pads:w,value:x})},p=(g,b,y)=>{const w=l.ShapeUtil.padShape(b.dims.slice(),y.pads),x=w.length,v=`
      ${t(g,b,y)}
      float process(int[${x}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[a.TextureType.unpacked],output:{dims:w,type:b.type,textureType:a.TextureType.unpacked},shaderSource:v}},d=g=>{if(!g||g.length!==1)throw new Error("Pad requires 1 input");if(g[0].type!=="float32"&&g[0].type!=="float64")throw new Error("Invalid input type.")},r=g=>{if(!g||g.length!==2&&g.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(g[1].type!=="int32")throw new Error("Invalid input type.");if(g.length>=3&&g[2].type==="string")throw new Error("Invalid input type.")},t=(g,b,y)=>{const w=(0,c.getGlsl)(g.session.backend.glContext.version),[x,v]=g.calculateTextureWidthAndHeight(b.dims,a.TextureType.unpacked),E=l.ShapeUtil.computeStrides(b.dims);switch(y.mode){case"constant":return u(w,b.dims,E,x,v,y.pads,y.value);case"reflect":return s(w,b.dims,E,x,v,y.pads);case"edge":return m(w,b.dims,E,x,v,y.pads);default:throw new Error("Invalid mode")}},u=(g,b,y,w,x,v,E)=>{const O=b.length;let C="";for(let S=O-1;S>=0;--S)C+=`
        k = m[${S}] - ${v[S]};
        if (k < 0)  return constant;
        if (k >= ${b[S]}) return constant;
        offset += k * ${y[S]};
        `;return`
      float padA(int m[${O}]) {
        const float constant = float(${E});
        int offset = 0;
        int k = 0;
        ${C}
        vec2 coords = offsetToCoords(offset, ${w}, ${x});
        float value = getColorAsFloat(${g.texture2D}(A, coords));
        return value;
      }
      `},s=(g,b,y,w,x,v)=>{const E=b.length;let O="";for(let C=E-1;C>=0;--C)O+=`
        k = m[${C}] - ${v[C]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(b[C]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${b[C]}) { k = _2n_1 - k; }
        }
        offset += k * ${y[C]};
        `;return`
      float padA(int m[${E}]) {
        int offset = 0;
        int k = 0;
        ${O}
        vec2 coords = offsetToCoords(offset, ${w}, ${x});
        float value = getColorAsFloat(${g.texture2D}(A, coords));
        return value;
      }
      `},m=(g,b,y,w,x,v)=>{const E=b.length;let O="";for(let C=E-1;C>=0;--C)O+=`
        k = m[${C}] - ${v[C]};
        if (k < 0)  k = 0;
        if (k >= ${b[C]}) k = ${b[C]-1};
        offset += k * ${y[C]};
      `;return`
      float padA(int m[${E}]) {
        int offset = 0;
        int k = 0;
        ${O}
        vec2 coords = offsetToCoords(offset, ${w}, ${x});
        float value = getColorAsFloat(${g.texture2D}(A, coords));
        return value;
      }
      `}},2143:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.globalMaxPool=e.parseMaxPoolAttributes=e.maxPool=e.parseGlobalAveragePoolAttributes=e.globalAveragePool=e.parseAveragePoolAttributes=e.averagePool=void 0;const o=i(246),l=i(2517),c=i(2039);e.averagePool=(m,g,b)=>{r(g);const y={name:"AveragePool",inputNames:["X"],inputTypes:[c.TextureType.unpacked],cacheHint:b.cacheKey};return[m.run(Object.assign(Object.assign({},y),{get:()=>a(g,y,!1,b)}),g)]},e.parseAveragePoolAttributes=m=>{const g=m.attributes.getString("auto_pad","NOTSET"),b=m.attributes.getInt("ceil_mode",0),y=m.attributes.getInt("count_include_pad",0)!==0,w=m.attributes.getInts("kernel_shape"),x=m.attributes.getInts("strides",[]),v=m.attributes.getInts("pads",[]);if(b!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return(0,o.createAttributeWithCacheKey)({autoPad:g,ceilMode:b,countIncludePad:y,kernelShape:w,strides:x,pads:v})};const a=(m,g,b,y)=>{const[w,x]=f(m,y,b),v=l.ShapeUtil.size(w.kernelShape);let E="";w.countIncludePad?E+=`value /= float(${v});`:E+=`value /= float(${v} - pad);`;const O=`
        ${t(m[0].dims,w,"value += _X(x);",E,"0.0")}
      `;return Object.assign(Object.assign({},g),{output:{dims:x,type:m[0].type,textureType:c.TextureType.unpacked},shaderSource:O})};e.globalAveragePool=(m,g,b)=>{r(g);const y={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[c.TextureType.unpacked],cacheHint:`${b.countIncludePad}`};return[m.run(Object.assign(Object.assign({},y),{get:()=>a(g,y,!0,b)}),g)]},e.parseGlobalAveragePoolAttributes=m=>{const g=m.attributes.getInt("count_include_pad",0)!==0;return(0,o.createAttributeWithCacheKey)({autoPad:"",ceilMode:0,countIncludePad:g,kernelShape:[],strides:[],pads:[]})},e.maxPool=(m,g,b)=>{r(g);const y={name:"MaxPool",inputNames:["X"],inputTypes:[c.TextureType.unpacked],cacheHint:b.cacheKey};return[m.run(Object.assign(Object.assign({},y),{get:()=>h(g,y,!1,b)}),g)]},e.parseMaxPoolAttributes=m=>{const g=m.attributes.getString("auto_pad","NOTSET"),b=m.attributes.getInt("ceil_mode",0),y=m.attributes.getInts("kernel_shape"),w=m.attributes.getInts("strides",[]),x=m.attributes.getInts("pads",[]),v=m.attributes.getInt("storage_order",0),E=m.attributes.getInts("dilations",[]);if(v!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(b!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return(0,o.createAttributeWithCacheKey)({autoPad:g,ceilMode:b,countIncludePad:!1,kernelShape:y,strides:w,pads:x,storageOrder:v,dilations:E})};const h=(m,g,b,y)=>{const[w,x]=f(m,y,b),v=`
      ${t(m[0].dims,w,`
      value = max(_X(x), value);
    `,"","-1e5")}
    `;return Object.assign(Object.assign({},g),{output:{dims:x,type:m[0].type,textureType:c.TextureType.unpacked},shaderSource:v})},f=(m,g,b)=>{const y=m[0].dims.slice(),w=Object.hasOwnProperty.call(g,"dilations"),x=g.kernelShape.slice(),v=g.strides.slice(),E=w?g.dilations.slice():[],O=g.pads.slice();l.PoolConvUtil.adjustPoolAttributes(b,y,x,v,E,O);const C=l.PoolConvUtil.computePoolOutputShape(b,y,v,E,x,O,g.autoPad),S=Object.assign({},g);return w?Object.assign(S,{kernelShape:x,strides:v,pads:O,dilations:E,cacheKey:g.cacheKey}):Object.assign(S,{kernelShape:x,strides:v,pads:O,cacheKey:g.cacheKey}),[S,C]},p={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},d={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[c.TextureType.unpacked]};e.globalMaxPool=(m,g)=>(r(g),[m.run(Object.assign(Object.assign({},d),{get:()=>h(g,d,!0,p)}),g)]);const r=m=>{if(!m||m.length!==1)throw new Error("Pool ops requires 1 input.");if(m[0].type!=="float32"&&m[0].type!=="float64")throw new Error("Invalid input type.")},t=(m,g,b,y,w)=>{const x=m.length;if(g.kernelShape.length<=2){const v=g.kernelShape[g.kernelShape.length-1],E=g.strides[g.strides.length-1],O=g.pads[g.pads.length/2-1],C=g.pads[g.pads.length-1],S=m[x-1];let N="",Q="",te="";if(N=O+C!==0?`
          for (int i = 0; i < ${v}; i++) {
            x[${x} - 1] = indices[${x} - 1] * ${E} - ${O} + i;
            if (x[${x} - 1] < 0 || x[${x} - 1] >= ${S}) {
              pad++;
              continue;
            }
            ${b}
          }`:`
          for (int i = 0; i < ${v}; i++) {
            x[${x} - 1] = indices[${x} - 1] * ${E} - ${O} + i;
            ${b}
          }`,g.kernelShape.length===2){const Z=g.kernelShape[g.kernelShape.length-2],Y=g.strides[g.strides.length-2],G=g.pads[g.pads.length/2-2],R=g.pads[g.pads.length-2],V=m[x-2];Q=G+R!==0?`
            for (int j = 0; j < ${Z}; j++) {
              x[${x} - 2] = indices[${x} - 2] * ${Y} - ${G} + j;
              if (x[${x} - 2] < 0 || x[${x} - 2] >= ${V}) {
                pad+= ${v};
                continue;
              }
          `:`
            for (int j = 0; j < ${Z}; j++) {
              x[${x} - 2] = indices[${x} - 2] * ${Y} - ${G} + j;
            `,te=`
          }
        `}return`
        float process(int indices[${x}]) {
          int x[${x}];
          copyVec(indices, x);

          float value = ${w};
          int pad = 0;
          ${Q}
          ${N}
          ${te}
          ${y}
          return value;
        }
      `}{const v=l.ShapeUtil.size(g.kernelShape),E=l.ShapeUtil.computeStrides(g.kernelShape),O=E.length,C=g.pads.length,S=s(O),N=u(m,"inputDims"),Q=u(g.pads,"pads"),te=u(E,"kernelStrides"),Z=u(g.strides,"strides");let Y="";return Y=g.pads.reduce((G,R)=>G+R)?`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${b}
          }`:`
          }
          ${b}
        `,`
        ${S}
        float process(int indices[${x}]) {
          int x[${x}];
          copyVec(indices, x);
          int offset[${O}];
          int pads[${C}];
          int inputDims[${x}];
          int kernelStrides[${O}];
          int strides[${O}];
          ${Q}
          ${N}
          ${Z}
          ${te}

          float value = ${w};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${v}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${x} - ${O}; j < ${x}; j++) {
              x[j] = indices[j] * strides[j - ${x} + ${O}]
                + offset[j - ${x} + ${O}] - pads[j - 2];
              ${Y}
          }
          ${y}

          return value;
        }
      `}},u=(m,g)=>{let b="";for(let y=0;y<m.length;y++)b+=`
      ${g}[${y}] = ${m[y]};
    `;return b},s=m=>`
  void offsetToIndices(int offset, int[${m}] strides, out int[${m}] indices) {
    if (${m} == 0) {
      return;
    }
    for (int i = 0; i < ${m} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${m} - 1] = offset;
  }`},4939:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.reduceLogSumSquare=e.reduceLogSum=e.reduceProd=e.reduceMin=e.reduceMax=e.reduceMean=e.reduceSum=e.parseReduceAttributes=void 0;const o=i(246),l=i(782),c=i(2517),a=i(2039),h=(d,r,t,u,s)=>{p(r);const m={name:u,inputNames:["A"],inputTypes:[a.TextureType.unpacked]};return[d.run(Object.assign(Object.assign({},m),{cacheHint:t.cacheKey,get:()=>f(d,r,t,u,s,m)}),r)]};e.parseReduceAttributes=d=>{const r=d.attributes.getInts("axes",[]),t=d.attributes.getInt("keepdims",1)===1;return(0,o.createAttributeWithCacheKey)({axes:r,keepDims:t})};const f=(d,r,t,u,s,m)=>{const g=[],b=r[0].dims.length||1,y=[],w=c.ShapeUtil.normalizeAxes(t.axes,r[0].dims.length),x=s(r,w);let v=x[1];for(let O=0;O<r[0].dims.length;O++)w.indexOf(O)>=0||w.length===0?(t.keepDims&&g.push(1),v=`
          for(int j${O} = 0; j${O} < ${r[0].dims[O]}; j${O}++) {
            inputIdx[${O}] = j${O};
            ${v}
          }`):(y.push(`inputIdx[${O}] = outputIdx[${g.length}];`),g.push(r[0].dims[O]));const E=`
      float process(int outputIdx[${g.length||1}]) {
        float value;                 // final result
        int inputIdx[${b}];      // addressing input data
        ${y.join(`
`)}
        ${x[0]}       // init ops for reduce max/min
        ${v}
        ${x[2]}       // final computation for reduce mean
        return value;
      }`;return Object.assign(Object.assign({},m),{output:{dims:g,type:r[0].type,textureType:a.TextureType.unpacked},shaderSource:E})},p=d=>{if(!d||d.length!==1)throw new Error("Reduce op requires 1 input.");if(l.NUMBER_TYPES.indexOf(d[0].type)===-1)throw new Error("Invalid input type.")};e.reduceSum=(d,r,t)=>h(d,r,t,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),e.reduceMean=(d,r,t)=>h(d,r,t,"ReduceMean",(u,s)=>{let m=1;for(let g=0;g<u[0].dims.length;g++)(s.indexOf(g)>=0||s.length===0)&&(m*=u[0].dims[g]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${m}.;`]}),e.reduceMax=(d,r,t)=>h(d,r,t,"ReduceMax",(u,s)=>{const m=[];for(let g=0;g<u[0].dims.length;g++)(s.indexOf(g)>=0||s.length===0)&&m.push(`inputIdx[${g}] = 0;`);return[`${m.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),e.reduceMin=(d,r,t)=>h(d,r,t,"ReduceMin",(u,s)=>{const m=[];for(let g=0;g<u[0].dims.length;g++)(s.indexOf(g)>=0||s.length===0)&&m.push(`inputIdx[${g}] = 0;`);return[`${m.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),e.reduceProd=(d,r,t)=>h(d,r,t,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),e.reduceLogSum=(d,r,t)=>h(d,r,t,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),e.reduceLogSumSquare=(d,r,t)=>h(d,r,t,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])},7019:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.isReshapeCheap=e.processDims3D=e.createPackedReshape3DProgramInfoLoader=void 0;const o=i(2517),l=i(5060),c=i(2039),a=i(2827);e.createPackedReshape3DProgramInfoLoader=(h,f,p)=>{const d=(r=>({name:"Reshape (packed)",inputTypes:[c.TextureType.packed],inputNames:["A"],cacheHint:`${r}`}))(p);return Object.assign(Object.assign({},d),{get:()=>((r,t,u,s)=>{const m=t.dims,g=s;let b="";for(let x=0;x<4;x++){let v="";switch(x){case 0:v="outputCoords = rc;";break;case 1:v="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:v="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:v="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}b+=`
        ${v}
        ${x>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${x}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${x>0?"}":""}
      `}const y=(0,l.getGlsl)(r.session.backend.glContext.version),w=`
      ${function(x){const v=o.ShapeUtil.computeStrides(x),E=["b","r","c"],O="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${v.map((C,S)=>`int ${E[S]} = ${O} / ${C}; ${S===v.length-1?`int ${E[S+1]} = ${O} - ${E[S]} * ${C}`:`index -= ${E[S]} * ${C}`};`).join("")}
      return ivec3(b, r, c);
    }
  `}(m)}
      ${function(x){const v=o.ShapeUtil.computeStrides(x);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${v[0]} + coords.z * ${v[1]} + coords.y;
  }
`}(g)}
      ${(0,a.unpackFromChannel)()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${g[2]};
        int cols = ${g[1]};

        ${b}
        ${y.output} = result;
      }
    `;return Object.assign(Object.assign({},u),{output:{dims:g,type:t.type,textureType:c.TextureType.packed},shaderSource:w,hasMain:!0})})(h,f,d,p)})},e.processDims3D=function(h){if(h.length===0)return[1,1,1];let f=1;for(let p=0;p<h.length-2;++p)f*=h[p];return[f,h.length>1?h[h.length-2]:1,h[h.length-1]]},e.isReshapeCheap=function(h,f){let p=!1;return p=h.length===0||f.length===0||(h.length<2||f.length<2?h[h.length-1]===f[f.length-1]:h[h.length-1]===f[f.length-1]&&h[h.length-2]===f[f.length-2]),p}},718:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.reshape=void 0;const o=i(2517);e.reshape=(l,c)=>{const a=o.ShapeUtil.calculateReshapedDims(c[0].dims,c[1].integerData);return l.session.pack?[l.reshapePacked(c[0],a)]:[l.reshapeUnpacked(c[0],a)]}},2268:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseResizeAttributesV11=e.parseResizeAttributesV10=e.resize=void 0;const o=i(5060),l=i(2039),c=i(9390),a=i(2827),h=i(9793),f={name:"Resize",inputNames:["A"],inputTypes:[l.TextureType.packed]};e.resize=(u,s,m)=>((0,h.validateInputs)(s,m),[u.run(Object.assign(Object.assign({},f),{cacheHint:m.cacheKey,get:()=>p(u,s,m)}),s)]),e.parseResizeAttributesV10=u=>(0,h.parseUpsampleAttributes)(u,10),e.parseResizeAttributesV11=u=>(0,h.parseUpsampleAttributes)(u,11);const p=(u,s,m)=>{const g=(0,o.getGlsl)(u.session.backend.glContext.version),[b,y]=d(s,m);if(b.every(Y=>Y===1)&&m.coordinateTransformMode!=="tf_crop_and_resize")return Object.assign(Object.assign({},f),{output:{dims:y,type:s[0].type,textureType:l.TextureType.packed},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${g.texture2D}(X, TexCoords);
                    ${g.output} = v;
                }`});const w=y.length;if(w<2)throw new Error(`output dimension should be at least 2, but got ${w}`);const x=y[w-2],v=y[w-1],E=s[0].dims;if(w!==E.length)throw new Error(`output dimension should match input ${E.length}, but got ${w}`);const O=E[w-2],C=E[w-1],S=b[w-2],N=b[w-1];let Q="";if(m.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${m.mode}'`);switch(m.coordinateTransformMode){case"asymmetric":Q=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":Q=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":Q=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${v}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${x}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${v}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${x}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":Q=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${v}.0 - 1.0, ${x}.0 - 1.0, ${v}.0 - 1.0,
                            ${x}.0 - 1.0);
                        vec4 original = vec4(${C}.0 - 1.0, ${O}.0 - 1.0, ${C}.0 - 1.0,
                            ${O}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${m.coordinateTransformMode}'`)}const te=(0,c.getCoordsDataType)(w),Z=`
            const vec2 inputWH = vec2(${O}.0, ${C}.0);
            const vec4 scaleWHWH = vec4(float(${S}), float(${N}), float(${S}), float(${N}));
            ${(0,a.unpackFromChannel)()}
            ${Q}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${te} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${x-1};
                bool hasNextCol = rc.z < ${v-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${g.output} = vec4(newValue);
            }
        `;return Object.assign(Object.assign({},f),{output:{dims:y,type:s[0].type,textureType:l.TextureType.packed},hasMain:!0,shaderSource:Z})},d=(u,s)=>{const m=u[0].dims;let g,b=s.scales;if(b.length===0){const w=u[s.scalesInputIdx];if(w&&w.size!==0){if(u[s.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");b=r(w,s.mode,s.isResize)}else{const x=u[s.sizesInputIdx];if(!x||x.size===0)throw new Error("Either scales or sizes MUST be provided as input.");g=Array.from(x.integerData),b=t(g,m,s.mode,s.isResize)}}else if(u[s.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");const y=g||m.map((w,x)=>Math.floor(w*b[x]));return[b,y]},r=(u,s,m)=>{const g=Array.from(u.floatData);return(0,h.scalesValidation)(g,s,m),g},t=(u,s,m,g)=>{const b=s.length,y=new Array(b);for(let w=0,x=b;w<x;w++)if(s[w]===0){if(u[w]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");y[w]=1}else y[w]=u[w]/s[w];return(0,h.scalesValidation)(y,m,g),y}},8117:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.shape=void 0;const o=i(9162);e.shape=(c,a)=>(l(a),[new o.Tensor([a[0].dims.length],"int32",void 0,void 0,new Int32Array(a[0].dims))]);const l=c=>{if(!c||c.length!==1)throw new Error("Shape requires 1 input.")}},2278:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.sliceV10=e.parseSliceAttributes=e.slice=void 0;const o=i(246),l=i(782),c=i(2517),a=i(2039),h={name:"Slice",inputNames:["A"],inputTypes:[a.TextureType.unpacked]};e.slice=(t,u,s)=>(p(u),[t.run(Object.assign(Object.assign({},h),{cacheHint:s.cacheKey,get:()=>f(t,u[0],s)}),u)]),e.parseSliceAttributes=t=>{const u=t.attributes.getInts("starts"),s=t.attributes.getInts("ends"),m=t.attributes.getInts("axes",[]);return(0,o.createAttributeWithCacheKey)({starts:u,ends:s,axes:m})};const f=(t,u,s)=>{const m=s.axes.length===0?u.dims.slice(0).map((E,O)=>O):s.axes,g=c.ShapeUtil.normalizeAxes(m,u.dims.length),b=s.starts.map((E,O)=>E>u.dims[g[O]]-1?u.dims[g[O]]:c.ShapeUtil.normalizeAxis(E,u.dims[g[O]])),y=s.ends.map((E,O)=>E>u.dims[g[O]]-1?u.dims[g[O]]:c.ShapeUtil.normalizeAxis(E,u.dims[g[O]])),w=u.dims.slice(),x=[];for(let E=0;E<g.length;E++)w[g[E]]=y[E]-b[E],b[E]>0&&x.push(`outputIdx[${g[E]}] += ${b[E]};`);const v=`
      float process(int outputIdx[${w.length}]) {
        ${x.join(`
      `)}
        return _A(outputIdx);
      }`;return Object.assign(Object.assign({},h),{output:{dims:w,type:u.type,textureType:a.TextureType.unpacked},shaderSource:v})},p=t=>{if(!t||t.length!==1)throw new Error("Slice requires 1 input.");if(l.NUMBER_TYPES.indexOf(t[0].type)===-1)throw new Error("Invalid input type.")};e.sliceV10=(t,u)=>{r(u);const s=d(t,u);return[t.run(Object.assign(Object.assign({},h),{cacheHint:s.cacheKey,get:()=>f(t,u[0],s)}),[u[0]])]};const d=(t,u)=>{if(!t.session.isInitializer(u[1].dataId)||!t.session.isInitializer(u[2].dataId)||u.length>=4&&!t.session.isInitializer(u[3].dataId)||u.length>=5&&!t.session.isInitializer(u[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(u.length>=5&&u[4].integerData.some(b=>b!==1))throw new Error("currently non-1 steps is not supported for Slice");const s=Array.from(u[1].integerData),m=Array.from(u[2].integerData),g=u.length>=4?Array.from(u[3].integerData):[];return{starts:s,ends:m,axes:g,cacheKey:`${g};${s};${m}`}},r=t=>{if(!t||t.length<3||t.length>5)throw new Error("Invalid input number.");if(t[1].type!=="int32"||t[1].dims.length!==1)throw new Error("Invalid input type.");if(t[2].type!=="int32"||t[2].dims.length!==1)throw new Error("Invalid input type.");if(t.length>=4&&(t[3].type!=="int32"||t[3].dims.length!==1))throw new Error("Invalid input type.");if(t.length>=5&&(t[4].type!=="int32"||t[4].dims.length!==1))throw new Error("Invalid input type.")}},5524:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.softmaxV13=e.parseSoftmaxAttributesV13=e.parseSoftmaxAttributes=e.softmax=void 0;const o=i(246),l=i(2517),c=i(5060),a=i(2039),h=i(3738),f={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[a.TextureType.unpacked]},p={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[a.TextureType.unpacked,a.TextureType.unpacked]},d={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[a.TextureType.unpacked,a.TextureType.unpacked,a.TextureType.unpacked]};e.softmax=(g,b,y)=>{m(b);const w=b[0].dims.slice(),x=l.ShapeUtil.normalizeAxis(y.axis,w.length),v=l.ShapeUtil.sizeToDimension(w,x),E=l.ShapeUtil.sizeFromDimension(w,x);return r(g,b,y,v,E)},e.parseSoftmaxAttributes=g=>(0,o.createAttributeWithCacheKey)({axis:g.attributes.getInt("axis",1)}),e.parseSoftmaxAttributesV13=g=>(0,o.createAttributeWithCacheKey)({axis:g.attributes.getInt("axis",-1)}),e.softmaxV13=(g,b,y)=>{m(b);const w=b[0].dims.slice(),x=l.ShapeUtil.normalizeAxis(y.axis,w.length),v=w.length,E=x!==v-1,O=[];let C,S=[],N=[];E&&(S=Array.from({length:v}).map((Y,G)=>G),S[x]=v-1,S[v-1]=x,S.map(Y=>O.push(w[Y])),C=(0,o.createAttributeWithCacheKey)({perm:S}),N=(0,h.transpose)(g,b,C));const Q=E?l.ShapeUtil.sizeToDimension(O,v-1):l.ShapeUtil.sizeToDimension(w,v-1),te=E?l.ShapeUtil.sizeFromDimension(O,v-1):l.ShapeUtil.sizeFromDimension(w,v-1),Z=r(g,E?N:b,y,Q,te);return E?(0,h.transpose)(g,Z,C):Z};const r=(g,b,y,w,x)=>{const v=t(g,b[0],w,x,[w]),E=g.run(Object.assign(Object.assign({},f),{cacheHint:y.cacheKey,get:()=>v}),b),O=u(g,b[0],w,x,v.output.dims,[w]),C=g.run(Object.assign(Object.assign({},p),{cacheHint:y.cacheKey,get:()=>O}),[b[0],E]),S=s(g,b[0],w,x,v.output.dims,O.output.dims);return[g.run(Object.assign(Object.assign({},d),{cacheHint:y.cacheKey,get:()=>S}),[b[0],E,C])]},t=(g,b,y,w,x)=>{const[v,E]=g.calculateTextureWidthAndHeight(b.dims,a.TextureType.unpacked),O=x.length;if(y<1||w<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(x.length!==1)throw new Error("Dimensionality of the output should be 1");if(x[0]!==y)throw new Error("Shape of the output should be equal to logical row count");const C=(0,c.getGlsl)(g.session.backend.glContext.version),S=`
      float process(int[${O}] indices) {
        int logical_row_start_offset = indices[0] * ${w};

        float max = getColorAsFloat(${C.texture2D}(A, offsetToCoords(logical_row_start_offset, ${v},
        ${E} )));
        for(int i=1; i<${w}; ++i)
        {
          float current = getColorAsFloat(${C.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${v}, ${E})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return Object.assign(Object.assign({},f),{output:{dims:x,type:b.type,textureType:a.TextureType.unpacked},shaderSource:S})},u=(g,b,y,w,x,v)=>{const[E,O]=g.calculateTextureWidthAndHeight(b.dims,a.TextureType.unpacked),C=v.length;if(y<1||w<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(v.length!==1)throw new Error("Dimensionality of the output should be 1");if(v[0]!==y)throw new Error("Shape of the output should be equal to logical row count");if(x.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(x[0]!==y)throw new Error("Shape of the intermediate results should be equal to logical row count");const S=`
      float process(int[${C}] indices) {
        int logical_row_start_offset = indices[0] * ${w};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${w}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${(0,c.getGlsl)(g.session.backend.glContext.version).texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${E}, ${O}))) - max);
        }

        return norm_factor;
      }`;return Object.assign(Object.assign({},p),{output:{dims:v,type:b.type,textureType:a.TextureType.unpacked},shaderSource:S})},s=(g,b,y,w,x,v)=>{const[E,O]=g.calculateTextureWidthAndHeight(b.dims,a.TextureType.unpacked),C=b.dims.length;if(y<1||w<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(x.length!==1||v.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(x[0]!==y||v[0]!==y)throw new Error("Shape of the intermediate results should be equal to logical row count");const S=`
      float process(int[${C}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${E}, ${O});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${w};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return Object.assign(Object.assign({},d),{output:{dims:b.dims,type:b.type,textureType:a.TextureType.unpacked},shaderSource:S})},m=g=>{if(!g||g.length!==1)throw new Error("Softmax requires 1 input.");if(g[0].type!=="float32"&&g[0].type!=="float64")throw new Error("Invalid input type")}},5975:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseSplitAttributes=e.split=void 0;const o=i(246),l=i(2517),c=i(2039),a={name:"Split",inputNames:["A"],inputTypes:[c.TextureType.unpacked]};e.split=(d,r,t)=>{p(r);const u=l.ShapeUtil.normalizeAxis(t.axis,r[0].dims.length),s=h(d,r,u,t),m=[];for(let g=0;g<s;++g)m.push(d.run(Object.assign(Object.assign({},a),{cacheHint:`${t.cacheKey};${g}`,get:()=>f(d,r[0],t,u,g)}),r));return m},e.parseSplitAttributes=d=>{const r=d.attributes.getInt("axis",0),t=d.attributes.getInts("split",[]),u=d.outputs.length;return(0,o.createAttributeWithCacheKey)({axis:r,split:t,numOutputs:u})};const h=(d,r,t,u)=>{const[,s]=l.SplitUtil.splitShape(r[0].dims,t,u.split,u.numOutputs);return s.length},f=(d,r,t,u,s)=>{const[m,g]=l.SplitUtil.splitShape(r.dims,u,t.split,t.numOutputs),b=g[s],y=m[s],w=`
      float process(int indices[${y.length}]) {
        indices[${u}] += ${b};
        return _A(indices);
      }
    `;return Object.assign(Object.assign({},a),{cacheHint:`${t.cacheKey}:${s}`,output:{dims:y,type:r.type,textureType:c.TextureType.unpacked},shaderSource:w})},p=d=>{if(!d||d.length!==1)throw new Error("Split requires one input.");if(d[0].type!=="int8"&&d[0].type!=="uint8"&&d[0].type!=="int16"&&d[0].type!=="uint16"&&d[0].type!=="int32"&&d[0].type!=="uint32"&&d[0].type!=="float32"&&d[0].type!=="float64"&&d[0].type!=="bool")throw new Error("Invalid input type.")}},3933:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseSqueezeAttributes=e.squeezeV13=e.squeeze=void 0;const o=i(2517);e.squeeze=(a,h,f)=>{l(h);const p=o.ShapeUtil.squeezeShape(h[0].dims,f);return[a.reshapeUnpacked(h[0],p)]},e.squeezeV13=(a,h)=>(c(h),(0,e.squeeze)(a,[h[0]],Array.from(h[1].integerData))),e.parseSqueezeAttributes=a=>a.attributes.getInts("axes");const l=a=>{if(!a||a.length!==1)throw new Error("Squeeze requires 1 input.");if(a[0].type==="string")throw new Error("invalid input tensor types.")},c=a=>{if(!a||a.length!==2)throw new Error("Squeeze requires 2 inputs.");if(a[1].type!=="int32")throw new Error("Invalid input type.")}},6558:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.sum=void 0;const o=i(5060),l=i(2039);e.sum=(h,f)=>{a(f);const p={name:"Sum",inputNames:f.map((d,r)=>`X${r}`),inputTypes:new Array(f.length).fill(l.TextureType.unpacked)};return[h.run(Object.assign(Object.assign({},p),{get:()=>c(h,f,p)}),f)]};const c=(h,f,p)=>{const d=(0,o.getGlsl)(h.session.backend.glContext.version),r=f[0].dims.slice(),t=`
      void main() {
        vec4 result = ${f.map((u,s)=>`${d.texture2D}(X${s},TexCoords)`).join(" + ")};
        ${d.output} = result;
      }
    `;return Object.assign(Object.assign({},p),{output:{dims:r,type:f[0].type,textureType:l.TextureType.unpacked},hasMain:!0,shaderSource:t})},a=h=>{if(!h||h.length===0)throw new Error("Sum requires inputs.");const f=h[0].dims.length;for(let p=1;p<h.length;p++){if(f!==h[p].dims.length)throw new Error("Input shapes are mismatched.");for(let d=0;d<f;d++)if(h[0].dims[d]!==h[p].dims[d])throw new Error("Input shapes are not matched.")}if(h[0].type!=="float32"&&h[0].type!=="float64")throw new Error("Invalid input type.");for(let p=1;p<h.length;p++)if(h[0].type!==h[p].type)throw new Error("Input types are not matched.")}},5723:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.tile=void 0;const o=i(782),l=i(2039);e.tile=(h,f)=>{a(f);const p={name:"Tile",inputNames:["A"],inputTypes:[l.TextureType.unpacked]};return[h.run(Object.assign(Object.assign({},p),{get:()=>c(h,f,p)}),f)]};const c=(h,f,p)=>{const d=f[0].dims.slice(),r=new Array(d.length),t=[];for(let m=0;m<d.length;m++)r[m]=d[m]*f[1].numberData[m],t.push(`inputIdx[${m}] = int(mod(float(outputIdx[${m}]), ${d[m]}.));`);const u=r.length,s=`
      float process(int outputIdx[${u}]) {
        int inputIdx[${u}];
        ${t.join(`
`)}
        return _A(inputIdx);
      }
    `;return Object.assign(Object.assign({},p),{output:{dims:r,type:f[0].type,textureType:l.TextureType.unpacked},shaderSource:s})},a=h=>{if(!h||h.length!==2)throw new Error("Tile requires 2 input.");if(h[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(h[1].dims[0]!==h[0].dims.length)throw new Error("Invalid input shape.");if(o.NUMBER_TYPES.indexOf(h[0].type)===-1)throw new Error("Invalid input type.");if(h[1].type!=="int32"&&h[1].type!=="int16")throw new Error("Invalid repeat type.")}},3738:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseTransposeAttributes=e.transpose=void 0;const o=i(246),l=i(2517),c=i(2039),a={name:"Transpose",inputNames:["A"],inputTypes:[c.TextureType.unpacked]};e.transpose=(t,u,s)=>(r(u),[t.run(Object.assign(Object.assign({},a),{cacheHint:s.cacheKey,get:()=>h(t,u[0],s.perm)}),u)]),e.parseTransposeAttributes=t=>(0,o.createAttributeWithCacheKey)({perm:t.attributes.getInts("perm",[])});const h=(t,u,s)=>{const m=u.dims;s=f(m,s);const g=p(m,s),b=m.length,y=`
      ${d("perm",s,b)}
      float process(int indices[${b}]) {
        int a[${b}];
        perm(a, indices);
        return _A(a);
      }`;return Object.assign(Object.assign({},a),{output:{dims:g,type:u.type,textureType:c.TextureType.unpacked},shaderSource:y})},f=(t,u)=>(u&&u.length!==t.length&&(u=[...t.keys()].reverse()),u),p=(t,u)=>(u=f(t,u),l.ShapeUtil.sortBasedOnPerm(t,u)),d=(t,u,s)=>{const m=[];m.push(`void ${t}(out int a[${s}], int src[${s}]) {`);for(let g=0;g<s;++g)m.push(`	a[${u[g]}]=src[${g}];`);return m.push("	}"),m.join(`
`)},r=t=>{if(!t||t.length!==1)throw new Error("Transpose requires 1 input.");if(t[0].type!=="float32"&&t[0].type!=="float64")throw new Error("input should be float tensor")}},8710:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.encodeAsUint8=void 0;const o=i(5060),l=i(2039);e.encodeAsUint8=(c,a)=>{const h=a.shape,f=(0,o.getGlsl)(c.session.backend.glContext.version),p=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${f.texture2D}(X,TexCoords).r;
      ${f.output} = encodeAsUint8(value);
    }`,d={name:"Uint8Encode",inputTypes:[l.TextureType.unpacked],inputNames:["X"],output:{dims:h,type:a.tensor.type,textureType:l.TextureType.downloadUint8AsFloat},shaderSource:p,hasMain:!0};return c.executeProgram(d,[a.tensor])}},4909:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.tanh=e.tan=e.sqrt=e.sin=e.sigmoid=e.relu=e.not=e.neg=e.log=e.parseLeakyReluAttributes=e.leakyRelu=e.identity=e.floor=e.exp=e.parseEluAttributes=e.elu=e.cos=e.ceil=e.clipV11=e.parseClipAttributes=e.clip=e.atan=e.asin=e.acos=e.abs=e.glslTanh=e.glslTan=e.glslSqrt=e.glslSigmoid=e.glslRelu=e.glslSin=e.glslNot=e.glslNeg=e.glslLog=e.glslLeakyRelu=e.glslIdentity=e.glslClip=e.glslFloor=e.glslExp=e.glslElu=e.glslCos=e.glslCeil=e.glslAtan=e.glslAsin=e.glslAcos=e.glslAbs=void 0;const o=i(246),l=i(2517),c=i(8520),a=i(5060),h=i(2039);function f(){return Z("abs")}function p(){return Z("acos")}function d(){return Z("asin")}function r(){return Z("atan")}function t(){return Z("ceil")}function u(){return Z("cos")}function s(R){const V="elu";return{body:`
  const float alpha = float(${R});

  float ${V}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${V}_(vec4 v) {
    return vec4(${V}_(v.x), ${V}_(v.y), ${V}_(v.z), ${V}_(v.w));
  }
  `,name:V,type:c.FunctionType.ValueBased}}function m(){return Z("exp")}function g(){return Z("floor")}function b(R,V){const ce="clip";return{body:`
  const float min = float(${R});
  const float max = float(${V});

  float ${ce}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${ce}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:ce,type:c.FunctionType.ValueBased}}function y(){const R="indentity";return{body:`
  float ${R}_(float a) {
    return a;
  }
  vec4 ${R}_(vec4 v) {
    return v;
  }
  `,name:R,type:c.FunctionType.ValueBased}}function w(R){const V="leakyRelu";return{body:`
  const float alpha = float(${R});

  float ${V}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${V}_(vec4 v) {
    return vec4(${V}_(v.x), ${V}_(v.y), ${V}_(v.z), ${V}_(v.w));
  }
  `,name:V,type:c.FunctionType.ValueBased}}function x(){return Z("log")}function v(){const R="neg";return{body:`
  float ${R}_(float a) {
    return -a;
  }
  vec4 ${R}_(vec4 v) {
    return -v;
  }
  `,name:R,type:c.FunctionType.ValueBased}}function E(){const R="not";return{body:`
  float ${R}_(float a) {
    return float( ! bool(a) );
  }
  bool ${R}_(bool a) {
    return !a;
  }
  vec4 ${R}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${R}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:R,type:c.FunctionType.ValueBased}}function O(){return Z("sin")}function C(){const R="relu";return{body:`
  float ${R}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${R}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:R,type:c.FunctionType.ValueBased}}function S(){const R="sigmoid";return{body:`
  float ${R}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${R}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:R,type:c.FunctionType.ValueBased}}function N(){return Z("sqrt")}function Q(){return Z("tan")}function te(){const R="tanh";return{body:`
  float ${R}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${R}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:R,type:c.FunctionType.ValueBased}}function Z(R){return{body:`
  float ${R}_(float a) {
    return ${R}(a);
  }
  vec4 ${R}_(vec4 v) {
    return ${R}(v);
  }
  `,name:R,type:c.FunctionType.ValueBased}}e.glslAbs=f,e.glslAcos=p,e.glslAsin=d,e.glslAtan=r,e.glslCeil=t,e.glslCos=u,e.glslElu=s,e.glslExp=m,e.glslFloor=g,e.glslClip=b,e.glslIdentity=y,e.glslLeakyRelu=w,e.glslLog=x,e.glslNeg=v,e.glslNot=E,e.glslSin=O,e.glslRelu=C,e.glslSigmoid=S,e.glslSqrt=N,e.glslTan=Q,e.glslTanh=te;const Y=(R,V,ce,se)=>{const be=R.session.pack?h.TextureType.packed:h.TextureType.unpacked,ee={name:ce.name,inputTypes:[be],inputNames:["A"],cacheHint:se};return Object.assign(Object.assign({},ee),{get:()=>((ve,Ce,Ge,De)=>{const ct=ve.session.pack?h.TextureType.packed:h.TextureType.unpacked,ht=(0,a.getGlsl)(ve.session.backend.glContext.version);return Object.assign(Object.assign({},Ce),{output:{dims:Ge.dims,type:Ge.type,textureType:ct},shaderSource:`
     ${De.body}
     void main() {
       vec4 v = ${ht.texture2D}(A, TexCoords);
       v = ${De.name}_(v);
       ${ht.output} = v;
     }
     `,hasMain:!0})})(R,ee,V,ce)})};e.abs=(R,V)=>[R.run(Y(R,V[0],f()),V)],e.acos=(R,V)=>[R.run(Y(R,V[0],p()),V)],e.asin=(R,V)=>[R.run(Y(R,V[0],d()),V)],e.atan=(R,V)=>[R.run(Y(R,V[0],r()),V)],e.clip=(R,V,ce)=>[R.run(Y(R,V[0],b(ce.min,ce.max),ce.cacheKey),V)],e.parseClipAttributes=R=>(0,o.createAttributeWithCacheKey)({min:R.attributes.getFloat("min",l.MIN_CLIP),max:R.attributes.getFloat("max",l.MAX_CLIP)}),e.clipV11=(R,V)=>{const ce=G(R,V);return(0,e.clip)(R,[V[0]],ce)};const G=(R,V)=>{if(V.length>=3&&(!R.session.isInitializer(V[1].dataId)||!R.session.isInitializer(V[2].dataId)))throw new Error("dynamic clip attributes are not allowed");const ce=V.length>=3?V[1].numberData[0]:l.MIN_CLIP,se=V.length>=3?V[2].numberData[0]:l.MAX_CLIP;return(0,o.createAttributeWithCacheKey)({min:ce,max:se})};e.ceil=(R,V)=>[R.run(Y(R,V[0],t()),V)],e.cos=(R,V)=>[R.run(Y(R,V[0],u()),V)],e.elu=(R,V,ce)=>[R.run(Y(R,V[0],s(ce.alpha),ce.cacheKey),V)],e.parseEluAttributes=R=>(0,o.createAttributeWithCacheKey)({alpha:R.attributes.getFloat("alpha",1)}),e.exp=(R,V)=>[R.run(Y(R,V[0],m()),V)],e.floor=(R,V)=>[R.run(Y(R,V[0],g()),V)],e.identity=(R,V)=>[R.run(Y(R,V[0],y()),V)],e.leakyRelu=(R,V,ce)=>[R.run(Y(R,V[0],w(ce.alpha),ce.cacheKey),V)],e.parseLeakyReluAttributes=R=>(0,o.createAttributeWithCacheKey)({alpha:R.attributes.getFloat("alpha",.01)}),e.log=(R,V)=>[R.run(Y(R,V[0],x()),V)],e.neg=(R,V)=>[R.run(Y(R,V[0],v()),V)],e.not=(R,V)=>[R.run(Y(R,V[0],E()),V)],e.relu=(R,V)=>[R.run(Y(R,V[0],C()),V)],e.sigmoid=(R,V)=>[R.run(Y(R,V[0],S()),V)],e.sin=(R,V)=>[R.run(Y(R,V[0],O()),V)],e.sqrt=(R,V)=>[R.run(Y(R,V[0],N()),V)],e.tan=(R,V)=>[R.run(Y(R,V[0],Q()),V)],e.tanh=(R,V)=>[R.run(Y(R,V[0],te()),V)]},5611:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createUnpackProgramInfoLoader=e.createUnpackProgramInfo=void 0;const o=i(5060),l=i(2039),c=i(9390),a=i(2827),h={name:"unpack",inputNames:["A"],inputTypes:[l.TextureType.packed]};e.createUnpackProgramInfo=(f,p)=>{const d=p.dims.length,r=(0,a.getChannels)("rc",d),t=r.slice(-2),u=(0,c.getCoordsDataType)(d),s=(0,a.unpackFromChannel)(),m=p.dims.length===0?"":function(y,w){if(y===1)return"rc";let x="";for(let v=0;v<y;v++)x+=w[v],v<y-1&&(x+=",");return x}(d,r),g=d<=1?"rc":`vec2(${t.join(",")})`,b=`
    ${s}
    void main() {
      ${u} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${m});

       ${(0,o.getGlsl)(f.session.backend.glContext.version).output} = vec4(getChannel(packedInput, ${g}), 0, 0, 0);
     }
   `;return Object.assign(Object.assign({},h),{hasMain:!0,output:{dims:p.dims,type:p.type,textureType:l.TextureType.unpacked},shaderSource:b})},e.createUnpackProgramInfoLoader=(f,p)=>Object.assign(Object.assign({},h),{get:()=>(0,e.createUnpackProgramInfo)(f,p)})},8428:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseUnsqueezeAttributes=e.unsqueezeV13=e.unsqueeze=void 0;const o=i(2517);e.unsqueeze=(a,h,f)=>{l(h);const p=o.ShapeUtil.unsqueezeShape(h[0].dims,f);return[a.reshapeUnpacked(h[0],p)]},e.unsqueezeV13=(a,h)=>(c(h),(0,e.unsqueeze)(a,[h[0]],Array.from(h[1].integerData))),e.parseUnsqueezeAttributes=a=>a.attributes.getInts("axes");const l=a=>{if(!a||a.length!==1)throw new Error("Unsqueeze requires 1 input.");if(a[0].type==="string")throw new Error("invalid input tensor types.")},c=a=>{if(!a||a.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(a[1].type!=="int32")throw new Error("Invalid input type.")}},9793:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.scalesValidation=e.validateInputs=e.parseUpsampleAttributes=e.parseUpsampleAttributesV9=e.parseUpsampleAttributesV7=e.upsample=void 0;const o=i(246),l=i(5060),c=i(2039),a={name:"Upsample",inputNames:["X"],inputTypes:[c.TextureType.unpacked]};e.upsample=(f,p,d)=>((0,e.validateInputs)(p,d),[f.run(Object.assign(Object.assign({},a),{cacheHint:d.cacheKey,get:()=>h(f,p,d)}),p)]),e.parseUpsampleAttributesV7=f=>(0,e.parseUpsampleAttributes)(f,7),e.parseUpsampleAttributesV9=f=>(0,e.parseUpsampleAttributes)(f,9),e.parseUpsampleAttributes=(f,p)=>{const d=p>=10,r=f.attributes.getString("mode","nearest");if(r!=="nearest"&&r!=="linear"&&(p<11||r!=="cubic"))throw new Error(`unrecognized mode: ${r}`);let t=[];p<9&&(t=f.attributes.getFloats("scales"),(0,e.scalesValidation)(t,r,d));const u=f.attributes.getFloat("extrapolation_value",0),s=p>10?f.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(s)===-1)throw new Error(`coordinate_transform_mode '${s}' is not supported`);const m=s==="tf_crop_and_resize",g=m,b=r==="nearest"&&p>=11?f.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(b)===-1)throw new Error(`nearest_mode '${b}' is not supported`);const y=f.attributes.getFloat("cubic_coeff_a",-.75),w=f.attributes.getInt("exclude_outside",0)!==0;if(w&&r!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");const x=p<11||r==="nearest"&&s==="asymmetric"&&b==="floor";let v=0,E=0,O=0;return p>10?f.inputs.length>2?(v=1,E=2,O=3):(E=1,O=2):p===9&&(E=1),(0,o.createAttributeWithCacheKey)({opset:p,isResize:d,mode:r,scales:t,extrapolationValue:u,coordinateTransformMode:s,useExtrapolation:g,needRoiInput:m,nearestMode:b,cubicCoefficientA:y,excludeOutside:w,useNearest2xOptimization:x,roiInputIdx:v,scalesInputIdx:E,sizesInputIdx:O})};const h=(f,p,d)=>{const r=(0,l.getGlsl)(f.session.backend.glContext.version),[t,u]=f.calculateTextureWidthAndHeight(p[0].dims,c.TextureType.unpacked),s=p[0].dims.map((O,C)=>Math.floor(O*d.scales[C])),[m,g]=f.calculateTextureWidthAndHeight(s,c.TextureType.unpacked),b=s.length,y=new Array(b),w=new Array(b);let x=`
      int output_pitches[${b}];
      int input_pitches[${b}];
      `;for(let O=b-1;O>=0;O--)y[O]=O===b-1?1:y[O+1]*s[O+1],w[O]=O===b-1?1:w[O+1]*p[0].dims[O+1],x+=`
        output_pitches[${O}] = ${y[O]};
        input_pitches[${O}] = ${w[O]};
        `;const v=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${t}, ${u});
        float value = getColorAsFloat(${r.texture2D}(X, coords));
        return value;
      }
      `,E=d.mode==="nearest"?`
    ${v}
    float process(int indices[${b}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${m}, ${g});

      ${x}

      int d, m;
      for (int dim = 0; dim < ${b}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:b===4?`
    ${v}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${m}, ${g});

      ${x}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${p[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${v}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${m}, ${g});

      ${x}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${p[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return Object.assign(Object.assign({},a),{output:{dims:s,type:p[0].type,textureType:c.TextureType.unpacked},shaderSource:E,variables:[{name:"scales",type:"int",arrayLength:d.scales.length,data:d.scales.map(O=>Math.ceil(O))}]})};e.validateInputs=(f,p)=>{if(!f||p.opset<9&&f.length!==1||p.opset>=9&&p.opset<11&&f.length!==2||p.opset>=11&&f.length<2)throw new Error("invalid inputs.");if(p.scales.length>0&&f[0].dims.length!==p.scales.length)throw new Error("Invalid input shape.");if(f[0].type==="string")throw new Error("Invalid input tensor types.")},e.scalesValidation=(f,p,d)=>{if(d){for(const r of f)if(r<=0)throw new Error("Scale value should be greater than 0.")}else for(const r of f)if(r<1)throw new Error("Scale value should be greater than or equal to 1.");if(!(p!=="linear"&&p!=="cubic"||f.length===2||f.length===4&&f[0]===1&&f[1]===1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${d?"Resize":"Upsample"} opeartor.`)}},1958:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ProgramManager=void 0;const o=i(1670),l=i(6231),c=i(8879),a=i(5060);e.ProgramManager=class{constructor(h,f,p){this.profiler=h,this.glContext=f,this.textureLayoutStrategy=p,this.repo=new Map,this.attributesBound=!1}getArtifact(h){return this.repo.get(h)}setArtifact(h,f){this.repo.set(h,f)}run(h,f,p){var d;this.profiler.event("op",`ProgramManager.run ${(d=h.programInfo.name)!==null&&d!==void 0?d:"unknown kernel"}`,()=>{var r;const t=this.glContext.gl,u=h.program;t.useProgram(u);try{this.bindOutput(p),this.attributesBound||this.bindAttributes(h.attribLocations),this.bindUniforms(h.uniformLocations,(r=h.programInfo.variables)!==null&&r!==void 0?r:[],f)}catch(s){throw l.Logger.error("ProgramManager",h.programInfo.shaderSource),s}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(h=>this.glContext.deleteProgram(h.program))}build(h,f,p){return this.profiler.event("backend","ProgramManager.build",()=>{const d=new c.GlslPreprocessor(this.glContext,h,f,p),r=d.preprocess(),t=this.compile(r);return{programInfo:h,program:t,uniformLocations:this.getUniformLocations(t,d.context.programInfo.inputNames,d.context.programInfo.variables),attribLocations:this.getAttribLocations(t)}})}compile(h){if(!this.vertexShader){l.Logger.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");const d=(0,a.getVertexShaderSource)(this.glContext.version);this.vertexShader=this.glContext.compileShader(d,this.glContext.gl.VERTEX_SHADER)}o.env.debug&&l.Logger.verbose("ProrgramManager",`FragShader:
${h}
`);const f=this.glContext.compileShader(h,this.glContext.gl.FRAGMENT_SHADER),p=this.glContext.createProgram(this.vertexShader,f);return this.glContext.deleteShader(f),p}bindOutput(h){const f=h.width,p=h.height;l.Logger.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${f}/${p}, shape=${h.shape}, type=${h.tensor.type}`),this.glContext.attachFramebuffer(h.texture,f,p)}bindAttributes(h){const f=h.position,p=h.textureCoord;this.glContext.setVertexAttributes(f,p),this.attributesBound=!0}bindUniforms(h,f,p){var d;const r=this.glContext.gl;let t=0;for(const{name:u,type:s,location:m,arrayLength:g}of h){const b=(d=f.find(y=>y.name===u))===null||d===void 0?void 0:d.data;if(s!=="sampler2D"&&!b)throw new Error(`variable '${u}' does not have data defined in program info`);switch(s){case"sampler2D":this.bindTexture(p[t],m,t),t++;break;case"float":g?r.uniform1fv(m,b):r.uniform1f(m,b);break;case"int":g?r.uniform1iv(m,b):r.uniform1i(m,b);break;default:throw new Error(`Uniform not implemented: ${s}`)}}}bindTexture(h,f,p){this.glContext.bindTextureToUniform(h.texture,p,f)}getAttribLocations(h){return{position:this.getAttribLocation(h,"position"),textureCoord:this.getAttribLocation(h,"textureCoord")}}getUniformLocations(h,f,p){const d=[];if(f)for(const r of f)d.push({name:r,type:"sampler2D",location:this.getUniformLocation(h,r)});if(p)for(const r of p)d.push(Object.assign(Object.assign({},r),{location:this.getUniformLocation(h,r.name)}));return d}getUniformLocation(h,f){const p=this.glContext.gl.getUniformLocation(h,f);if(p===null)throw new Error(`Uniform ${f} not found.`);return p}getAttribLocation(h,f){return this.glContext.gl.getAttribLocation(h,f)}}},6416:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WebGLSessionHandler=void 0;const o=i(6231),l=i(1047),c=i(8316),a=i(1640),h=i(1958),f=i(7859),p=i(5702);e.WebGLSessionHandler=class{constructor(d,r){this.backend=d,this.context=r,this.layoutStrategy=new f.PreferLogicalStrategy(d.glContext.maxTextureSize),this.programManager=new h.ProgramManager(this.context.profiler,d.glContext,this.layoutStrategy),this.textureManager=new p.TextureManager(d.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:d.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=d.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new c.WebGLInferenceHandler(this)}onGraphInitialized(d){const r=d.getValues().filter(t=>t.from===-1&&t.tensor).map(t=>t.tensor.dataId);this.initializers=new Set(r)}isInitializer(d){return!!this.initializers&&this.initializers.has(d)}addInitializer(d){this.initializers.add(d)}getTextureData(d,r){return r?this.packedTextureDataCache.get(d):this.unpackedTextureDataCache.get(d)}setTextureData(d,r,t=!1){o.Logger.verbose("WebGLSessionHandler","Storing Texture data in cache"),t?this.packedTextureDataCache.set(d,r):this.unpackedTextureDataCache.set(d,r)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(d=>this.textureManager.releaseTexture(d,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(d=>this.textureManager.releaseTexture(d,!0)),this.unpackedTextureDataCache=new Map}resolve(d,r,t){const u=(0,l.resolveOperator)(d,r,a.WEBGL_OP_RESOLVE_RULES);return{impl:u.opImpl,context:u.opInit?u.opInit(d,t):d}}}},7769:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Uint8DataEncoder=e.RGBAFloatDataEncoder=e.RedFloat32DataEncoder=void 0;const o=i(6231);e.RedFloat32DataEncoder=class{constructor(l,c=1){if(c===1)this.internalFormat=l.R32F,this.format=l.RED,this.textureType=l.FLOAT,this.channelSize=c;else{if(c!==4)throw new Error(`Invalid number of channels: ${c}`);this.internalFormat=l.RGBA32F,this.format=l.RGBA,this.textureType=l.FLOAT,this.channelSize=c}}encode(l,c){let a,h;return l.constructor!==Float32Array&&(o.Logger.warning("Encoder","data was not of type Float32; creating new Float32Array"),h=new Float32Array(l)),c*this.channelSize>l.length?(o.Logger.warning("Encoder","Source data too small. Allocating larger array"),h=l,a=this.allocate(c*this.channelSize),h.forEach((f,p)=>a[p]=f)):(h=l,a=h),a}allocate(l){return new Float32Array(4*l)}decode(l,c){return this.channelSize===1?l.filter((a,h)=>h%4==0).subarray(0,c):l.subarray(0,c)}},e.RGBAFloatDataEncoder=class{constructor(l,c=1,a){if(c!==1&&c!==4)throw new Error(`Invalid number of channels: ${c}`);this.internalFormat=l.RGBA,this.format=l.RGBA,this.channelSize=c,this.textureType=a||l.FLOAT}encode(l,c){let a=l;return this.channelSize===1&&(o.Logger.verbose("Encoder","Exploding into a larger array"),a=this.allocate(c),l.forEach((h,f)=>a[4*f]=h)),a}allocate(l){return new Float32Array(4*l)}decode(l,c){return this.channelSize===1?l.filter((a,h)=>h%4==0).subarray(0,c):l.subarray(0,c)}},e.Uint8DataEncoder=class{constructor(l,c=1){if(this.channelSize=4,c===1)this.internalFormat=l.ALPHA,this.format=l.ALPHA,this.textureType=l.UNSIGNED_BYTE,this.channelSize=c;else{if(c!==4)throw new Error(`Invalid number of channels: ${c}`);this.internalFormat=l.RGBA,this.format=l.RGBA,this.textureType=l.UNSIGNED_BYTE,this.channelSize=c}}encode(l,c){return new Uint8Array(l.buffer,l.byteOffset,l.byteLength)}allocate(l){return new Uint8Array(l*this.channelSize)}decode(l,c){if(l instanceof Uint8Array)return l.subarray(0,c);throw new Error(`Invalid array type: ${l.constructor}`)}}},7859:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getBatchDim=e.sizeToSquarishShape=e.getRowsCols=e.sizeFromShape=e.isInt=e.parseAxisParam=e.squeezeShape=e.PreferLogicalStrategy=e.AlwaysKeepOriginalSizeStrategy=void 0;const o=i(6231),l=i(2517);function c(d,r){const t=[],u=[],s=r!=null&&Array.isArray(r)&&r.length===0,m=r==null||s?null:a(r,d).sort();let g=0;for(let b=0;b<d.length;++b){if(m!=null){if(m[g]===b&&d[b]!==1)throw new Error(`Can't squeeze axis ${b} since its dim '${d[b]}' is not 1`);(m[g]==null||m[g]>b)&&d[b]===1&&(t.push(d[b]),u.push(b)),m[g]<=b&&g++}d[b]!==1&&(t.push(d[b]),u.push(b))}return{newShape:t,keptDims:u}}function a(d,r){const t=r.length;return d=d==null?r.map((u,s)=>s):[].concat(d),(0,l.assert)(d.every(u=>u>=-t&&u<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${d}`),(0,l.assert)(d.every(h),()=>`All values in axis param must be integers but got axis ${d}`),d.map(u=>u<0?t+u:u)}function h(d){return d%1==0}function f(d){if(d.length===0)return 1;let r=d[0];for(let t=1;t<d.length;t++)r*=d[t];return r}function p(d){const r=Math.ceil(Math.sqrt(d));return[r,Math.ceil(d/r)]}e.AlwaysKeepOriginalSizeStrategy=class{constructor(d){this.maxTextureSize=d}computeTextureWH(d,r){if(d.length===0)return[1,1];const t=this.maxTextureSize;if(r&&r.breakAxis!==void 0){const m=r.breakAxis>=d.length?1:d.slice(r.breakAxis).reduce((b,y)=>b*y),g=r.breakAxis<=0?1:d.slice(0,r.breakAxis).reduce((b,y)=>b*y);if(!(m>t||g>t))return[m,g];o.Logger.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${d}, breakAxis:${r.breakAxis}`)}const u=d.reduce((m,g)=>m*g);let s=Math.floor(Math.sqrt(u));for(;s<t&&s<u&&u%s!=0;s++);if(s>=t||u%s!=0)throw new Error(`The given dimensions are outside this GPU's boundaries: ${d}`);return[s,u/s]}},e.PreferLogicalStrategy=class{constructor(d){this.maxTextureSize=d}computeTextureWH(d,r){const t=this.computeTexture(d,r);return r&&r.isPacked&&(t[0]/=2,t[1]/=2),r&&r.reverseWH?[t[1],t[0]]:t}computeTexture(d,r){const t=r&&r.isPacked;if(d.length===0)return t?[2,2]:[1,1];let u=this.maxTextureSize;if(r&&r.breakAxis!==void 0){const g=r.breakAxis>=d.length?1:d.slice(r.breakAxis).reduce((y,w)=>y*w),b=r.breakAxis<=0?1:d.slice(0,r.breakAxis).reduce((y,w)=>y*w);if(!(g>u||b>u))return[g,b];o.Logger.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${d}, breakAxis:${r.breakAxis}`)}let s=d.slice(0);t&&(u*=2,s=s.map((g,b)=>b>=s.length-2?s[b]%2==0?s[b]:s[b]+1:s[b]),s.length===1&&(s=[2,s[0]])),s.length!==2&&(s=c(s).newShape);const m=f(s);return s.length<=1&&m<=u?[1,m]:s.length===2&&s[0]<=u&&s[1]<=u?s:s.length===3&&s[0]*s[1]<=u&&s[2]<=u?[s[0]*s[1],s[2]]:s.length===3&&s[0]<=u&&s[1]*s[2]<=u?[s[0],s[1]*s[2]]:s.length===4&&s[0]*s[1]*s[2]<=u&&s[3]<=u?[s[0]*s[1]*s[2],s[3]]:s.length===4&&s[0]<=u&&s[1]*s[2]*s[3]<=u?[s[0],s[1]*s[2]*s[3]]:t?p(m/4).map(g=>2*g):p(m)}},e.squeezeShape=c,e.parseAxisParam=a,e.isInt=h,e.sizeFromShape=f,e.getRowsCols=function(d){if(d.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[d.length>1?d[d.length-2]:1,d[d.length-1]]},e.sizeToSquarishShape=p,e.getBatchDim=function(d,r=2){return f(d.slice(0,d.length-r))}},4057:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTextureLayoutFromShape=e.calculateTextureWidthAndHeight=e.createTextureLayoutFromTextureType=void 0;const o=i(2517),l=i(2039);e.createTextureLayoutFromTextureType=(c,a,h)=>{const f=h===l.TextureType.unpacked||h===l.TextureType.unpackedReversed?1:4,p=h===l.TextureType.packed,d=h===l.TextureType.unpackedReversed||h===l.TextureType.packed,r=h===l.TextureType.packedLastDimension?a.length-1:void 0,t=h===l.TextureType.packedLastDimension?a.map((u,s)=>s===a.length-1?4*u:u):void 0;return(0,e.createTextureLayoutFromShape)(c,a,f,t,{isPacked:p,reverseWH:d,breakAxis:r})},e.calculateTextureWidthAndHeight=(c,a,h)=>{const f=(0,e.createTextureLayoutFromTextureType)(c,a,h);return[f.width,f.height]},e.createTextureLayoutFromShape=(c,a,h=1,f,p)=>{const d=!(!p||!p.isPacked),[r,t]=c.computeTextureWH(d&&f||a,p),u=a.length;let s=a.slice(0);if(u===0&&(s=[1]),h===1)f=a;else if(d){if(h!==4)throw new Error("a packed texture must be 4-channel");f=a,u>0&&(s[u-1]=Math.ceil(s[u-1]/2)),u>1&&(s[u-2]=Math.ceil(s[u-2]/2))}else if(!f)throw new Error("Unpacked shape is needed when using channels > 1");return{width:r,height:t,channels:h,isPacked:d,shape:s,strides:o.ShapeUtil.computeStrides(s),unpackedShape:f,reversedWH:p&&p.reverseWH}}},5702:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.TextureManager=void 0;const o=i(6231);e.TextureManager=class{constructor(l,c,a,h){this.glContext=l,this.layoutStrategy=c,this.profiler=a,this.config=h,this.pendingRead=new Map,h.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(l,c,a,h){const f=this.toEncoderType(l),p=this.glContext.getEncoder(f,c.channels||1,h);if(c.isPacked&&h===1)throw new Error("not implemented");const d=c.width,r=c.height;let t,u;if(this.config.reuseTextures){t=`${d}x${r}_${p.format}_${p.internalFormat}_${p.textureType}`,u=this.inUseTextures.get(t),u||(u=[],this.inUseTextures.set(t,u));const m=this.idleTextures.get(t);if(m&&m.length>0){const g=m.pop();return u.push(g),h===1&&this.glContext.updateTexture(g,d,r,p,this.toTextureData(l,a)),g}}o.Logger.verbose("TextureManager",`Creating new texture of size ${c.width}x${c.height}`);const s=this.glContext.allocateTexture(d,r,p,this.toTextureData(l,a));return this.config.reuseTextures&&(u.push(s),this.textureLookup.set(s,t)),s}readTexture(l,c,a){return a||(a=1),this.profiler.event("backend","TextureManager.readTexture",()=>{const h=l.shape.reduce((p,d)=>p*d)*a,f=this.glContext.readTexture(l.texture,l.width,l.height,h,this.toEncoderType(c),a);return this.toTensorData(c,f)})}async readTextureAsync(l,c,a){const h=l.tensor.dataId;if(a||(a=1),this.pendingRead.has(h)){const f=this.pendingRead.get(h);return new Promise(p=>f==null?void 0:f.push(p))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(h,[]);const f=l.shape.reduce((t,u)=>t*u)*a;await this.glContext.createAndWaitForFence();const p=this.glContext.readTexture(l.texture,l.width,l.height,f,this.toEncoderType(c),a),d=this.toTensorData(c,p),r=this.pendingRead.get(h);return this.pendingRead.delete(h),r==null||r.forEach(t=>t(d)),d})}readUint8TextureAsFloat(l){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{const c=l.shape.reduce((h,f)=>h*f),a=this.glContext.readTexture(l.texture,l.width,l.height,4*c,"byte",4);return new Float32Array(a.buffer,a.byteOffset,c)})}releaseTexture(l,c){let a;if(this.config.reuseTextures&&(a=this.textureLookup.get(l.texture),a)){c&&this.textureLookup.delete(a);const h=this.inUseTextures.get(a);if(h){const f=h.indexOf(l.texture);if(f!==-1){h.splice(f,1);let p=this.idleTextures.get(a);p||(p=[],this.idleTextures.set(a,p)),p.push(l.texture)}}}a&&!c||(o.Logger.verbose("TextureManager",`Deleting texture of size ${l.width}x${l.height}`),this.glContext.deleteTexture(l.texture))}toTensorData(l,c){switch(l){case"int16":return c instanceof Int16Array?c:Int16Array.from(c);case"int32":return c instanceof Int32Array?c:Int32Array.from(c);case"int8":return c instanceof Int8Array?c:Int8Array.from(c);case"uint16":return c instanceof Uint16Array?c:Uint16Array.from(c);case"uint32":return c instanceof Uint32Array?c:Uint32Array.from(c);case"uint8":case"bool":return c instanceof Uint8Array?c:Uint8Array.from(c);case"float32":return c instanceof Float32Array?c:Float32Array.from(c);case"float64":return c instanceof Float64Array?c:Float64Array.from(c);default:throw new Error(`TensorData type ${l} is not supported`)}}toTextureData(l,c){if(c)return c instanceof Float32Array?c:new Float32Array(c)}toEncoderType(l){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}},2039:(n,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),e.TextureType=void 0,(i=e.TextureType||(e.TextureType={}))[i.unpacked=0]="unpacked",i[i.unpackedReversed=1]="unpackedReversed",i[i.packed=2]="packed",i[i.downloadUint8AsFloat=3]="downloadUint8AsFloat",i[i.packedLastDimension=4]="packedLastDimension"},9390:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getGlChannels=e.getCoordsDataType=e.getSqueezedParams=e.squeezeInputShape=e.generateShaderFuncNameFromInputSamplerNameAtOutCoords=e.generateShaderFuncNameFromInputSamplerName=e.repeatedTry=e.getPackedShape=void 0;const o=i(2517);e.getPackedShape=function(l){const c=l.length;return l.slice(0,c-1).concat(l[c-1]/4)},e.repeatedTry=async function(l,c=h=>0,a){return new Promise((h,f)=>{let p=0;const d=()=>{if(l())return void h();p++;const r=c(p);a!=null&&p>=a?f():setTimeout(d,r)};d()})},e.generateShaderFuncNameFromInputSamplerName=function(l){return(0,o.assert)(l!==void 0&&l.length!==0,()=>"empty string found for sampler name"),"get"+l.charAt(0).toUpperCase()+l.slice(1)},e.generateShaderFuncNameFromInputSamplerNameAtOutCoords=function(l){return(0,o.assert)(l!==void 0&&l.length!==0,()=>"empty string found for sampler name"),"get"+l.charAt(0).toUpperCase()+l.slice(1)+"AtOutCoords"},e.squeezeInputShape=function(l,c){let a=JSON.parse(JSON.stringify(l));return a=c,a},e.getSqueezedParams=function(l,c){return c.map(a=>l[a]).join(", ")},e.getCoordsDataType=function(l){if(l<=1)return"int";if(l===2)return"ivec2";if(l===3)return"ivec3";if(l===4)return"ivec4";if(l===5)return"ivec5";if(l===6)return"ivec6";throw Error(`GPU for rank ${l} is not yet supported`)},e.getGlChannels=function(l=6){return["x","y","z","w","u","v"].slice(0,l)}},7305:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createNewWebGLContext=e.createWebGLContext=void 0;const o=i(6231),l=i(1713),c={};function a(h){const f=function(){if(typeof document>"u"){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}const r=document.createElement("canvas");return r.width=1,r.height=1,r}();let p;const d={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1};if((!h||h==="webgl2")&&(p=f.getContext("webgl2",d),p))try{return new l.WebGLContext(p,2)}catch(r){o.Logger.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${r}`)}if((!h||h==="webgl")&&(p=f.getContext("webgl",d)||f.getContext("experimental-webgl",d),p))try{return new l.WebGLContext(p,1)}catch(r){o.Logger.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${r}`)}throw new Error("WebGL is not supported")}e.createWebGLContext=function h(f){let p;f&&f!=="webgl2"||!("webgl2"in c)?f&&f!=="webgl"||!("webgl"in c)||(p=c.webgl):p=c.webgl2,p=p||a(f),f=f||p.version===1?"webgl":"webgl2";const d=p.gl;return c[f]=p,d.isContextLost()?(delete c[f],h(f)):(d.disable(d.DEPTH_TEST),d.disable(d.STENCIL_TEST),d.disable(d.BLEND),d.disable(d.DITHER),d.disable(d.POLYGON_OFFSET_FILL),d.disable(d.SAMPLE_COVERAGE),d.enable(d.SCISSOR_TEST),d.enable(d.CULL_FACE),d.cullFace(d.BACK),p)},e.createNewWebGLContext=a},1713:function(n,e,i){var o=this&&this.__createBinding||(Object.create?function(d,r,t,u){u===void 0&&(u=t);var s=Object.getOwnPropertyDescriptor(r,t);s&&!("get"in s?!r.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return r[t]}}),Object.defineProperty(d,u,s)}:function(d,r,t,u){u===void 0&&(u=t),d[u]=r[t]}),l=this&&this.__setModuleDefault||(Object.create?function(d,r){Object.defineProperty(d,"default",{enumerable:!0,value:r})}:function(d,r){d.default=r}),c=this&&this.__importStar||function(d){if(d&&d.__esModule)return d;var r={};if(d!=null)for(var t in d)t!=="default"&&Object.prototype.hasOwnProperty.call(d,t)&&o(r,d,t);return l(r,d),r};Object.defineProperty(e,"__esModule",{value:!0}),e.WebGLContext=e.linearSearchLastTrue=void 0;const a=i(1670),h=c(i(7769)),f=i(9390);function p(d){let r=0;for(;r<d.length&&d[r]();++r);return r-1}e.linearSearchLastTrue=p,e.WebGLContext=class{constructor(d,r){this.frameBufferBound=!1,this.itemsToPoll=[],this.gl=d,this.version=r,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(d,r,t,u){const s=this.gl,m=s.createTexture();s.bindTexture(s.TEXTURE_2D,m),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MAG_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE);const g=u?t.encode(u,d*r):null;return s.texImage2D(s.TEXTURE_2D,0,t.internalFormat,d,r,0,t.format,t.textureType,g),this.checkError(),m}updateTexture(d,r,t,u,s){const m=this.gl;m.bindTexture(m.TEXTURE_2D,d);const g=u.encode(s,r*t);m.texSubImage2D(m.TEXTURE_2D,0,0,0,r,t,u.format,u.textureType,g),this.checkError()}attachFramebuffer(d,r,t){const u=this.gl;u.bindTexture(u.TEXTURE_2D,d),u.bindFramebuffer(u.FRAMEBUFFER,this.framebuffer),u.framebufferTexture2D(u.FRAMEBUFFER,u.COLOR_ATTACHMENT0,u.TEXTURE_2D,d,0),this.checkError(),u.viewport(0,0,r,t),u.scissor(0,0,r,t)}readTexture(d,r,t,u,s,m){const g=this.gl;m||(m=1),this.frameBufferBound||this.attachFramebuffer(d,r,t);const b=this.getEncoder(s,m),y=b.allocate(r*t);return g.bindTexture(g.TEXTURE_2D,d),g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,g.TEXTURE_2D,d,0),g.readPixels(0,0,r,t,g.RGBA,b.textureType,y),this.checkError(),b.decode(y,u)}isFramebufferReady(){return!0}getActiveTexture(){const d=this.gl;return"TEXTURE"+(d.getParameter(this.gl.ACTIVE_TEXTURE)-d.TEXTURE0)}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(d,r){const t=this.gl;t.vertexAttribPointer(d,3,t.FLOAT,!1,20,0),t.enableVertexAttribArray(d),r!==-1&&(t.vertexAttribPointer(r,2,t.FLOAT,!1,20,12),t.enableVertexAttribArray(r)),this.checkError()}createProgram(d,r){const t=this.gl,u=t.createProgram();return t.attachShader(u,d),t.attachShader(u,r),t.linkProgram(u),u}compileShader(d,r){const t=this.gl,u=t.createShader(r);if(!u)throw new Error(`createShader() returned null with type ${r}`);if(t.shaderSource(u,d),t.compileShader(u),t.getShaderParameter(u,t.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${t.getShaderInfoLog(u)}
Shader source:
${d}`);return u}deleteShader(d){this.gl.deleteShader(d)}bindTextureToUniform(d,r,t){const u=this.gl;u.activeTexture(u.TEXTURE0+r),this.checkError(),u.bindTexture(u.TEXTURE_2D,d),this.checkError(),u.uniform1i(t,r),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(a.env.debug){const d=this.gl,r=d.getError();let t="";switch(r){case d.NO_ERROR:return;case d.INVALID_ENUM:t="INVALID_ENUM";break;case d.INVALID_VALUE:t="INVALID_VALUE";break;case d.INVALID_OPERATION:t="INVALID_OPERATION";break;case d.INVALID_FRAMEBUFFER_OPERATION:t="INVALID_FRAMEBUFFER_OPERATION";break;case d.OUT_OF_MEMORY:t="OUT_OF_MEMORY";break;case d.CONTEXT_LOST_WEBGL:t="CONTEXT_LOST_WEBGL";break;default:t=`Unknown WebGL Error: ${r.toString(16)}`}throw new Error(t)}}deleteTexture(d){this.gl.deleteTexture(d)}deleteProgram(d){this.gl.deleteProgram(d)}getEncoder(d,r,t=0){if(this.version===2)return new h.RedFloat32DataEncoder(this.gl,r);switch(d){case"float":return t===1||this.isRenderFloat32Supported?new h.RGBAFloatDataEncoder(this.gl,r):new h.RGBAFloatDataEncoder(this.gl,r,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new h.Uint8DataEncoder(this.gl,r);default:throw new Error(`Invalid dataType: ${d}`)}}clearActiveTextures(){const d=this.gl;for(let r=0;r<this.maxTextureImageUnits;++r)d.activeTexture(d.TEXTURE0+r),d.bindTexture(d.TEXTURE_2D,null)}dispose(){if(this.disposed)return;const d=this.gl;d.bindFramebuffer(d.FRAMEBUFFER,null),d.deleteFramebuffer(this.framebuffer),d.bindBuffer(d.ARRAY_BUFFER,null),d.deleteBuffer(this.vertexbuffer),d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,null),d.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){const d=this.gl,r=d.createBuffer();if(!r)throw new Error("createBuffer() returned null");const t=this.createDefaultGeometry();return d.bindBuffer(d.ARRAY_BUFFER,r),d.bufferData(d.ARRAY_BUFFER,t,d.STATIC_DRAW),this.checkError(),r}createFramebuffer(){const d=this.gl.createFramebuffer();if(!d)throw new Error("createFramebuffer returned null");return d}queryVitalParameters(){const d=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=d.getParameter(d.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=d.getParameter(d.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){const d=this.gl,r=d.createTexture();d.bindTexture(d.TEXTURE_2D,r);const t=this.version===2?d.RGBA32F:d.RGBA;d.texImage2D(d.TEXTURE_2D,0,t,1,1,0,d.RGBA,d.FLOAT,null);const u=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,u),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,r,0);const s=d.checkFramebufferStatus(d.FRAMEBUFFER)===d.FRAMEBUFFER_COMPLETE;return d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),d.deleteTexture(r),d.deleteFramebuffer(u),s}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){const d=this.gl;let r,t,u,s,m;try{r=d.createTexture(),t=d.createFramebuffer(),d.bindTexture(d.TEXTURE_2D,r);const g=this.version===2?d.RGBA32F:d.RGBA;return d.texImage2D(d.TEXTURE_2D,0,g,1,1,0,d.RGBA,d.FLOAT,null),d.bindFramebuffer(d.FRAMEBUFFER,t),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,r,0),d.enable(d.BLEND),u=d.createShader(d.VERTEX_SHADER),!!u&&(d.shaderSource(u,"void main(){}"),d.compileShader(u),s=d.createShader(d.FRAGMENT_SHADER),!!s&&(d.shaderSource(s,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),d.compileShader(s),m=d.createProgram(),!!m&&(d.attachShader(m,u),d.attachShader(m,s),d.linkProgram(m),d.useProgram(m),d.drawArrays(d.POINTS,0,1),d.getError()===d.NO_ERROR)))}finally{d.disable(d.BLEND),m&&d.deleteProgram(m),u&&d.deleteShader(u),s&&d.deleteShader(s),t&&(d.bindFramebuffer(d.FRAMEBUFFER,null),d.deleteFramebuffer(t)),r&&(d.bindTexture(d.TEXTURE_2D,null),d.deleteTexture(r))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){const d=this.gl,r=this.disjointTimerQueryWebgl2Extension,t=d.createQuery();return d.beginQuery(r.TIME_ELAPSED_EXT,t),t}throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version!==2||!this.disjointTimerQueryWebgl2Extension)throw new Error("WebGL1 profiling currently not supported");{const d=this.gl,r=this.disjointTimerQueryWebgl2Extension;d.endQuery(r.TIME_ELAPSED_EXT)}}isTimerResultAvailable(d){let r=!1,t=!1;if(this.version!==2||!this.disjointTimerQueryWebgl2Extension)throw new Error("WebGL1 profiling currently not supported");{const u=this.gl,s=this.disjointTimerQueryWebgl2Extension;r=u.getQueryParameter(d,u.QUERY_RESULT_AVAILABLE),t=u.getParameter(s.GPU_DISJOINT_EXT)}return r&&!t}getTimerResult(d){let r=0;if(this.version!==2)throw new Error("WebGL1 profiling currently not supported");{const t=this.gl;r=t.getQueryParameter(d,t.QUERY_RESULT),t.deleteQuery(d)}return r/1e6}async waitForQueryAndGetTime(d){return await(0,f.repeatedTry)(()=>this.isTimerResultAvailable(d)),this.getTimerResult(d)}async createAndWaitForFence(){const d=this.createFence(this.gl);return this.pollFence(d)}createFence(d){let r;const t=d,u=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return d.flush(),r=u===null?()=>!0:()=>{const s=t.clientWaitSync(u,0,0);return s===t.ALREADY_SIGNALED||s===t.CONDITION_SATISFIED},{query:u,isFencePassed:r}}async pollFence(d){return new Promise(r=>{this.addItemToPoll(()=>d.isFencePassed(),()=>r())})}pollItems(){const d=p(this.itemsToPoll.map(r=>r.isDoneFn));for(let r=0;r<=d;++r){const{resolveFn:t}=this.itemsToPoll[r];t()}this.itemsToPoll=this.itemsToPoll.slice(d+1)}async addItemToPoll(d,r){this.itemsToPoll.push({isDoneFn:d,resolveFn:r}),this.itemsToPoll.length>1||await(0,f.repeatedTry)(()=>(this.pollItems(),this.itemsToPoll.length===0))}}},1036:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ExecutionPlan=void 0;const o=i(6231);class l{constructor(a,h){this.op=a,this.node=h}}e.ExecutionPlan=class{constructor(c,a,h){this.graph=c,this.profiler=h,this.initialize(a)}initialize(c){this.profiler.event("session","ExecutionPlan.initialize",()=>{const a=this.graph.getNodes();if(a.length!==c.length)throw new Error("The size of nodes and OPs do not match.");this._ops=c.map((h,f)=>new l(h,a[f])),this.reset(),this._starter=[],this._ops.forEach((h,f)=>{let p=!0;for(const d of h.node.inputs)if(!this._values[d]&&this.graph.getInputIndices().indexOf(d)===-1){p=!1;break}p&&this._starter.push(f)})})}reset(){this._values=this.graph.getValues().map(c=>c.tensor)}async execute(c,a){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();const h=c.createInferenceHandler(),f=this.graph.getInputIndices();if(a.length!==f.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${a.length} expected: ${f.length}`);a.forEach((s,m)=>{const g=f[m];this._values[g]=s});const p=this._starter.slice(0),d=this.graph.getValues(),r=this.graph.getNodes();let t=0;for(;t<p.length;){const s=p[t++],m=this._ops[s],g=m.node.inputs.map(x=>this._values[x]);if(g.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${m.node}`);const b=g;o.Logger.verbose("ExecPlan",`Runing op:${m.node.name} (${b.map((x,v)=>`'${m.node.inputs[v]}': ${x.type}[${x.dims.join(",")}]`).join(", ")})`);const y=await this.profiler.event("node",m.node.name,async()=>m.op.impl(h,b,m.op.context));if(y.length!==m.node.outputs.length)throw new Error("the size of output does not match model definition.");y.forEach((x,v)=>{const E=m.node.outputs[v];if(this._values[E])throw new Error(`output [${E}] already has value: op:${m.node.name}`);this._values[E]=x});const w=new Set;y.forEach((x,v)=>{const E=m.node.outputs[v];for(const O of d[E].to){const C=r[O];let S=!0;for(const N of C.inputs)if(!this._values[N]){S=!1;break}S&&w.add(O)}}),p.push(...w)}const u=[];for(let s=0;s<this.graph.getOutputIndices().length;s++){const m=this.graph.getOutputIndices()[s],g=this._values[m];if(g===void 0)throw new Error(`required output [${m}] does not have value`);m===0?await g.getData():g.data,u.push(g)}return o.Logger.verbose("ExecPlan","disposing of inferenceHandler"),h.dispose(),u})}}},7070:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Graph=void 0;const o=i(1446),l=i(7778),c=i(9395),a=i(9162),h=i(2517);var f=c.onnxruntime.experimental.fbs;e.Graph={from:(t,u)=>new r(t,u)};class p{constructor(u){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,u&&(this.type=h.ProtoUtil.tensorValueTypeFromProto(u.type.tensorType))}get from(){return this._from}get to(){return this._to}}class d{constructor(u,s){u instanceof o.onnx.NodeProto?(this.name=u.name,this.opType=u.opType,this.attributes=new l.Attribute(u.attribute)):u instanceof f.Node&&(this.name=s??u.name(),this.opType=u.opType(),this.attributes=new l.Attribute(h.ProtoUtil.tensorAttributesFromORTFormat(u))),this.inputs=[],this.outputs=[],this.executeNode=!0}}class r{constructor(u,s){if(!u)throw new TypeError("graph is empty");this.buildGraph(u),this.transformGraph(s),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(u){if(u instanceof o.onnx.GraphProto)this.buildGraphFromOnnxFormat(u);else{if(!(u instanceof f.Graph))throw new TypeError("Graph type is not supported.");this.buildGraphFromOrtFormat(u)}}buildGraphFromOnnxFormat(u){const s=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];const m=new Map;if(!u.input)throw new Error("missing information in graph: input");const g=[];for(const b of u.input){if(s.has(b.name))throw new Error(`duplicated input name: ${b.name}`);const y=this._allData.push(new p(b))-1;s.set(b.name,y),g.push(b.name)}if(!u.initializer)throw new Error("missing information in graph: initializer");for(const b of u.initializer){let y=s.get(b.name);if(y===void 0){const w=new p;w.type={shape:{dims:h.ProtoUtil.tensorDimsFromProto(b.dims)},tensorType:h.ProtoUtil.tensorDataTypeFromProto(b.dataType)},y=this._allData.push(w)-1,s.set(b.name,y)}this._allData[y]._from=-1,this._allData[y].tensor=a.Tensor.fromProto(b)}for(let b=0;b<this._allData.length;b++)this._allData[b].tensor||(this._allInputIndices.push(b),this._allInputNames.push(g[b]));if(!u.output)throw new Error("missing information in graph: output");for(const b of u.output){if(s.has(b.name))throw new Error(`duplicated output name: ${b.name}`);const y=this._allData.push(new p(b))-1;s.set(b.name,y),this._allOutputIndices.push(y),this._allOutputNames.push(b.name)}if(!u.node)throw new Error("missing information in graph: node");for(const b of u.node){if(!b.name)for(let w=0;;w++){const x=`unnamed_${b.opType}_${w}`;if(!m.has(x)){b.name=x;break}}if(m.has(b.name))throw new Error(`duplicated node name: ${b.name}`);const y=this._nodes.push(new d(b))-1;m.set(b.name,y)}for(let b=0;b<this._nodes.length;b++){const y=this._nodes[b],w=u.node[b];if(!w.output)throw new Error(`missing output for node: ${w.name}`);for(const x of w.output){let v=s.get(x);if(v===void 0&&(v=this._allData.push(new p)-1,s.set(x,v)),y.outputs.push(v),this._allData[v]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${v}`);if(this._allData[v]._from=b,w.opType==="Constant"){if(!w.attribute||w.attribute.length!==1||!w.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!w.output||w.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");y.outputs.pop(),y.executeNode=!1,this._allData[v]._from=-1,this._allData[v].tensor=a.Tensor.fromProto(w.attribute[0].t)}}}for(let b=0;b<this._nodes.length;b++){const y=this._nodes[b],w=u.node[b];if(!w.input)throw new Error(`missing input for node: ${w.name}`);for(const x of w.input){const v=s.get(x);if(v===void 0){if(x===""&&w.input.length===3&&w.opType==="Resize")continue;throw new Error(`unrecognized input '${x}' for node: ${w.name}`)}y.inputs.push(v),this._allData[v]._to.push(b)}}return!0}buildGraphFromOrtFormat(u){var s,m,g;const b=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];const y=new Map,w=[];for(let x=0;x<u.inputsLength();x++){const v=u.inputs(x);if(b.has(v))throw new Error(`duplicated input name: ${v}`);for(let E=0;E<u.nodeArgsLength();E++)if(((s=u.nodeArgs(E))===null||s===void 0?void 0:s.name())===v){const O=new p;if(((g=(m=u.nodeArgs(E))===null||m===void 0?void 0:m.type())===null||g===void 0?void 0:g.valueType())!==f.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");const C=u.nodeArgs(E).type().value(new f.TensorTypeAndShape),S=h.ProtoUtil.tensorDataTypeFromProto(C.elemType()),N=C.shape(),Q=[];for(let Z=0;Z<N.dimLength();Z++)Q.push(h.LongUtil.longToNumber(N.dim(Z).value().dimValue()));O.type={shape:{dims:Q},tensorType:S};const te=this._allData.push(O)-1;b.set(v,te),w.push(v)}}for(let x=0;x<u.initializersLength();x++){const v=u.initializers(x);let E=b.get(v.name());if(E===void 0){const O=new p,C=h.ProtoUtil.tensorDimsFromORTFormat(v),S=h.ProtoUtil.tensorDataTypeFromProto(v.dataType());O.type={shape:{dims:C},tensorType:S},E=this._allData.push(O)-1,b.set(v.name(),E)}this._allData[E]._from=-1,this._allData[E].tensor=a.Tensor.fromOrtTensor(v)}for(let x=0;x<this._allData.length;x++)this._allData[x].tensor||(this._allInputIndices.push(x),this._allInputNames.push(w[x]));for(let x=0;x<u.outputsLength();x++){const v=u.outputs(x);if(b.has(v))throw new Error(`duplicated output name: ${v}`);const E=this._allData.push(new p)-1;b.set(v,E),this._allOutputIndices.push(E),this._allOutputNames.push(v)}if(!u.nodes)throw new Error("missing information in graph: node");for(let x=0;x<u.nodesLength();x++){const v=u.nodes(x);let E=v.name();if(!E)for(let C=0;E=`unnamed_${v.opType()}_${C}`,y.has(E);C++);if(y.has(E))throw new Error(`duplicated node name: ${E}`);const O=this._nodes.push(new d(v,E))-1;y.set(E,O)}for(let x=0;x<this._nodes.length;x++){const v=this._nodes[x],E=u.nodes(x);if(E==null)throw new Error(`No node exists at index ${x}`);if((E==null?void 0:E.outputsLength())===0)throw new Error(`missing output for node: ${E.name}`);for(let O=0;O<(E==null?void 0:E.outputsLength());O++){const C=E==null?void 0:E.outputs(O);let S=b.get(C);if(S===void 0&&(S=this._allData.push(new p)-1,b.set(C,S)),v.outputs.push(S),this._allData[S]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${S}`);if(this._allData[S]._from=x,E.opType()==="Constant"){if(E.attributesLength()!==1||!E.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(E.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");v.outputs.pop(),v.executeNode=!1,this._allData[S]._from=-1,this._allData[S].tensor=a.Tensor.fromOrtTensor(E.attributes(0).t())}}}for(let x=0;x<this._nodes.length;x++){const v=this._nodes[x],E=u.nodes(x);if(E.inputsLength()===0)throw new Error(`missing input for node: ${E.name}`);for(let O=0;O<E.inputsLength();O++){const C=E.inputs(O),S=b.get(C);if(S===void 0)throw new Error(`unrecognized input '${C}' for node: ${E.name()}`);v.inputs.push(S),this._allData[S]._to.push(x)}}}checkIsAcyclic(){const u=new Set;this._allInputIndices.forEach(g=>{this._allData[g]._to.forEach(b=>{u.add(b)})});const s=Array.from(u),m=new Array(this._nodes.length).fill("white");for(;s.length>0;){const g=s.pop();m[g]==="gray"?m[g]="black":(s.push(g),m[g]="gray",this._nodes[g].outputs.forEach(b=>{const y=this._allData[b];if(y.tensor!==void 0)throw new Error("node outputs should not be initialized");if(y._from!==g)throw new Error("from property of the Value object doesn't match index of Node being processed");y._to.forEach(w=>{if(m[w]==="gray")throw new Error("model graph is cyclic");m[w]==="white"&&s.push(w)})}))}}transformGraph(u){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),u&&u.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let u=0;for(let s=0;s<this._nodes.length;s++)this._nodes[s].executeNode?u>0&&(this._nodes[s].inputs.forEach(m=>{const g=this._allData[m]._to.indexOf(s+u);g!==-1&&(this._allData[m]._to[g]=s)}),this._nodes[s].outputs.forEach(m=>{this._allData[m]._from&&this._allData[m]._from===s+u&&(this._allData[m]._from=s)})):(u++,this._nodes[s].outputs.forEach(m=>{this._allData[m]._from=-2}),this._nodes.splice(s,1),s--);u=0;for(let s=0;s<this._allData.length;s++)if(this._allData[s].from!==-2||this._allOutputIndices.indexOf(s+u)!==-1){if(u>0){let m=-1;this._allData[s].from!==void 0&&this._allData[s].from!==-1?(m=this._nodes[this._allData[s].from].outputs.indexOf(s+u),m!==-1&&(this._nodes[this._allData[s].from].outputs[m]=s)):(m=this._allInputIndices.indexOf(s+u),m!==-1&&(this._allInputIndices[m]=s)),this._allData[s].to.forEach(g=>{m=this._nodes[g].inputs.indexOf(s+u),m!==-1&&(this._nodes[g].inputs[m]=s)}),this._allData[s].to.length===0&&(m=this._allOutputIndices.indexOf(s+u),m!==-1&&(this._allOutputIndices[m]=s))}}else u++,this._allData.splice(s,1),s--}deleteNode(u){const s=this._nodes[u];if(s.outputs.length>1){for(let x=1;x<s.outputs.length;x++)if(this._allData[s.outputs[x]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}s.executeNode=!1;const m=s.inputs[0],g=s.outputs[0],b=this._allData[g].to,y=this._allData[m].to.indexOf(u);if(y===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[m].to.splice(y,1),this._allData[g]._to=[];const w=this._allOutputIndices.indexOf(g);if(w!==-1&&(this._allOutputIndices[w]=m),b&&b.length>0)for(const x of b){const v=this._nodes[x].inputs.indexOf(g);if(v===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[x].inputs[v]=m,this._allData[m].to.push(x)}}removeAllDropoutNodes(){let u=0;for(const s of this._nodes){if(s.opType==="Dropout"){if(s.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(s.outputs.length!==1&&s.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(s.outputs.length===2&&this._allData[s.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(u)}u++}}removeAllIdentityNodes(){let u=0;for(const s of this._nodes)s.opType==="Identity"&&this.deleteNode(u),u++}isActivation(u){switch(u.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(const u of this._nodes)if(u.opType==="Conv"){const s=this._allData[u.outputs[0]]._to;if(s.length===1&&this.isActivation(this._nodes[s[0]])){const m=this._nodes[s[0]];if(m.opType==="Clip")if(m.inputs.length===1)try{u.attributes.set("activation_params","floats",[m.attributes.getFloat("min"),m.attributes.getFloat("max")])}catch{u.attributes.set("activation_params","floats",[h.MIN_CLIP,h.MAX_CLIP])}else{if(!(m.inputs.length>=3&&this._allData[m.inputs[1]].tensor!==void 0&&this._allData[m.inputs[2]].tensor!==void 0))continue;u.attributes.set("activation_params","floats",[this._allData[m.inputs[1]].tensor.floatData[0],this._allData[m.inputs[2]].tensor.floatData[0]])}u.attributes.set("activation","string",m.opType),this.deleteNode(s[0])}}}}},6231:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.now=e.Profiler=e.Logger=void 0;const i={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},o={none:new class{log(d,r,t){}},console:new class{log(d,r,t){console.log(`${this.color(d)} ${t?"\x1B[35m"+t+"\x1B[0m ":""}${r}`)}color(d){switch(d){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${d}`)}}}},l={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1};let c={"":l};function a(d,r,t,u){if(r===void 0)return s=d,{verbose:a.verbose.bind(null,s),info:a.info.bind(null,s),warning:a.warning.bind(null,s),error:a.error.bind(null,s),fatal:a.fatal.bind(null,s)};if(t===void 0)h(d,r);else if(typeof t=="number"&&u===void 0)h(d,r);else if(typeof t=="string"&&u===void 0)h(d,t,0,r);else{if(typeof t!="string"||typeof u!="number")throw new TypeError("input is valid");h(d,t,0,r)}var s}function h(d,r,t,u){const s=c[u||""]||c[""];i[d]<i[s.minimalSeverity]||(s.logDateTime&&(r=`${new Date().toISOString()}|${r}`),s.logSourceLocation,o[s.provider].log(d,r,u))}(function(d){function r(u){c={},t("",u||{})}function t(u,s){if(u==="*")r(s);else{const m=c[u]||l;c[u]={provider:s.provider||m.provider,minimalSeverity:s.minimalSeverity||m.minimalSeverity,logDateTime:s.logDateTime===void 0?m.logDateTime:s.logDateTime,logSourceLocation:s.logSourceLocation===void 0?m.logSourceLocation:s.logSourceLocation}}}d.verbose=function(u,s){d("verbose",u,s)},d.info=function(u,s){d("info",u,s)},d.warning=function(u,s){d("warning",u,s)},d.error=function(u,s){d("error",u,s)},d.fatal=function(u,s){d("fatal",u,s)},d.reset=r,d.set=t,d.setWithEnv=function(u){const s={};u.logLevel&&(s.minimalSeverity=u.logLevel),t("",s)}})(a||(a={})),e.Logger=a;class f{constructor(r,t,u,s,m,g){this.category=r,this.name=t,this.startTime=u,this.endCallback=s,this.timer=m,this.ctx=g}end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}}class p{constructor(r,t,u,s){this.category=r,this.name=t,this.startTime=u,this.endTime=s}}e.Profiler=class{static create(d){return d===void 0?new this:new this(d.maxNumberEvents,d.flushBatchSize,d.flushIntervalInMilliseconds)}constructor(d,r,t){this._started=!1,this._flushPointer=0,this._started=!1,this._maxNumberEvents=d===void 0?1e4:d,this._flushBatchSize=r===void 0?10:r,this._flushIntervalInMilliseconds=t===void 0?5e3:t}start(){this._started=!0,this._timingEvents=[],this._flushTime=(0,e.now)(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(d,r,t,u){const s=this._started?this.begin(d,r,u):void 0;let m=!1;const g=t();if(g&&typeof g.then=="function")return m=!0,new Promise((b,y)=>{g.then(async w=>{s&&await s.end(),b(w)},async w=>{s&&await s.end(),y(w)})});if(!m&&s){const b=s.end();if(b&&typeof b.then=="function")return new Promise((y,w)=>{b.then(()=>{y(g)},x=>{w(x)})})}return g}begin(d,r,t){if(!this._started)throw new Error("profiler is not started yet");if(t===void 0){const u=(0,e.now)();return this.flush(u),new f(d,r,u,s=>this.endSync(s))}{const u=t.beginTimer();return new f(d,r,0,async s=>this.end(s),u,t)}}async end(d){const r=await d.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new p(d.category,d.name,d.startTime,r)),this.flush(r))}endSync(d){const r=(0,e.now)();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new p(d.category,d.name,d.startTime,r)),this.flush(r))}logOneEvent(d){e.Logger.verbose(`Profiler.${d.category}`,`${(d.endTime-d.startTime).toFixed(2)}ms on event '${d.name}' at ${d.endTime.toFixed(2)}`)}flush(d){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||d-this._flushTime>=this._flushIntervalInMilliseconds){for(const r=this._flushPointer;this._flushPointer<r+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=(0,e.now)()}}get started(){return this._started}},e.now=typeof performance<"u"&&performance.now?()=>performance.now():Date.now},2644:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Model=void 0;const o=i(5686),l=i(1446),c=i(7070),a=i(9395),h=i(2517);var f=a.onnxruntime.experimental.fbs;e.Model=class{constructor(){}load(p,d,r){if(!r)try{return void this.loadFromOnnxFormat(p,d)}catch(t){if(r!==void 0)throw t}this.loadFromOrtFormat(p,d)}loadFromOnnxFormat(p,d){const r=l.onnx.ModelProto.decode(p);if(h.LongUtil.longToNumber(r.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=r.opsetImport.map(t=>({domain:t.domain,version:h.LongUtil.longToNumber(t.version)})),this._graph=c.Graph.from(r.graph,d)}loadFromOrtFormat(p,d){const r=new o.flatbuffers.ByteBuffer(p),t=f.InferenceSession.getRootAsInferenceSession(r).model();if(h.LongUtil.longToNumber(t.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let u=0;u<t.opsetImportLength();u++){const s=t.opsetImport(u);this._opsets.push({domain:s==null?void 0:s.domain(),version:h.LongUtil.longToNumber(s.version())})}this._graph=c.Graph.from(t.graph(),d)}get graph(){return this._graph}get opsets(){return this._opsets}}},782:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.FLOAT_TYPES=e.INT_TYPES=e.NUMBER_TYPES=void 0,e.NUMBER_TYPES=["float32","float64","int32","int16","int8","uint16","uint32","uint8"],e.INT_TYPES=["int32","int16","int8","uint16","uint32","uint8"],e.FLOAT_TYPES=["float32","float64"]},1047:(n,e)=>{function i(o,l){if(l.endsWith("+")){const c=Number.parseInt(l.substring(0,l.length-1),10);return!isNaN(c)&&c<=o}if(l.split("-").length===2){const c=l.split("-"),a=Number.parseInt(c[0],10),h=Number.parseInt(c[1],10);return!isNaN(a)&&!isNaN(h)&&a<=o&&o<=h}return Number.parseInt(l,10)===o}Object.defineProperty(e,"__esModule",{value:!0}),e.resolveOperator=void 0,e.resolveOperator=function(o,l,c){for(const a of c){const h=a[0],f=a[1],p=a[2],d=a[3],r=a[4];if(o.opType===h){for(const t of l)if((t.domain===f||t.domain==="ai.onnx"&&f==="")&&i(t.version,p))return{opImpl:d,opInit:r}}}throw new TypeError(`cannot resolve operator '${o.opType}' with opsets: ${l.map(a=>`${a.domain||"ai.onnx"} v${a.version}`).join(", ")}`)}},9395:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.onnxruntime=void 0;const o=i(5686);var l,c;l=e.onnxruntime||(e.onnxruntime={}),function(a){(function(h){h[h.UNDEFINED=0]="UNDEFINED",h[h.FLOAT=1]="FLOAT",h[h.INT=2]="INT",h[h.STRING=3]="STRING",h[h.TENSOR=4]="TENSOR",h[h.GRAPH=5]="GRAPH",h[h.FLOATS=6]="FLOATS",h[h.INTS=7]="INTS",h[h.STRINGS=8]="STRINGS",h[h.TENSORS=9]="TENSORS",h[h.GRAPHS=10]="GRAPHS",h[h.SPARSE_TENSOR=11]="SPARSE_TENSOR",h[h.SPARSE_TENSORS=12]="SPARSE_TENSORS"})(a.AttributeType||(a.AttributeType={}))}((c=l.experimental||(l.experimental={})).fbs||(c.fbs={})),function(a){(function(h){(function(f){(function(p){p[p.UNKNOWN=0]="UNKNOWN",p[p.VALUE=1]="VALUE",p[p.PARAM=2]="PARAM"})(f.DimensionValueType||(f.DimensionValueType={}))})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){(function(p){p[p.UNDEFINED=0]="UNDEFINED",p[p.FLOAT=1]="FLOAT",p[p.UINT8=2]="UINT8",p[p.INT8=3]="INT8",p[p.UINT16=4]="UINT16",p[p.INT16=5]="INT16",p[p.INT32=6]="INT32",p[p.INT64=7]="INT64",p[p.STRING=8]="STRING",p[p.BOOL=9]="BOOL",p[p.FLOAT16=10]="FLOAT16",p[p.DOUBLE=11]="DOUBLE",p[p.UINT32=12]="UINT32",p[p.UINT64=13]="UINT64",p[p.COMPLEX64=14]="COMPLEX64",p[p.COMPLEX128=15]="COMPLEX128",p[p.BFLOAT16=16]="BFLOAT16"})(f.TensorDataType||(f.TensorDataType={}))})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){(function(p){p[p.Primitive=0]="Primitive",p[p.Fused=1]="Fused"})(f.NodeType||(f.NodeType={}))})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){(function(p){p[p.NONE=0]="NONE",p[p.tensor_type=1]="tensor_type",p[p.sequence_type=2]="sequence_type",p[p.map_type=3]="map_type"})(f.TypeInfoValue||(f.TypeInfoValue={}))})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsShape(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsShape(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}dim(r,t){let u=this.bb.__offset(this.bb_pos,4);return u?(t||new a.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+u)+4*r),this.bb):null}dimLength(){let r=this.bb.__offset(this.bb_pos,4);return r?this.bb.__vector_len(this.bb_pos+r):0}static startShape(r){r.startObject(1)}static addDim(r,t){r.addFieldOffset(0,t,0)}static createDimVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startDimVector(r,t){r.startVector(4,t,4)}static endShape(r){return r.endObject()}static createShape(r,t){return p.startShape(r),p.addDim(r,t),p.endShape(r)}}f.Shape=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsDimension(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsDimension(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}value(r){let t=this.bb.__offset(this.bb_pos,4);return t?(r||new a.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}denotation(r){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,r):null}static startDimension(r){r.startObject(2)}static addValue(r,t){r.addFieldOffset(0,t,0)}static addDenotation(r,t){r.addFieldOffset(1,t,0)}static endDimension(r){return r.endObject()}static createDimension(r,t,u){return p.startDimension(r),p.addValue(r,t),p.addDenotation(r,u),p.endDimension(r)}}f.Dimension=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsDimensionValue(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsDimensionValue(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}dimType(){let r=this.bb.__offset(this.bb_pos,4);return r?this.bb.readInt8(this.bb_pos+r):a.experimental.fbs.DimensionValueType.UNKNOWN}dimValue(){let r=this.bb.__offset(this.bb_pos,6);return r?this.bb.readInt64(this.bb_pos+r):this.bb.createLong(0,0)}dimParam(r){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__string(this.bb_pos+t,r):null}static startDimensionValue(r){r.startObject(3)}static addDimType(r,t){r.addFieldInt8(0,t,a.experimental.fbs.DimensionValueType.UNKNOWN)}static addDimValue(r,t){r.addFieldInt64(1,t,r.createLong(0,0))}static addDimParam(r,t){r.addFieldOffset(2,t,0)}static endDimensionValue(r){return r.endObject()}static createDimensionValue(r,t,u,s){return p.startDimensionValue(r),p.addDimType(r,t),p.addDimValue(r,u),p.addDimParam(r,s),p.endDimensionValue(r)}}f.DimensionValue=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsTensorTypeAndShape(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsTensorTypeAndShape(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}elemType(){let r=this.bb.__offset(this.bb_pos,4);return r?this.bb.readInt32(this.bb_pos+r):a.experimental.fbs.TensorDataType.UNDEFINED}shape(r){let t=this.bb.__offset(this.bb_pos,6);return t?(r||new a.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}static startTensorTypeAndShape(r){r.startObject(2)}static addElemType(r,t){r.addFieldInt32(0,t,a.experimental.fbs.TensorDataType.UNDEFINED)}static addShape(r,t){r.addFieldOffset(1,t,0)}static endTensorTypeAndShape(r){return r.endObject()}static createTensorTypeAndShape(r,t,u){return p.startTensorTypeAndShape(r),p.addElemType(r,t),p.addShape(r,u),p.endTensorTypeAndShape(r)}}f.TensorTypeAndShape=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsMapType(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsMapType(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}keyType(){let r=this.bb.__offset(this.bb_pos,4);return r?this.bb.readInt32(this.bb_pos+r):a.experimental.fbs.TensorDataType.UNDEFINED}valueType(r){let t=this.bb.__offset(this.bb_pos,6);return t?(r||new a.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}static startMapType(r){r.startObject(2)}static addKeyType(r,t){r.addFieldInt32(0,t,a.experimental.fbs.TensorDataType.UNDEFINED)}static addValueType(r,t){r.addFieldOffset(1,t,0)}static endMapType(r){return r.endObject()}static createMapType(r,t,u){return p.startMapType(r),p.addKeyType(r,t),p.addValueType(r,u),p.endMapType(r)}}f.MapType=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsSequenceType(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsSequenceType(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}elemType(r){let t=this.bb.__offset(this.bb_pos,4);return t?(r||new a.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}static startSequenceType(r){r.startObject(1)}static addElemType(r,t){r.addFieldOffset(0,t,0)}static endSequenceType(r){return r.endObject()}static createSequenceType(r,t){return p.startSequenceType(r),p.addElemType(r,t),p.endSequenceType(r)}}f.SequenceType=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(h.fbs||(h.fbs={})).EdgeEnd=class{constructor(){this.bb=null,this.bb_pos=0}__init(f,p){return this.bb_pos=f,this.bb=p,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(f,p,d,r){return f.prep(4,12),f.writeInt32(r),f.writeInt32(d),f.writeInt32(p),f.offset()}}})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsNodeEdge(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsNodeEdge(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}nodeIndex(){let r=this.bb.__offset(this.bb_pos,4);return r?this.bb.readUint32(this.bb_pos+r):0}inputEdges(r,t){let u=this.bb.__offset(this.bb_pos,6);return u?(t||new a.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+u)+12*r,this.bb):null}inputEdgesLength(){let r=this.bb.__offset(this.bb_pos,6);return r?this.bb.__vector_len(this.bb_pos+r):0}outputEdges(r,t){let u=this.bb.__offset(this.bb_pos,8);return u?(t||new a.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+u)+12*r,this.bb):null}outputEdgesLength(){let r=this.bb.__offset(this.bb_pos,8);return r?this.bb.__vector_len(this.bb_pos+r):0}static startNodeEdge(r){r.startObject(3)}static addNodeIndex(r,t){r.addFieldInt32(0,t,0)}static addInputEdges(r,t){r.addFieldOffset(1,t,0)}static startInputEdgesVector(r,t){r.startVector(12,t,4)}static addOutputEdges(r,t){r.addFieldOffset(2,t,0)}static startOutputEdgesVector(r,t){r.startVector(12,t,4)}static endNodeEdge(r){return r.endObject()}static createNodeEdge(r,t,u,s){return p.startNodeEdge(r),p.addNodeIndex(r,t),p.addInputEdges(r,u),p.addOutputEdges(r,s),p.endNodeEdge(r)}}f.NodeEdge=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsNode(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsNode(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}name(r){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,r):null}docString(r){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,r):null}domain(r){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__string(this.bb_pos+t,r):null}sinceVersion(){let r=this.bb.__offset(this.bb_pos,10);return r?this.bb.readInt32(this.bb_pos+r):0}index(){let r=this.bb.__offset(this.bb_pos,12);return r?this.bb.readUint32(this.bb_pos+r):0}opType(r){let t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__string(this.bb_pos+t,r):null}type(){let r=this.bb.__offset(this.bb_pos,16);return r?this.bb.readInt32(this.bb_pos+r):a.experimental.fbs.NodeType.Primitive}executionProviderType(r){let t=this.bb.__offset(this.bb_pos,18);return t?this.bb.__string(this.bb_pos+t,r):null}inputs(r,t){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.__string(this.bb.__vector(this.bb_pos+u)+4*r,t):null}inputsLength(){let r=this.bb.__offset(this.bb_pos,20);return r?this.bb.__vector_len(this.bb_pos+r):0}outputs(r,t){let u=this.bb.__offset(this.bb_pos,22);return u?this.bb.__string(this.bb.__vector(this.bb_pos+u)+4*r,t):null}outputsLength(){let r=this.bb.__offset(this.bb_pos,22);return r?this.bb.__vector_len(this.bb_pos+r):0}attributes(r,t){let u=this.bb.__offset(this.bb_pos,24);return u?(t||new a.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+u)+4*r),this.bb):null}attributesLength(){let r=this.bb.__offset(this.bb_pos,24);return r?this.bb.__vector_len(this.bb_pos+r):0}inputArgCounts(r){let t=this.bb.__offset(this.bb_pos,26);return t?this.bb.readInt32(this.bb.__vector(this.bb_pos+t)+4*r):0}inputArgCountsLength(){let r=this.bb.__offset(this.bb_pos,26);return r?this.bb.__vector_len(this.bb_pos+r):0}inputArgCountsArray(){let r=this.bb.__offset(this.bb_pos,26);return r?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+r),this.bb.__vector_len(this.bb_pos+r)):null}implicitInputs(r,t){let u=this.bb.__offset(this.bb_pos,28);return u?this.bb.__string(this.bb.__vector(this.bb_pos+u)+4*r,t):null}implicitInputsLength(){let r=this.bb.__offset(this.bb_pos,28);return r?this.bb.__vector_len(this.bb_pos+r):0}static startNode(r){r.startObject(13)}static addName(r,t){r.addFieldOffset(0,t,0)}static addDocString(r,t){r.addFieldOffset(1,t,0)}static addDomain(r,t){r.addFieldOffset(2,t,0)}static addSinceVersion(r,t){r.addFieldInt32(3,t,0)}static addIndex(r,t){r.addFieldInt32(4,t,0)}static addOpType(r,t){r.addFieldOffset(5,t,0)}static addType(r,t){r.addFieldInt32(6,t,a.experimental.fbs.NodeType.Primitive)}static addExecutionProviderType(r,t){r.addFieldOffset(7,t,0)}static addInputs(r,t){r.addFieldOffset(8,t,0)}static createInputsVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startInputsVector(r,t){r.startVector(4,t,4)}static addOutputs(r,t){r.addFieldOffset(9,t,0)}static createOutputsVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startOutputsVector(r,t){r.startVector(4,t,4)}static addAttributes(r,t){r.addFieldOffset(10,t,0)}static createAttributesVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startAttributesVector(r,t){r.startVector(4,t,4)}static addInputArgCounts(r,t){r.addFieldOffset(11,t,0)}static createInputArgCountsVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addInt32(t[u]);return r.endVector()}static startInputArgCountsVector(r,t){r.startVector(4,t,4)}static addImplicitInputs(r,t){r.addFieldOffset(12,t,0)}static createImplicitInputsVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startImplicitInputsVector(r,t){r.startVector(4,t,4)}static endNode(r){return r.endObject()}static createNode(r,t,u,s,m,g,b,y,w,x,v,E,O,C){return p.startNode(r),p.addName(r,t),p.addDocString(r,u),p.addDomain(r,s),p.addSinceVersion(r,m),p.addIndex(r,g),p.addOpType(r,b),p.addType(r,y),p.addExecutionProviderType(r,w),p.addInputs(r,x),p.addOutputs(r,v),p.addAttributes(r,E),p.addInputArgCounts(r,O),p.addImplicitInputs(r,C),p.endNode(r)}}f.Node=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsValueInfo(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsValueInfo(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}name(r){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,r):null}docString(r){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,r):null}type(r){let t=this.bb.__offset(this.bb_pos,8);return t?(r||new a.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}static startValueInfo(r){r.startObject(3)}static addName(r,t){r.addFieldOffset(0,t,0)}static addDocString(r,t){r.addFieldOffset(1,t,0)}static addType(r,t){r.addFieldOffset(2,t,0)}static endValueInfo(r){return r.endObject()}static createValueInfo(r,t,u,s){return p.startValueInfo(r),p.addName(r,t),p.addDocString(r,u),p.addType(r,s),p.endValueInfo(r)}}f.ValueInfo=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsTypeInfo(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsTypeInfo(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}denotation(r){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,r):null}valueType(){let r=this.bb.__offset(this.bb_pos,6);return r?this.bb.readUint8(this.bb_pos+r):a.experimental.fbs.TypeInfoValue.NONE}value(r){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__union(r,this.bb_pos+t):null}static startTypeInfo(r){r.startObject(3)}static addDenotation(r,t){r.addFieldOffset(0,t,0)}static addValueType(r,t){r.addFieldInt8(1,t,a.experimental.fbs.TypeInfoValue.NONE)}static addValue(r,t){r.addFieldOffset(2,t,0)}static endTypeInfo(r){return r.endObject()}static createTypeInfo(r,t,u,s){return p.startTypeInfo(r),p.addDenotation(r,t),p.addValueType(r,u),p.addValue(r,s),p.endTypeInfo(r)}}f.TypeInfo=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsOperatorSetId(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsOperatorSetId(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}domain(r){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,r):null}version(){let r=this.bb.__offset(this.bb_pos,6);return r?this.bb.readInt64(this.bb_pos+r):this.bb.createLong(0,0)}static startOperatorSetId(r){r.startObject(2)}static addDomain(r,t){r.addFieldOffset(0,t,0)}static addVersion(r,t){r.addFieldInt64(1,t,r.createLong(0,0))}static endOperatorSetId(r){return r.endObject()}static createOperatorSetId(r,t,u){return p.startOperatorSetId(r),p.addDomain(r,t),p.addVersion(r,u),p.endOperatorSetId(r)}}f.OperatorSetId=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsTensor(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsTensor(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}name(r){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,r):null}docString(r){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,r):null}dims(r){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt64(this.bb.__vector(this.bb_pos+t)+8*r):this.bb.createLong(0,0)}dimsLength(){let r=this.bb.__offset(this.bb_pos,8);return r?this.bb.__vector_len(this.bb_pos+r):0}dataType(){let r=this.bb.__offset(this.bb_pos,10);return r?this.bb.readInt32(this.bb_pos+r):a.experimental.fbs.TensorDataType.UNDEFINED}rawData(r){let t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readUint8(this.bb.__vector(this.bb_pos+t)+r):0}rawDataLength(){let r=this.bb.__offset(this.bb_pos,12);return r?this.bb.__vector_len(this.bb_pos+r):0}rawDataArray(){let r=this.bb.__offset(this.bb_pos,12);return r?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+r),this.bb.__vector_len(this.bb_pos+r)):null}stringData(r,t){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb.__vector(this.bb_pos+u)+4*r,t):null}stringDataLength(){let r=this.bb.__offset(this.bb_pos,14);return r?this.bb.__vector_len(this.bb_pos+r):0}static startTensor(r){r.startObject(6)}static addName(r,t){r.addFieldOffset(0,t,0)}static addDocString(r,t){r.addFieldOffset(1,t,0)}static addDims(r,t){r.addFieldOffset(2,t,0)}static createDimsVector(r,t){r.startVector(8,t.length,8);for(let u=t.length-1;u>=0;u--)r.addInt64(t[u]);return r.endVector()}static startDimsVector(r,t){r.startVector(8,t,8)}static addDataType(r,t){r.addFieldInt32(3,t,a.experimental.fbs.TensorDataType.UNDEFINED)}static addRawData(r,t){r.addFieldOffset(4,t,0)}static createRawDataVector(r,t){r.startVector(1,t.length,1);for(let u=t.length-1;u>=0;u--)r.addInt8(t[u]);return r.endVector()}static startRawDataVector(r,t){r.startVector(1,t,1)}static addStringData(r,t){r.addFieldOffset(5,t,0)}static createStringDataVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startStringDataVector(r,t){r.startVector(4,t,4)}static endTensor(r){return r.endObject()}static createTensor(r,t,u,s,m,g,b){return p.startTensor(r),p.addName(r,t),p.addDocString(r,u),p.addDims(r,s),p.addDataType(r,m),p.addRawData(r,g),p.addStringData(r,b),p.endTensor(r)}}f.Tensor=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsSparseTensor(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsSparseTensor(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}values(r){let t=this.bb.__offset(this.bb_pos,4);return t?(r||new a.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}indices(r){let t=this.bb.__offset(this.bb_pos,6);return t?(r||new a.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}dims(r){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt64(this.bb.__vector(this.bb_pos+t)+8*r):this.bb.createLong(0,0)}dimsLength(){let r=this.bb.__offset(this.bb_pos,8);return r?this.bb.__vector_len(this.bb_pos+r):0}static startSparseTensor(r){r.startObject(3)}static addValues(r,t){r.addFieldOffset(0,t,0)}static addIndices(r,t){r.addFieldOffset(1,t,0)}static addDims(r,t){r.addFieldOffset(2,t,0)}static createDimsVector(r,t){r.startVector(8,t.length,8);for(let u=t.length-1;u>=0;u--)r.addInt64(t[u]);return r.endVector()}static startDimsVector(r,t){r.startVector(8,t,8)}static endSparseTensor(r){return r.endObject()}static createSparseTensor(r,t,u,s){return p.startSparseTensor(r),p.addValues(r,t),p.addIndices(r,u),p.addDims(r,s),p.endSparseTensor(r)}}f.SparseTensor=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsAttribute(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsAttribute(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}name(r){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,r):null}docString(r){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,r):null}type(){let r=this.bb.__offset(this.bb_pos,8);return r?this.bb.readInt32(this.bb_pos+r):a.experimental.fbs.AttributeType.UNDEFINED}f(){let r=this.bb.__offset(this.bb_pos,10);return r?this.bb.readFloat32(this.bb_pos+r):0}i(){let r=this.bb.__offset(this.bb_pos,12);return r?this.bb.readInt64(this.bb_pos+r):this.bb.createLong(0,0)}s(r){let t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__string(this.bb_pos+t,r):null}t(r){let t=this.bb.__offset(this.bb_pos,16);return t?(r||new a.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}g(r){let t=this.bb.__offset(this.bb_pos,18);return t?(r||new a.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}floats(r){let t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*r):0}floatsLength(){let r=this.bb.__offset(this.bb_pos,20);return r?this.bb.__vector_len(this.bb_pos+r):0}floatsArray(){let r=this.bb.__offset(this.bb_pos,20);return r?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+r),this.bb.__vector_len(this.bb_pos+r)):null}ints(r){let t=this.bb.__offset(this.bb_pos,22);return t?this.bb.readInt64(this.bb.__vector(this.bb_pos+t)+8*r):this.bb.createLong(0,0)}intsLength(){let r=this.bb.__offset(this.bb_pos,22);return r?this.bb.__vector_len(this.bb_pos+r):0}strings(r,t){let u=this.bb.__offset(this.bb_pos,24);return u?this.bb.__string(this.bb.__vector(this.bb_pos+u)+4*r,t):null}stringsLength(){let r=this.bb.__offset(this.bb_pos,24);return r?this.bb.__vector_len(this.bb_pos+r):0}tensors(r,t){let u=this.bb.__offset(this.bb_pos,26);return u?(t||new a.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+u)+4*r),this.bb):null}tensorsLength(){let r=this.bb.__offset(this.bb_pos,26);return r?this.bb.__vector_len(this.bb_pos+r):0}graphs(r,t){let u=this.bb.__offset(this.bb_pos,28);return u?(t||new a.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+u)+4*r),this.bb):null}graphsLength(){let r=this.bb.__offset(this.bb_pos,28);return r?this.bb.__vector_len(this.bb_pos+r):0}static startAttribute(r){r.startObject(13)}static addName(r,t){r.addFieldOffset(0,t,0)}static addDocString(r,t){r.addFieldOffset(1,t,0)}static addType(r,t){r.addFieldInt32(2,t,a.experimental.fbs.AttributeType.UNDEFINED)}static addF(r,t){r.addFieldFloat32(3,t,0)}static addI(r,t){r.addFieldInt64(4,t,r.createLong(0,0))}static addS(r,t){r.addFieldOffset(5,t,0)}static addT(r,t){r.addFieldOffset(6,t,0)}static addG(r,t){r.addFieldOffset(7,t,0)}static addFloats(r,t){r.addFieldOffset(8,t,0)}static createFloatsVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addFloat32(t[u]);return r.endVector()}static startFloatsVector(r,t){r.startVector(4,t,4)}static addInts(r,t){r.addFieldOffset(9,t,0)}static createIntsVector(r,t){r.startVector(8,t.length,8);for(let u=t.length-1;u>=0;u--)r.addInt64(t[u]);return r.endVector()}static startIntsVector(r,t){r.startVector(8,t,8)}static addStrings(r,t){r.addFieldOffset(10,t,0)}static createStringsVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startStringsVector(r,t){r.startVector(4,t,4)}static addTensors(r,t){r.addFieldOffset(11,t,0)}static createTensorsVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startTensorsVector(r,t){r.startVector(4,t,4)}static addGraphs(r,t){r.addFieldOffset(12,t,0)}static createGraphsVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startGraphsVector(r,t){r.startVector(4,t,4)}static endAttribute(r){return r.endObject()}static createAttribute(r,t,u,s,m,g,b,y,w,x,v,E,O,C){return p.startAttribute(r),p.addName(r,t),p.addDocString(r,u),p.addType(r,s),p.addF(r,m),p.addI(r,g),p.addS(r,b),p.addT(r,y),p.addG(r,w),p.addFloats(r,x),p.addInts(r,v),p.addStrings(r,E),p.addTensors(r,O),p.addGraphs(r,C),p.endAttribute(r)}}f.Attribute=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsGraph(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsGraph(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}initializers(r,t){let u=this.bb.__offset(this.bb_pos,4);return u?(t||new a.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+u)+4*r),this.bb):null}initializersLength(){let r=this.bb.__offset(this.bb_pos,4);return r?this.bb.__vector_len(this.bb_pos+r):0}nodeArgs(r,t){let u=this.bb.__offset(this.bb_pos,6);return u?(t||new a.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+u)+4*r),this.bb):null}nodeArgsLength(){let r=this.bb.__offset(this.bb_pos,6);return r?this.bb.__vector_len(this.bb_pos+r):0}nodes(r,t){let u=this.bb.__offset(this.bb_pos,8);return u?(t||new a.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+u)+4*r),this.bb):null}nodesLength(){let r=this.bb.__offset(this.bb_pos,8);return r?this.bb.__vector_len(this.bb_pos+r):0}maxNodeIndex(){let r=this.bb.__offset(this.bb_pos,10);return r?this.bb.readUint32(this.bb_pos+r):0}nodeEdges(r,t){let u=this.bb.__offset(this.bb_pos,12);return u?(t||new a.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+u)+4*r),this.bb):null}nodeEdgesLength(){let r=this.bb.__offset(this.bb_pos,12);return r?this.bb.__vector_len(this.bb_pos+r):0}inputs(r,t){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb.__vector(this.bb_pos+u)+4*r,t):null}inputsLength(){let r=this.bb.__offset(this.bb_pos,14);return r?this.bb.__vector_len(this.bb_pos+r):0}outputs(r,t){let u=this.bb.__offset(this.bb_pos,16);return u?this.bb.__string(this.bb.__vector(this.bb_pos+u)+4*r,t):null}outputsLength(){let r=this.bb.__offset(this.bb_pos,16);return r?this.bb.__vector_len(this.bb_pos+r):0}sparseInitializers(r,t){let u=this.bb.__offset(this.bb_pos,18);return u?(t||new a.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+u)+4*r),this.bb):null}sparseInitializersLength(){let r=this.bb.__offset(this.bb_pos,18);return r?this.bb.__vector_len(this.bb_pos+r):0}static startGraph(r){r.startObject(8)}static addInitializers(r,t){r.addFieldOffset(0,t,0)}static createInitializersVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startInitializersVector(r,t){r.startVector(4,t,4)}static addNodeArgs(r,t){r.addFieldOffset(1,t,0)}static createNodeArgsVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startNodeArgsVector(r,t){r.startVector(4,t,4)}static addNodes(r,t){r.addFieldOffset(2,t,0)}static createNodesVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startNodesVector(r,t){r.startVector(4,t,4)}static addMaxNodeIndex(r,t){r.addFieldInt32(3,t,0)}static addNodeEdges(r,t){r.addFieldOffset(4,t,0)}static createNodeEdgesVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startNodeEdgesVector(r,t){r.startVector(4,t,4)}static addInputs(r,t){r.addFieldOffset(5,t,0)}static createInputsVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startInputsVector(r,t){r.startVector(4,t,4)}static addOutputs(r,t){r.addFieldOffset(6,t,0)}static createOutputsVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startOutputsVector(r,t){r.startVector(4,t,4)}static addSparseInitializers(r,t){r.addFieldOffset(7,t,0)}static createSparseInitializersVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startSparseInitializersVector(r,t){r.startVector(4,t,4)}static endGraph(r){return r.endObject()}static createGraph(r,t,u,s,m,g,b,y,w){return p.startGraph(r),p.addInitializers(r,t),p.addNodeArgs(r,u),p.addNodes(r,s),p.addMaxNodeIndex(r,m),p.addNodeEdges(r,g),p.addInputs(r,b),p.addOutputs(r,y),p.addSparseInitializers(r,w),p.endGraph(r)}}f.Graph=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsModel(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsModel(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}irVersion(){let r=this.bb.__offset(this.bb_pos,4);return r?this.bb.readInt64(this.bb_pos+r):this.bb.createLong(0,0)}opsetImport(r,t){let u=this.bb.__offset(this.bb_pos,6);return u?(t||new a.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+u)+4*r),this.bb):null}opsetImportLength(){let r=this.bb.__offset(this.bb_pos,6);return r?this.bb.__vector_len(this.bb_pos+r):0}producerName(r){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__string(this.bb_pos+t,r):null}producerVersion(r){let t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__string(this.bb_pos+t,r):null}domain(r){let t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__string(this.bb_pos+t,r):null}modelVersion(){let r=this.bb.__offset(this.bb_pos,14);return r?this.bb.readInt64(this.bb_pos+r):this.bb.createLong(0,0)}docString(r){let t=this.bb.__offset(this.bb_pos,16);return t?this.bb.__string(this.bb_pos+t,r):null}graph(r){let t=this.bb.__offset(this.bb_pos,18);return t?(r||new a.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}graphDocString(r){let t=this.bb.__offset(this.bb_pos,20);return t?this.bb.__string(this.bb_pos+t,r):null}static startModel(r){r.startObject(9)}static addIrVersion(r,t){r.addFieldInt64(0,t,r.createLong(0,0))}static addOpsetImport(r,t){r.addFieldOffset(1,t,0)}static createOpsetImportVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startOpsetImportVector(r,t){r.startVector(4,t,4)}static addProducerName(r,t){r.addFieldOffset(2,t,0)}static addProducerVersion(r,t){r.addFieldOffset(3,t,0)}static addDomain(r,t){r.addFieldOffset(4,t,0)}static addModelVersion(r,t){r.addFieldInt64(5,t,r.createLong(0,0))}static addDocString(r,t){r.addFieldOffset(6,t,0)}static addGraph(r,t){r.addFieldOffset(7,t,0)}static addGraphDocString(r,t){r.addFieldOffset(8,t,0)}static endModel(r){return r.endObject()}static createModel(r,t,u,s,m,g,b,y,w,x){return p.startModel(r),p.addIrVersion(r,t),p.addOpsetImport(r,u),p.addProducerName(r,s),p.addProducerVersion(r,m),p.addDomain(r,g),p.addModelVersion(r,b),p.addDocString(r,y),p.addGraph(r,w),p.addGraphDocString(r,x),p.endModel(r)}}f.Model=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsKernelCreateInfos(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsKernelCreateInfos(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}nodeIndices(r){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*r):0}nodeIndicesLength(){let r=this.bb.__offset(this.bb_pos,4);return r?this.bb.__vector_len(this.bb_pos+r):0}nodeIndicesArray(){let r=this.bb.__offset(this.bb_pos,4);return r?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+r),this.bb.__vector_len(this.bb_pos+r)):null}kernelDefHashes(r){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint64(this.bb.__vector(this.bb_pos+t)+8*r):this.bb.createLong(0,0)}kernelDefHashesLength(){let r=this.bb.__offset(this.bb_pos,6);return r?this.bb.__vector_len(this.bb_pos+r):0}static startKernelCreateInfos(r){r.startObject(2)}static addNodeIndices(r,t){r.addFieldOffset(0,t,0)}static createNodeIndicesVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addInt32(t[u]);return r.endVector()}static startNodeIndicesVector(r,t){r.startVector(4,t,4)}static addKernelDefHashes(r,t){r.addFieldOffset(1,t,0)}static createKernelDefHashesVector(r,t){r.startVector(8,t.length,8);for(let u=t.length-1;u>=0;u--)r.addInt64(t[u]);return r.endVector()}static startKernelDefHashesVector(r,t){r.startVector(8,t,8)}static endKernelCreateInfos(r){return r.endObject()}static createKernelCreateInfos(r,t,u){return p.startKernelCreateInfos(r),p.addNodeIndices(r,t),p.addKernelDefHashes(r,u),p.endKernelCreateInfos(r)}}f.KernelCreateInfos=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsSubGraphSessionState(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsSubGraphSessionState(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}graphId(r){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,r):null}sessionState(r){let t=this.bb.__offset(this.bb_pos,6);return t?(r||new a.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}static startSubGraphSessionState(r){r.startObject(2)}static addGraphId(r,t){r.addFieldOffset(0,t,0)}static addSessionState(r,t){r.addFieldOffset(1,t,0)}static endSubGraphSessionState(r){let t=r.endObject();return r.requiredField(t,4),t}static createSubGraphSessionState(r,t,u){return p.startSubGraphSessionState(r),p.addGraphId(r,t),p.addSessionState(r,u),p.endSubGraphSessionState(r)}}f.SubGraphSessionState=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsSessionState(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsSessionState(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}kernels(r){let t=this.bb.__offset(this.bb_pos,4);return t?(r||new a.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}subGraphSessionStates(r,t){let u=this.bb.__offset(this.bb_pos,6);return u?(t||new a.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+u)+4*r),this.bb):null}subGraphSessionStatesLength(){let r=this.bb.__offset(this.bb_pos,6);return r?this.bb.__vector_len(this.bb_pos+r):0}static startSessionState(r){r.startObject(2)}static addKernels(r,t){r.addFieldOffset(0,t,0)}static addSubGraphSessionStates(r,t){r.addFieldOffset(1,t,0)}static createSubGraphSessionStatesVector(r,t){r.startVector(4,t.length,4);for(let u=t.length-1;u>=0;u--)r.addOffset(t[u]);return r.endVector()}static startSubGraphSessionStatesVector(r,t){r.startVector(4,t,4)}static endSessionState(r){return r.endObject()}static createSessionState(r,t,u){return p.startSessionState(r),p.addKernels(r,t),p.addSubGraphSessionStates(r,u),p.endSessionState(r)}}f.SessionState=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(a){(function(h){(function(f){class p{constructor(){this.bb=null,this.bb_pos=0}__init(r,t){return this.bb_pos=r,this.bb=t,this}static getRootAsInferenceSession(r,t){return(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static getSizePrefixedRootAsInferenceSession(r,t){return r.setPosition(r.position()+o.flatbuffers.SIZE_PREFIX_LENGTH),(t||new p).__init(r.readInt32(r.position())+r.position(),r)}static bufferHasIdentifier(r){return r.__has_identifier("ORTM")}ortVersion(r){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,r):null}model(r){let t=this.bb.__offset(this.bb_pos,6);return t?(r||new a.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}sessionState(r){let t=this.bb.__offset(this.bb_pos,8);return t?(r||new a.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}static startInferenceSession(r){r.startObject(3)}static addOrtVersion(r,t){r.addFieldOffset(0,t,0)}static addModel(r,t){r.addFieldOffset(1,t,0)}static addSessionState(r,t){r.addFieldOffset(2,t,0)}static endInferenceSession(r){return r.endObject()}static finishInferenceSessionBuffer(r,t){r.finish(t,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(r,t){r.finish(t,"ORTM",!0)}static createInferenceSession(r,t,u,s){return p.startInferenceSession(r),p.addOrtVersion(r,t),p.addModel(r,u),p.addSessionState(r,s),p.endInferenceSession(r)}}f.InferenceSession=p})(h.fbs||(h.fbs={}))})(a.experimental||(a.experimental={}))}(e.onnxruntime||(e.onnxruntime={}))},7448:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.OnnxjsSessionHandler=void 0;const o=i(1670),l=i(9162);e.OnnxjsSessionHandler=class{constructor(c){this.session=c,this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(c,a,h){const f=new Map;for(const r in c)if(Object.hasOwnProperty.call(c,r)){const t=c[r];f.set(r,new l.Tensor(t.dims,t.type,void 0,void 0,t.data))}const p=await this.session.run(f),d={};return p.forEach((r,t)=>{d[t]=new o.Tensor(r.type,r.data,r.dims)}),d}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}},6919:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Session=void 0;const o=i(7067),l=i(1296),c=i(7091),a=i(1036),h=i(6231),f=i(2644);e.Session=class{constructor(p={}){this._initialized=!1,this.backendHint=p.backendHint,this.profiler=h.Profiler.create(p.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(p,d,r){await this.profiler.event("session","Session.loadModel",async()=>{const t=await(0,c.resolveBackend)(this.backendHint);if(this.sessionHandler=t.createSessionHandler(this.context),this._model=new f.Model,typeof p=="string"){const u=p.endsWith(".ort");if(typeof fetch>"u"){const s=await(0,l.promisify)(o.readFile)(p);this.initialize(s,u)}else{const s=await fetch(p),m=await s.arrayBuffer();this.initialize(new Uint8Array(m),u)}}else if(ArrayBuffer.isView(p))this.initialize(p);else{const u=new Uint8Array(p,d||0,r||p.byteLength);this.initialize(u)}})}initialize(p,d){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{const r=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(p,r,d),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new a.ExecutionPlan(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(p){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{const d=this.normalizeAndValidateInputs(p),r=await this._executionPlan.execute(this.sessionHandler,d);return this.createOutput(r)})}normalizeAndValidateInputs(p){const d=this._model.graph.getInputNames();if(Array.isArray(p)){if(p.length!==d.length)throw new Error(`incorrect input array length: expected ${d.length} but got ${p.length}`)}else{if(p.size!==d.length)throw new Error(`incorrect input map size: expected ${d.length} but got ${p.size}`);const r=new Array(p.size);let t=0;for(let u=0;u<d.length;++u){const s=p.get(d[u]);if(!s)throw new Error(`missing input tensor for: '${name}'`);r[t++]=s}p=r}if(this.context.graphInputTypes&&this.context.graphInputTypes.length!==0&&this.context.graphInputDims&&this.context.graphInputDims.length!==0)this.validateInputTensorDims(this.context.graphInputDims,p,!1);else{const r=this._model.graph.getInputIndices(),t=this._model.graph.getValues(),u=new Array(r.length);for(let s=0;s<r.length;++s){const m=t[r[s]];u[s]=m.type.shape.dims,this.context.graphInputTypes.push(m.type.tensorType),this.context.graphInputDims.push(p[s].dims)}this.validateInputTensorDims(u,p,!0)}return this.validateInputTensorTypes(this.context.graphInputTypes,p),p}validateInputTensorTypes(p,d){for(let r=0;r<d.length;r++){const t=p[r],u=d[r].type;if(t!==u)throw new Error(`input tensor[${r}] check failed: expected type '${t}' but got ${u}`)}}validateInputTensorDims(p,d,r){for(let t=0;t<d.length;t++){const u=p[t],s=d[t].dims;if(!this.compareTensorDims(u,s,r))throw new Error(`input tensor[${t}] check failed: expected shape '[${u.join(",")}]' but got [${s.join(",")}]`)}}compareTensorDims(p,d,r){if(p.length!==d.length)return!1;for(let t=0;t<p.length;++t)if(p[t]!==d[t]&&(!r||p[t]!==0))return!1;return!0}createOutput(p){const d=this._model.graph.getOutputNames();if(p.length!==d.length)throw new Error("expected number of outputs do not match number of generated outputs");const r=new Map;for(let t=0;t<d.length;++t)r.set(d[t],p[t]);return r}initializeOps(p){const d=p.getNodes();this._ops=new Array(d.length);for(let r=0;r<d.length;r++)this._ops[r]=this.sessionHandler.resolve(d[r],this._model.opsets,p)}}},9162:function(n,e,i){var o=this&&this.__importDefault||function(m){return m&&m.__esModule?m:{default:m}};Object.defineProperty(e,"__esModule",{value:!0}),e.Tensor=void 0;const l=i(3442),c=o(i(3720)),a=i(1446),h=i(9395),f=i(2517);var p=h.onnxruntime.experimental.fbs;class d{get data(){if(this.cache===void 0){const g=this.dataProvider(this.dataId);if(g.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=g}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(g){return this.data[f.ShapeUtil.indicesToOffset(g,this.strides)]}set(g,b){this.data[f.ShapeUtil.indicesToOffset(g,this.strides)]=b}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=f.ShapeUtil.computeStrides(this.dims)),this._strides}constructor(g,b,y,w,x,v=l.Guid.create()){this.dims=g,this.type=b,this.dataProvider=y,this.asyncDataProvider=w,this.cache=x,this.dataId=v,this.size=f.ShapeUtil.validateDimsAndCalcSize(g);const E=this.size,O=y===void 0&&w===void 0&&x===void 0;if(x!==void 0&&x.length!==E)throw new RangeError("Input dims doesn't match data length.");if(b==="string"){if(!(x===void 0||Array.isArray(x)&&x.every(C=>typeof C=="string")))throw new TypeError("cache should be a string array");O&&(this.cache=new Array(E))}else{if(x!==void 0){const C=t(b);if(!(x instanceof C))throw new TypeError(`cache should be type ${C.name}`)}if(O){const C=new ArrayBuffer(E*function(S){switch(S){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${S}`)}}(b));this.cache=function(S,N){return new(t(N))(S)}(C,b)}}}static fromProto(g){if(!g)throw new Error("cannot construct Value from an empty tensor");const b=f.ProtoUtil.tensorDataTypeFromProto(g.dataType),y=f.ProtoUtil.tensorDimsFromProto(g.dims),w=new d(y,b);if(b==="string")g.stringData.forEach((x,v)=>{w.data[v]=(0,f.decodeUtf8String)(x)});else if(g.rawData&&typeof g.rawData.byteLength=="number"&&g.rawData.byteLength>0){const x=w.data,v=new DataView(g.rawData.buffer,g.rawData.byteOffset,g.rawData.byteLength),E=r(g.dataType),O=g.rawData.byteLength/E;if(g.rawData.byteLength%E!=0)throw new Error("invalid buffer length");if(x.length!==O)throw new Error("buffer length mismatch");for(let C=0;C<O;C++){const S=s(v,g.dataType,C*E);x[C]=S}}else{let x;switch(g.dataType){case a.onnx.TensorProto.DataType.FLOAT:x=g.floatData;break;case a.onnx.TensorProto.DataType.INT32:case a.onnx.TensorProto.DataType.INT16:case a.onnx.TensorProto.DataType.UINT16:case a.onnx.TensorProto.DataType.INT8:case a.onnx.TensorProto.DataType.UINT8:case a.onnx.TensorProto.DataType.BOOL:x=g.int32Data;break;case a.onnx.TensorProto.DataType.INT64:x=g.int64Data;break;case a.onnx.TensorProto.DataType.DOUBLE:x=g.doubleData;break;case a.onnx.TensorProto.DataType.UINT32:case a.onnx.TensorProto.DataType.UINT64:x=g.uint64Data;break;default:throw new Error("unspecific error")}if(x==null)throw new Error("failed to populate data from a tensorproto value");const v=w.data;if(v.length!==x.length)throw new Error("array length mismatch");for(let E=0;E<x.length;E++){const O=x[E];c.default.isLong(O)?v[E]=u(O,g.dataType):v[E]=O}}return w}static fromData(g,b,y){return new d(b,y,void 0,void 0,g)}static fromOrtTensor(g){if(!g)throw new Error("cannot construct Value from an empty tensor");const b=f.ProtoUtil.tensorDimsFromORTFormat(g),y=f.ProtoUtil.tensorDataTypeFromProto(g.dataType()),w=new d(b,y);if(y==="string")for(let x=0;x<g.stringDataLength();x++)w.data[x]=g.stringData(x);else if(g.rawDataArray()&&typeof g.rawDataLength()=="number"&&g.rawDataLength()>0){const x=w.data,v=new DataView(g.rawDataArray().buffer,g.rawDataArray().byteOffset,g.rawDataLength()),E=r(g.dataType()),O=g.rawDataLength()/E;if(g.rawDataLength()%E!=0)throw new Error("invalid buffer length");if(x.length!==O)throw new Error("buffer length mismatch");for(let C=0;C<O;C++){const S=s(v,g.dataType(),C*E);x[C]=S}}return w}}function r(m){switch(m){case a.onnx.TensorProto.DataType.UINT8:case a.onnx.TensorProto.DataType.INT8:case a.onnx.TensorProto.DataType.BOOL:return 1;case a.onnx.TensorProto.DataType.UINT16:case a.onnx.TensorProto.DataType.INT16:return 2;case a.onnx.TensorProto.DataType.FLOAT:case a.onnx.TensorProto.DataType.INT32:case a.onnx.TensorProto.DataType.UINT32:return 4;case a.onnx.TensorProto.DataType.INT64:case a.onnx.TensorProto.DataType.DOUBLE:case a.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${a.onnx.TensorProto.DataType[m]}`)}}function t(m){switch(m){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function u(m,g){if(g===a.onnx.TensorProto.DataType.INT64||g===p.TensorDataType.INT64){if(m.greaterThanOrEqual(2147483648)||m.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else{if(g!==a.onnx.TensorProto.DataType.UINT32&&g!==p.TensorDataType.UINT32&&g!==a.onnx.TensorProto.DataType.UINT64&&g!==p.TensorDataType.UINT64)throw new TypeError(`not a LONG type: ${a.onnx.TensorProto.DataType[g]}`);if(m.greaterThanOrEqual(4294967296)||m.lessThan(0))throw new TypeError("uint64 is not supported")}return m.toNumber()}function s(m,g,b){switch(g){case a.onnx.TensorProto.DataType.BOOL:case a.onnx.TensorProto.DataType.UINT8:return m.getUint8(b);case a.onnx.TensorProto.DataType.INT8:return m.getInt8(b);case a.onnx.TensorProto.DataType.UINT16:return m.getUint16(b,!0);case a.onnx.TensorProto.DataType.INT16:return m.getInt16(b,!0);case a.onnx.TensorProto.DataType.FLOAT:return m.getFloat32(b,!0);case a.onnx.TensorProto.DataType.INT32:return m.getInt32(b,!0);case a.onnx.TensorProto.DataType.UINT32:return m.getUint32(b,!0);case a.onnx.TensorProto.DataType.INT64:return u(c.default.fromBits(m.getUint32(b,!0),m.getUint32(b+4,!0),!1),g);case a.onnx.TensorProto.DataType.DOUBLE:return m.getFloat64(b,!0);case a.onnx.TensorProto.DataType.UINT64:return u(c.default.fromBits(m.getUint32(b,!0),m.getUint32(b+4,!0),!0),g);default:throw new Error(`cannot read from DataView for type ${a.onnx.TensorProto.DataType[g]}`)}}e.Tensor=d},2517:function(n,e,i){var o=this&&this.__importDefault||function(g){return g&&g.__esModule?g:{default:g}};Object.defineProperty(e,"__esModule",{value:!0}),e.decodeUtf8String=e.MAX_CLIP=e.MIN_CLIP=e.PoolConvUtil=e.ReduceUtil=e.SplitUtil=e.MathUtil=e.ShapeUtil=e.LongUtil=e.ProtoUtil=e.GemmUtil=e.arrayCopyHelper=e.BroadcastUtil=e.MatMulUtil=e.ArrayUtil=e.assert=e.checkInputsShape=void 0;const l=i(5686),c=o(i(3720)),a=i(1446),h=i(9162);e.checkInputsShape=function(g,...b){if(!g||g.length!==b.length)return!1;for(let y=0;y<g.length;y++)if(!g[y].dims||g[y].dims.length!==b[y])return!1;return!0},e.assert=function(g,b){if(!g)throw new Error(typeof b=="string"?b:b())},e.ArrayUtil=class{static arraysEqual(g,b){if(g.length!==b.length)return!1;for(let y=0;y<g.length;y++)if(g[y]!==b[y])return!1;return!0}};class f{static preprocessInputShapes(b,y){return[b.length===1?[1,b[0]]:b,y.length===1?[y[0],1]:y]}static postprocessOutputShape(b,y,w){y===1&&b.splice(b.length-2,1),w===1&&b.pop()}static calcMatMulShape(b,y){return b[1]!==y[0]?void 0:[b[0],y[1]]}}e.MatMulUtil=f;class p{static calcShape(b,y,w=!1){const x=b.length,v=y.length;if(x===0)return y;if(v===0)return b;const E=Math.max(b.length,y.length),O=new Array(E);if(w){if(x<2||v<2)return;const C=f.calcMatMulShape([b[x-2],b[x-1]],[y[v-2],y[v-1]]);if(C===void 0)return;[O[E-2],O[E-1]]=C}for(let C=w?3:1;C<=E;C++){const S=x-C<0?1:b[x-C],N=v-C<0?1:y[v-C];if(S!==N&&S>1&&N>1)return;O[E-C]=Math.max(S,N)}return O}static index(b,y){const w=new Array(y.length);return p.fillIndex(b,y,w),w}static fillIndex(b,y,w){const x=b.length-y.length;for(let v=0;v<y.length;v++)w[v]=b[x+v]%y[v]}static calc(b,y,w,x,v){const E=p.calcShape(b.dims,y.dims);if(E){if(x&&!t.areEqual(E,b.dims))return;const O=t.size(E),C=x?b:new h.Tensor(E,v||b.type);if(E.length===0)C.set([],w(b.get([]),y.get([])));else{const S=new Array(E.length),N=new Array(b.dims.length),Q=new Array(y.dims.length);let te,Z=0,Y=0,G=!1,R=!1;b.dims.length===0&&(Z=b.get([]),G=!0),y.dims.length===0&&(Y=y.get([]),R=!0);for(let V=0;V<O;V++){te=V;for(let ce=E.length-1;ce>=0;ce--)S[ce]=te%E[ce],te=Math.floor(te/E[ce]);G||(p.fillIndex(S,b.dims,N),Z=b.get(N)),R||(p.fillIndex(S,y.dims,Q),Y=y.get(Q)),C.set(S,w(Z,Y))}}return C}}static isValidBroadcast(b,y){const w=b.length,x=y.length;if(w>x)return!1;for(let v=1;v<=w;v++)if(b[w-v]!==1&&b[w-v]!==y[x-v])return!1;return!0}static getBroadcastDims(b,y){const w=b.length,x=[];for(let v=0;v<w;v++){const E=w-1-v,O=b[E]||1;(y[y.length-1-v]||1)>1&&O===1&&x.unshift(E)}return x}}e.BroadcastUtil=p,e.arrayCopyHelper=function(g,b,y,w,x){if(w<0||w>=b.length)throw new Error("sourceIndex out of bounds");if(y<0||y>=g.length)throw new Error("targetIndex out of bounds");if(w+x>b.length)throw new Error("source indices to be copied are outside bounds");if(y+x>g.length)throw new Error("target array is too small to hold result");for(let v=0;v<x;v++)g[y+v]=b[w+v]},e.GemmUtil=class{static getShapeOfGemmResult(g,b,y,w,x){if(g.length!==2||y.length!==2)throw new Error("shape need to be of size 2");let v,E,O;b?(v=g[1],E=g[0]):(v=g[0],E=g[1]);let C=-1;if(w?(O=y[0],C=1):(O=y[1],C=0),y[C]!==E)throw new Error("dimension mismatch");if(v<=0||O<=0||E<=0)throw new Error("invalid shape specified");if(x&&!p.isValidBroadcast(x,[v,O]))throw new Error("gemm: invalid bias shape for broadcast");return[v,O,E]}};class d{static tensorDataTypeFromProto(b){switch(b){case a.onnx.TensorProto.DataType.INT8:return"int8";case a.onnx.TensorProto.DataType.UINT8:return"uint8";case a.onnx.TensorProto.DataType.BOOL:return"bool";case a.onnx.TensorProto.DataType.INT16:return"int16";case a.onnx.TensorProto.DataType.UINT16:return"uint16";case a.onnx.TensorProto.DataType.INT32:return"int32";case a.onnx.TensorProto.DataType.UINT32:return"uint32";case a.onnx.TensorProto.DataType.FLOAT:return"float32";case a.onnx.TensorProto.DataType.DOUBLE:return"float64";case a.onnx.TensorProto.DataType.STRING:return"string";case a.onnx.TensorProto.DataType.INT64:return"int32";case a.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${a.onnx.TensorProto.DataType[b]}`)}}static tensorDataTypeStringToEnum(b){switch(b){case"int8":return a.onnx.TensorProto.DataType.INT8;case"uint8":return a.onnx.TensorProto.DataType.UINT8;case"bool":return a.onnx.TensorProto.DataType.BOOL;case"int16":return a.onnx.TensorProto.DataType.INT16;case"uint16":return a.onnx.TensorProto.DataType.UINT16;case"int32":return a.onnx.TensorProto.DataType.INT32;case"uint32":return a.onnx.TensorProto.DataType.UINT32;case"float32":return a.onnx.TensorProto.DataType.FLOAT;case"float64":return a.onnx.TensorProto.DataType.DOUBLE;case"string":return a.onnx.TensorProto.DataType.STRING;case"int64":return a.onnx.TensorProto.DataType.INT64;case"uint64":return a.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${b}`)}}static tensorDimsFromProto(b){return b.map(y=>c.default.isLong(y)?y.toNumber():y)}static tensorValueTypeFromProto(b){return{tensorType:d.tensorDataTypeFromProto(b.elemType),shape:{dims:d.tensorDimsFromProto(b.shape.dim.map(y=>y.dimValue))}}}static tensorDimsFromORTFormat(b){const y=[];for(let w=0;w<b.dimsLength();w++)y.push(r.longToNumber(b.dims(w)));return y}static tensorAttributesFromORTFormat(b){const y=[];for(let w=0;w<b.attributesLength();w++)y.push(b.attributes(w));return y}}e.ProtoUtil=d;class r{static longToNumber(b,y){return c.default.isLong(b)?b.toNumber():b instanceof l.flatbuffers.Long?c.default.fromValue({low:b.low,high:b.high,unsigned:y!=null&&y}).toNumber():b}static isLong(b){return c.default.isLong(b)||b instanceof l.flatbuffers.Long}}e.LongUtil=r;class t{static size(b){return t.getSizeFromDimensionRange(b,0,b.length)}static sizeFromDimension(b,y){if(y<0||y>b.length)throw new Error(`invalid dimension of ${y} for sizeFromDimension as Tensor has ${b.length} dimensions.`);return t.getSizeFromDimensionRange(b,y,b.length)}static sizeToDimension(b,y){if(y<0||y>b.length)throw new Error(`invalid dimension of ${y} for sizeToDimension as Tensor has ${b.length} dimensions.`);return t.getSizeFromDimensionRange(b,0,y)}static getSizeFromDimensionRange(b,y,w){let x=1;for(let v=y;v<w;v++){if(b[v]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");x*=b[v]}return x}static computeStrides(b){const y=b.length;if(y===0)return[];if(y===1)return[1];const w=new Array(y);w[y-1]=1,w[y-2]=b[y-1];for(let x=y-3;x>=0;--x)w[x]=w[x+1]*b[x+1];return w}static transpose(b){return b.slice().reverse()}static indicesToOffset(b,y,w){w===void 0&&(w=b.length);let x=0;for(let v=0;v<w;++v)x+=y[v]*b[v];return x}static offsetToIndices(b,y){const w=y.length;if(w===0)return[];if(w===1)return[b*y[0]];const x=new Array(y.length);for(let v=0;v<x.length-1;++v)x[v]=Math.floor(b/y[v]),b-=x[v]*y[v];return x[x.length-1]=b,x}static normalizeAxis(b,y){if(b<-y&&b>=y)throw new Error("unsupported axis for this operation.");return b<0?b+y:b}static normalizeAxes(b,y){return b.map(w=>this.normalizeAxis(w,y))}static incrementIndex(b,y,w){if(y.length===0||b.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(w===void 0)w=y.length;else if(w<=0||w>y.length)throw new Error("Incorrect axis to increment on");for(let x=w-1;x>=0&&(b[x]++,!(b[x]<y[x]));--x)b[x]=0}static calculateReshapedDims(b,y){if(y.length===0){if(b.length===0||t.size(b)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}const w=y.length,x=new Array(w);let v=-1,E=1;for(let C=0;C<w;C++){if(y[C]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(y[C]===-1){if(v!==-1)throw new Error("at most one dimension in shape hints can be -1");v=C}else{if(y[C]===0){if(C>=b.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");x[C]=b[C]}else x[C]=y[C];E*=x[C]}}const O=t.size(b);if(v!==-1){if(O%E!=0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${b}] Output shape: [${y}]`);x[v]=O/E}else if(E!==O)throw new Error("reshapedDims and originalDims don't have matching sizes");return x}static sortBasedOnPerm(b,y){return y?y.map(w=>b[w]):b.slice().reverse()}static padShape(b,y){const w=b.length;return b.map((x,v)=>x+y[v]+y[v+w])}static areEqual(b,y){return b.length===y.length&&b.every((w,x)=>w===y[x])}static validateDimsAndCalcSize(b){if(b.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let y=1;for(const w of b){if(!Number.isInteger(w))throw new TypeError(`Invalid shape: ${w} is not an integer`);if(w<0||w>2147483647)throw new TypeError(`Invalid shape: length ${w} is not allowed`);y*=w}return y}static flattenShape(b,y){y<0&&(y+=b.length);const w=b.reduce((v,E)=>v*E,1),x=b.slice(y).reduce((v,E)=>v*E,1);return[w/x,x]}static squeezeShape(b,y){const w=new Array;y=t.normalizeAxes(y,b.length);for(let x=0;x<b.length;x++){const v=y.indexOf(x)>=0;if(v&&b[x]!==1)throw new Error("squeeze an axis of size different than 1");(y.length===0&&b[x]>1||y.length>0&&!v)&&w.push(b[x])}return w}static unsqueezeShape(b,y){const w=new Array(b.length+y.length);w.fill(0);for(let v=0;v<y.length;v++){const E=t.normalizeAxis(y[v],w.length);if(E>=w.length)throw new Error("'axes' has an out of range axis");if(w[E]!==0)throw new Error("'axes' has a duplicate axis");w[E]=1}let x=0;for(let v=0;v<w.length;v++)w[v]===0&&(w[v]=b[x++]);if(x!==b.length)throw new Error("the unsqueezed dimension could not be established");return w}}e.ShapeUtil=t,e.MathUtil=class{static sqr(g,b,y,w,x){if(w<0||w>=b.length)throw new Error("sourceIndex out of bounds");if(y<0||y>=g.length)throw new Error("targetIndex out of bounds");if(w+x>b.length)throw new Error("source indices to be copied are outside bounds");if(y+x>g.length)throw new Error("target array is too small to hold result");for(let v=0;v<x;v++)g[y+v]+=Math.pow(b[w+v],2)}static axpy(g,b,y,w,x,v){if(w<0||w>=b.length)throw new Error("sourceIndex out of bounds");if(y<0||y>=g.length)throw new Error("targetIndex out of bounds");if(w+x>b.length)throw new Error("source indices to be copied are outside bounds");if(y+x>g.length)throw new Error("target array is too small to hold result");for(let E=0;E<x;E++)g[y+E]+=v*b[w+E]}static powx(g,b,y,w,x,v){if(w<0||w>=b.length)throw new Error("sourceIndex out of bounds");if(y<0||y>=g.length)throw new Error("targetIndex out of bounds");if(w+x>b.length)throw new Error("source indices to be copied are outside bounds");if(y+x>g.length)throw new Error("target array is too small to hold result");for(let E=0;E<x;E++)g[y+E]=Math.pow(b[w+E],v)}static mul(g,b,y,w,x){if(w<0||w>=b.length)throw new Error("sourceIndex out of bounds");if(y<0||y>=g.length)throw new Error("targetIndex out of bounds");if(w+x>b.length)throw new Error("source indices to be copied are outside bounds");if(y+x>g.length)throw new Error("target array is too small to hold result");for(let v=0;v<x;v++)g[y+v]=b[w+v]*g[y+v]}};class u{static splitShape(b,y,w,x){if(w.length===0){if(!x)throw new Error("need to know number of outputs when the 'split' attribute is not specified");u.determineSplit(b[y],x,w)}const v=[],E=[0];for(let O=0;O<w.length;++O){O!==0&&E.push(E[O-1]+w[O-1]);const C=b.slice();C[y]=w[O],v.push(C)}return[v,E]}static determineSplit(b,y,w){if(b%y!=0)throw new Error("cannot split tensor to equal sized parts");for(let x=0;x<y;++x)w.push(b/y)}}e.SplitUtil=u;class s{static calcReduce(b,y,w,x,v){const E=b.dims.slice(0);y.length===0&&E.forEach((Z,Y)=>y.push(Y));const O=s.calcReduceShape(E,y,!0),C=t.size(O),S=new h.Tensor(O,b.type),N=t.computeStrides(O),Q=t.computeStrides(E),te=new Array(E.length);for(let Z=0;Z<C;Z++){const Y=t.offsetToIndices(Z,N);p.fillIndex(Y,E,te),S.set(Y,s.calcReduceByAxis(b.numberData,y,E,0,t.indicesToOffset(te,Q),x,v))}return w?S:new h.Tensor(s.calcReduceShape(E,y,w),S.type,void 0,void 0,S.data,S.dataId)}static calcReduceByAxis(b,y,w,x,v,E,O){let C=0;if(x>=y.length)return E(b[v]);const S=y[x],N=S>=w.length?1:t.size(w.slice(S+1));for(let Q=0;Q<w[S];Q++)C=Q===0?s.calcReduceByAxis(b,y,w,x+1,v,E,O):O(C,s.calcReduceByAxis(b,y,w,x+1,v,E,O)),v+=N;return C}static calcReduceShape(b,y,w){const x=b.slice();for(let v=0;v<y.length;v++)x[y[v]]=w?1:0;return x.filter(v=>v!==0)}}e.ReduceUtil=s;class m{static adjustPoolAttributes(b,y,w,x,v,E){if(!b&&w.length!==y.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(b)for(let O=0;O<y.length-2;O++)O>=w.length?w.push(y[O+2]):w[O]=y[O+2];for(let O=0;O<w.length;O++)if(O<x.length){if(x[O]<0)throw new Error("strides should be greater than or equal to 1")}else x.push(1);for(let O=0;O<w.length;O++)if(O<v.length){if(v[O]<0)throw new Error("dilations should be greater than or equal to 1")}else v.push(1);for(let O=0;O<2*w.length;O++)if(O<E.length){if(E[O]<0)throw new Error("pad should be greater than or equal to 1")}else E.push(0);for(let O=0;O<w.length;O++){if(w[O]<=0)throw new Error("kernel shapes need to be greater than 0");if(E[O]>=w[O]||E[O+w.length]>=w[O])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(b,y,w,x,v,E){if(E){if(v.length!==2*(b.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(y.length!==b.length-2)throw new Error("length of strides should be the length of data dimensions");if(x.length!==b.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let O=0;O<b.length-2;O++)m.adjustPadAndReturnShape(b[O+2],y[O],w[O],x[O],v,O,O+b.length-2,E)}}static computePoolOutputShape(b,y,w,x,v,E,O){if(y.length<=0)throw new Error("input shape must be of size greater than 0");const C=[y[0],y[1]];return m.computeShapeHelper(b,y,C,w,x,v,E,O),C}static computeConvOutputShape(b,y,w,x,v,E,O){if(b.length<=0||y.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");const C=[b[0],y[0]];return m.computeShapeHelper(!1,b,C,w,x,v,E,O),C}static computeShapeHelper(b,y,w,x,v,E,O,C){if(b)for(let S=0;S<y.length-2;S++)w.push(1);else for(let S=0;S<y.length-2;S++)w.push(m.adjustPadAndReturnShape(y[S+2],x[S],v[S],E[S],O,S,S+y.length-2,C))}static adjustPadAndReturnShape(b,y,w,x,v,E,O,C){const S=w*(x-1)+1;if(!C||C==="NOTSET")return Math.floor((b+v[E]+v[O]-S)/y+1);switch(C){case"VALID":return v[E]=0,v[O]=0,Math.floor((b-S)/y+1);case"SAME_LOWER":case"SAME_UPPER":if(w!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{const N=((b+y-1)/y-1)*y+x-b;return v[E]=Math.floor(C==="SAME_LOWER"?(N+1)/2:N/2),v[O]=N-v[E],Math.floor((b+N-x)/y+1)}default:throw new Error("Unsupported AutoPad type")}}}e.PoolConvUtil=m,e.MIN_CLIP=-34028234663852886e22,e.MAX_CLIP=34028234663852886e22,e.decodeUtf8String=function(g){return new TextDecoder().decode(g)}},7967:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.iterateExtraOptions=void 0,e.iterateExtraOptions=(i,o,l,c)=>{if(typeof i=="object"&&i!==null){if(l.has(i))throw new Error("Circular reference in options");l.add(i)}Object.entries(i).forEach(([a,h])=>{const f=o?o+a:a;if(typeof h=="object")(0,e.iterateExtraOptions)(h,f+".",l,c);else if(typeof h=="string"||typeof h=="number")c(f,h.toString());else{if(typeof h!="boolean")throw new Error("Can't handle extra config type: "+typeof h);c(f,h?"1":"0")}})}},2157:function(n,e,i){var o,l=this&&this.__createBinding||(Object.create?function(N,Q,te,Z){Z===void 0&&(Z=te);var Y=Object.getOwnPropertyDescriptor(Q,te);Y&&!("get"in Y?!Q.__esModule:Y.writable||Y.configurable)||(Y={enumerable:!0,get:function(){return Q[te]}}),Object.defineProperty(N,Z,Y)}:function(N,Q,te,Z){Z===void 0&&(Z=te),N[Z]=Q[te]}),c=this&&this.__setModuleDefault||(Object.create?function(N,Q){Object.defineProperty(N,"default",{enumerable:!0,value:Q})}:function(N,Q){N.default=Q}),a=this&&this.__importStar||function(N){if(N&&N.__esModule)return N;var Q={};if(N!=null)for(var te in N)te!=="default"&&Object.prototype.hasOwnProperty.call(N,te)&&l(Q,N,te);return c(Q,N),Q};Object.defineProperty(e,"__esModule",{value:!0}),e.endProfiling=e.run=e.releaseSession=e.createSession=e.createSessionFinalize=e.createSessionAllocate=e.initOrt=e.initWasm=void 0;const h=i(1670),f=a(i(349)),p=i(6361),d=()=>!!h.env.wasm.proxy&&typeof document<"u";let r,t,u,s=!1,m=!1,g=!1;const b=[],y=[],w=[],x=[],v=[],E=[],O=()=>{if(s||!m||g||!r)throw new Error("worker not ready")},C=N=>{switch(N.data.type){case"init-wasm":s=!1,N.data.err?(g=!0,t[1](N.data.err)):(m=!0,t[0]());break;case"init-ort":N.data.err?u[1](N.data.err):u[0]();break;case"create_allocate":N.data.err?b.shift()[1](N.data.err):b.shift()[0](N.data.out);break;case"create_finalize":N.data.err?y.shift()[1](N.data.err):y.shift()[0](N.data.out);break;case"create":N.data.err?w.shift()[1](N.data.err):w.shift()[0](N.data.out);break;case"release":N.data.err?x.shift()[1](N.data.err):x.shift()[0]();break;case"run":N.data.err?v.shift()[1](N.data.err):v.shift()[0](N.data.out);break;case"end-profiling":N.data.err?E.shift()[1](N.data.err):E.shift()[0]()}},S=typeof document<"u"?(o=document==null?void 0:document.currentScript)===null||o===void 0?void 0:o.src:void 0;e.initWasm=async()=>{if(d()){if(m)return;if(s)throw new Error("multiple calls to 'initWasm()' detected.");if(g)throw new Error("previous call to 'initWasm()' failed.");return s=!0,h.env.wasm.wasmPaths===void 0&&S&&S.indexOf("blob:")!==0&&(h.env.wasm.wasmPaths=S.substr(0,+S.lastIndexOf("/")+1)),new Promise((N,Q)=>{r==null||r.terminate(),r=i(9710).Z(),r.onmessage=C,t=[N,Q];const te={type:"init-wasm",in:h.env.wasm};r.postMessage(te)})}return(0,p.initializeWebAssembly)(h.env.wasm)},e.initOrt=async(N,Q)=>{if(d())return O(),new Promise((te,Z)=>{u=[te,Z];const Y={type:"init-ort",in:{numThreads:N,loggingLevel:Q}};r.postMessage(Y)});f.initOrt(N,Q)},e.createSessionAllocate=async N=>d()?(O(),new Promise((Q,te)=>{b.push([Q,te]);const Z={type:"create_allocate",in:{model:N}};r.postMessage(Z,[N.buffer])})):f.createSessionAllocate(N),e.createSessionFinalize=async(N,Q)=>d()?(O(),new Promise((te,Z)=>{y.push([te,Z]);const Y={type:"create_finalize",in:{modeldata:N,options:Q}};r.postMessage(Y)})):f.createSessionFinalize(N,Q),e.createSession=async(N,Q)=>d()?(O(),new Promise((te,Z)=>{w.push([te,Z]);const Y={type:"create",in:{model:N,options:Q}};r.postMessage(Y,[N.buffer])})):f.createSession(N,Q),e.releaseSession=async N=>{if(d())return O(),new Promise((Q,te)=>{x.push([Q,te]);const Z={type:"release",in:N};r.postMessage(Z)});f.releaseSession(N)},e.run=async(N,Q,te,Z,Y)=>d()?(O(),new Promise((G,R)=>{v.push([G,R]);const V={type:"run",in:{sessionId:N,inputIndices:Q,inputs:te,outputIndices:Z,options:Y}};r.postMessage(V,f.extractTransferableBuffers(te))})):f.run(N,Q,te,Z,Y),e.endProfiling=async N=>{if(d())return O(),new Promise((Q,te)=>{E.push([Q,te]);const Z={type:"end-profiling",in:N};r.postMessage(Z)});f.endProfiling(N)}},586:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.setRunOptions=void 0;const o=i(7967),l=i(4983),c=i(6361);e.setRunOptions=a=>{const h=(0,c.getInstance)();let f=0;const p=[],d=a||{};try{if((a==null?void 0:a.logSeverityLevel)===void 0)d.logSeverityLevel=2;else if(typeof a.logSeverityLevel!="number"||!Number.isInteger(a.logSeverityLevel)||a.logSeverityLevel<0||a.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${a.logSeverityLevel}`);if((a==null?void 0:a.logVerbosityLevel)===void 0)d.logVerbosityLevel=0;else if(typeof a.logVerbosityLevel!="number"||!Number.isInteger(a.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${a.logVerbosityLevel}`);(a==null?void 0:a.terminate)===void 0&&(d.terminate=!1);let r=0;if((a==null?void 0:a.tag)!==void 0&&(r=(0,l.allocWasmString)(a.tag,p)),f=h._OrtCreateRunOptions(d.logSeverityLevel,d.logVerbosityLevel,!!d.terminate,r),f===0)throw new Error("Can't create run options");return(a==null?void 0:a.extra)!==void 0&&(0,o.iterateExtraOptions)(a.extra,"",new WeakSet,(t,u)=>{const s=(0,l.allocWasmString)(t,p),m=(0,l.allocWasmString)(u,p);if(h._OrtAddRunConfigEntry(f,s,m)!==0)throw new Error(`Can't set a run config entry: ${t} - ${u}`)}),[f,p]}catch(r){throw f!==0&&h._OrtReleaseRunOptions(f),p.forEach(h._free),r}}},2306:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.OnnxruntimeWebAssemblySessionHandler=void 0;const o=i(2806),l=i(1670),c=i(2850),a=i(2157);let h;e.OnnxruntimeWebAssemblySessionHandler=class{async createSessionAllocate(f){const p=await fetch(f),d=await p.arrayBuffer();return(0,a.createSessionAllocate)(new Uint8Array(d))}async loadModel(f,p){if(h||(await(0,a.initOrt)(l.env.wasm.numThreads,(d=>{switch(d){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${d}`)}})(l.env.logLevel)),h=!0),typeof f=="string")if(typeof fetch>"u"){const d=await(0,c.promisify)(o.readFile)(f);[this.sessionId,this.inputNames,this.outputNames]=await(0,a.createSession)(d,p)}else{const d=await this.createSessionAllocate(f);[this.sessionId,this.inputNames,this.outputNames]=await(0,a.createSessionFinalize)(d,p)}else[this.sessionId,this.inputNames,this.outputNames]=await(0,a.createSession)(f,p)}async dispose(){return(0,a.releaseSession)(this.sessionId)}async run(f,p,d){const r=[],t=[];Object.entries(f).forEach(g=>{const b=g[0],y=g[1],w=this.inputNames.indexOf(b);if(w===-1)throw new Error(`invalid input '${b}'`);r.push(y),t.push(w)});const u=[];Object.entries(p).forEach(g=>{const b=g[0],y=this.outputNames.indexOf(b);if(y===-1)throw new Error(`invalid output '${b}'`);u.push(y)});const s=await(0,a.run)(this.sessionId,t,r.map(g=>[g.type,g.dims,g.data]),u,d),m={};for(let g=0;g<s.length;g++)m[this.outputNames[u[g]]]=new l.Tensor(s[g][0],s[g][2],s[g][1]);return m}startProfiling(){}endProfiling(){(0,a.endProfiling)(this.sessionId)}}},4919:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.setSessionOptions=void 0;const o=i(7967),l=i(4983),c=i(6361);e.setSessionOptions=a=>{const h=(0,c.getInstance)();let f=0;const p=[],d=a||{};(r=>{r.extra||(r.extra={}),r.extra.session||(r.extra.session={});const t=r.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1")})(d);try{(a==null?void 0:a.graphOptimizationLevel)===void 0&&(d.graphOptimizationLevel="all");const r=(s=>{switch(s){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${s}`)}})(d.graphOptimizationLevel);(a==null?void 0:a.enableCpuMemArena)===void 0&&(d.enableCpuMemArena=!0),(a==null?void 0:a.enableMemPattern)===void 0&&(d.enableMemPattern=!0),(a==null?void 0:a.executionMode)===void 0&&(d.executionMode="sequential");const t=(s=>{switch(s){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${s}`)}})(d.executionMode);let u=0;if((a==null?void 0:a.logId)!==void 0&&(u=(0,l.allocWasmString)(a.logId,p)),(a==null?void 0:a.logSeverityLevel)===void 0)d.logSeverityLevel=2;else if(typeof a.logSeverityLevel!="number"||!Number.isInteger(a.logSeverityLevel)||a.logSeverityLevel<0||a.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${a.logSeverityLevel}`);if((a==null?void 0:a.logVerbosityLevel)===void 0)d.logVerbosityLevel=0;else if(typeof a.logVerbosityLevel!="number"||!Number.isInteger(a.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${a.logVerbosityLevel}`);if((a==null?void 0:a.enableProfiling)===void 0&&(d.enableProfiling=!1),f=h._OrtCreateSessionOptions(r,!!d.enableCpuMemArena,!!d.enableMemPattern,t,!!d.enableProfiling,0,u,d.logSeverityLevel,d.logVerbosityLevel),f===0)throw new Error("Can't create session options");return a!=null&&a.executionProviders&&((s,m,g)=>{for(const b of m){let y=typeof b=="string"?b:b.name;switch(y){case"xnnpack":y="XNNPACK";break;case"wasm":case"cpu":continue;default:throw new Error(`not supported EP: ${y}`)}const w=(0,l.allocWasmString)(y,g);if((0,c.getInstance)()._OrtAppendExecutionProvider(s,w)!==0)throw new Error(`Can't append execution provider: ${y}`)}})(f,a.executionProviders,p),(a==null?void 0:a.extra)!==void 0&&(0,o.iterateExtraOptions)(a.extra,"",new WeakSet,(s,m)=>{const g=(0,l.allocWasmString)(s,p),b=(0,l.allocWasmString)(m,p);if(h._OrtAddSessionConfigEntry(f,g,b)!==0)throw new Error(`Can't set a session config entry: ${s} - ${m}`)}),[f,p]}catch(r){throw f!==0&&h._OrtReleaseSessionOptions(f),p.forEach(h._free),r}}},4983:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.allocWasmString=void 0;const o=i(6361);e.allocWasmString=(l,c)=>{const a=(0,o.getInstance)(),h=a.lengthBytesUTF8(l)+1,f=a._malloc(h);return a.stringToUTF8(l,f,h),c.push(f),f}},349:(n,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.extractTransferableBuffers=e.endProfiling=e.run=e.releaseSession=e.createSession=e.createSessionFinalize=e.createSessionAllocate=e.initOrt=void 0;const o=i(586),l=i(4919),c=i(4983),a=i(6361);e.initOrt=(r,t)=>{const u=(0,a.getInstance)()._OrtInit(r,t);if(u!==0)throw new Error(`Can't initialize onnxruntime. error code = ${u}`)};const h=new Map;e.createSessionAllocate=r=>{const t=(0,a.getInstance)(),u=t._malloc(r.byteLength);return t.HEAPU8.set(r,u),[u,r.byteLength]},e.createSessionFinalize=(r,t)=>{const u=(0,a.getInstance)();let s=0,m=0,g=[];try{if([m,g]=(0,l.setSessionOptions)(t),s=u._OrtCreateSession(r[0],r[1],m),s===0)throw new Error("Can't create a session")}finally{u._free(r[0]),u._OrtReleaseSessionOptions(m),g.forEach(u._free)}const b=u._OrtGetInputCount(s),y=u._OrtGetOutputCount(s),w=[],x=[],v=[],E=[];for(let O=0;O<b;O++){const C=u._OrtGetInputName(s,O);if(C===0)throw new Error("Can't get an input name");x.push(C),w.push(u.UTF8ToString(C))}for(let O=0;O<y;O++){const C=u._OrtGetOutputName(s,O);if(C===0)throw new Error("Can't get an output name");E.push(C),v.push(u.UTF8ToString(C))}return h.set(s,[s,x,E]),[s,w,v]},e.createSession=(r,t)=>{const u=(0,e.createSessionAllocate)(r);return(0,e.createSessionFinalize)(u,t)},e.releaseSession=r=>{const t=(0,a.getInstance)(),u=h.get(r);if(!u)throw new Error("invalid session id");const s=u[0],m=u[1],g=u[2];m.forEach(t._OrtFree),g.forEach(t._OrtFree),t._OrtReleaseSession(s),h.delete(r)};const f=r=>{switch(r){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${r}`)}},p=r=>{switch(r){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${r}`)}},d=r=>{switch(r){case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${r}`)}};e.run=(r,t,u,s,m)=>{const g=(0,a.getInstance)(),b=h.get(r);if(!b)throw new Error("invalid session id");const y=b[0],w=b[1],x=b[2],v=t.length,E=s.length;let O=0,C=[];const S=[],N=[];try{[O,C]=(0,o.setRunOptions)(m);for(let R=0;R<v;R++){const V=u[R][0],ce=u[R][1],se=u[R][2];let be,ee;if(Array.isArray(se)){ee=4*se.length,be=g._malloc(ee),N.push(be);let Ge=be/4;for(let De=0;De<se.length;De++){if(typeof se[De]!="string")throw new TypeError(`tensor data at index ${De} is not a string`);g.HEAPU32[Ge++]=(0,c.allocWasmString)(se[De],N)}}else ee=se.byteLength,be=g._malloc(ee),N.push(be),g.HEAPU8.set(new Uint8Array(se.buffer,se.byteOffset,ee),be);const ve=g.stackSave(),Ce=g.stackAlloc(4*ce.length);try{let Ge=Ce/4;ce.forEach(ct=>g.HEAP32[Ge++]=ct);const De=g._OrtCreateTensor(f(V),be,ee,Ce,ce.length);if(De===0)throw new Error("Can't create a tensor");S.push(De)}finally{g.stackRestore(ve)}}const Q=g.stackSave(),te=g.stackAlloc(4*v),Z=g.stackAlloc(4*v),Y=g.stackAlloc(4*E),G=g.stackAlloc(4*E);try{let R=te/4,V=Z/4,ce=Y/4,se=G/4;for(let ve=0;ve<v;ve++)g.HEAPU32[R++]=S[ve],g.HEAPU32[V++]=w[t[ve]];for(let ve=0;ve<E;ve++)g.HEAPU32[ce++]=0,g.HEAPU32[se++]=x[s[ve]];let be=g._OrtRun(y,Z,te,v,G,E,Y,O);const ee=[];if(be===0)for(let ve=0;ve<E;ve++){const Ce=g.HEAPU32[Y/4+ve],Ge=g.stackSave(),De=g.stackAlloc(16);let ct,ht=0;try{if(be=g._OrtGetTensorData(Ce,De,De+4,De+8,De+12),be!==0)throw new Error(`Can't access output tensor data. error code = ${be}`);let Wt=De/4;const _n=g.HEAPU32[Wt++];ht=g.HEAPU32[Wt++];const jt=g.HEAPU32[Wt++],ln=g.HEAPU32[Wt++],ft=[];for(let Lt=0;Lt<ln;Lt++)ft.push(g.HEAPU32[jt/4+Lt]);g._OrtFree(jt);const bt=ft.length===0?1:ft.reduce((Lt,Jt)=>Lt*Jt);if(ct=p(_n),ct==="string"){const Lt=[];let Jt=ht/4;for(let En=0;En<bt;En++){const An=g.HEAPU32[Jt++],Cn=En===bt-1?void 0:g.HEAPU32[Jt]-An;Lt.push(g.UTF8ToString(An,Cn))}ee.push([ct,ft,Lt])}else{const Lt=new(d(ct))(bt);new Uint8Array(Lt.buffer,Lt.byteOffset,Lt.byteLength).set(g.HEAPU8.subarray(ht,ht+Lt.byteLength)),ee.push([ct,ft,Lt])}}finally{g.stackRestore(Ge),ct==="string"&&ht&&g._free(ht),g._OrtReleaseTensor(Ce)}}if(be===0)return ee;throw new Error(`failed to call OrtRun(). error code = ${be}.`)}finally{g.stackRestore(Q)}}finally{S.forEach(g._OrtReleaseTensor),N.forEach(g._free),g._OrtReleaseRunOptions(O),C.forEach(g._free)}},e.endProfiling=r=>{const t=(0,a.getInstance)(),u=h.get(r);if(!u)throw new Error("invalid session id");const s=u[0],m=t._OrtEndProfiling(s);if(m===0)throw new Error("Can't get an profile file name");t._OrtFree(m)},e.extractTransferableBuffers=r=>{const t=[];for(const u of r){const s=u[2];!Array.isArray(s)&&s.buffer&&t.push(s.buffer)}return t}},6361:function(n,e,i){var o=this&&this.__createBinding||(Object.create?function(m,g,b,y){y===void 0&&(y=b);var w=Object.getOwnPropertyDescriptor(g,b);w&&!("get"in w?!g.__esModule:w.writable||w.configurable)||(w={enumerable:!0,get:function(){return g[b]}}),Object.defineProperty(m,y,w)}:function(m,g,b,y){y===void 0&&(y=b),m[y]=g[b]}),l=this&&this.__setModuleDefault||(Object.create?function(m,g){Object.defineProperty(m,"default",{enumerable:!0,value:g})}:function(m,g){m.default=g}),c=this&&this.__importStar||function(m){if(m&&m.__esModule)return m;var g={};if(m!=null)for(var b in m)b!=="default"&&Object.prototype.hasOwnProperty.call(m,b)&&o(g,m,b);return l(g,m),g},a=this&&this.__importDefault||function(m){return m&&m.__esModule?m:{default:m}};Object.defineProperty(e,"__esModule",{value:!0}),e.dispose=e.getInstance=e.initializeWebAssembly=void 0;const h=c(i(6449)),f=a(i(932)),p=i(3474);let d,r=!1,t=!1,u=!1;const s=(m,g)=>g?m?"ort-wasm-simd-threaded.wasm":"ort-wasm-threaded.wasm":m?"ort-wasm-simd.wasm":"ort-wasm.wasm";e.initializeWebAssembly=async m=>{if(r)return Promise.resolve();if(t)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(u)throw new Error("previous call to 'initializeWebAssembly()' failed.");t=!0;const g=m.initTimeout,b=m.numThreads,y=m.simd,w=b>1&&(()=>{try{return typeof SharedArrayBuffer<"u"&&(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}})(),x=y&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}})(),v=typeof m.wasmPaths=="string"?m.wasmPaths:void 0,E=s(!1,w),O=s(x,w),C=typeof m.wasmPaths=="object"?m.wasmPaths[O]:void 0;let S=!1;const N=[];if(g>0&&N.push(new Promise(Q=>{setTimeout(()=>{S=!0,Q()},g)})),N.push(new Promise((Q,te)=>{const Z=w?p:f.default,Y={locateFile:(G,R)=>w&&G.endsWith(".worker.js")&&typeof Blob<"u"?URL.createObjectURL(new Blob([i(4154)],{type:"text/javascript"})):G===E?C??(v??R)+O:R+G};if(w)if(typeof Blob>"u")Y.mainScriptUrlOrBlob=h.join("/","ort-wasm-threaded.js");else{const G=`var ortWasmThreaded=(function(){var _scriptDir;return ${Z.toString()}})();`;Y.mainScriptUrlOrBlob=new Blob([G],{type:"text/javascript"})}Z(Y).then(G=>{t=!1,r=!0,d=G,Q()},G=>{t=!1,u=!0,te(G)})})),await Promise.race(N),S)throw new Error(`WebAssembly backend initializing failed due to timeout: ${g}ms`)},e.getInstance=()=>{if(r&&d)return d;throw new Error("WebAssembly is not initialized yet.")},e.dispose=()=>{var m;!r||t||u||(t=!0,(m=d.PThread)===null||m===void 0||m.terminateAllThreads(),d=void 0,t=!1,r=!1,u=!0)}},9710:(n,e,i)=>{i.d(e,{Z:()=>c});var o=i(477),l=i.n(o);function c(){return l()('/*!\n* ONNX Runtime Web v1.14.0\n* Copyright (c) Microsoft Corporation. All rights reserved.\n* Licensed under the MIT License.\n*/\n(()=>{var t={474:(t,e,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(t){function e(){return j.buffer!=D&&N(j.buffer),P}function r(){return j.buffer!=D&&N(j.buffer),U}function a(){return j.buffer!=D&&N(j.buffer),F}function i(){return j.buffer!=D&&N(j.buffer),I}function o(){return j.buffer!=D&&N(j.buffer),W}var u,c,s;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,e){c=t,s=e}));var l,f,p,h,d,y,b=Object.assign({},u),m="./this.program",g=(t,e)=>{throw e},v="object"==typeof window,w="function"==typeof importScripts,_="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,O=u.ENVIRONMENT_IS_PTHREAD||!1,A="";function S(t){return u.locateFile?u.locateFile(t,A):A+t}if(_){let e;A=w?n(908).dirname(A)+"/":"//",y=()=>{d||(h=n(384),d=n(908))},l=function(t,e){return y(),t=d.normalize(t),h.readFileSync(t,e?void 0:"utf8")},p=t=>((t=l(t,!0)).buffer||(t=new Uint8Array(t)),t),f=(t,e,n)=>{y(),t=d.normalize(t),h.readFile(t,(function(t,r){t?n(t):e(r.buffer)}))},1<process.argv.length&&(m=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",(function(t){if(!(t instanceof ct))throw t})),process.on("unhandledRejection",(function(t){throw t})),g=(t,e)=>{if(Q())throw process.exitCode=t,e;e instanceof ct||x("exiting due to exception: "+e),process.exit(t)},u.inspect=function(){return"[Emscripten Module object]"};try{e=n(925)}catch(t){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),t}n.g.Worker=e.Worker}else(v||w)&&(w?A=self.location.href:"undefined"!=typeof document&&document.currentScript&&(A=document.currentScript.src),_scriptDir&&(A=_scriptDir),A=0!==A.indexOf("blob:")?A.substr(0,A.replace(/[?#].*/,"").lastIndexOf("/")+1):"",_||(l=t=>{var e=new XMLHttpRequest;return e.open("GET",t,!1),e.send(null),e.responseText},w&&(p=t=>{var e=new XMLHttpRequest;return e.open("GET",t,!1),e.responseType="arraybuffer",e.send(null),new Uint8Array(e.response)}),f=(t,e,n)=>{var r=new XMLHttpRequest;r.open("GET",t,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)}));_&&"undefined"==typeof performance&&(n.g.performance=n(953).performance);var T=console.log.bind(console),E=console.warn.bind(console);_&&(y(),T=t=>h.writeSync(1,t+"\\n"),E=t=>h.writeSync(2,t+"\\n"));var M,C=u.print||T,x=u.printErr||E;Object.assign(u,b),b=null,u.thisProgram&&(m=u.thisProgram),u.quit&&(g=u.quit),u.wasmBinary&&(M=u.wasmBinary);var R=u.noExitRuntime||!1;"object"!=typeof WebAssembly&&at("no native wasm support detected");var j,k,D,P,U,F,I,W,H=!1,L="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function z(t,e,n){var r=(e>>>=0)+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&L)return L.decode(t.buffer instanceof SharedArrayBuffer?t.slice(e,n):t.subarray(e,n));for(r="";e<n;){var a=t[e++];if(128&a){var i=63&t[e++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&t[e++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&t[e++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function Y(t,e){return(t>>>=0)?z(r(),t,e):""}function B(t,e,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<t.length;++i){var o=t.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),127>=o){if(n>=r)break;e[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;e[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++>>>0]=224|o>>12}else{if(n+3>=r)break;e[n++>>>0]=240|o>>18,e[n++>>>0]=128|o>>12&63}e[n++>>>0]=128|o>>6&63}e[n++>>>0]=128|63&o}}return e[n>>>0]=0,n-a}function G(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e}function N(t){D=t,u.HEAP8=P=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=F=new Int32Array(t),u.HEAPU8=U=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=I=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=W=new Float64Array(t)}O&&(D=u.buffer);var V=u.INITIAL_MEMORY||16777216;if(O)j=u.wasmMemory,D=u.buffer;else if(u.wasmMemory)j=u.wasmMemory;else if(!((j=new WebAssembly.Memory({initial:V/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw x("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),_&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");j&&(D=j.buffer),V=D.byteLength,N(D);var $,q=[],X=[],J=[],Z=[];function Q(){return R||!1}function K(){var t=u.preRun.shift();q.unshift(t)}var tt,et=0,nt=null,rt=null;function at(t){throw O?postMessage({cmd:"onAbort",arg:t}):u.onAbort&&u.onAbort(t),x(t="Aborted("+t+")"),H=!0,t=new WebAssembly.RuntimeError(t+". Build with -sASSERTIONS for more info."),s(t),t}function it(){return tt.startsWith("data:application/octet-stream;base64,")}function ot(){var t=tt;try{if(t==tt&&M)return new Uint8Array(M);if(p)return p(t);throw"both async and sync fetching of the wasm failed"}catch(t){at(t)}}tt="ort-wasm-threaded.wasm",it()||(tt=S(tt));var ut={};function ct(t){this.name="ExitStatus",this.message="Program terminated with exit("+t+")",this.status=t}function st(t){(t=ht.Vb[t])||at(),ht.mc(t)}function lt(t){var e=ht.Cc();if(!e)return 6;ht.ac.push(e),ht.Vb[t.Ub]=e,e.Ub=t.Ub;var n={cmd:"run",start_routine:t.Ic,arg:t.zc,pthread_ptr:t.Ub};return e.$b=()=>{n.time=performance.now(),e.postMessage(n,t.Nc)},e.loaded&&(e.$b(),delete e.$b),0}function ft(t){if(O)return $t(1,1,t);Q()||(ht.oc(),u.onExit&&u.onExit(t),H=!0),g(t,new ct(t))}function pt(t,e){if(!e&&O)throw bt(t),"unwind";Q()||O||(me(),dt(J),be(0),re[1].length&&ae(1,10),re[2].length&&ae(2,10),ht.oc()),ft(t)}var ht={Yb:[],ac:[],qc:[],Vb:{},fc:function(){O&&ht.Ec()},Pc:function(){},Ec:function(){ht.receiveObjectTransfer=ht.Gc,ht.threadInitTLS=ht.pc,ht.setExitStatus=ht.nc,R=!1},nc:function(){},oc:function(){for(var t of Object.values(ht.Vb))ht.mc(t);for(t of ht.Yb)t.terminate();ht.Yb=[]},mc:function(t){var e=t.Ub;delete ht.Vb[e],ht.Yb.push(t),ht.ac.splice(ht.ac.indexOf(t),1),t.Ub=0,Oe(e)},Gc:function(){},pc:function(){ht.qc.forEach((t=>t()))},Fc:function(t,e){t.onmessage=n=>{var r=(n=n.data).cmd;if(t.Ub&&(ht.Bc=t.Ub),n.targetThread&&n.targetThread!=he()){var a=ht.Vb[n.Qc];a?a.postMessage(n,n.transferList):x(\'Internal error! Worker sent a message "\'+r+\'" to target pthread \'+n.targetThread+", but that thread no longer exists!")}else"processProxyingQueue"===r?zt(n.queue):"spawnThread"===r?lt(n):"cleanupThread"===r?st(n.thread):"killThread"===r?(n=n.thread,r=ht.Vb[n],delete ht.Vb[n],r.terminate(),Oe(n),ht.ac.splice(ht.ac.indexOf(r),1),r.Ub=0):"cancelThread"===r?ht.Vb[n.thread].postMessage({cmd:"cancel"}):"loaded"===r?(t.loaded=!0,e&&e(t),t.$b&&(t.$b(),delete t.$b)):"print"===r?C("Thread "+n.threadId+": "+n.text):"printErr"===r?x("Thread "+n.threadId+": "+n.text):"alert"===r?alert("Thread "+n.threadId+": "+n.text):"setimmediate"===n.target?t.postMessage(n):"onAbort"===r?u.onAbort&&u.onAbort(n.arg):r&&x("worker sent an unknown command "+r);ht.Bc=void 0},t.onerror=t=>{throw x("worker sent an error! "+t.filename+":"+t.lineno+": "+t.message),t},_&&(t.on("message",(function(e){t.onmessage({data:e})})),t.on("error",(function(e){t.onerror(e)})),t.on("detachedExit",(function(){}))),t.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:j,wasmModule:k})},yc:function(){var t=S("ort-wasm-threaded.worker.js");ht.Yb.push(new Worker(t))},Cc:function(){return 0==ht.Yb.length&&(ht.yc(),ht.Fc(ht.Yb[0])),ht.Yb.pop()}};function dt(t){for(;0<t.length;)t.shift()(u)}function yt(t){var e=Ee();return t=t(),Me(e),t}function bt(t){if(O)return $t(2,0,t);try{pt(t)}catch(t){t instanceof ct||"unwind"==t||g(1,t)}}u.PThread=ht,u.establishStackSpace=function(){var t=he(),e=a()[t+44>>2>>>0];t=a()[t+48>>2>>>0],Te(e,e-t),Me(e)};var mt=[];function gt(t){var e=mt[t];return e||(t>=mt.length&&(mt.length=t+1),mt[t]=e=$.get(t)),e}u.invokeEntryPoint=function(t,e){t=gt(t)(e),Q()?ht.nc(t):Ae(t)};var vt,wt,_t=[],Ot=0,At=0;function St(t){this.Zb=t,this.Sb=t-24,this.xc=function(t){i()[this.Sb+4>>2>>>0]=t},this.bc=function(){return i()[this.Sb+4>>2>>>0]},this.wc=function(t){i()[this.Sb+8>>2>>>0]=t},this.Dc=function(){return i()[this.Sb+8>>2>>>0]},this.rc=function(){a()[this.Sb>>2>>>0]=0},this.hc=function(t){t=t?1:0,e()[this.Sb+12>>0>>>0]=t},this.uc=function(){return 0!=e()[this.Sb+12>>0>>>0]},this.ic=function(t){t=t?1:0,e()[this.Sb+13>>0>>>0]=t},this.kc=function(){return 0!=e()[this.Sb+13>>0>>>0]},this.fc=function(t,e){this.cc(0),this.xc(t),this.wc(e),this.rc(),this.hc(!1),this.ic(!1)},this.sc=function(){Atomics.add(a(),this.Sb>>2,1)},this.Hc=function(){return 1===Atomics.sub(a(),this.Sb>>2,1)},this.cc=function(t){i()[this.Sb+16>>2>>>0]=t},this.tc=function(){return i()[this.Sb+16>>2>>>0]},this.vc=function(){if(Re(this.bc()))return i()[this.Zb>>2>>>0];var t=this.tc();return 0!==t?t:this.Zb}}function Tt(t){return ye(new St(t).Sb)}function Et(t,e,n,r){return O?$t(3,1,t,e,n,r):Mt(t,e,n,r)}function Mt(t,e,n,r){if("undefined"==typeof SharedArrayBuffer)return x("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];return O&&0===a.length?Et(t,e,n,r):(t={Ic:n,Ub:t,zc:r,Nc:a},O?(t.Oc="spawnThread",postMessage(t,a),0):lt(t))}function Ct(t,e,n){return O?$t(4,1,t,e,n):0}function xt(t,e){if(O)return $t(5,1,t,e)}function Rt(t,e){if(O)return $t(6,1,t,e)}function jt(t,e,n){if(O)return $t(7,1,t,e,n)}function kt(t,e,n){return O?$t(8,1,t,e,n):0}function Dt(t,e){if(O)return $t(9,1,t,e)}function Pt(t,e,n){if(O)return $t(10,1,t,e,n)}function Ut(t,e,n,r){if(O)return $t(11,1,t,e,n,r)}function Ft(t,e,n,r){if(O)return $t(12,1,t,e,n,r)}function It(t,e,n,r){if(O)return $t(13,1,t,e,n,r)}function Wt(t){if(O)return $t(14,1,t)}function Ht(t,e){if(O)return $t(15,1,t,e)}function Lt(t,e,n){if(O)return $t(16,1,t,e,n)}function zt(t){Atomics.store(a(),t>>2,1),he()&&_e(t),Atomics.compareExchange(a(),t>>2,1,0)}function Yt(t){return i()[t>>>2]+4294967296*a()[t+4>>>2]}function Bt(t,e,n,r,a,i){return O?$t(17,1,t,e,n,r,a,i):-52}function Gt(t,e,n,r,a,i){if(O)return $t(18,1,t,e,n,r,a,i)}function Nt(t){var n=G(t)+1,r=de(n);return r&&B(t,e(),r,n),r}function Vt(t,e,n){function r(t){return(t=t.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?t[1]:"GMT"}if(O)return $t(19,1,t,e,n);var o=(new Date).getFullYear(),u=new Date(o,0,1),c=new Date(o,6,1);o=u.getTimezoneOffset();var s=c.getTimezoneOffset(),l=Math.max(o,s);a()[t>>2>>>0]=60*l,a()[e>>2>>>0]=Number(o!=s),t=r(u),e=r(c),t=Nt(t),e=Nt(e),s<o?(i()[n>>2>>>0]=t,i()[n+4>>2>>>0]=e):(i()[n>>2>>>0]=e,i()[n+4>>2>>>0]=t)}function $t(t,e){var n=arguments.length-2,r=arguments;return yt((()=>{for(var a=Ce(8*n),i=a>>3,u=0;u<n;u++){var c=r[2+u];o()[i+u>>>0]=c}return we(t,n,a,e)}))}u.executeNotifiedProxyingQueue=zt,wt=_?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:O?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var qt,Xt=[],Jt={};function Zt(){if(!qt){var t,e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:m||"./this.program"};for(t in Jt)void 0===Jt[t]?delete e[t]:e[t]=Jt[t];var n=[];for(t in e)n.push(t+"="+e[t]);qt=n}return qt}function Qt(t,n){if(O)return $t(20,1,t,n);var r=0;return Zt().forEach((function(a,o){var u=n+r;for(o=i()[t+4*o>>2>>>0]=u,u=0;u<a.length;++u)e()[o++>>0>>>0]=a.charCodeAt(u);e()[o>>0>>>0]=0,r+=a.length+1})),0}function Kt(t,e){if(O)return $t(21,1,t,e);var n=Zt();i()[t>>2>>>0]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),i()[e>>2>>>0]=r,0}function te(t){return O?$t(22,1,t):52}function ee(t,e,n,r){return O?$t(23,1,t,e,n,r):52}function ne(t,e,n,r,a){return O?$t(24,1,t,e,n,r,a):70}var re=[null,[],[]];function ae(t,e){var n=re[t];0===e||10===e?((1===t?C:x)(z(n,0)),n.length=0):n.push(e)}function ie(t,e,n,a){if(O)return $t(25,1,t,e,n,a);for(var o=0,u=0;u<n;u++){var c=i()[e>>2>>>0],s=i()[e+4>>2>>>0];e+=8;for(var l=0;l<s;l++)ae(t,r()[c+l>>>0]);o+=s}return i()[a>>2>>>0]=o,0}var oe=0;function ue(t){return 0==t%4&&(0!=t%100||0==t%400)}var ce=[31,29,31,30,31,30,31,31,30,31,30,31],se=[31,28,31,30,31,30,31,31,30,31,30,31];function le(t,n,r,i){function o(t,e,n){for(t="number"==typeof t?t.toString():t||"";t.length<e;)t=n[0]+t;return t}function u(t,e){return o(t,e,"0")}function c(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function s(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function l(t){var e=t.Wb;for(t=new Date(new Date(t.Xb+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(ue(t.getFullYear())?ce:se)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=s(new Date(t.getFullYear(),0,4)),n=s(n),0>=c(e,t)?0>=c(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var f=a()[i+40>>2>>>0];for(var p in i={Lc:a()[i>>2>>>0],Kc:a()[i+4>>2>>>0],dc:a()[i+8>>2>>>0],jc:a()[i+12>>2>>>0],ec:a()[i+16>>2>>>0],Xb:a()[i+20>>2>>>0],Tb:a()[i+24>>2>>>0],Wb:a()[i+28>>2>>>0],Rc:a()[i+32>>2>>>0],Jc:a()[i+36>>2>>>0],Mc:f?Y(f):""},r=Y(r),f={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})r=r.replace(new RegExp(p,"g"),f[p]);var h="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),d="January February March April May June July August September October November December".split(" ");for(p in f={"%a":function(t){return h[t.Tb].substring(0,3)},"%A":function(t){return h[t.Tb]},"%b":function(t){return d[t.ec].substring(0,3)},"%B":function(t){return d[t.ec]},"%C":function(t){return u((t.Xb+1900)/100|0,2)},"%d":function(t){return u(t.jc,2)},"%e":function(t){return o(t.jc,2," ")},"%g":function(t){return l(t).toString().substring(2)},"%G":function(t){return l(t)},"%H":function(t){return u(t.dc,2)},"%I":function(t){return 0==(t=t.dc)?t=12:12<t&&(t-=12),u(t,2)},"%j":function(t){for(var e=0,n=0;n<=t.ec-1;e+=(ue(t.Xb+1900)?ce:se)[n++]);return u(t.jc+e,3)},"%m":function(t){return u(t.ec+1,2)},"%M":function(t){return u(t.Kc,2)},"%n":function(){return"\\n"},"%p":function(t){return 0<=t.dc&&12>t.dc?"AM":"PM"},"%S":function(t){return u(t.Lc,2)},"%t":function(){return"\\t"},"%u":function(t){return t.Tb||7},"%U":function(t){return u(Math.floor((t.Wb+7-t.Tb)/7),2)},"%V":function(t){var e=Math.floor((t.Wb+7-(t.Tb+6)%7)/7);if(2>=(t.Tb+371-t.Wb-2)%7&&e++,e)53==e&&(4==(n=(t.Tb+371-t.Wb)%7)||3==n&&ue(t.Xb)||(e=1));else{e=52;var n=(t.Tb+7-t.Wb-1)%7;(4==n||5==n&&ue(t.Xb%400-1))&&e++}return u(e,2)},"%w":function(t){return t.Tb},"%W":function(t){return u(Math.floor((t.Wb+7-(t.Tb+6)%7)/7),2)},"%y":function(t){return(t.Xb+1900).toString().substring(2)},"%Y":function(t){return t.Xb+1900},"%z":function(t){var e=0<=(t=t.Jc);return t=Math.abs(t)/60,(e?"+":"-")+String("0000"+(t/60*100+t%60)).slice(-4)},"%Z":function(t){return t.Mc},"%%":function(){return"%"}},r=r.replace(/%%/g,"\\0\\0"),f)r.includes(p)&&(r=r.replace(new RegExp(p,"g"),f[p](i)));return p=function(t){var e=Array(G(t)+1);return B(t,e,0,e.length),e}(r=r.replace(/\\0\\0/g,"%")),p.length>n?0:(function(t,n){e().set(t,n>>>0)}(p,t),p.length-1)}ht.fc();var fe=[null,ft,bt,Et,Ct,xt,Rt,jt,kt,Dt,Pt,Ut,Ft,It,Wt,Ht,Lt,Bt,Gt,Vt,Qt,Kt,te,ee,ne,ie],pe={b:function(t){return de(t+24)+24},n:function(t){return(t=new St(t)).uc()||(t.hc(!0),Ot--),t.ic(!1),_t.push(t),t.sc(),t.vc()},ma:function(t){throw x("Unexpected exception thrown, this is not properly supported - aborting"),H=!0,t},x:function(){Se(0);var t=_t.pop();if(t.Hc()&&!t.kc()){var e=t.Dc();e&&gt(e)(t.Zb),Tt(t.Zb)}At=0},e:function(){var t=At;if(!t)return oe=0;var e=new St(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},l:function(){var t=At;if(!t)return oe=0;var e=new St(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},h:function(){var t=At;if(!t)return oe=0;var e=new St(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},t:Tt,M:function(){var t=_t.pop();t||at("no exception to throw");var e=t.Zb;throw t.kc()||(_t.push(t),t.ic(!0),t.hc(!1),Ot++),At=e,e},c:function(t,e,n){throw new St(t).fc(e,n),At=t,Ot++,t},pa:function(){return Ot},Fa:function(t){ge(t,!w,1,!v),ht.pc()},T:function(t){O?postMessage({cmd:"cleanupThread",thread:t}):st(t)},xa:Mt,j:function(t){throw At||(At=t),t},H:Ct,Ma:xt,ua:Rt,wa:jt,oa:kt,Ka:Dt,Ca:Pt,Ja:Ut,V:Ft,va:It,sa:Wt,La:Ht,ta:Lt,Ta:function(){},X:function(){at("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},Ua:function(){at("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},W:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,e,n,r){if(t==e)setTimeout((()=>zt(r)));else if(O)postMessage({targetThread:t,cmd:"processProxyingQueue",queue:r});else{if(!(t=ht.Vb[t]))return;t.postMessage({cmd:"processProxyingQueue",queue:r})}return 1},Ea:function(){return-1},Pa:function(t,e){t=new Date(1e3*Yt(t)),a()[e>>2>>>0]=t.getUTCSeconds(),a()[e+4>>2>>>0]=t.getUTCMinutes(),a()[e+8>>2>>>0]=t.getUTCHours(),a()[e+12>>2>>>0]=t.getUTCDate(),a()[e+16>>2>>>0]=t.getUTCMonth(),a()[e+20>>2>>>0]=t.getUTCFullYear()-1900,a()[e+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[e+28>>2>>>0]=t},Qa:function(t,e){t=new Date(1e3*Yt(t)),a()[e>>2>>>0]=t.getSeconds(),a()[e+4>>2>>>0]=t.getMinutes(),a()[e+8>>2>>>0]=t.getHours(),a()[e+12>>2>>>0]=t.getDate(),a()[e+16>>2>>>0]=t.getMonth(),a()[e+20>>2>>>0]=t.getFullYear()-1900,a()[e+24>>2>>>0]=t.getDay();var n=new Date(t.getFullYear(),0,1),r=(t.getTime()-n.getTime())/864e5|0;a()[e+28>>2>>>0]=r,a()[e+36>>2>>>0]=-60*t.getTimezoneOffset(),r=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(r!=(n=n.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(n,r)),a()[e+32>>2>>>0]=t},Ra:function(t){var e=new Date(a()[t+20>>2>>>0]+1900,a()[t+16>>2>>>0],a()[t+12>>2>>>0],a()[t+8>>2>>>0],a()[t+4>>2>>>0],a()[t>>2>>>0],0),n=a()[t+32>>2>>>0],r=e.getTimezoneOffset(),i=new Date(e.getFullYear(),0,1),o=new Date(e.getFullYear(),6,1).getTimezoneOffset(),u=i.getTimezoneOffset(),c=Math.min(u,o);return 0>n?a()[t+32>>2>>>0]=Number(o!=u&&c==r):0<n!=(c==r)&&(o=Math.max(u,o),e.setTime(e.getTime()+6e4*((0<n?c:o)-r))),a()[t+24>>2>>>0]=e.getDay(),n=(e.getTime()-i.getTime())/864e5|0,a()[t+28>>2>>>0]=n,a()[t>>2>>>0]=e.getSeconds(),a()[t+4>>2>>>0]=e.getMinutes(),a()[t+8>>2>>>0]=e.getHours(),a()[t+12>>2>>>0]=e.getDate(),a()[t+16>>2>>>0]=e.getMonth(),e.getTime()/1e3|0},Aa:Bt,Ba:Gt,Sa:function t(e,n,r){t.Ac||(t.Ac=!0,Vt(e,n,r))},y:function(){at("")},U:function(){if(!_&&!w){var t="Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread";vt||(vt={}),vt[t]||(vt[t]=1,_&&(t="warning: "+t),x(t))}},ra:function(){return 4294901760},B:wt,Ia:function(t,e,n){r().copyWithin(t>>>0,e>>>0,e+n>>>0)},F:function(){return _?n(993).cpus().length:navigator.hardwareConcurrency},Da:function(t,e,n){Xt.length=e,n>>=3;for(var r=0;r<e;r++)Xt[r]=o()[n+r>>>0];return(0>t?ut[-t-1]:fe[t]).apply(null,Xt)},qa:function(t){var e=r().length;if((t>>>=0)<=e||4294901760<t)return!1;for(var n=1;4>=n;n*=2){var a=e*(1+.2/n);a=Math.min(a,t+100663296);var i=Math;a=Math.max(t,a),i=i.min.call(i,4294901760,a+(65536-a%65536)%65536);t:{try{j.grow(i-D.byteLength+65535>>>16),N(j.buffer);var o=1;break t}catch(t){}o=void 0}if(o)return!0}return!1},Na:function(){throw"unwind"},Ga:Qt,Ha:Kt,J:pt,I:te,S:ee,ga:ne,R:ie,d:function(){return oe},na:function t(r,a){t.lc||(t.lc=function(){if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(_)try{var e=n(Object(function(){var t=new Error("Cannot find module \'crypto\'");throw t.code="MODULE_NOT_FOUND",t}()));return()=>e.randomBytes(1)[0]}catch(t){}return()=>at("randomDevice")}());for(var i=0;i<a;i++)e()[r+i>>0>>>0]=t.lc();return 0},ia:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},ja:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},K:function(t){var e=Ee();try{return gt(t)()}catch(t){if(Me(e),t!==t+0)throw t;Se(1,0)}},f:function(t,e){var n=Ee();try{return gt(t)(e)}catch(t){if(Me(n),t!==t+0)throw t;Se(1,0)}},P:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},Q:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},k:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},p:function(t,e,n,r){var a=Ee();try{return gt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},q:function(t,e,n,r,a){var i=Ee();try{return gt(t)(e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Se(1,0)}},N:function(t,e,n,r,a,i){var o=Ee();try{return gt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},s:function(t,e,n,r,a,i){var o=Ee();try{return gt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},w:function(t,e,n,r,a,i,o){var u=Ee();try{return gt(t)(e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Se(1,0)}},L:function(t,e,n,r,a,i,o,u){var c=Ee();try{return gt(t)(e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Se(1,0)}},E:function(t,e,n,r,a,i,o,u,c,s,l,f){var p=Ee();try{return gt(t)(e,n,r,a,i,o,u,c,s,l,f)}catch(t){if(Me(p),t!==t+0)throw t;Se(1,0)}},aa:function(t,e,n,r,a,i,o,u){var c=Ee();try{return He(t,e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Se(1,0)}},_:function(t,e,n,r,a,i,o){var u=Ee();try{return ke(t,e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Se(1,0)}},Z:function(t,e,n,r,a){var i=Ee();try{return Le(t,e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Se(1,0)}},ca:function(t,e,n,r){var a=Ee();try{return Ie(t,e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},$:function(t){var e=Ee();try{return je(t)}catch(t){if(Me(e),t!==t+0)throw t;Se(1,0)}},ba:function(t,e){var n=Ee();try{return We(t,e)}catch(t){if(Me(n),t!==t+0)throw t;Se(1,0)}},Y:function(t,e,n){var r=Ee();try{return De(t,e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},g:function(t){var e=Ee();try{gt(t)()}catch(t){if(Me(e),t!==t+0)throw t;Se(1,0)}},r:function(t,e){var n=Ee();try{gt(t)(e)}catch(t){if(Me(n),t!==t+0)throw t;Se(1,0)}},i:function(t,e,n){var r=Ee();try{gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},ha:function(t,e,n,r){var a=Ee();try{gt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},m:function(t,e,n,r){var a=Ee();try{gt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},v:function(t,e,n,r,a){var i=Ee();try{gt(t)(e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Se(1,0)}},u:function(t,e,n,r,a,i){var o=Ee();try{gt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},O:function(t,e,n,r,a,i,o){var u=Ee();try{gt(t)(e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Se(1,0)}},A:function(t,e,n,r,a,i,o,u){var c=Ee();try{gt(t)(e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Se(1,0)}},ka:function(t,e,n,r,a,i,o,u,c){var s=Ee();try{gt(t)(e,n,r,a,i,o,u,c)}catch(t){if(Me(s),t!==t+0)throw t;Se(1,0)}},C:function(t,e,n,r,a,i,o,u,c,s,l){var f=Ee();try{gt(t)(e,n,r,a,i,o,u,c,s,l)}catch(t){if(Me(f),t!==t+0)throw t;Se(1,0)}},D:function(t,e,n,r,a,i,o,u,c,s,l,f,p,h,d,y){var b=Ee();try{gt(t)(e,n,r,a,i,o,u,c,s,l,f,p,h,d,y)}catch(t){if(Me(b),t!==t+0)throw t;Se(1,0)}},fa:function(t,e,n,r,a,i,o,u){var c=Ee();try{Pe(t,e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Se(1,0)}},da:function(t,e,n,r,a,i,o,u,c,s,l,f){var p=Ee();try{Fe(t,e,n,r,a,i,o,u,c,s,l,f)}catch(t){if(Me(p),t!==t+0)throw t;Se(1,0)}},ea:function(t,e,n,r,a,i){var o=Ee();try{Ue(t,e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},o:function(t){return t},a:j||u.wasmMemory,G:function(t){oe=t},la:le,z:function(t,e,n,r){return le(t,e,n,r)}};!function(){function t(t,e){u.asm=t.exports,ht.qc.push(u.asm.sb),$=u.asm.ub,X.unshift(u.asm.Va),k=e,O||(et--,u.monitorRunDependencies&&u.monitorRunDependencies(et),0==et&&(null!==nt&&(clearInterval(nt),nt=null),rt&&(t=rt,rt=null,t())))}function e(e){t(e.instance,e.module)}function n(t){return function(){if(!M&&(v||w)){if("function"==typeof fetch&&!tt.startsWith("file://"))return fetch(tt,{credentials:"same-origin"}).then((function(t){if(!t.ok)throw"failed to load wasm binary file at \'"+tt+"\'";return t.arrayBuffer()})).catch((function(){return ot()}));if(f)return new Promise((function(t,e){f(tt,(function(e){t(new Uint8Array(e))}),e)}))}return Promise.resolve().then((function(){return ot()}))}().then((function(t){return WebAssembly.instantiate(t,r)})).then((function(t){return t})).then(t,(function(t){x("failed to asynchronously prepare wasm: "+t),at(t)}))}var r={a:pe};if(O||(et++,u.monitorRunDependencies&&u.monitorRunDependencies(et)),u.instantiateWasm)try{return u.instantiateWasm(r,t)}catch(t){return x("Module.instantiateWasm callback failed with error: "+t),!1}(M||"function"!=typeof WebAssembly.instantiateStreaming||it()||tt.startsWith("file://")||_||"function"!=typeof fetch?n(e):fetch(tt,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,r).then(e,(function(t){return x("wasm streaming compile failed: "+t),x("falling back to ArrayBuffer instantiation"),n(e)}))}))).catch(s)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Va).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Wa).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Xa).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Ya).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Za).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm._a).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.$a).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.ab).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.bb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.cb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.db).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.eb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.fb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.gb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.hb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.ib).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.jb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.kb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.lb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.mb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.nb).apply(null,arguments)};var he=u._pthread_self=function(){return(he=u._pthread_self=u.asm.ob).apply(null,arguments)},de=u._malloc=function(){return(de=u._malloc=u.asm.pb).apply(null,arguments)},ye=u._free=function(){return(ye=u._free=u.asm.qb).apply(null,arguments)},be=u._fflush=function(){return(be=u._fflush=u.asm.rb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm.sb).apply(null,arguments)};var me=u.___funcs_on_exit=function(){return(me=u.___funcs_on_exit=u.asm.tb).apply(null,arguments)},ge=u.__emscripten_thread_init=function(){return(ge=u.__emscripten_thread_init=u.asm.vb).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.wb).apply(null,arguments)};var ve,we=u._emscripten_run_in_main_runtime_thread_js=function(){return(we=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},_e=u.__emscripten_proxy_execute_task_queue=function(){return(_e=u.__emscripten_proxy_execute_task_queue=u.asm.yb).apply(null,arguments)},Oe=u.__emscripten_thread_free_data=function(){return(Oe=u.__emscripten_thread_free_data=u.asm.zb).apply(null,arguments)},Ae=u.__emscripten_thread_exit=function(){return(Ae=u.__emscripten_thread_exit=u.asm.Ab).apply(null,arguments)},Se=u._setThrew=function(){return(Se=u._setThrew=u.asm.Bb).apply(null,arguments)},Te=u._emscripten_stack_set_limits=function(){return(Te=u._emscripten_stack_set_limits=u.asm.Cb).apply(null,arguments)},Ee=u.stackSave=function(){return(Ee=u.stackSave=u.asm.Db).apply(null,arguments)},Me=u.stackRestore=function(){return(Me=u.stackRestore=u.asm.Eb).apply(null,arguments)},Ce=u.stackAlloc=function(){return(Ce=u.stackAlloc=u.asm.Fb).apply(null,arguments)},xe=u.___cxa_can_catch=function(){return(xe=u.___cxa_can_catch=u.asm.Gb).apply(null,arguments)},Re=u.___cxa_is_pointer_type=function(){return(Re=u.___cxa_is_pointer_type=u.asm.Hb).apply(null,arguments)},je=u.dynCall_j=function(){return(je=u.dynCall_j=u.asm.Ib).apply(null,arguments)},ke=u.dynCall_iiiiij=function(){return(ke=u.dynCall_iiiiij=u.asm.Jb).apply(null,arguments)},De=u.dynCall_jii=function(){return(De=u.dynCall_jii=u.asm.Kb).apply(null,arguments)},Pe=u.dynCall_viiiiij=function(){return(Pe=u.dynCall_viiiiij=u.asm.Lb).apply(null,arguments)},Ue=u.dynCall_vjji=function(){return(Ue=u.dynCall_vjji=u.asm.Mb).apply(null,arguments)},Fe=u.dynCall_viiijjjii=function(){return(Fe=u.dynCall_viiijjjii=u.asm.Nb).apply(null,arguments)},Ie=u.dynCall_iij=function(){return(Ie=u.dynCall_iij=u.asm.Ob).apply(null,arguments)},We=u.dynCall_ji=function(){return(We=u.dynCall_ji=u.asm.Pb).apply(null,arguments)},He=u.dynCall_iiiiiij=function(){return(He=u.dynCall_iiiiiij=u.asm.Qb).apply(null,arguments)},Le=u.dynCall_iiij=function(){return(Le=u.dynCall_iiij=u.asm.Rb).apply(null,arguments)};function ze(){function t(){if(!ve&&(ve=!0,u.calledRun=!0,!H)&&(O||dt(X),c(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!O)){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();Z.unshift(t)}dt(Z)}}if(!(0<et))if(O)c(u),O||dt(X),postMessage({cmd:"loaded"});else{if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)K();dt(q),0<et||(u.setStatus?(u.setStatus("Running..."),setTimeout((function(){setTimeout((function(){u.setStatus("")}),1),t()}),1)):t())}}if(u.UTF8ToString=Y,u.stringToUTF8=function(t,e,n){return B(t,r(),e,n)},u.lengthBytesUTF8=G,u.keepRuntimeAlive=Q,u.wasmMemory=j,u.stackSave=Ee,u.stackRestore=Me,u.stackAlloc=Ce,u.ExitStatus=ct,u.PThread=ht,rt=function t(){ve||ze(),ve||(rt=t)},u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return ze(),t.ready});t.exports=r},932:(t,e,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(t){var e,r,a;t=t||{},e||(e=void 0!==t?t:{}),e.ready=new Promise((function(t,e){r=t,a=e}));var i,o,u,c,s,l,f=Object.assign({},e),p="./this.program",h=(t,e)=>{throw e},d="object"==typeof window,y="function"==typeof importScripts,b="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,m="";b?(m=y?n(908).dirname(m)+"/":"//",l=()=>{s||(c=n(384),s=n(908))},i=function(t,e){return l(),t=s.normalize(t),c.readFileSync(t,e?void 0:"utf8")},u=t=>((t=i(t,!0)).buffer||(t=new Uint8Array(t)),t),o=(t,e,n)=>{l(),t=s.normalize(t),c.readFile(t,(function(t,r){t?n(t):e(r.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",(function(t){if(!(t instanceof J))throw t})),process.on("unhandledRejection",(function(t){throw t})),h=(t,e)=>{if(_||0<L)throw process.exitCode=t,e;e instanceof J||w("exiting due to exception: "+e),process.exit(t)},e.inspect=function(){return"[Emscripten Module object]"}):(d||y)&&(y?m=self.location.href:"undefined"!=typeof document&&document.currentScript&&(m=document.currentScript.src),_scriptDir&&(m=_scriptDir),m=0!==m.indexOf("blob:")?m.substr(0,m.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=t=>{var e=new XMLHttpRequest;return e.open("GET",t,!1),e.send(null),e.responseText},y&&(u=t=>{var e=new XMLHttpRequest;return e.open("GET",t,!1),e.responseType="arraybuffer",e.send(null),new Uint8Array(e.response)}),o=(t,e,n)=>{var r=new XMLHttpRequest;r.open("GET",t,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)});var g,v=e.print||console.log.bind(console),w=e.printErr||console.warn.bind(console);Object.assign(e,f),f=null,e.thisProgram&&(p=e.thisProgram),e.quit&&(h=e.quit),e.wasmBinary&&(g=e.wasmBinary);var _=e.noExitRuntime||!1;"object"!=typeof WebAssembly&&V("no native wasm support detected");var O,A,S,T,E,M,C=!1,x="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function R(t,e,n){var r=(e>>>=0)+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&x)return x.decode(t.subarray(e,n));for(r="";e<n;){var a=t[e++];if(128&a){var i=63&t[e++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&t[e++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&t[e++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function j(t,e){return(t>>>=0)?R(T,t,e):""}function k(t,e,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<t.length;++i){var o=t.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),127>=o){if(n>=r)break;e[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;e[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++>>>0]=224|o>>12}else{if(n+3>=r)break;e[n++>>>0]=240|o>>18,e[n++>>>0]=128|o>>12&63}e[n++>>>0]=128|o>>6&63}e[n++>>>0]=128|63&o}}return e[n>>>0]=0,n-a}function D(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e}function P(){var t=O.buffer;A=t,e.HEAP8=S=new Int8Array(t),e.HEAP16=new Int16Array(t),e.HEAP32=E=new Int32Array(t),e.HEAPU8=T=new Uint8Array(t),e.HEAPU16=new Uint16Array(t),e.HEAPU32=M=new Uint32Array(t),e.HEAPF32=new Float32Array(t),e.HEAPF64=new Float64Array(t)}var U,F=[],I=[],W=[],H=[],L=0;function z(){var t=e.preRun.shift();F.unshift(t)}var Y,B=0,G=null,N=null;function V(t){throw e.onAbort&&e.onAbort(t),w(t="Aborted("+t+")"),C=!0,t=new WebAssembly.RuntimeError(t+". Build with -sASSERTIONS for more info."),a(t),t}function $(){return Y.startsWith("data:application/octet-stream;base64,")}if(Y="ort-wasm.wasm",!$()){var q=Y;Y=e.locateFile?e.locateFile(q,m):m+q}function X(){var t=Y;try{if(t==Y&&g)return new Uint8Array(g);if(u)return u(t);throw"both async and sync fetching of the wasm failed"}catch(t){V(t)}}function J(t){this.name="ExitStatus",this.message="Program terminated with exit("+t+")",this.status=t}function Z(t){for(;0<t.length;)t.shift()(e)}var Q=[],K=0,tt=0;function et(t){this.Db=t,this.zb=t-24,this.Ub=function(t){M[this.zb+4>>2>>>0]=t},this.Eb=function(){return M[this.zb+4>>2>>>0]},this.Sb=function(t){M[this.zb+8>>2>>>0]=t},this.Wb=function(){return M[this.zb+8>>2>>>0]},this.Tb=function(){E[this.zb>>2>>>0]=0},this.Ib=function(t){S[this.zb+12>>0>>>0]=t?1:0},this.Pb=function(){return 0!=S[this.zb+12>>0>>>0]},this.Jb=function(t){S[this.zb+13>>0>>>0]=t?1:0},this.Lb=function(){return 0!=S[this.zb+13>>0>>>0]},this.Rb=function(t,e){this.Fb(0),this.Ub(t),this.Sb(e),this.Tb(),this.Ib(!1),this.Jb(!1)},this.Nb=function(){E[this.zb>>2>>>0]+=1},this.Xb=function(){var t=E[this.zb>>2>>>0];return E[this.zb>>2>>>0]=t-1,1===t},this.Fb=function(t){M[this.zb+16>>2>>>0]=t},this.Ob=function(){return M[this.zb+16>>2>>>0]},this.Qb=function(){if(Mt(this.Eb()))return M[this.Db>>2>>>0];var t=this.Ob();return 0!==t?t:this.Db}}function nt(t){return vt(new et(t).zb)}var rt=[];function at(t){var e=rt[t];return e||(t>=rt.length&&(rt.length=t+1),rt[t]=e=U.get(t)),e}function it(t){var e=D(t)+1,n=gt(e);return n&&k(t,S,n,e),n}var ot={};function ut(){if(!ct){var t,e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:p||"./this.program"};for(t in ot)void 0===ot[t]?delete e[t]:e[t]=ot[t];var n=[];for(t in e)n.push(t+"="+e[t]);ct=n}return ct}var ct,st=[null,[],[]];function lt(t,e){var n=st[t];0===e||10===e?((1===t?v:w)(R(n,0)),n.length=0):n.push(e)}var ft=0;function pt(t){return 0==t%4&&(0!=t%100||0==t%400)}var ht=[31,29,31,30,31,30,31,31,30,31,30,31],dt=[31,28,31,30,31,30,31,31,30,31,30,31];function yt(t,e,n,r){function a(t,e,n){for(t="number"==typeof t?t.toString():t||"";t.length<e;)t=n[0]+t;return t}function i(t,e){return a(t,e,"0")}function o(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function u(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function c(t){var e=t.Bb;for(t=new Date(new Date(t.Cb+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(pt(t.getFullYear())?ht:dt)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=u(new Date(t.getFullYear(),0,4)),n=u(n),0>=o(e,t)?0>=o(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var s=E[r+40>>2>>>0];for(var l in r={$b:E[r>>2>>>0],Zb:E[r+4>>2>>>0],Gb:E[r+8>>2>>>0],Kb:E[r+12>>2>>>0],Hb:E[r+16>>2>>>0],Cb:E[r+20>>2>>>0],Ab:E[r+24>>2>>>0],Bb:E[r+28>>2>>>0],bc:E[r+32>>2>>>0],Yb:E[r+36>>2>>>0],ac:s?j(s):""},n=j(n),s={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(l,"g"),s[l]);var f="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),p="January February March April May June July August September October November December".split(" ");for(l in s={"%a":function(t){return f[t.Ab].substring(0,3)},"%A":function(t){return f[t.Ab]},"%b":function(t){return p[t.Hb].substring(0,3)},"%B":function(t){return p[t.Hb]},"%C":function(t){return i((t.Cb+1900)/100|0,2)},"%d":function(t){return i(t.Kb,2)},"%e":function(t){return a(t.Kb,2," ")},"%g":function(t){return c(t).toString().substring(2)},"%G":function(t){return c(t)},"%H":function(t){return i(t.Gb,2)},"%I":function(t){return 0==(t=t.Gb)?t=12:12<t&&(t-=12),i(t,2)},"%j":function(t){for(var e=0,n=0;n<=t.Hb-1;e+=(pt(t.Cb+1900)?ht:dt)[n++]);return i(t.Kb+e,3)},"%m":function(t){return i(t.Hb+1,2)},"%M":function(t){return i(t.Zb,2)},"%n":function(){return"\\n"},"%p":function(t){return 0<=t.Gb&&12>t.Gb?"AM":"PM"},"%S":function(t){return i(t.$b,2)},"%t":function(){return"\\t"},"%u":function(t){return t.Ab||7},"%U":function(t){return i(Math.floor((t.Bb+7-t.Ab)/7),2)},"%V":function(t){var e=Math.floor((t.Bb+7-(t.Ab+6)%7)/7);if(2>=(t.Ab+371-t.Bb-2)%7&&e++,e)53==e&&(4==(n=(t.Ab+371-t.Bb)%7)||3==n&&pt(t.Cb)||(e=1));else{e=52;var n=(t.Ab+7-t.Bb-1)%7;(4==n||5==n&&pt(t.Cb%400-1))&&e++}return i(e,2)},"%w":function(t){return t.Ab},"%W":function(t){return i(Math.floor((t.Bb+7-(t.Ab+6)%7)/7),2)},"%y":function(t){return(t.Cb+1900).toString().substring(2)},"%Y":function(t){return t.Cb+1900},"%z":function(t){var e=0<=(t=t.Yb);return t=Math.abs(t)/60,(e?"+":"-")+String("0000"+(t/60*100+t%60)).slice(-4)},"%Z":function(t){return t.ac},"%%":function(){return"%"}},n=n.replace(/%%/g,"\\0\\0"),s)n.includes(l)&&(n=n.replace(new RegExp(l,"g"),s[l](r)));return l=function(t){var e=Array(D(t)+1);return k(t,e,0,e.length),e}(n=n.replace(/\\0\\0/g,"%")),l.length>e?0:(S.set(l,t>>>0),l.length-1)}var bt={a:function(t){return gt(t+24)+24},m:function(t){return(t=new et(t)).Pb()||(t.Ib(!0),K--),t.Jb(!1),Q.push(t),t.Nb(),t.Qb()},ia:function(t){throw w("Unexpected exception thrown, this is not properly supported - aborting"),C=!0,t},w:function(){Ot(0);var t=Q.pop();if(t.Xb()&&!t.Lb()){var e=t.Wb();e&&at(e)(t.Db),nt(t.Db)}tt=0},d:function(){var t=tt;if(!t)return ft=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return ft=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return ft=i,t}return ft=n,t},k:function(){var t=tt;if(!t)return ft=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return ft=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return ft=i,t}return ft=n,t},g:function(){var t=tt;if(!t)return ft=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return ft=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return ft=i,t}return ft=n,t},s:nt,L:function(){var t=Q.pop();t||V("no exception to throw");var e=t.Db;throw t.Lb()||(Q.push(t),t.Jb(!0),t.Ib(!1),K++),tt=e,e},b:function(t,e,n){throw new et(t).Rb(e,n),tt=t,K++,t},la:function(){return K},i:function(t){throw tt||(tt=t),t},H:function(){return 0},Ba:function(){},pa:function(){},ra:function(){},ka:function(){return 0},za:function(){},ua:function(){},ya:function(){},R:function(){},qa:function(){},na:function(){},Aa:function(){},oa:function(){},Ha:function(){},Ja:function(){V("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},Ia:function(){V("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},S:function(){return Date.now()},Ca:function(){return!0},Da:function(t,e){t=new Date(1e3*(M[t>>>2]+4294967296*E[t+4>>>2])),E[e>>2>>>0]=t.getUTCSeconds(),E[e+4>>2>>>0]=t.getUTCMinutes(),E[e+8>>2>>>0]=t.getUTCHours(),E[e+12>>2>>>0]=t.getUTCDate(),E[e+16>>2>>>0]=t.getUTCMonth(),E[e+20>>2>>>0]=t.getUTCFullYear()-1900,E[e+24>>2>>>0]=t.getUTCDay(),E[e+28>>2>>>0]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Ea:function(t,e){t=new Date(1e3*(M[t>>>2]+4294967296*E[t+4>>>2])),E[e>>2>>>0]=t.getSeconds(),E[e+4>>2>>>0]=t.getMinutes(),E[e+8>>2>>>0]=t.getHours(),E[e+12>>2>>>0]=t.getDate(),E[e+16>>2>>>0]=t.getMonth(),E[e+20>>2>>>0]=t.getFullYear()-1900,E[e+24>>2>>>0]=t.getDay();var n=new Date(t.getFullYear(),0,1);E[e+28>>2>>>0]=(t.getTime()-n.getTime())/864e5|0,E[e+36>>2>>>0]=-60*t.getTimezoneOffset();var r=new Date(t.getFullYear(),6,1).getTimezoneOffset();n=n.getTimezoneOffset(),E[e+32>>2>>>0]=0|(r!=n&&t.getTimezoneOffset()==Math.min(n,r))},Fa:function(t){var e=new Date(E[t+20>>2>>>0]+1900,E[t+16>>2>>>0],E[t+12>>2>>>0],E[t+8>>2>>>0],E[t+4>>2>>>0],E[t>>2>>>0],0),n=E[t+32>>2>>>0],r=e.getTimezoneOffset(),a=new Date(e.getFullYear(),0,1),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),o=a.getTimezoneOffset(),u=Math.min(o,i);return 0>n?E[t+32>>2>>>0]=Number(i!=o&&u==r):0<n!=(u==r)&&(i=Math.max(o,i),e.setTime(e.getTime()+6e4*((0<n?u:i)-r))),E[t+24>>2>>>0]=e.getDay(),E[t+28>>2>>>0]=(e.getTime()-a.getTime())/864e5|0,E[t>>2>>>0]=e.getSeconds(),E[t+4>>2>>>0]=e.getMinutes(),E[t+8>>2>>>0]=e.getHours(),E[t+12>>2>>>0]=e.getDate(),E[t+16>>2>>>0]=e.getMonth(),e.getTime()/1e3|0},sa:function(){return-52},ta:function(){},Ga:function t(e,n,r){t.Vb||(t.Vb=!0,function(t,e,n){function r(t){return(t=t.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?t[1]:"GMT"}var a=(new Date).getFullYear(),i=new Date(a,0,1),o=new Date(a,6,1);a=i.getTimezoneOffset();var u=o.getTimezoneOffset();E[t>>2>>>0]=60*Math.max(a,u),E[e>>2>>>0]=Number(a!=u),t=r(i),e=r(o),t=it(t),e=it(e),u<a?(M[n>>2>>>0]=t,M[n+4>>2>>>0]=e):(M[n>>2>>>0]=e,M[n+4>>2>>>0]=t)}(e,n,r))},B:function(){V("")},ma:function(){return 4294901760},I:b?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:()=>performance.now(),xa:function(t,e,n){T.copyWithin(t>>>0,e>>>0,e+n>>>0)},G:function(t){var e=T.length;if(4294901760<(t>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=e*(1+.2/n);r=Math.min(r,t+100663296);var a=Math;r=Math.max(t,r),a=a.min.call(a,4294901760,r+(65536-r%65536)%65536);t:{try{O.grow(a-A.byteLength+65535>>>16),P();var i=1;break t}catch(t){}i=void 0}if(i)return!0}return!1},va:function(t,e){var n=0;return ut().forEach((function(r,a){var i=e+n;for(a=M[t+4*a>>2>>>0]=i,i=0;i<r.length;++i)S[a++>>0>>>0]=r.charCodeAt(i);S[a>>0>>>0]=0,n+=r.length+1})),0},wa:function(t,e){var n=ut();M[t>>2>>>0]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),M[e>>2>>>0]=r,0},ba:function(t){_||0<L||(_t(),Z(W),wt(0),st[1].length&&lt(1,10),st[2].length&&lt(2,10)),_||0<L||(e.onExit&&e.onExit(t),C=!0),h(t,new J(t))},E:function(){return 52},Q:function(){return 52},ca:function(){return 70},P:function(t,e,n,r){for(var a=0,i=0;i<n;i++){var o=M[e>>2>>>0],u=M[e+4>>2>>>0];e+=8;for(var c=0;c<u;c++)lt(t,T[o+c>>>0]);a+=u}return M[r>>2>>>0]=a,0},c:function(){return ft},ja:function t(e,r){t.Mb||(t.Mb=function(){if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(b)try{var e=n(Object(function(){var t=new Error("Cannot find module \'crypto\'");throw t.code="MODULE_NOT_FOUND",t}()));return()=>e.randomBytes(1)[0]}catch(t){}return()=>V("randomDevice")}());for(var a=0;a<r;a++)S[e+a>>0>>>0]=t.Mb();return 0},ea:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},fa:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},J:function(t){var e=At();try{return at(t)()}catch(t){if(St(e),t!==t+0)throw t;Ot(1,0)}},e:function(t,e){var n=At();try{return at(t)(e)}catch(t){if(St(n),t!==t+0)throw t;Ot(1,0)}},N:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},O:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},j:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},o:function(t,e,n,r){var a=At();try{return at(t)(e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},p:function(t,e,n,r,a){var i=At();try{return at(t)(e,n,r,a)}catch(t){if(St(i),t!==t+0)throw t;Ot(1,0)}},M:function(t,e,n,r,a,i){var o=At();try{return at(t)(e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},r:function(t,e,n,r,a,i){var o=At();try{return at(t)(e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},v:function(t,e,n,r,a,i,o){var u=At();try{return at(t)(e,n,r,a,i,o)}catch(t){if(St(u),t!==t+0)throw t;Ot(1,0)}},K:function(t,e,n,r,a,i,o,u){var c=At();try{return at(t)(e,n,r,a,i,o,u)}catch(t){if(St(c),t!==t+0)throw t;Ot(1,0)}},D:function(t,e,n,r,a,i,o,u,c,s,l,f){var p=At();try{return at(t)(e,n,r,a,i,o,u,c,s,l,f)}catch(t){if(St(p),t!==t+0)throw t;Ot(1,0)}},X:function(t,e,n,r,a,i,o,u){var c=At();try{return Ft(t,e,n,r,a,i,o,u)}catch(t){if(St(c),t!==t+0)throw t;Ot(1,0)}},V:function(t,e,n,r,a,i,o){var u=At();try{return xt(t,e,n,r,a,i,o)}catch(t){if(St(u),t!==t+0)throw t;Ot(1,0)}},U:function(t,e,n,r,a){var i=At();try{return It(t,e,n,r,a)}catch(t){if(St(i),t!==t+0)throw t;Ot(1,0)}},Z:function(t,e,n,r){var a=At();try{return Pt(t,e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},W:function(t){var e=At();try{return Ct(t)}catch(t){if(St(e),t!==t+0)throw t;Ot(1,0)}},Y:function(t,e){var n=At();try{return Ut(t,e)}catch(t){if(St(n),t!==t+0)throw t;Ot(1,0)}},T:function(t,e,n){var r=At();try{return Rt(t,e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},f:function(t){var e=At();try{at(t)()}catch(t){if(St(e),t!==t+0)throw t;Ot(1,0)}},q:function(t,e){var n=At();try{at(t)(e)}catch(t){if(St(n),t!==t+0)throw t;Ot(1,0)}},h:function(t,e,n){var r=At();try{at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},da:function(t,e,n,r){var a=At();try{at(t)(e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},l:function(t,e,n,r){var a=At();try{at(t)(e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},t:function(t,e,n,r,a){var i=At();try{at(t)(e,n,r,a)}catch(t){if(St(i),t!==t+0)throw t;Ot(1,0)}},u:function(t,e,n,r,a,i){var o=At();try{at(t)(e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},x:function(t,e,n,r,a,i,o){var u=At();try{at(t)(e,n,r,a,i,o)}catch(t){if(St(u),t!==t+0)throw t;Ot(1,0)}},z:function(t,e,n,r,a,i,o,u){var c=At();try{at(t)(e,n,r,a,i,o,u)}catch(t){if(St(c),t!==t+0)throw t;Ot(1,0)}},ga:function(t,e,n,r,a,i,o,u,c){var s=At();try{at(t)(e,n,r,a,i,o,u,c)}catch(t){if(St(s),t!==t+0)throw t;Ot(1,0)}},A:function(t,e,n,r,a,i,o,u,c,s,l){var f=At();try{at(t)(e,n,r,a,i,o,u,c,s,l)}catch(t){if(St(f),t!==t+0)throw t;Ot(1,0)}},C:function(t,e,n,r,a,i,o,u,c,s,l,f,p,h,d,y){var b=At();try{at(t)(e,n,r,a,i,o,u,c,s,l,f,p,h,d,y)}catch(t){if(St(b),t!==t+0)throw t;Ot(1,0)}},aa:function(t,e,n,r,a,i,o,u){var c=At();try{jt(t,e,n,r,a,i,o,u)}catch(t){if(St(c),t!==t+0)throw t;Ot(1,0)}},_:function(t,e,n,r,a,i,o,u,c,s,l,f){var p=At();try{Dt(t,e,n,r,a,i,o,u,c,s,l,f)}catch(t){if(St(p),t!==t+0)throw t;Ot(1,0)}},$:function(t,e,n,r,a,i){var o=At();try{kt(t,e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},n:function(t){return t},F:function(t){ft=t},ha:yt,y:function(t,e,n,r){return yt(t,e,n,r)}};!function(){function t(t){e.asm=t.exports,O=e.asm.Ka,P(),U=e.asm.ib,I.unshift(e.asm.La),B--,e.monitorRunDependencies&&e.monitorRunDependencies(B),0==B&&(null!==G&&(clearInterval(G),G=null),N&&(t=N,N=null,t()))}function n(e){t(e.instance)}function r(t){return function(){if(!g&&(d||y)){if("function"==typeof fetch&&!Y.startsWith("file://"))return fetch(Y,{credentials:"same-origin"}).then((function(t){if(!t.ok)throw"failed to load wasm binary file at \'"+Y+"\'";return t.arrayBuffer()})).catch((function(){return X()}));if(o)return new Promise((function(t,e){o(Y,(function(e){t(new Uint8Array(e))}),e)}))}return Promise.resolve().then((function(){return X()}))}().then((function(t){return WebAssembly.instantiate(t,i)})).then((function(t){return t})).then(t,(function(t){w("failed to asynchronously prepare wasm: "+t),V(t)}))}var i={a:bt};if(B++,e.monitorRunDependencies&&e.monitorRunDependencies(B),e.instantiateWasm)try{return e.instantiateWasm(i,t)}catch(t){return w("Module.instantiateWasm callback failed with error: "+t),!1}(g||"function"!=typeof WebAssembly.instantiateStreaming||$()||Y.startsWith("file://")||b||"function"!=typeof fetch?r(n):fetch(Y,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,i).then(n,(function(t){return w("wasm streaming compile failed: "+t),w("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(a)}(),e.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.La).apply(null,arguments)},e._OrtInit=function(){return(e._OrtInit=e.asm.Ma).apply(null,arguments)},e._OrtCreateSessionOptions=function(){return(e._OrtCreateSessionOptions=e.asm.Na).apply(null,arguments)},e._OrtAppendExecutionProvider=function(){return(e._OrtAppendExecutionProvider=e.asm.Oa).apply(null,arguments)},e._OrtAddSessionConfigEntry=function(){return(e._OrtAddSessionConfigEntry=e.asm.Pa).apply(null,arguments)},e._OrtReleaseSessionOptions=function(){return(e._OrtReleaseSessionOptions=e.asm.Qa).apply(null,arguments)},e._OrtCreateSession=function(){return(e._OrtCreateSession=e.asm.Ra).apply(null,arguments)},e._OrtReleaseSession=function(){return(e._OrtReleaseSession=e.asm.Sa).apply(null,arguments)},e._OrtGetInputCount=function(){return(e._OrtGetInputCount=e.asm.Ta).apply(null,arguments)},e._OrtGetOutputCount=function(){return(e._OrtGetOutputCount=e.asm.Ua).apply(null,arguments)},e._OrtGetInputName=function(){return(e._OrtGetInputName=e.asm.Va).apply(null,arguments)},e._OrtGetOutputName=function(){return(e._OrtGetOutputName=e.asm.Wa).apply(null,arguments)},e._OrtFree=function(){return(e._OrtFree=e.asm.Xa).apply(null,arguments)},e._OrtCreateTensor=function(){return(e._OrtCreateTensor=e.asm.Ya).apply(null,arguments)},e._OrtGetTensorData=function(){return(e._OrtGetTensorData=e.asm.Za).apply(null,arguments)},e._OrtReleaseTensor=function(){return(e._OrtReleaseTensor=e.asm._a).apply(null,arguments)},e._OrtCreateRunOptions=function(){return(e._OrtCreateRunOptions=e.asm.$a).apply(null,arguments)},e._OrtAddRunConfigEntry=function(){return(e._OrtAddRunConfigEntry=e.asm.ab).apply(null,arguments)},e._OrtReleaseRunOptions=function(){return(e._OrtReleaseRunOptions=e.asm.bb).apply(null,arguments)},e._OrtRun=function(){return(e._OrtRun=e.asm.cb).apply(null,arguments)},e._OrtEndProfiling=function(){return(e._OrtEndProfiling=e.asm.db).apply(null,arguments)};var mt,gt=e._malloc=function(){return(gt=e._malloc=e.asm.eb).apply(null,arguments)},vt=e._free=function(){return(vt=e._free=e.asm.fb).apply(null,arguments)},wt=e._fflush=function(){return(wt=e._fflush=e.asm.gb).apply(null,arguments)},_t=e.___funcs_on_exit=function(){return(_t=e.___funcs_on_exit=e.asm.hb).apply(null,arguments)},Ot=e._setThrew=function(){return(Ot=e._setThrew=e.asm.jb).apply(null,arguments)},At=e.stackSave=function(){return(At=e.stackSave=e.asm.kb).apply(null,arguments)},St=e.stackRestore=function(){return(St=e.stackRestore=e.asm.lb).apply(null,arguments)},Tt=e.stackAlloc=function(){return(Tt=e.stackAlloc=e.asm.mb).apply(null,arguments)},Et=e.___cxa_can_catch=function(){return(Et=e.___cxa_can_catch=e.asm.nb).apply(null,arguments)},Mt=e.___cxa_is_pointer_type=function(){return(Mt=e.___cxa_is_pointer_type=e.asm.ob).apply(null,arguments)},Ct=e.dynCall_j=function(){return(Ct=e.dynCall_j=e.asm.pb).apply(null,arguments)},xt=e.dynCall_iiiiij=function(){return(xt=e.dynCall_iiiiij=e.asm.qb).apply(null,arguments)},Rt=e.dynCall_jii=function(){return(Rt=e.dynCall_jii=e.asm.rb).apply(null,arguments)},jt=e.dynCall_viiiiij=function(){return(jt=e.dynCall_viiiiij=e.asm.sb).apply(null,arguments)},kt=e.dynCall_vjji=function(){return(kt=e.dynCall_vjji=e.asm.tb).apply(null,arguments)},Dt=e.dynCall_viiijjjii=function(){return(Dt=e.dynCall_viiijjjii=e.asm.ub).apply(null,arguments)},Pt=e.dynCall_iij=function(){return(Pt=e.dynCall_iij=e.asm.vb).apply(null,arguments)},Ut=e.dynCall_ji=function(){return(Ut=e.dynCall_ji=e.asm.wb).apply(null,arguments)},Ft=e.dynCall_iiiiiij=function(){return(Ft=e.dynCall_iiiiiij=e.asm.xb).apply(null,arguments)},It=e.dynCall_iiij=function(){return(It=e.dynCall_iiij=e.asm.yb).apply(null,arguments)};function Wt(){function t(){if(!mt&&(mt=!0,e.calledRun=!0,!C)){if(Z(I),r(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),e.postRun)for("function"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var t=e.postRun.shift();H.unshift(t)}Z(H)}}if(!(0<B)){if(e.preRun)for("function"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)z();Z(F),0<B||(e.setStatus?(e.setStatus("Running..."),setTimeout((function(){setTimeout((function(){e.setStatus("")}),1),t()}),1)):t())}}if(e.UTF8ToString=j,e.stringToUTF8=function(t,e,n){return k(t,T,e,n)},e.lengthBytesUTF8=D,e.stackSave=At,e.stackRestore=St,e.stackAlloc=Tt,N=function t(){mt||Wt(),mt||(N=t)},e.preInit)for("function"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();return Wt(),t.ready});t.exports=r},967:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.iterateExtraOptions=void 0,e.iterateExtraOptions=(t,n,r,a)=>{if("object"==typeof t&&null!==t){if(r.has(t))throw new Error("Circular reference in options");r.add(t)}Object.entries(t).forEach((([t,i])=>{const o=n?n+t:t;if("object"==typeof i)(0,e.iterateExtraOptions)(i,o+".",r,a);else if("string"==typeof i||"number"==typeof i)a(o,i.toString());else{if("boolean"!=typeof i)throw new Error("Can\'t handle extra config type: "+typeof i);a(o,i?"1":"0")}}))}},586:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.setRunOptions=void 0;const r=n(967),a=n(983),i=n(361);e.setRunOptions=t=>{const e=(0,i.getInstance)();let n=0;const o=[],u=t||{};try{if(void 0===(null==t?void 0:t.logSeverityLevel))u.logSeverityLevel=2;else if("number"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(void 0===(null==t?void 0:t.logVerbosityLevel))u.logVerbosityLevel=0;else if("number"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);void 0===(null==t?void 0:t.terminate)&&(u.terminate=!1);let i=0;if(void 0!==(null==t?void 0:t.tag)&&(i=(0,a.allocWasmString)(t.tag,o)),n=e._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,i),0===n)throw new Error("Can\'t create run options");return void 0!==(null==t?void 0:t.extra)&&(0,r.iterateExtraOptions)(t.extra,"",new WeakSet,((t,r)=>{const i=(0,a.allocWasmString)(t,o),u=(0,a.allocWasmString)(r,o);if(0!==e._OrtAddRunConfigEntry(n,i,u))throw new Error(`Can\'t set a run config entry: ${t} - ${r}`)})),[n,o]}catch(t){throw 0!==n&&e._OrtReleaseRunOptions(n),o.forEach(e._free),t}}},919:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.setSessionOptions=void 0;const r=n(967),a=n(983),i=n(361);e.setSessionOptions=t=>{const e=(0,i.getInstance)();let n=0;const o=[],u=t||{};(t=>{t.extra||(t.extra={}),t.extra.session||(t.extra.session={});const e=t.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1")})(u);try{void 0===(null==t?void 0:t.graphOptimizationLevel)&&(u.graphOptimizationLevel="all");const c=(t=>{switch(t){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${t}`)}})(u.graphOptimizationLevel);void 0===(null==t?void 0:t.enableCpuMemArena)&&(u.enableCpuMemArena=!0),void 0===(null==t?void 0:t.enableMemPattern)&&(u.enableMemPattern=!0),void 0===(null==t?void 0:t.executionMode)&&(u.executionMode="sequential");const s=(t=>{switch(t){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${t}`)}})(u.executionMode);let l=0;if(void 0!==(null==t?void 0:t.logId)&&(l=(0,a.allocWasmString)(t.logId,o)),void 0===(null==t?void 0:t.logSeverityLevel))u.logSeverityLevel=2;else if("number"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(void 0===(null==t?void 0:t.logVerbosityLevel))u.logVerbosityLevel=0;else if("number"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);if(void 0===(null==t?void 0:t.enableProfiling)&&(u.enableProfiling=!1),n=e._OrtCreateSessionOptions(c,!!u.enableCpuMemArena,!!u.enableMemPattern,s,!!u.enableProfiling,0,l,u.logSeverityLevel,u.logVerbosityLevel),0===n)throw new Error("Can\'t create session options");return(null==t?void 0:t.executionProviders)&&((t,e,n)=>{for(const r of e){let e="string"==typeof r?r:r.name;switch(e){case"xnnpack":e="XNNPACK";break;case"wasm":case"cpu":continue;default:throw new Error(`not supported EP: ${e}`)}const o=(0,a.allocWasmString)(e,n);if(0!==(0,i.getInstance)()._OrtAppendExecutionProvider(t,o))throw new Error(`Can\'t append execution provider: ${e}`)}})(n,t.executionProviders,o),void 0!==(null==t?void 0:t.extra)&&(0,r.iterateExtraOptions)(t.extra,"",new WeakSet,((t,r)=>{const i=(0,a.allocWasmString)(t,o),u=(0,a.allocWasmString)(r,o);if(0!==e._OrtAddSessionConfigEntry(n,i,u))throw new Error(`Can\'t set a session config entry: ${t} - ${r}`)})),[n,o]}catch(t){throw 0!==n&&e._OrtReleaseSessionOptions(n),o.forEach(e._free),t}}},983:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.allocWasmString=void 0;const r=n(361);e.allocWasmString=(t,e)=>{const n=(0,r.getInstance)(),a=n.lengthBytesUTF8(t)+1,i=n._malloc(a);return n.stringToUTF8(t,i,a),e.push(i),i}},349:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.extractTransferableBuffers=e.endProfiling=e.run=e.releaseSession=e.createSession=e.createSessionFinalize=e.createSessionAllocate=e.initOrt=void 0;const r=n(586),a=n(919),i=n(983),o=n(361);e.initOrt=(t,e)=>{const n=(0,o.getInstance)()._OrtInit(t,e);if(0!==n)throw new Error(`Can\'t initialize onnxruntime. error code = ${n}`)};const u=new Map;e.createSessionAllocate=t=>{const e=(0,o.getInstance)(),n=e._malloc(t.byteLength);return e.HEAPU8.set(t,n),[n,t.byteLength]},e.createSessionFinalize=(t,e)=>{const n=(0,o.getInstance)();let r=0,i=0,c=[];try{if([i,c]=(0,a.setSessionOptions)(e),r=n._OrtCreateSession(t[0],t[1],i),0===r)throw new Error("Can\'t create a session")}finally{n._free(t[0]),n._OrtReleaseSessionOptions(i),c.forEach(n._free)}const s=n._OrtGetInputCount(r),l=n._OrtGetOutputCount(r),f=[],p=[],h=[],d=[];for(let t=0;t<s;t++){const e=n._OrtGetInputName(r,t);if(0===e)throw new Error("Can\'t get an input name");p.push(e),f.push(n.UTF8ToString(e))}for(let t=0;t<l;t++){const e=n._OrtGetOutputName(r,t);if(0===e)throw new Error("Can\'t get an output name");d.push(e),h.push(n.UTF8ToString(e))}return u.set(r,[r,p,d]),[r,f,h]},e.createSession=(t,n)=>{const r=(0,e.createSessionAllocate)(t);return(0,e.createSessionFinalize)(r,n)},e.releaseSession=t=>{const e=(0,o.getInstance)(),n=u.get(t);if(!n)throw new Error("invalid session id");const r=n[0],a=n[1],i=n[2];a.forEach(e._OrtFree),i.forEach(e._OrtFree),e._OrtReleaseSession(r),u.delete(t)};const c=t=>{switch(t){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${t}`)}},s=t=>{switch(t){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${t}`)}},l=t=>{switch(t){case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${t}`)}};e.run=(t,e,n,a,f)=>{const p=(0,o.getInstance)(),h=u.get(t);if(!h)throw new Error("invalid session id");const d=h[0],y=h[1],b=h[2],m=e.length,g=a.length;let v=0,w=[];const _=[],O=[];try{[v,w]=(0,r.setRunOptions)(f);for(let t=0;t<m;t++){const e=n[t][0],r=n[t][1],a=n[t][2];let o,u;if(Array.isArray(a)){u=4*a.length,o=p._malloc(u),O.push(o);let t=o/4;for(let e=0;e<a.length;e++){if("string"!=typeof a[e])throw new TypeError(`tensor data at index ${e} is not a string`);p.HEAPU32[t++]=(0,i.allocWasmString)(a[e],O)}}else u=a.byteLength,o=p._malloc(u),O.push(o),p.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,u),o);const s=p.stackSave(),l=p.stackAlloc(4*r.length);try{let t=l/4;r.forEach((e=>p.HEAP32[t++]=e));const n=p._OrtCreateTensor(c(e),o,u,l,r.length);if(0===n)throw new Error("Can\'t create a tensor");_.push(n)}finally{p.stackRestore(s)}}const t=p.stackSave(),o=p.stackAlloc(4*m),u=p.stackAlloc(4*m),h=p.stackAlloc(4*g),A=p.stackAlloc(4*g);try{let n=o/4,r=u/4,i=h/4,c=A/4;for(let t=0;t<m;t++)p.HEAPU32[n++]=_[t],p.HEAPU32[r++]=y[e[t]];for(let t=0;t<g;t++)p.HEAPU32[i++]=0,p.HEAPU32[c++]=b[a[t]];let f=p._OrtRun(d,u,o,m,A,g,h,v);const w=[];if(0===f)for(let t=0;t<g;t++){const e=p.HEAPU32[h/4+t],n=p.stackSave(),r=p.stackAlloc(16);let a,i=0;try{if(f=p._OrtGetTensorData(e,r,r+4,r+8,r+12),0!==f)throw new Error(`Can\'t access output tensor data. error code = ${f}`);let t=r/4;const o=p.HEAPU32[t++];i=p.HEAPU32[t++];const u=p.HEAPU32[t++],c=p.HEAPU32[t++],h=[];for(let t=0;t<c;t++)h.push(p.HEAPU32[u/4+t]);p._OrtFree(u);const d=0===h.length?1:h.reduce(((t,e)=>t*e));if(a=s(o),"string"===a){const t=[];let e=i/4;for(let n=0;n<d;n++){const r=p.HEAPU32[e++],a=n===d-1?void 0:p.HEAPU32[e]-r;t.push(p.UTF8ToString(r,a))}w.push([a,h,t])}else{const t=new(l(a))(d);new Uint8Array(t.buffer,t.byteOffset,t.byteLength).set(p.HEAPU8.subarray(i,i+t.byteLength)),w.push([a,h,t])}}finally{p.stackRestore(n),"string"===a&&i&&p._free(i),p._OrtReleaseTensor(e)}}if(0===f)return w;throw new Error(`failed to call OrtRun(). error code = ${f}.`)}finally{p.stackRestore(t)}}finally{_.forEach(p._OrtReleaseTensor),O.forEach(p._free),p._OrtReleaseRunOptions(v),w.forEach(p._free)}},e.endProfiling=t=>{const e=(0,o.getInstance)(),n=u.get(t);if(!n)throw new Error("invalid session id");const r=n[0],a=e._OrtEndProfiling(r);if(0===a)throw new Error("Can\'t get an profile file name");e._OrtFree(a)},e.extractTransferableBuffers=t=>{const e=[];for(const n of t){const t=n[2];!Array.isArray(t)&&t.buffer&&e.push(t.buffer)}return e}},361:function(t,e,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(e,n);a&&!("get"in a?!e.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,r,a)}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),a=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),i=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)"default"!==n&&Object.prototype.hasOwnProperty.call(t,n)&&r(e,t,n);return a(e,t),e},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.dispose=e.getInstance=e.initializeWebAssembly=void 0;const u=i(n(449)),c=o(n(932)),s=n(474);let l,f=!1,p=!1,h=!1;const d=(t,e)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-threaded.wasm":t?"ort-wasm-simd.wasm":"ort-wasm.wasm";e.initializeWebAssembly=async t=>{if(f)return Promise.resolve();if(p)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(h)throw new Error("previous call to \'initializeWebAssembly()\' failed.");p=!0;const e=t.initTimeout,r=t.numThreads,a=t.simd,i=r>1&&(()=>{try{return"undefined"!=typeof SharedArrayBuffer&&("undefined"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(t){return!1}})(),o=a&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(t){return!1}})(),y="string"==typeof t.wasmPaths?t.wasmPaths:void 0,b=d(!1,i),m=d(o,i),g="object"==typeof t.wasmPaths?t.wasmPaths[m]:void 0;let v=!1;const w=[];if(e>0&&w.push(new Promise((t=>{setTimeout((()=>{v=!0,t()}),e)}))),w.push(new Promise(((t,e)=>{const r=i?s:c.default,a={locateFile:(t,e)=>i&&t.endsWith(".worker.js")&&"undefined"!=typeof Blob?URL.createObjectURL(new Blob([n(154)],{type:"text/javascript"})):t===b?null!=g?g:(null!=y?y:e)+m:e+t};if(i)if("undefined"==typeof Blob)a.mainScriptUrlOrBlob=u.join("/","ort-wasm-threaded.js");else{const t=`var ortWasmThreaded=(function(){var _scriptDir;return ${r.toString()}})();`;a.mainScriptUrlOrBlob=new Blob([t],{type:"text/javascript"})}r(a).then((e=>{p=!1,f=!0,l=e,t()}),(t=>{p=!1,h=!0,e(t)}))}))),await Promise.race(w),v)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},e.getInstance=()=>{if(f&&l)return l;throw new Error("WebAssembly is not initialized yet.")},e.dispose=()=>{var t;!f||p||h||(p=!0,null===(t=l.PThread)||void 0===t||t.terminateAllThreads(),l=void 0,p=!1,f=!1,h=!0)}},154:t=>{"use strict";t.exports=\'"use strict";var e={},t="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(t){var r=require("worker_threads"),a=r.parentPort;a.on("message",(e=>onmessage({data:e})));var o=require("fs");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:function(e){(0,eval)(o.readFileSync(e,"utf8"))},postMessage:function(e){a.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,n=[],i=function(){var e=Array.prototype.slice.call(arguments).join(" ");t?o.writeSync(2,e+"\\\\n"):console.error(e)};self.alert=function(){var t=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:t,threadId:e._pthread_self()})},e.instantiateWasm=(t,r)=>{var a=new WebAssembly.Instance(e.wasmModule,t);return r(a),e.wasmModule=null,a.exports},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=t=>{try{if("load"===t.data.cmd){if(e.wasmModule=t.data.wasmModule,e.wasmMemory=t.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,"string"==typeof t.data.urlOrBlob)importScripts(t.data.urlOrBlob);else{var r=URL.createObjectURL(t.data.urlOrBlob);importScripts(r),URL.revokeObjectURL(r)}ortWasmThreaded(e).then((function(t){e=t}))}else if("run"===t.data.cmd){e.__performance_now_clock_drift=performance.now()-t.data.time,e.__emscripten_thread_init(t.data.pthread_ptr,0,0,1),e.establishStackSpace(),e.PThread.receiveObjectTransfer(t.data),e.PThread.threadInitTLS(),s||(n.forEach((t=>{e.executeNotifiedProxyingQueue(t)})),n=[],s=!0);try{e.invokeEntryPoint(t.data.start_routine,t.data.arg)}catch(t){if("unwind"!=t){if(!(t instanceof e.ExitStatus))throw t;e.keepRuntimeAlive()||e.__emscripten_thread_exit(t.status)}}}else"cancel"===t.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):"setimmediate"===t.data.target||("processProxyingQueue"===t.data.cmd?s?e.executeNotifiedProxyingQueue(t.data.queue):n.push(t.data.queue):(i("worker.js received unknown command "+t.data.cmd),i(t.data)))}catch(t){throw i("worker.js onmessage() captured an uncaught exception: "+t),t&&t.stack&&i(t.stack),e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),t}};\\n\'},384:()=>{},993:()=>{},908:()=>{},953:()=>{},925:()=>{},449:()=>{}},e={};function n(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={exports:{}};return t[r].call(i.exports,i,i.exports,n),i.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{"use strict";const t=n(349),e=n(361);self.onmessage=n=>{switch(n.data.type){case"init-wasm":(0,e.initializeWebAssembly)(n.data.in).then((()=>postMessage({type:"init-wasm"})),(t=>postMessage({type:"init-wasm",err:t})));break;case"init-ort":try{const{numThreads:e,loggingLevel:r}=n.data.in;(0,t.initOrt)(e,r),postMessage({type:"init-ort"})}catch(t){postMessage({type:"init-ort",err:t})}break;case"create_allocate":try{const{model:e}=n.data.in,r=(0,t.createSessionAllocate)(e);postMessage({type:"create_allocate",out:r})}catch(t){postMessage({type:"create_allocate",err:t})}break;case"create_finalize":try{const{modeldata:e,options:r}=n.data.in,a=(0,t.createSessionFinalize)(e,r);postMessage({type:"create_finalize",out:a})}catch(t){postMessage({type:"create_finalize",err:t})}break;case"create":try{const{model:e,options:r}=n.data.in,a=(0,t.createSession)(e,r);postMessage({type:"create",out:a})}catch(t){postMessage({type:"create",err:t})}break;case"release":try{const e=n.data.in;(0,t.releaseSession)(e),postMessage({type:"release"})}catch(t){postMessage({type:"release",err:t})}break;case"run":try{const{sessionId:e,inputIndices:r,inputs:a,outputIndices:i,options:o}=n.data.in,u=(0,t.run)(e,r,a,i,o);postMessage({type:"run",out:u},(0,t.extractTransferableBuffers)(u))}catch(t){postMessage({type:"run",err:t})}break;case"end-profiling":try{const e=n.data.in;(0,t.endProfiling)(e),postMessage({type:"end-profiling"})}catch(t){postMessage({type:"end-profiling",err:t})}}}})()})();\n',"Worker",void 0,void 0)}},477:n=>{n.exports=function(e,i,o,l){var c=self||window;try{try{var a;try{a=new c.Blob([e])}catch{(a=new(c.BlobBuilder||c.WebKitBlobBuilder||c.MozBlobBuilder||c.MSBlobBuilder)).append(e),a=a.getBlob()}var h=c.URL||c.webkitURL,f=h.createObjectURL(a),p=new c[i](f,o);return h.revokeObjectURL(f),p}catch{return new c[i]("data:application/javascript,".concat(encodeURIComponent(e)),o)}}catch{if(!l)throw Error("Inline worker is not supported");return new c[i](l,o)}}},4154:n=>{n.exports=`"use strict";var e={},t="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(t){var r=require("worker_threads"),a=r.parentPort;a.on("message",(e=>onmessage({data:e})));var o=require("fs");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:function(e){(0,eval)(o.readFileSync(e,"utf8"))},postMessage:function(e){a.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,n=[],i=function(){var e=Array.prototype.slice.call(arguments).join(" ");t?o.writeSync(2,e+"\\n"):console.error(e)};self.alert=function(){var t=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:t,threadId:e._pthread_self()})},e.instantiateWasm=(t,r)=>{var a=new WebAssembly.Instance(e.wasmModule,t);return r(a),e.wasmModule=null,a.exports},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=t=>{try{if("load"===t.data.cmd){if(e.wasmModule=t.data.wasmModule,e.wasmMemory=t.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,"string"==typeof t.data.urlOrBlob)importScripts(t.data.urlOrBlob);else{var r=URL.createObjectURL(t.data.urlOrBlob);importScripts(r),URL.revokeObjectURL(r)}ortWasmThreaded(e).then((function(t){e=t}))}else if("run"===t.data.cmd){e.__performance_now_clock_drift=performance.now()-t.data.time,e.__emscripten_thread_init(t.data.pthread_ptr,0,0,1),e.establishStackSpace(),e.PThread.receiveObjectTransfer(t.data),e.PThread.threadInitTLS(),s||(n.forEach((t=>{e.executeNotifiedProxyingQueue(t)})),n=[],s=!0);try{e.invokeEntryPoint(t.data.start_routine,t.data.arg)}catch(t){if("unwind"!=t){if(!(t instanceof e.ExitStatus))throw t;e.keepRuntimeAlive()||e.__emscripten_thread_exit(t.status)}}}else"cancel"===t.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):"setimmediate"===t.data.target||("processProxyingQueue"===t.data.cmd?s?e.executeNotifiedProxyingQueue(t.data.queue):n.push(t.data.queue):(i("worker.js received unknown command "+t.data.cmd),i(t.data)))}catch(t){throw i("worker.js onmessage() captured an uncaught exception: "+t),t&&t.stack&&i(t.stack),e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),t}};
`},1670:n=>{n.exports=__WEBPACK_EXTERNAL_MODULE__1670__},7067:()=>{},1296:()=>{},1384:()=>{},3993:()=>{},908:()=>{},6953:()=>{},9925:()=>{},2806:()=>{},6449:()=>{},2850:()=>{},5381:()=>{},5686:(n,e,i)=>{i.r(e),i.d(e,{flatbuffers:()=>o});var o={};o.Offset,o.Table,o.SIZEOF_SHORT=2,o.SIZEOF_INT=4,o.FILE_IDENTIFIER_LENGTH=4,o.SIZE_PREFIX_LENGTH=4,o.Encoding={UTF8_BYTES:1,UTF16_STRING:2},o.int32=new Int32Array(2),o.float32=new Float32Array(o.int32.buffer),o.float64=new Float64Array(o.int32.buffer),o.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1,o.Long=function(l,c){this.low=0|l,this.high=0|c},o.Long.create=function(l,c){return l==0&&c==0?o.Long.ZERO:new o.Long(l,c)},o.Long.prototype.toFloat64=function(){return(this.low>>>0)+4294967296*this.high},o.Long.prototype.equals=function(l){return this.low==l.low&&this.high==l.high},o.Long.ZERO=new o.Long(0,0),o.Builder=function(l){if(l)c=l;else var c=1024;this.bb=o.ByteBuffer.allocate(c),this.space=c,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},o.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},o.Builder.prototype.forceDefaults=function(l){this.force_defaults=l},o.Builder.prototype.dataBuffer=function(){return this.bb},o.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())},o.Builder.prototype.prep=function(l,c){l>this.minalign&&(this.minalign=l);for(var a=1+~(this.bb.capacity()-this.space+c)&l-1;this.space<a+l+c;){var h=this.bb.capacity();this.bb=o.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-h}this.pad(a)},o.Builder.prototype.pad=function(l){for(var c=0;c<l;c++)this.bb.writeInt8(--this.space,0)},o.Builder.prototype.writeInt8=function(l){this.bb.writeInt8(this.space-=1,l)},o.Builder.prototype.writeInt16=function(l){this.bb.writeInt16(this.space-=2,l)},o.Builder.prototype.writeInt32=function(l){this.bb.writeInt32(this.space-=4,l)},o.Builder.prototype.writeInt64=function(l){this.bb.writeInt64(this.space-=8,l)},o.Builder.prototype.writeFloat32=function(l){this.bb.writeFloat32(this.space-=4,l)},o.Builder.prototype.writeFloat64=function(l){this.bb.writeFloat64(this.space-=8,l)},o.Builder.prototype.addInt8=function(l){this.prep(1,0),this.writeInt8(l)},o.Builder.prototype.addInt16=function(l){this.prep(2,0),this.writeInt16(l)},o.Builder.prototype.addInt32=function(l){this.prep(4,0),this.writeInt32(l)},o.Builder.prototype.addInt64=function(l){this.prep(8,0),this.writeInt64(l)},o.Builder.prototype.addFloat32=function(l){this.prep(4,0),this.writeFloat32(l)},o.Builder.prototype.addFloat64=function(l){this.prep(8,0),this.writeFloat64(l)},o.Builder.prototype.addFieldInt8=function(l,c,a){(this.force_defaults||c!=a)&&(this.addInt8(c),this.slot(l))},o.Builder.prototype.addFieldInt16=function(l,c,a){(this.force_defaults||c!=a)&&(this.addInt16(c),this.slot(l))},o.Builder.prototype.addFieldInt32=function(l,c,a){(this.force_defaults||c!=a)&&(this.addInt32(c),this.slot(l))},o.Builder.prototype.addFieldInt64=function(l,c,a){!this.force_defaults&&c.equals(a)||(this.addInt64(c),this.slot(l))},o.Builder.prototype.addFieldFloat32=function(l,c,a){(this.force_defaults||c!=a)&&(this.addFloat32(c),this.slot(l))},o.Builder.prototype.addFieldFloat64=function(l,c,a){(this.force_defaults||c!=a)&&(this.addFloat64(c),this.slot(l))},o.Builder.prototype.addFieldOffset=function(l,c,a){(this.force_defaults||c!=a)&&(this.addOffset(c),this.slot(l))},o.Builder.prototype.addFieldStruct=function(l,c,a){c!=a&&(this.nested(c),this.slot(l))},o.Builder.prototype.nested=function(l){if(l!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")},o.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")},o.Builder.prototype.slot=function(l){this.vtable[l]=this.offset()},o.Builder.prototype.offset=function(){return this.bb.capacity()-this.space},o.Builder.growByteBuffer=function(l){var c=l.capacity();if(3221225472&c)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var a=c<<1,h=o.ByteBuffer.allocate(a);return h.setPosition(a-c),h.bytes().set(l.bytes(),a-c),h},o.Builder.prototype.addOffset=function(l){this.prep(o.SIZEOF_INT,0),this.writeInt32(this.offset()-l+o.SIZEOF_INT)},o.Builder.prototype.startObject=function(l){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=l;for(var c=0;c<l;c++)this.vtable[c]=0;this.isNested=!0,this.object_start=this.offset()},o.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var l=this.offset(),c=this.vtable_in_use-1;c>=0&&this.vtable[c]==0;c--);for(var a=c+1;c>=0;c--)this.addInt16(this.vtable[c]!=0?l-this.vtable[c]:0);this.addInt16(l-this.object_start);var h=(a+2)*o.SIZEOF_SHORT;this.addInt16(h);var f=0,p=this.space;e:for(c=0;c<this.vtables.length;c++){var d=this.bb.capacity()-this.vtables[c];if(h==this.bb.readInt16(d)){for(var r=o.SIZEOF_SHORT;r<h;r+=o.SIZEOF_SHORT)if(this.bb.readInt16(p+r)!=this.bb.readInt16(d+r))continue e;f=this.vtables[c];break}}return f?(this.space=this.bb.capacity()-l,this.bb.writeInt32(this.space,f-l)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-l,this.offset()-l)),this.isNested=!1,l},o.Builder.prototype.finish=function(l,c,a){var h=a?o.SIZE_PREFIX_LENGTH:0;if(c){var f=c;if(this.prep(this.minalign,o.SIZEOF_INT+o.FILE_IDENTIFIER_LENGTH+h),f.length!=o.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+o.FILE_IDENTIFIER_LENGTH);for(var p=o.FILE_IDENTIFIER_LENGTH-1;p>=0;p--)this.writeInt8(f.charCodeAt(p))}this.prep(this.minalign,o.SIZEOF_INT+h),this.addOffset(l),h&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)},o.Builder.prototype.finishSizePrefixed=function(l,c){this.finish(l,c,!0)},o.Builder.prototype.requiredField=function(l,c){var a=this.bb.capacity()-l,h=a-this.bb.readInt32(a);if(this.bb.readInt16(h+c)==0)throw new Error("FlatBuffers: field "+c+" must be set")},o.Builder.prototype.startVector=function(l,c,a){this.notNested(),this.vector_num_elems=c,this.prep(o.SIZEOF_INT,l*c),this.prep(a,l*c)},o.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()},o.Builder.prototype.createString=function(l){if(l instanceof Uint8Array)var c=l;else{c=[];for(var a=0;a<l.length;){var h,f=l.charCodeAt(a++);(h=f<55296||f>=56320?f:(f<<10)+l.charCodeAt(a++)+-56613888)<128?c.push(h):(h<2048?c.push(h>>6&31|192):(h<65536?c.push(h>>12&15|224):c.push(h>>18&7|240,h>>12&63|128),c.push(h>>6&63|128)),c.push(63&h|128))}}this.addInt8(0),this.startVector(1,c.length,1),this.bb.setPosition(this.space-=c.length),a=0;for(var p=this.space,d=this.bb.bytes();a<c.length;a++)d[p++]=c[a];return this.endVector()},o.Builder.prototype.createLong=function(l,c){return o.Long.create(l,c)},o.ByteBuffer=function(l){this.bytes_=l,this.position_=0},o.ByteBuffer.allocate=function(l){return new o.ByteBuffer(new Uint8Array(l))},o.ByteBuffer.prototype.clear=function(){this.position_=0},o.ByteBuffer.prototype.bytes=function(){return this.bytes_},o.ByteBuffer.prototype.position=function(){return this.position_},o.ByteBuffer.prototype.setPosition=function(l){this.position_=l},o.ByteBuffer.prototype.capacity=function(){return this.bytes_.length},o.ByteBuffer.prototype.readInt8=function(l){return this.readUint8(l)<<24>>24},o.ByteBuffer.prototype.readUint8=function(l){return this.bytes_[l]},o.ByteBuffer.prototype.readInt16=function(l){return this.readUint16(l)<<16>>16},o.ByteBuffer.prototype.readUint16=function(l){return this.bytes_[l]|this.bytes_[l+1]<<8},o.ByteBuffer.prototype.readInt32=function(l){return this.bytes_[l]|this.bytes_[l+1]<<8|this.bytes_[l+2]<<16|this.bytes_[l+3]<<24},o.ByteBuffer.prototype.readUint32=function(l){return this.readInt32(l)>>>0},o.ByteBuffer.prototype.readInt64=function(l){return new o.Long(this.readInt32(l),this.readInt32(l+4))},o.ByteBuffer.prototype.readUint64=function(l){return new o.Long(this.readUint32(l),this.readUint32(l+4))},o.ByteBuffer.prototype.readFloat32=function(l){return o.int32[0]=this.readInt32(l),o.float32[0]},o.ByteBuffer.prototype.readFloat64=function(l){return o.int32[o.isLittleEndian?0:1]=this.readInt32(l),o.int32[o.isLittleEndian?1:0]=this.readInt32(l+4),o.float64[0]},o.ByteBuffer.prototype.writeInt8=function(l,c){this.bytes_[l]=c},o.ByteBuffer.prototype.writeUint8=function(l,c){this.bytes_[l]=c},o.ByteBuffer.prototype.writeInt16=function(l,c){this.bytes_[l]=c,this.bytes_[l+1]=c>>8},o.ByteBuffer.prototype.writeUint16=function(l,c){this.bytes_[l]=c,this.bytes_[l+1]=c>>8},o.ByteBuffer.prototype.writeInt32=function(l,c){this.bytes_[l]=c,this.bytes_[l+1]=c>>8,this.bytes_[l+2]=c>>16,this.bytes_[l+3]=c>>24},o.ByteBuffer.prototype.writeUint32=function(l,c){this.bytes_[l]=c,this.bytes_[l+1]=c>>8,this.bytes_[l+2]=c>>16,this.bytes_[l+3]=c>>24},o.ByteBuffer.prototype.writeInt64=function(l,c){this.writeInt32(l,c.low),this.writeInt32(l+4,c.high)},o.ByteBuffer.prototype.writeUint64=function(l,c){this.writeUint32(l,c.low),this.writeUint32(l+4,c.high)},o.ByteBuffer.prototype.writeFloat32=function(l,c){o.float32[0]=c,this.writeInt32(l,o.int32[0])},o.ByteBuffer.prototype.writeFloat64=function(l,c){o.float64[0]=c,this.writeInt32(l,o.int32[o.isLittleEndian?0:1]),this.writeInt32(l+4,o.int32[o.isLittleEndian?1:0])},o.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+o.SIZEOF_INT+o.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var l="",c=0;c<o.FILE_IDENTIFIER_LENGTH;c++)l+=String.fromCharCode(this.readInt8(this.position_+o.SIZEOF_INT+c));return l},o.ByteBuffer.prototype.__offset=function(l,c){var a=l-this.readInt32(l);return c<this.readInt16(a)?this.readInt16(a+c):0},o.ByteBuffer.prototype.__union=function(l,c){return l.bb_pos=c+this.readInt32(c),l.bb=this,l},o.ByteBuffer.prototype.__string=function(l,c){l+=this.readInt32(l);var a=this.readInt32(l),h="",f=0;if(l+=o.SIZEOF_INT,c===o.Encoding.UTF8_BYTES)return this.bytes_.subarray(l,l+a);for(;f<a;){var p,d=this.readUint8(l+f++);if(d<192)p=d;else{var r=this.readUint8(l+f++);if(d<224)p=(31&d)<<6|63&r;else{var t=this.readUint8(l+f++);p=d<240?(15&d)<<12|(63&r)<<6|63&t:(7&d)<<18|(63&r)<<12|(63&t)<<6|63&this.readUint8(l+f++)}}p<65536?h+=String.fromCharCode(p):(p-=65536,h+=String.fromCharCode(55296+(p>>10),56320+(1023&p)))}return h},o.ByteBuffer.prototype.__indirect=function(l){return l+this.readInt32(l)},o.ByteBuffer.prototype.__vector=function(l){return l+this.readInt32(l)+o.SIZEOF_INT},o.ByteBuffer.prototype.__vector_len=function(l){return this.readInt32(l+this.readInt32(l))},o.ByteBuffer.prototype.__has_identifier=function(l){if(l.length!=o.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+o.FILE_IDENTIFIER_LENGTH);for(var c=0;c<o.FILE_IDENTIFIER_LENGTH;c++)if(l.charCodeAt(c)!=this.readInt8(this.position_+o.SIZEOF_INT+c))return!1;return!0},o.ByteBuffer.prototype.createLong=function(l,c){return o.Long.create(l,c)}}},__webpack_module_cache__={};function __webpack_require__(n){var e=__webpack_module_cache__[n];if(e!==void 0)return e.exports;var i=__webpack_module_cache__[n]={exports:{}};return __webpack_modules__[n].call(i.exports,i,i.exports,__webpack_require__),i.exports}__webpack_require__.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return __webpack_require__.d(e,{a:e}),e},__webpack_require__.d=(n,e)=>{for(var i in e)__webpack_require__.o(e,i)&&!__webpack_require__.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},__webpack_require__.g=function(){if(typeof globalThis=="object")return globalThis;try{return this||new Function("return this")()}catch{if(typeof window=="object")return window}}(),__webpack_require__.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),__webpack_require__.r=n=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(6018);return __webpack_exports__})())})(ortWeb_min$1);var ortWeb_minExports=ortWeb_min$1.exports,ortWeb_min=getDefaultExportFromCjs(ortWeb_minExports),ONNX_WEB=_mergeNamespaces({__proto__:null,default:ortWeb_min},[ortWeb_minExports]);let ONNX;const executionProviders=["wasm"];typeof process<"u"&&((Si=process==null?void 0:process.release)==null?void 0:Si.name)==="node"?(ONNX=sharp??ONNX_NODE,executionProviders.unshift("cpu")):(ONNX=ortWeb_min??ONNX_WEB,typeof navigator<"u"&&/iP(hone|od|ad).+16_4.+AppleWebKit/.test(navigator.userAgent)&&(ONNX.env.wasm.simd=!1));const{env:onnx_env}=ONNX,VERSION="2.17.2",WEB_CACHE_AVAILABLE=typeof self<"u"&&"caches"in self,FS_AVAILABLE=!isEmpty(sharp),PATH_AVAILABLE=!isEmpty(sharp),RUNNING_LOCALLY=FS_AVAILABLE&&PATH_AVAILABLE,__dirname$1=RUNNING_LOCALLY?sharp.dirname(sharp.dirname(sharp.fileURLToPath(self.location.href))):"./",DEFAULT_CACHE_DIR=RUNNING_LOCALLY?sharp.join(__dirname$1,"/.cache/"):null,DEFAULT_LOCAL_MODEL_PATH="/models/",localModelPath=RUNNING_LOCALLY?sharp.join(__dirname$1,DEFAULT_LOCAL_MODEL_PATH):DEFAULT_LOCAL_MODEL_PATH;onnx_env!=null&&onnx_env.wasm&&(onnx_env.wasm.wasmPaths=RUNNING_LOCALLY?sharp.join(__dirname$1,"/dist/"):`https://cdn.jsdelivr.net/npm/@xenova/transformers@${VERSION}/dist/`);const env$1={backends:{onnx:onnx_env,tfjs:{}},__dirname:__dirname$1,version:VERSION,allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!0,localModelPath,useFS:FS_AVAILABLE,useBrowserCache:WEB_CACHE_AVAILABLE,useFSCache:FS_AVAILABLE,cacheDir:DEFAULT_CACHE_DIR,useCustomCache:!1,customCache:null};function isEmpty(n){return Object.keys(n).length===0}var define_process_env_default={};class FileResponse{constructor(e){Ae(this,"_CONTENT_TYPE_MAP",{txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"});if(this.filePath=e,this.headers=new Headers,this.exists=sharp.existsSync(e),this.exists){this.status=200,this.statusText="OK";let i=sharp.statSync(e);this.headers.set("content-length",i.size.toString()),this.updateContentType();let o=this;this.body=new ReadableStream({start(l){o.arrayBuffer().then(c=>{l.enqueue(new Uint8Array(c)),l.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",this._CONTENT_TYPE_MAP[e]??"application/octet-stream")}clone(){let e=new FileResponse(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await sharp.promises.readFile(this.filePath)).buffer}async blob(){const e=await sharp.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await sharp.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function isValidUrl(n,e=null,i=null){let o;try{o=new URL(n)}catch{return!1}return!(e&&!e.includes(o.protocol)||i&&!i.includes(o.hostname))}async function getFile(n){var e;if(env$1.useFS&&!isValidUrl(n,["http:","https:","blob:"]))return new FileResponse(n);if(typeof process<"u"&&((e=process==null?void 0:process.release)==null?void 0:e.name)==="node"){const i=!!(define_process_env_default!=null&&define_process_env_default.TESTING_REMOTELY),o=env$1.version,l=new Headers;if(l.set("User-Agent",`transformers.js/${o}; is_ci/${i};`),isValidUrl(n,["http:","https:"],["huggingface.co","hf.co"])){const a=(define_process_env_default==null?void 0:define_process_env_default.HF_TOKEN)??(define_process_env_default==null?void 0:define_process_env_default.HF_ACCESS_TOKEN);a&&l.set("Authorization",`Bearer ${a}`)}return fetch(n,{headers:l})}else return fetch(n)}const ERROR_MAPPING={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function handleError(n,e,i){if(!i)return null;const o=ERROR_MAPPING[n]??`Error (${n}) occurred while trying to load file`;throw Error(`${o}: "${e}".`)}class FileCache{constructor(e){this.path=e}async match(e){let i=sharp.join(this.path,e),o=new FileResponse(i);if(o.exists)return o}async put(e,i){const o=Buffer.from(await i.arrayBuffer());let l=sharp.join(this.path,e);try{await sharp.promises.mkdir(sharp.dirname(l),{recursive:!0}),await sharp.promises.writeFile(l,o)}catch(c){console.warn("An error occurred while writing the file to cache:",c)}}}async function tryCache(n,...e){for(let i of e)try{let o=await n.match(i);if(o)return o}catch{continue}}async function getModelFile(n,e,i=!0,o={}){if(!env$1.allowLocalModels){if(o.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!env$1.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}dispatchCallback(o.progress_callback,{status:"initiate",name:n,file:e});let l;if(!l&&env$1.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{l=await caches.open("transformers-cache")}catch(b){console.warn("An error occurred while opening the browser cache:",b)}}if(!l&&env$1.useFSCache&&(l=new FileCache(o.cache_dir??env$1.cacheDir)),!l&&env$1.useCustomCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");const c=o.revision??"main";let a=pathJoin(n,e),h=pathJoin(env$1.localModelPath,a),f=pathJoin(env$1.remoteHost,env$1.remotePathTemplate.replaceAll("{model}",n).replaceAll("{revision}",encodeURIComponent(c)),e),p=c==="main"?a:pathJoin(n,c,e),d,r=l instanceof FileCache?p:f,t=!1,u;l&&(u=await tryCache(l,h,r));const s=u!==void 0;if(u===void 0){if(env$1.allowLocalModels)if(isValidUrl(a,["http:","https:"])){if(o.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${a}.`);if(!env$1.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${a}.`)}else try{u=await getFile(h),d=h}catch(y){console.warn(`Unable to load from local path "${h}": "${y}"`)}if(u===void 0||u.status===404){if(o.local_files_only||!env$1.allowRemoteModels){if(i)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${h}".`);return null}if(u=await getFile(f),u.status!==200)return handleError(u.status,f,i);d=r}t=l&&typeof Response<"u"&&u instanceof Response&&u.status===200}dispatchCallback(o.progress_callback,{status:"download",name:n,file:e});const m={status:"progress",name:n,file:e};let g;return o.progress_callback?s&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(g=new Uint8Array(await u.arrayBuffer()),dispatchCallback(o.progress_callback,{...m,progress:100,loaded:g.length,total:g.length})):g=await readResponse(u,b=>{dispatchCallback(o.progress_callback,{...m,...b})}):g=new Uint8Array(await u.arrayBuffer()),t&&d&&await l.match(d)===void 0&&await l.put(d,new Response(g,{headers:u.headers})).catch(b=>{console.warn(`Unable to add response to browser cache: ${b}.`)}),dispatchCallback(o.progress_callback,{status:"done",name:n,file:e}),g}async function getModelJSON(n,e,i=!0,o={}){let l=await getModelFile(n,e,i,o);if(l===null)return{};let a=new TextDecoder("utf-8").decode(l);return JSON.parse(a)}async function readResponse(n,e){const i=n.headers.get("Content-Length");i===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let o=parseInt(i??"0"),l=new Uint8Array(o),c=0;const a=n.body.getReader();async function h(){const{done:f,value:p}=await a.read();if(f)return;let d=c+p.length;if(d>o){o=d;let t=new Uint8Array(o);t.set(l),l=t}l.set(p,c),c=d;const r=c/o*100;return e({progress:r,loaded:c,total:o}),h()}return await h(),l}function pathJoin(...n){return n=n.map((e,i)=>(i&&(e=e.replace(new RegExp("^/"),"")),i!==n.length-1&&(e=e.replace(new RegExp("/$"),"")),e)),n.join("/")}function permute_data(n,e,i){const o=new Array(i.length),l=new Array(i.length);for(let h=i.length-1,f=1;h>=0;--h)l[h]=f,o[h]=e[i[h]],f*=o[h];const c=i.map((h,f)=>l[i.indexOf(f)]),a=new n.constructor(n.length);for(let h=0;h<n.length;++h){let f=0;for(let p=e.length-1,d=h;p>=0;--p)f+=d%e[p]*c[p],d=Math.floor(d/e[p]);a[f]=n[h]}return[a,o]}function softmax(n){const e=max(n)[0],i=n.map(c=>Math.exp(c-e)),o=i.reduce((c,a)=>c+a,0);return i.map(c=>c/o)}function log_softmax(n){return softmax(n).map(o=>Math.log(o))}function getTopItems(n,e=0){return n=Array.from(n).map((i,o)=>[o,i]).sort((i,o)=>o[1]-i[1]),e!==null&&e>0&&(n=n.slice(0,e)),n}function min(n){if(n.length===0)throw Error("Array must not be empty");let e=n[0],i=0;for(let o=1;o<n.length;++o)n[o]<e&&(e=n[o],i=o);return[e,i]}function max(n){if(n.length===0)throw Error("Array must not be empty");let e=n[0],i=0;for(let o=1;o<n.length;++o)n[o]>e&&(e=n[o],i=o);return[Number(e),i]}function medianFilter(n,e){if(e%2===0||e<=0)throw new Error("Window size must be a positive odd number");const i=new n.constructor(n.length),o=new n.constructor(e),l=Math.floor(e/2);for(let c=0;c<n.length;++c){let a=0;for(let h=-l;h<=l;++h){let f=c+h;f<0?f=Math.abs(f):f>=n.length&&(f=2*(n.length-1)-f),o[a++]=n[f]}o.sort(),i[c]=o[l]}return i}function round(n,e){const i=Math.pow(10,e);return Math.round(n*i)/i}const DataTypeMap=Object.freeze({float32:Float32Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array}),ONNXTensor$1=ONNX.Tensor;class Tensor{constructor(...e){Ae(this,"dims");Ae(this,"type");Ae(this,"data");Ae(this,"size");return e[0]instanceof ONNXTensor$1?Object.assign(this,e[0]):Object.assign(this,new ONNXTensor$1(e[0],e[1],e[2])),new Proxy(this,{get:(i,o)=>{if(typeof o=="string"){let l=Number(o);if(Number.isInteger(l))return i._getitem(l)}return i[o]},set:(i,o,l)=>i[o]=l})}*[Symbol.iterator](){const[e,...i]=this.dims;if(i.length>0){const o=i.reduce((l,c)=>l*c);for(let l=0;l<e;++l)yield this._subarray(l,o,i)}else yield*this.data}_getitem(e){const[i,...o]=this.dims;if(e=safeIndex(e,i),o.length>0){const l=o.reduce((c,a)=>c*a);return this._subarray(e,l,o)}else return new Tensor(this.type,[this.data[e]],o)}indexOf(e){for(let i=0;i<this.data.length;++i)if(this.data[i]==e)return i;return-1}_subarray(e,i,o){const l=e*i,c=(e+1)*i,a="subarray"in this.data?this.data.subarray(l,c):this.data.slice(l,c);return new Tensor(this.type,a,o)}item(){if(this.data.length!==1)throw new Error(`a Tensor with ${this.data.length} elements cannot be converted to Scalar`);return this.data[0]}tolist(){return reshape(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){for(let e=0;e<this.data.length;++e)this.data[e]=1/(1+Math.exp(-this.data[e]));return this}mul(e){return this.clone().mul_(e)}mul_(e){for(let i=0;i<this.data.length;++i)this.data[i]*=e;return this}add(e){return this.clone().add_(e)}add_(e){for(let i=0;i<this.data.length;++i)this.data[i]+=e;return this}clone(){return new Tensor(this.type,this.data.slice(),this.dims.slice())}slice(...e){let i=[],o=[];for(let f=0;f<this.dims.length;++f){let p=e[f];if(p==null)o.push([0,this.dims[f]]),i.push(this.dims[f]);else if(typeof p=="number")p=safeIndex(p,this.dims[f],f),o.push([p,p+1]);else if(Array.isArray(p)&&p.length===2){if(p[0]>p[1])throw new Error(`Invalid slice: ${p}`);let d=[Math.max(p[0],0),Math.min(p[1],this.dims[f])];o.push(d),i.push(d[1]-d[0])}else throw new Error(`Invalid slice: ${p}`)}let l=o.map(([f,p])=>p-f),c=l.reduce((f,p)=>f*p),a=new this.data.constructor(c);const h=this.stride();for(let f=0;f<c;++f){let p=0;for(let d=l.length-1,r=f;d>=0;--d){const t=l[d];p+=(r%t+o[d][0])*h[d],r=Math.floor(r/t)}a[f]=this.data[p]}return new Tensor(this.type,a,i)}permute(...e){return permute(this,e)}transpose(...e){return this.permute(...e)}sum(e=null,i=!1){return this.norm(1,e,i)}norm(e="fro",i=null,o=!1){if(e==="fro")e=2;else if(typeof e=="string")throw Error(`Unsupported norm: ${e}`);if(i===null){let a=this.data.reduce((h,f)=>h+f**e,0)**(1/e);return new Tensor(this.type,[a],[])}i=safeIndex(i,this.dims.length);const l=this.dims.slice();l[i]=1;const c=new this.data.constructor(this.data.length/this.dims[i]);for(let a=0;a<this.data.length;++a){let h=0;for(let f=this.dims.length-1,p=a,d=1;f>=0;--f){const r=this.dims[f];if(f!==i){const t=p%r;h+=t*d,d*=l[f]}p=Math.floor(p/r)}c[h]+=this.data[a]**e}if(e!==1)for(let a=0;a<c.length;++a)c[a]=c[a]**(1/e);return o||l.splice(i,1),new Tensor(this.type,c,l)}normalize_(e=2,i=1){i=safeIndex(i,this.dims.length);const o=this.norm(e,i,!0);for(let l=0;l<this.data.length;++l){let c=0;for(let a=this.dims.length-1,h=l,f=1;a>=0;--a){const p=this.dims[a];if(a!==i){const d=h%p;c+=d*f,f*=this.dims[a]}h=Math.floor(h/p)}this.data[l]/=o.data[c]}return this}normalize(e=2,i=1){return this.clone().normalize_(e,i)}stride(){return dimsToStride(this.dims)}squeeze(e=null){return new Tensor(this.type,this.data,calc_squeeze_dims(this.dims,e))}squeeze_(e=null){return this.dims=calc_squeeze_dims(this.dims,e),this}unsqueeze(e=null){return new Tensor(this.type,this.data,calc_unsqueeze_dims(this.dims,e))}unsqueeze_(e=null){return this.dims=calc_unsqueeze_dims(this.dims,e),this}flatten_(e=0,i=-1){i=(i+this.dims.length)%this.dims.length;let o=this.dims.slice(0,e),l=this.dims.slice(e,i+1),c=this.dims.slice(i+1);return this.dims=[...o,l.reduce((a,h)=>a*h,1),...c],this}flatten(e=0,i=-1){return this.clone().flatten_(e,i)}view(...e){let i=-1;for(let o=0;o<e.length;++o)if(e[o]===-1){if(i!==-1)throw new Error("Only one dimension can be inferred");i=o}if(i!==-1){const o=e.reduce((l,c,a)=>a!==i?l*c:l,1);e[i]=this.data.length/o}return new Tensor(this.type,this.data,e)}neg_(){for(let e=0;e<this.data.length;++e)this.data[e]=-this.data[e];return this}neg(){return this.clone().neg_()}clamp_(e,i){for(let o=0;o<this.data.length;++o)this.data[o]=Math.min(Math.max(this.data[o],e),i);return this}clamp(e,i){return this.clone().clamp_(e,i)}round_(){for(let e=0;e<this.data.length;++e)this.data[e]=Math.round(this.data[e]);return this}round(){return this.clone().round_()}to(e){if(this.type===e)return this;if(!DataTypeMap.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);return new Tensor(e,DataTypeMap[e].from(this.data),this.dims)}}function reshape(n,e){const i=n.length,o=e.reduce((c,a)=>c*a);if(i!==o)throw Error(`cannot reshape array of size ${i} into shape (${e})`);let l=n;for(let c=e.length-1;c>=0;c--)l=l.reduce((a,h)=>{let f=a[a.length-1];return f.length<e[c]?f.push(h):a.push([h]),a},[[]]);return l[0]}function permute(n,e){const[i,o]=permute_data(n.data,n.dims,e);return new Tensor(n.type,i,o)}function calc_squeeze_dims(n,e){return n=n.slice(),e===null?n=n.filter(i=>i!==1):typeof e=="number"?n[e]===1&&n.splice(e,1):Array.isArray(e)&&(n=n.filter((i,o)=>i!==1||!e.includes(o))),n}function calc_unsqueeze_dims(n,e){return e=safeIndex(e,n.length+1),n=n.slice(),n.splice(e,0,1),n}function safeIndex(n,e,i=null){if(n<-e||n>=e)throw new Error(`IndexError: index ${n} is out of bounds for dimension${i===null?"":" "+i} with size ${e}`);return n<0&&(n=(n%e+e)%e),n}function cat(n,e=0){e=safeIndex(e,n[0].dims.length);const i=n[0].dims.slice();i[e]=n.reduce((a,h)=>a+h.dims[e],0);const o=i.reduce((a,h)=>a*h,1),l=new n[0].data.constructor(o),c=n[0].type;if(e===0){let a=0;for(let h of n)l.set(h.data,a),a+=h.data.length}else{let a=0;for(let h=0;h<n.length;++h){let f=n[h];for(let p=0;p<f.data.length;++p){let d=0;for(let r=f.dims.length-1,t=p,u=1;r>=0;--r){const s=f.dims[r];let m=t%s;r===e&&(m+=a),d+=m*u,u*=i[r],t=Math.floor(t/s)}l[d]=f.data[p]}a+=f.dims[e]}}return new Tensor(c,l,i)}function stack(n,e=0){return cat(n.map(i=>i.unsqueeze(e)),e)}function std_mean(n,e=null,i=1,o=!1){if(e===null){const p=n.data.reduce((u,s)=>u+s,0)/n.data.length,d=Math.sqrt(n.data.reduce((u,s)=>u+(s-p)**2,0)/(n.data.length-i)),r=new Tensor(n.type,[p],[]);return[new Tensor(n.type,[d],[]),r]}e=safeIndex(e,n.dims.length);const l=mean(n,e,o),c=n.dims.slice();c[e]=1;const a=new n.data.constructor(n.data.length/n.dims[e]);for(let f=0;f<n.data.length;++f){let p=0;for(let d=n.dims.length-1,r=f,t=1;d>=0;--d){const u=n.dims[d];if(d!==e){const s=r%u;p+=s*t,t*=c[d]}r=Math.floor(r/u)}a[p]+=(n.data[f]-l.data[p])**2}for(let f=0;f<a.length;++f)a[f]=Math.sqrt(a[f]/(n.dims[e]-i));return o||c.splice(e,1),[new Tensor(n.type,a,c),l]}function mean(n,e=null,i=!1){if(e===null){let c=n.data.reduce((a,h)=>a+h,0);return new Tensor(n.type,[c/n.data.length],[])}e=safeIndex(e,n.dims.length);const o=n.dims.slice();o[e]=1;const l=new n.data.constructor(n.data.length/n.dims[e]);for(let c=0;c<n.data.length;++c){let a=0;for(let h=n.dims.length-1,f=c,p=1;h>=0;--h){const d=n.dims[h];if(h!==e){const r=f%d;a+=r*p,p*=o[h]}f=Math.floor(f/d)}l[a]+=n.data[c]}if(n.dims[e]!==1)for(let c=0;c<l.length;++c)l[c]=l[c]/n.dims[e];return i||o.splice(e,1),new Tensor(n.type,l,o)}function dynamicTimeWarping(n){const[e,i]=n.dims,o=[e+1,i+1],l=new Tensor("float32",new Float32Array(o[0]*o[1]).fill(1/0),o),c=new Tensor("float32",new Float32Array(o[0]*o[1]).fill(-1),o);l[0].data[0]=0;for(let d=1;d<i+1;++d)for(let r=1;r<e+1;++r){const t=l[r-1][d-1].item(),u=l[r-1][d].item(),s=l[r][d-1].item();let m,g;t<u&&t<s?(m=t,g=0):u<t&&u<s?(m=u,g=1):(m=s,g=2),l[r].data[d]=n[r-1][d-1].item()+m,c[r].data[d]=g}let a=e,h=i;c.data.fill(2,0,o[1]);for(let d=0;d<o[0];++d)c[d].data[0]=1;let f=[],p=[];for(;a>0||h>0;)switch(f.push(a-1),p.push(h-1),c[a][h].item()){case 0:--a,--h;break;case 1:--a;break;case 2:--h;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${a}, ${h}]. Please file a bug report.`)}return f.reverse(),p.reverse(),[f,p]}function dimsToStride(n){const e=new Array(n.length);for(let i=n.length-1,o=1;i>=0;--i)e[i]=o,o*=n[i];return e}function ones(n){const e=n.reduce((i,o)=>i*o,1);return new Tensor("int64",new BigInt64Array(e).fill(1n),n)}function ones_like(n){return ones(n.dims)}class PriorityQueue{constructor(e=(i,o)=>i>o){this._heap=[],this._comparator=e}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const i of e)this._heap.push(i),this._siftUp();return this.size}pop(){const e=this.peek(),i=this.size-1;return i>0&&this._swap(0,i),this._heap.pop(),this._siftDown(),e}replace(e){const i=this.peek();return this._heap[0]=e,this._siftDown(),i}_parent(e){return(e+1>>>1)-1}_left(e){return(e<<1)+1}_right(e){return e+1<<1}_greater(e,i){return this._comparator(this._heap[e],this._heap[i])}_swap(e,i){const o=this._heap[e];this._heap[e]=this._heap[i],this._heap[i]=o}_siftUp(){let e=this.size-1;for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const i=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,i),e=i}}}class CharTrie{constructor(){this.root=CharTrieNode.default()}extend(e){for(let i of e)this.push(i)}push(e){let i=this.root;for(let o of e){let l=i.children.get(o);l===void 0&&(l=CharTrieNode.default(),i.children.set(o,l)),i=l}i.isLeaf=!0}*commonPrefixSearch(e){let i=this.root,o="";for(let l=0;l<e.length&&i!==void 0;++l){const c=e[l];o+=c,i=i.children.get(c),i!==void 0&&i.isLeaf&&(yield o)}}}class CharTrieNode{constructor(e,i){this.isLeaf=e,this.children=i}static default(){return new CharTrieNode(!1,new Map)}}class TokenLattice{constructor(e,i,o){this.sentence=e,this.len=e.length,this.bosTokenId=i,this.eosTokenId=o,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const l=new TokenLatticeNode(this.bosTokenId,0,0,0,0),c=new TokenLatticeNode(this.eosTokenId,1,this.len,0,0);this.nodes.push(l.clone()),this.nodes.push(c.clone()),this.beginNodes[this.len].push(c),this.endNodes[0].push(l)}insert(e,i,o,l){const c=this.nodes.length,a=new TokenLatticeNode(l,c,e,i,o);this.beginNodes[e].push(a),this.endNodes[e+i].push(a),this.nodes.push(a)}viterbi(){const e=this.len;let i=0;for(;i<=e;){if(this.beginNodes[i].length==0)return[];for(let h of this.beginNodes[i]){h.prev=null;let f=0,p=null;for(let d of this.endNodes[i]){const r=d.backtraceScore+h.score;(p===null||r>f)&&(p=d.clone(),f=r)}if(p!==null)h.prev=p,h.backtraceScore=f;else return[]}++i}const o=[],c=this.beginNodes[e][0].prev;if(c===null)return[];let a=c.clone();for(;a.prev!==null;)o.push(a.clone()),a=a.clone().prev.clone();return o.reverse(),o}piece(e){return this.sentence.slice(e.pos,e.pos+e.length)}tokens(){return this.viterbi().map(i=>this.piece(i))}tokenIds(){return this.viterbi().map(i=>i.tokenId)}}class TokenLatticeNode{constructor(e,i,o,l,c){this.tokenId=e,this.nodeId=i,this.pos=o,this.length=l,this.score=c,this.prev=null,this.backtraceScore=0}clone(){const e=new TokenLatticeNode(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}var TOKEN_TYPES=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator"}),KEYWORDS=Object.freeze({set:TOKEN_TYPES.Set,for:TOKEN_TYPES.For,in:TOKEN_TYPES.In,is:TOKEN_TYPES.Is,if:TOKEN_TYPES.If,else:TOKEN_TYPES.Else,endif:TOKEN_TYPES.EndIf,elif:TOKEN_TYPES.ElseIf,endfor:TOKEN_TYPES.EndFor,and:TOKEN_TYPES.And,or:TOKEN_TYPES.Or,not:TOKEN_TYPES.Not,"not in":TOKEN_TYPES.NotIn,true:TOKEN_TYPES.BooleanLiteral,false:TOKEN_TYPES.BooleanLiteral}),Token=class{constructor(n,e){this.value=n,this.type=e}};function isWord(n){return/\w/.test(n)}function isInteger(n){return/[0-9]/.test(n)}var ORDERED_MAPPING_TABLE=[["{%",TOKEN_TYPES.OpenStatement],["%}",TOKEN_TYPES.CloseStatement],["{{",TOKEN_TYPES.OpenExpression],["}}",TOKEN_TYPES.CloseExpression],["(",TOKEN_TYPES.OpenParen],[")",TOKEN_TYPES.CloseParen],["{",TOKEN_TYPES.OpenCurlyBracket],["}",TOKEN_TYPES.CloseCurlyBracket],["[",TOKEN_TYPES.OpenSquareBracket],["]",TOKEN_TYPES.CloseSquareBracket],[",",TOKEN_TYPES.Comma],[".",TOKEN_TYPES.Dot],[":",TOKEN_TYPES.Colon],["|",TOKEN_TYPES.Pipe],["<=",TOKEN_TYPES.ComparisonBinaryOperator],[">=",TOKEN_TYPES.ComparisonBinaryOperator],["==",TOKEN_TYPES.ComparisonBinaryOperator],["!=",TOKEN_TYPES.ComparisonBinaryOperator],["<",TOKEN_TYPES.ComparisonBinaryOperator],[">",TOKEN_TYPES.ComparisonBinaryOperator],["+",TOKEN_TYPES.AdditiveBinaryOperator],["-",TOKEN_TYPES.AdditiveBinaryOperator],["*",TOKEN_TYPES.MultiplicativeBinaryOperator],["/",TOKEN_TYPES.MultiplicativeBinaryOperator],["%",TOKEN_TYPES.MultiplicativeBinaryOperator],["=",TOKEN_TYPES.Equals]],ESCAPE_CHARACTERS=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function preprocess(n,e={}){return n.endsWith(`
`)&&(n=n.slice(0,-1)),n=n.replace(/{#.*?#}/gs,"{##}"),e.lstrip_blocks&&(n=n.replace(/^[ \t]*({[#%])/gm,"$1")),e.trim_blocks&&(n=n.replace(/([#%]})\n/g,"$1")),n.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function tokenize(n,e={}){var a,h,f;const i=[],o=preprocess(n,e);let l=0;const c=p=>{let d="";for(;p(o[l]);){if(o[l]==="\\"){if(++l,l>=o.length)throw new SyntaxError("Unexpected end of input");const r=o[l++],t=ESCAPE_CHARACTERS.get(r);if(t===void 0)throw new SyntaxError(`Unexpected escaped character: ${r}`);d+=t;continue}if(d+=o[l++],l>=o.length)throw new SyntaxError("Unexpected end of input")}return d};e:for(;l<o.length;){const p=(a=i.at(-1))==null?void 0:a.type;if(p===void 0||p===TOKEN_TYPES.CloseStatement||p===TOKEN_TYPES.CloseExpression){let r="";for(;l<o.length&&!(o[l]==="{"&&(o[l+1]==="%"||o[l+1]==="{"));)r+=o[l++];if(r.length>0){i.push(new Token(r,TOKEN_TYPES.Text));continue}}c(r=>/\s/.test(r));const d=o[l];if(d==="-"||d==="+"){const r=(h=i.at(-1))==null?void 0:h.type;if(r===TOKEN_TYPES.Text||r===void 0)throw new SyntaxError(`Unexpected character: ${d}`);switch(r){case TOKEN_TYPES.Identifier:case TOKEN_TYPES.NumericLiteral:case TOKEN_TYPES.BooleanLiteral:case TOKEN_TYPES.StringLiteral:case TOKEN_TYPES.CloseParen:case TOKEN_TYPES.CloseSquareBracket:break;default:{++l;const t=c(isInteger);i.push(new Token(`${d}${t}`,t.length>0?TOKEN_TYPES.NumericLiteral:TOKEN_TYPES.UnaryOperator));continue}}}for(const[r,t]of ORDERED_MAPPING_TABLE)if(o.slice(l,l+r.length)===r){i.push(new Token(r,t)),l+=r.length;continue e}if(d==="'"||d==='"'){++l;const r=c(t=>t!==d);i.push(new Token(r,TOKEN_TYPES.StringLiteral)),++l;continue}if(isInteger(d)){const r=c(isInteger);i.push(new Token(r,TOKEN_TYPES.NumericLiteral));continue}if(isWord(d)){const r=c(isWord),t=Object.hasOwn(KEYWORDS,r)?KEYWORDS[r]:TOKEN_TYPES.Identifier;t===TOKEN_TYPES.In&&((f=i.at(-1))==null?void 0:f.type)===TOKEN_TYPES.Not?(i.pop(),i.push(new Token("not in",TOKEN_TYPES.NotIn))):i.push(new Token(r,t));continue}throw new SyntaxError(`Unexpected character: ${d}`)}return i}var Statement=class{constructor(){Ae(this,"type","Statement")}},Program=class extends Statement{constructor(e){super();Ae(this,"type","Program");this.body=e}},If=class extends Statement{constructor(e,i,o){super();Ae(this,"type","If");this.test=e,this.body=i,this.alternate=o}},For=class extends Statement{constructor(e,i,o){super();Ae(this,"type","For");this.loopvar=e,this.iterable=i,this.body=o}},SetStatement=class extends Statement{constructor(e,i){super();Ae(this,"type","Set");this.assignee=e,this.value=i}},Expression=class extends Statement{constructor(){super(...arguments);Ae(this,"type","Expression")}},MemberExpression=class extends Expression{constructor(e,i,o){super();Ae(this,"type","MemberExpression");this.object=e,this.property=i,this.computed=o}},CallExpression=class extends Expression{constructor(e,i){super();Ae(this,"type","CallExpression");this.callee=e,this.args=i}},Identifier=class extends Expression{constructor(e){super();Ae(this,"type","Identifier");this.value=e}},Literal=class extends Expression{constructor(e){super();Ae(this,"type","Literal");this.value=e}},NumericLiteral=class extends Literal{constructor(){super(...arguments);Ae(this,"type","NumericLiteral")}},StringLiteral=class extends Literal{constructor(){super(...arguments);Ae(this,"type","StringLiteral")}},BooleanLiteral=class extends Literal{constructor(){super(...arguments);Ae(this,"type","BooleanLiteral")}},ArrayLiteral=class extends Literal{constructor(){super(...arguments);Ae(this,"type","ArrayLiteral")}},TupleLiteral=class extends Literal{constructor(){super(...arguments);Ae(this,"type","TupleLiteral")}},ObjectLiteral=class extends Literal{constructor(){super(...arguments);Ae(this,"type","ObjectLiteral")}},BinaryExpression=class extends Expression{constructor(e,i,o){super();Ae(this,"type","BinaryExpression");this.operator=e,this.left=i,this.right=o}},FilterExpression=class extends Expression{constructor(e,i){super();Ae(this,"type","FilterExpression");this.operand=e,this.filter=i}},TestExpression=class extends Expression{constructor(e,i,o){super();Ae(this,"type","TestExpression");this.operand=e,this.negate=i,this.test=o}},UnaryExpression=class extends Expression{constructor(e,i){super();Ae(this,"type","UnaryExpression");this.operator=e,this.argument=i}},SliceExpression=class extends Expression{constructor(e=void 0,i=void 0,o=void 0){super();Ae(this,"type","SliceExpression");this.start=e,this.stop=i,this.step=o}},KeywordArgumentExpression=class extends Expression{constructor(e,i){super();Ae(this,"type","KeywordArgumentExpression");this.key=e,this.value=i}};function parse(n){const e=new Program([]);let i=0;function o(G,R){const V=n[i++];if(!V||V.type!==G)throw new Error(`Parser Error: ${R}. ${V.type} !== ${G}.`);return V}function l(){switch(n[i].type){case TOKEN_TYPES.Text:return h();case TOKEN_TYPES.OpenStatement:return f();case TOKEN_TYPES.OpenExpression:return p();default:throw new SyntaxError(`Unexpected token type: ${n[i].type}`)}}function c(...G){return i+G.length<=n.length&&G.some((R,V)=>R!==n[i+V].type)}function a(...G){return i+G.length<=n.length&&G.every((R,V)=>R===n[i+V].type)}function h(){return new StringLiteral(o(TOKEN_TYPES.Text,"Expected text token").value)}function f(){o(TOKEN_TYPES.OpenStatement,"Expected opening statement token");let G;switch(n[i].type){case TOKEN_TYPES.Set:++i,G=d(),o(TOKEN_TYPES.CloseStatement,"Expected closing statement token");break;case TOKEN_TYPES.If:++i,G=r(),o(TOKEN_TYPES.OpenStatement,"Expected {% token"),o(TOKEN_TYPES.EndIf,"Expected endif token"),o(TOKEN_TYPES.CloseStatement,"Expected %} token");break;case TOKEN_TYPES.For:++i,G=u(),o(TOKEN_TYPES.OpenStatement,"Expected {% token"),o(TOKEN_TYPES.EndFor,"Expected endfor token"),o(TOKEN_TYPES.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${n[i].type}`)}return G}function p(){o(TOKEN_TYPES.OpenExpression,"Expected opening expression token");const G=s();return o(TOKEN_TYPES.CloseExpression,"Expected closing expression token"),G}function d(){const G=s();if(a(TOKEN_TYPES.Equals)){++i;const R=d();return new SetStatement(G,R)}return G}function r(){var ce,se,be,ee,ve,Ce,Ge,De;const G=s();o(TOKEN_TYPES.CloseStatement,"Expected closing statement token");const R=[],V=[];for(;!(((ce=n[i])==null?void 0:ce.type)===TOKEN_TYPES.OpenStatement&&(((se=n[i+1])==null?void 0:se.type)===TOKEN_TYPES.ElseIf||((be=n[i+1])==null?void 0:be.type)===TOKEN_TYPES.Else||((ee=n[i+1])==null?void 0:ee.type)===TOKEN_TYPES.EndIf));)R.push(l());if(((ve=n[i])==null?void 0:ve.type)===TOKEN_TYPES.OpenStatement&&((Ce=n[i+1])==null?void 0:Ce.type)!==TOKEN_TYPES.EndIf)if(++i,a(TOKEN_TYPES.ElseIf))o(TOKEN_TYPES.ElseIf,"Expected elseif token"),V.push(r());else for(o(TOKEN_TYPES.Else,"Expected else token"),o(TOKEN_TYPES.CloseStatement,"Expected closing statement token");!(((Ge=n[i])==null?void 0:Ge.type)===TOKEN_TYPES.OpenStatement&&((De=n[i+1])==null?void 0:De.type)===TOKEN_TYPES.EndIf);)V.push(l());return new If(G,R,V)}function t(G=!1){const R=G?Y:s,V=[R()],ce=a(TOKEN_TYPES.Comma);for(;ce&&(++i,V.push(R()),!!a(TOKEN_TYPES.Comma)););return ce?new TupleLiteral(V):V[0]}function u(){const G=t(!0);if(!(G instanceof Identifier||G instanceof TupleLiteral))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${G.type} instead`);o(TOKEN_TYPES.In,"Expected `in` keyword following loop variable");const R=s();o(TOKEN_TYPES.CloseStatement,"Expected closing statement token");const V=[];for(;c(TOKEN_TYPES.OpenStatement,TOKEN_TYPES.EndFor);)V.push(l());return new For(G,R,V)}function s(){return m()}function m(){const G=g();if(a(TOKEN_TYPES.If)){++i;const R=g();o(TOKEN_TYPES.Else,"Expected else token");const V=g();return new If(R,[G],[V])}return G}function g(){let G=b();for(;a(TOKEN_TYPES.Or);){const R=n[i];++i;const V=b();G=new BinaryExpression(R,G,V)}return G}function b(){let G=y();for(;a(TOKEN_TYPES.And);){const R=n[i];++i;const V=y();G=new BinaryExpression(R,G,V)}return G}function y(){let G;for(;a(TOKEN_TYPES.Not);){const R=n[i];++i;const V=y();G=new UnaryExpression(R,V)}return G??w()}function w(){let G=x();for(;a(TOKEN_TYPES.ComparisonBinaryOperator)||a(TOKEN_TYPES.In)||a(TOKEN_TYPES.NotIn);){const R=n[i];++i;const V=x();G=new BinaryExpression(R,G,V)}return G}function x(){let G=Q();for(;a(TOKEN_TYPES.AdditiveBinaryOperator);){const R=n[i];++i;const V=Q();G=new BinaryExpression(R,G,V)}return G}function v(){const G=N();return a(TOKEN_TYPES.OpenParen)?E(G):G}function E(G){let R=new CallExpression(G,O());return a(TOKEN_TYPES.OpenParen)&&(R=E(R)),R}function O(){o(TOKEN_TYPES.OpenParen,"Expected opening parenthesis for arguments list");const G=C();return o(TOKEN_TYPES.CloseParen,"Expected closing parenthesis for arguments list"),G}function C(){const G=[];for(;!a(TOKEN_TYPES.CloseParen);){let R=s();if(a(TOKEN_TYPES.Equals)){if(++i,!(R instanceof Identifier))throw new SyntaxError("Expected identifier for keyword argument");const V=s();R=new KeywordArgumentExpression(R,V)}G.push(R),a(TOKEN_TYPES.Comma)&&++i}return G}function S(){const G=[];let R=!1;for(;!a(TOKEN_TYPES.CloseSquareBracket);)a(TOKEN_TYPES.Colon)?(G.push(void 0),++i,R=!0):(G.push(s()),a(TOKEN_TYPES.Colon)&&(++i,R=!0));if(G.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(R){if(G.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new SliceExpression(...G)}return G[0]}function N(){let G=Y();for(;a(TOKEN_TYPES.Dot)||a(TOKEN_TYPES.OpenSquareBracket);){const R=n[i];++i;let V;const ce=R.type!==TOKEN_TYPES.Dot;if(ce)V=S(),o(TOKEN_TYPES.CloseSquareBracket,"Expected closing square bracket");else if(V=Y(),V.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");G=new MemberExpression(G,V,ce)}return G}function Q(){let G=te();for(;a(TOKEN_TYPES.MultiplicativeBinaryOperator);){const R=n[i];++i;const V=te();G=new BinaryExpression(R,G,V)}return G}function te(){let G=Z();for(;a(TOKEN_TYPES.Is);){++i;const R=a(TOKEN_TYPES.Not);R&&++i;let V=Y();if(V instanceof BooleanLiteral&&(V=new Identifier(V.value.toString())),!(V instanceof Identifier))throw new SyntaxError("Expected identifier for the test");G=new TestExpression(G,R,V)}return G}function Z(){let G=v();for(;a(TOKEN_TYPES.Pipe);){++i;let R=Y();if(!(R instanceof Identifier))throw new SyntaxError("Expected identifier for the filter");a(TOKEN_TYPES.OpenParen)&&(R=E(R)),G=new FilterExpression(G,R)}return G}function Y(){const G=n[i];switch(G.type){case TOKEN_TYPES.NumericLiteral:return++i,new NumericLiteral(Number(G.value));case TOKEN_TYPES.StringLiteral:return++i,new StringLiteral(G.value);case TOKEN_TYPES.BooleanLiteral:return++i,new BooleanLiteral(G.value==="true");case TOKEN_TYPES.Identifier:return++i,new Identifier(G.value);case TOKEN_TYPES.OpenParen:{++i;const R=t();if(n[i].type!==TOKEN_TYPES.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${n[i].type} instead`);return++i,R}case TOKEN_TYPES.OpenSquareBracket:{++i;const R=[];for(;!a(TOKEN_TYPES.CloseSquareBracket);)R.push(s()),a(TOKEN_TYPES.Comma)&&++i;return++i,new ArrayLiteral(R)}case TOKEN_TYPES.OpenCurlyBracket:{++i;const R=new Map;for(;!a(TOKEN_TYPES.CloseCurlyBracket);){const V=s();o(TOKEN_TYPES.Colon,"Expected colon between key and value in object literal");const ce=s();R.set(V,ce),a(TOKEN_TYPES.Comma)&&++i}return++i,new ObjectLiteral(R)}default:throw new SyntaxError(`Unexpected token: ${G.type}`)}}for(;i<n.length;)e.body.push(l());return e}function range(n,e,i=1){e===void 0&&(e=n,n=0);const o=[];for(let l=n;l<e;l+=i)o.push(l);return o}function slice(n,e,i,o=1){const l=Math.sign(o);l>=0?(e=(e??(e=0))<0?Math.max(n.length+e,0):Math.min(e,n.length),i=(i??(i=n.length))<0?Math.max(n.length+i,0):Math.min(i,n.length)):(e=(e??(e=n.length-1))<0?Math.max(n.length+e,-1):Math.min(e,n.length-1),i=(i??(i=-1))<-1?Math.max(n.length+i,-1):Math.min(i,n.length-1));const c=[];for(let a=e;l*a<l*i;a+=o)c.push(n[a]);return c}function titleCase(n){return n.replace(/\b\w/g,e=>e.toUpperCase())}var RuntimeValue=class{constructor(n=void 0){Ae(this,"type","RuntimeValue");Ae(this,"value");Ae(this,"builtins",new Map);this.value=n}__bool__(){return new BooleanValue(!!this.value)}},NumericValue=class extends RuntimeValue{constructor(){super(...arguments);Ae(this,"type","NumericValue")}},StringValue=class extends RuntimeValue{constructor(){super(...arguments);Ae(this,"type","StringValue");Ae(this,"builtins",new Map([["upper",new FunctionValue(()=>new StringValue(this.value.toUpperCase()))],["lower",new FunctionValue(()=>new StringValue(this.value.toLowerCase()))],["strip",new FunctionValue(()=>new StringValue(this.value.trim()))],["title",new FunctionValue(()=>new StringValue(titleCase(this.value)))],["length",new NumericValue(this.value.length)]]))}},BooleanValue=class extends RuntimeValue{constructor(){super(...arguments);Ae(this,"type","BooleanValue")}},ObjectValue=class extends RuntimeValue{constructor(){super(...arguments);Ae(this,"type","ObjectValue");Ae(this,"builtins",new Map([["get",new FunctionValue(([e,i])=>{if(!(e instanceof StringValue))throw new Error(`Object key must be a string: got ${e.type}`);return this.value.get(e.value)??i??new NullValue})],["items",new FunctionValue(()=>new ArrayValue(Array.from(this.value.entries()).map(([e,i])=>new ArrayValue([new StringValue(e),i]))))]]))}__bool__(){return new BooleanValue(this.value.size>0)}},ArrayValue=class extends RuntimeValue{constructor(){super(...arguments);Ae(this,"type","ArrayValue");Ae(this,"builtins",new Map([["length",new NumericValue(this.value.length)]]))}__bool__(){return new BooleanValue(this.value.length>0)}},TupleValue=class extends ArrayValue{constructor(){super(...arguments);Ae(this,"type","TupleValue")}},FunctionValue=class extends RuntimeValue{constructor(){super(...arguments);Ae(this,"type","FunctionValue")}},NullValue=class extends RuntimeValue{constructor(){super(...arguments);Ae(this,"type","NullValue")}},UndefinedValue=class extends RuntimeValue{constructor(){super(...arguments);Ae(this,"type","UndefinedValue")}},Environment=class{constructor(n){Ae(this,"variables",new Map([["namespace",new FunctionValue(n=>{if(n.length===0)return new ObjectValue(new Map);if(n.length!==1||!(n[0]instanceof ObjectValue))throw new Error("`namespace` expects either zero arguments or a single object argument");return n[0]})]]));Ae(this,"tests",new Map([["boolean",n=>n.type==="BooleanValue"],["callable",n=>n instanceof FunctionValue],["odd",n=>{if(n.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${n.type}`);return n.value%2!==0}],["even",n=>{if(n.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${n.type}`);return n.value%2===0}],["false",n=>n.type==="BooleanValue"&&!n.value],["true",n=>n.type==="BooleanValue"&&n.value],["number",n=>n.type==="NumericValue"],["integer",n=>n.type==="NumericValue"&&Number.isInteger(n.value)],["iterable",n=>n instanceof ArrayValue||n instanceof StringValue],["lower",n=>{const e=n.value;return n.type==="StringValue"&&e===e.toLowerCase()}],["upper",n=>{const e=n.value;return n.type==="StringValue"&&e===e.toUpperCase()}],["none",n=>n.type==="NullValue"],["defined",n=>n.type!=="UndefinedValue"],["undefined",n=>n.type==="UndefinedValue"],["equalto",(n,e)=>n.value===e.value]]));this.parent=n}set(n,e){return this.declareVariable(n,convertToRuntimeValues(e))}declareVariable(n,e){if(this.variables.has(n))throw new SyntaxError(`Variable already declared: ${n}`);return this.variables.set(n,e),e}setVariable(n,e){return this.variables.set(n,e),e}resolve(n){if(this.variables.has(n))return this;if(this.parent)return this.parent.resolve(n);throw new Error(`Unknown variable: ${n}`)}lookupVariable(n){try{return this.resolve(n).variables.get(n)??new UndefinedValue}catch{return new UndefinedValue}}},Interpreter=class{constructor(n){Ae(this,"global");this.global=n??new Environment}run(n){return this.evaluate(n,this.global)}evaluateBinaryExpression(n,e){const i=this.evaluate(n.left,e);switch(n.operator.value){case"and":return i.__bool__().value?this.evaluate(n.right,e):i;case"or":return i.__bool__().value?i:this.evaluate(n.right,e)}const o=this.evaluate(n.right,e);switch(n.operator.value){case"==":return new BooleanValue(i.value==o.value);case"!=":return new BooleanValue(i.value!=o.value)}if(i instanceof UndefinedValue||o instanceof UndefinedValue)throw new Error("Cannot perform operation on undefined values");if(i instanceof NullValue||o instanceof NullValue)throw new Error("Cannot perform operation on null values");if(i instanceof NumericValue&&o instanceof NumericValue)switch(n.operator.value){case"+":return new NumericValue(i.value+o.value);case"-":return new NumericValue(i.value-o.value);case"*":return new NumericValue(i.value*o.value);case"/":return new NumericValue(i.value/o.value);case"%":return new NumericValue(i.value%o.value);case"<":return new BooleanValue(i.value<o.value);case">":return new BooleanValue(i.value>o.value);case">=":return new BooleanValue(i.value>=o.value);case"<=":return new BooleanValue(i.value<=o.value)}else if(i instanceof ArrayValue&&o instanceof ArrayValue)switch(n.operator.value){case"+":return new ArrayValue(i.value.concat(o.value))}else if(o instanceof ArrayValue){const l=o.value.find(c=>c.value===i.value)!==void 0;switch(n.operator.value){case"in":return new BooleanValue(l);case"not in":return new BooleanValue(!l)}}if(i instanceof StringValue||o instanceof StringValue)switch(n.operator.value){case"+":return new StringValue(i.value.toString()+o.value.toString())}if(i instanceof StringValue&&o instanceof StringValue)switch(n.operator.value){case"in":return new BooleanValue(o.value.includes(i.value));case"not in":return new BooleanValue(!o.value.includes(i.value))}if(i instanceof StringValue&&o instanceof ObjectValue)switch(n.operator.value){case"in":return new BooleanValue(o.value.has(i.value));case"not in":return new BooleanValue(!o.value.has(i.value))}throw new SyntaxError(`Unknown operator "${n.operator.value}" between ${i.type} and ${o.type}`)}evaluateFilterExpression(n,e){const i=this.evaluate(n.operand,e);if(n.filter.type==="Identifier"){const o=n.filter;if(i instanceof ArrayValue)switch(o.value){case"list":return i;case"first":return i.value[0];case"last":return i.value[i.value.length-1];case"length":return new NumericValue(i.value.length);case"reverse":return new ArrayValue(i.value.reverse());case"sort":return new ArrayValue(i.value.sort((l,c)=>{if(l.type!==c.type)throw new Error(`Cannot compare different types: ${l.type} and ${c.type}`);switch(l.type){case"NumericValue":return l.value-c.value;case"StringValue":return l.value.localeCompare(c.value);default:throw new Error(`Cannot compare type: ${l.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${o.value}`)}else if(i instanceof StringValue)switch(o.value){case"length":return new NumericValue(i.value.length);case"upper":return new StringValue(i.value.toUpperCase());case"lower":return new StringValue(i.value.toLowerCase());case"title":return new StringValue(titleCase(i.value));case"capitalize":return new StringValue(i.value.charAt(0).toUpperCase()+i.value.slice(1));case"trim":return new StringValue(i.value.trim());default:throw new Error(`Unknown StringValue filter: ${o.value}`)}else if(i instanceof NumericValue)switch(o.value){case"abs":return new NumericValue(Math.abs(i.value));default:throw new Error(`Unknown NumericValue filter: ${o.value}`)}else if(i instanceof ObjectValue)switch(o.value){case"items":return new ArrayValue(Array.from(i.value.entries()).map(([l,c])=>new ArrayValue([new StringValue(l),c])));case"length":return new NumericValue(i.value.size);default:throw new Error(`Unknown ObjectValue filter: ${o.value}`)}throw new Error(`Cannot apply filter "${o.value}" to type: ${i.type}`)}else if(n.filter.type==="CallExpression"){const o=n.filter;if(o.callee.type!=="Identifier")throw new Error(`Unknown filter: ${o.callee.type}`);const l=o.callee.value;if(i instanceof ArrayValue){switch(l){case"selectattr":{if(i.value.some(d=>!(d instanceof ObjectValue)))throw new Error("`selectattr` can only be applied to array of objects");if(o.args.some(d=>d.type!=="StringLiteral"))throw new Error("arguments of `selectattr` must be strings");const[c,a,h]=o.args.map(d=>this.evaluate(d,e));let f;if(a){const d=e.tests.get(a.value);if(!d)throw new Error(`Unknown test: ${a.value}`);f=d}else f=(...d)=>d[0].__bool__().value;const p=i.value.filter(d=>{const r=d.value.get(c.value);return r?f(r,h):!1});return new ArrayValue(p)}}throw new Error(`Unknown ArrayValue filter: ${l}`)}else throw new Error(`Cannot apply filter "${l}" to type: ${i.type}`)}throw new Error(`Unknown filter: ${n.filter.type}`)}evaluateTestExpression(n,e){const i=this.evaluate(n.operand,e),o=e.tests.get(n.test.value);if(!o)throw new Error(`Unknown test: ${n.test.value}`);const l=o(i);return new BooleanValue(n.negate?!l:l)}evaluateUnaryExpression(n,e){const i=this.evaluate(n.argument,e);switch(n.operator.value){case"not":return new BooleanValue(!i.value);default:throw new SyntaxError(`Unknown operator: ${n.operator.value}`)}}evalProgram(n,e){return this.evaluateBlock(n.body,e)}evaluateBlock(n,e){let i="";for(const o of n){const l=this.evaluate(o,e);l.type!=="NullValue"&&l.type!=="UndefinedValue"&&(i+=l.value)}return new StringValue(i)}evaluateIdentifier(n,e){return e.lookupVariable(n.value)}evaluateCallExpression(n,e){const i=[],o=new Map;for(const c of n.args)if(c.type==="KeywordArgumentExpression"){const a=c;o.set(a.key.value,this.evaluate(a.value,e))}else i.push(this.evaluate(c,e));o.size>0&&i.push(new ObjectValue(o));const l=this.evaluate(n.callee,e);if(l.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${l.type}`);return l.value(i,e)}evaluateSliceExpression(n,e,i){if(!(n instanceof ArrayValue||n instanceof StringValue))throw new Error("Slice object must be an array or string");const o=this.evaluate(e.start,i),l=this.evaluate(e.stop,i),c=this.evaluate(e.step,i);if(!(o instanceof NumericValue||o instanceof UndefinedValue))throw new Error("Slice start must be numeric or undefined");if(!(l instanceof NumericValue||l instanceof UndefinedValue))throw new Error("Slice stop must be numeric or undefined");if(!(c instanceof NumericValue||c instanceof UndefinedValue))throw new Error("Slice step must be numeric or undefined");return n instanceof ArrayValue?new ArrayValue(slice(n.value,o.value,l.value,c.value)):new StringValue(slice(Array.from(n.value),o.value,l.value,c.value).join(""))}evaluateMemberExpression(n,e){const i=this.evaluate(n.object,e);let o;if(n.computed){if(n.property.type==="SliceExpression")return this.evaluateSliceExpression(i,n.property,e);o=this.evaluate(n.property,e)}else o=new StringValue(n.property.value);let l;if(i instanceof ObjectValue){if(!(o instanceof StringValue))throw new Error(`Cannot access property with non-string: got ${o.type}`);l=i.value.get(o.value)??i.builtins.get(o.value)}else if(i instanceof ArrayValue||i instanceof StringValue)if(o instanceof NumericValue)l=i.value.at(o.value),i instanceof StringValue&&(l=new StringValue(i.value.at(o.value)));else if(o instanceof StringValue)l=i.builtins.get(o.value);else throw new Error(`Cannot access property with non-string/non-number: got ${o.type}`);else{if(!(o instanceof StringValue))throw new Error(`Cannot access property with non-string: got ${o.type}`);l=i.builtins.get(o.value)}return l instanceof RuntimeValue?l:new UndefinedValue}evaluateSet(n,e){const i=this.evaluate(n.value,e);if(n.assignee.type==="Identifier"){const o=n.assignee.value;e.setVariable(o,i)}else if(n.assignee.type==="MemberExpression"){const o=n.assignee,l=this.evaluate(o.object,e);if(!(l instanceof ObjectValue))throw new Error("Cannot assign to member of non-object");if(o.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");l.value.set(o.property.value,i)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(n.assignee)}`);return new NullValue}evaluateIf(n,e){const i=this.evaluate(n.test,e);return this.evaluateBlock(i.__bool__().value?n.body:n.alternate,e)}evaluateFor(n,e){const i=new Environment(e),o=this.evaluate(n.iterable,i);if(!(o instanceof ArrayValue))throw new Error(`Expected iterable type in for loop: got ${o.type}`);let l="";for(let c=0;c<o.value.length;++c){const a=new Map([["index",new NumericValue(c+1)],["index0",new NumericValue(c)],["revindex",new NumericValue(o.value.length-c)],["revindex0",new NumericValue(o.value.length-c-1)],["first",new BooleanValue(c===0)],["last",new BooleanValue(c===o.value.length-1)],["length",new NumericValue(o.value.length)],["previtem",c>0?o.value[c-1]:new UndefinedValue],["nextitem",c<o.value.length-1?o.value[c+1]:new UndefinedValue]]);i.setVariable("loop",new ObjectValue(a));const h=o.value[c];if(n.loopvar.type==="Identifier")i.setVariable(n.loopvar.value,h);else if(n.loopvar.type==="TupleLiteral"){const p=n.loopvar;if(h.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${h.type}`);const d=h;if(p.value.length!==d.value.length)throw new Error(`Too ${p.value.length>d.value.length?"few":"many"} items to unpack`);for(let r=0;r<p.value.length;++r){if(p.value[r].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${p.value[r].type}`);i.setVariable(p.value[r].value,d.value[r])}}const f=this.evaluateBlock(n.body,i);l+=f.value}return new StringValue(l)}evaluate(n,e){if(n===void 0)return new UndefinedValue;switch(n.type){case"Program":return this.evalProgram(n,e);case"Set":return this.evaluateSet(n,e);case"If":return this.evaluateIf(n,e);case"For":return this.evaluateFor(n,e);case"NumericLiteral":return new NumericValue(Number(n.value));case"StringLiteral":return new StringValue(n.value);case"BooleanLiteral":return new BooleanValue(n.value);case"ArrayLiteral":return new ArrayValue(n.value.map(i=>this.evaluate(i,e)));case"TupleLiteral":return new TupleValue(n.value.map(i=>this.evaluate(i,e)));case"ObjectLiteral":{const i=new Map;for(const[o,l]of n.value){const c=this.evaluate(o,e);if(!(c instanceof StringValue))throw new Error(`Object keys must be strings: got ${c.type}`);i.set(c.value,this.evaluate(l,e))}return new ObjectValue(i)}case"Identifier":return this.evaluateIdentifier(n,e);case"CallExpression":return this.evaluateCallExpression(n,e);case"MemberExpression":return this.evaluateMemberExpression(n,e);case"UnaryExpression":return this.evaluateUnaryExpression(n,e);case"BinaryExpression":return this.evaluateBinaryExpression(n,e);case"FilterExpression":return this.evaluateFilterExpression(n,e);case"TestExpression":return this.evaluateTestExpression(n,e);default:throw new SyntaxError(`Unknown node type: ${n.type}`)}}};function convertToRuntimeValues(n){switch(typeof n){case"number":return new NumericValue(n);case"string":return new StringValue(n);case"boolean":return new BooleanValue(n);case"object":return n===null?new NullValue:Array.isArray(n)?new ArrayValue(n.map(convertToRuntimeValues)):new ObjectValue(new Map(Object.entries(n).map(([e,i])=>[e,convertToRuntimeValues(i)])));case"function":return new FunctionValue((e,i)=>{const o=n(...e.map(l=>l.value))??null;return convertToRuntimeValues(o)});default:throw new Error(`Cannot convert to runtime value: ${n}`)}}var Template=class{constructor(n){Ae(this,"parsed");const e=tokenize(n,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=parse(e)}render(n){const e=new Environment;e.set("false",!1),e.set("true",!0),e.set("raise_exception",l=>{throw new Error(l)}),e.set("range",range);for(const[l,c]of Object.entries(n))e.set(l,c);return new Interpreter(e).run(this.parsed).value}};async function loadTokenizer(n,e){const i=await Promise.all([getModelJSON(n,"tokenizer.json",!0,e),getModelJSON(n,"tokenizer_config.json",!0,e)]);return e.legacy!==null&&(i[1].legacy=e.legacy),i}function regexSplit(n,e){const i=[];let o=0;for(const l of n.matchAll(e)){const c=l[0];o<l.index&&i.push(n.slice(o,l.index)),c.length>0&&i.push(c),o=l.index+c.length}return o<n.length&&i.push(n.slice(o)),i}function createPattern(n,e=!0){if(n.Regex!==void 0){let i=n.Regex.replace(/\\([#&~])/g,"$1");for(const[o,l]of PROBLEMATIC_REGEX_MAP)i=i.replaceAll(o,l);return new RegExp(i,"gu")}else if(n.String!==void 0){const i=escapeRegExp(n.String);return new RegExp(e?i:`(${i})`,"gu")}else return console.warn("Unknown pattern type:",n),null}function objectToMap(n){return new Map(Object.entries(n))}function prepareTensorForDecode(n){const e=n.dims;switch(e.length){case 1:return n.tolist();case 2:if(e[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return n.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${e.length}.`)}}function clean_up_tokenization(n){return n.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function remove_accents(n){return n.replace(/[\u0300-\u036f]/g,"")}function lowercase_and_remove_accent(n){return remove_accents(n.toLowerCase())}function fuse(n,e,i){const o=[];let l=0;for(;l<n.length;){if(o.push(n[l]),(i.get(n[l])??e)!==e){++l;continue}for(;l<n.length&&(i.get(n[l])??e)===e;)++l}return o}function whitespace_split(n){return n.match(/\S+/g)||[]}const PUNCTUATION_REGEX="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",PROBLEMATIC_REGEX_MAP=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"]]);class AddedToken{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class TokenizerModel extends Callable{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...i){switch(e.type){case"WordPiece":return new WordPieceTokenizer(e);case"Unigram":return new Unigram(e,...i);case"BPE":return new BPE(e);default:if(e.vocab)return new LegacyTokenizerModel(e,...i);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){let i=this.encode(e);return this.fuse_unk&&(i=fuse(i,this.unk_token_id,this.tokens_to_ids)),i}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map(i=>this.tokens_to_ids.get(i)??this.unk_token_id)}convert_ids_to_tokens(e){return e.map(i=>this.vocab[i]??this.unk_token)}}class WordPieceTokenizer extends TokenizerModel{constructor(e){super(e),this.tokens_to_ids=objectToMap(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[i,o]of this.tokens_to_ids)this.vocab[o]=i}encode(e){const i=[];for(const o of e){const l=[...o];if(l.length>this.max_input_chars_per_word){i.push(this.unk_token);continue}let c=!1,a=0;const h=[];for(;a<l.length;){let f=l.length,p=null;for(;a<f;){let d=l.slice(a,f).join("");if(a>0&&(d=this.config.continuing_subword_prefix+d),this.tokens_to_ids.has(d)){p=d;break}--f}if(p===null){c=!0;break}h.push(p),a=f}c?i.push(this.unk_token):i.push(...h)}return i}}class Unigram extends TokenizerModel{constructor(e,i){super(e);const o=e.vocab.length;this.vocab=new Array(o),this.scores=new Array(o);for(let l=0;l<o;++l){const c=e.vocab[l];this.vocab[l]=c[0],this.scores[l]=c[1]}this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map((l,c)=>[l,c])),this.bosToken=" ",this.bosTokenId=this.tokens_to_ids.get(this.bosToken),this.eosToken=i.eos_token,this.eosTokenId=this.tokens_to_ids.get(this.eosToken),this.unkToken=this.vocab[this.unk_token_id],this.minScore=min(this.scores)[0],this.unkScore=this.minScore-10,this.scores[this.unk_token_id]=this.unkScore,this.trie=new CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const i=e.sentence,o=i.length;let l=0;for(;l<o;){let a=!1;for(let h of this.trie.commonPrefixSearch(i.slice(l))){const f=this.tokens_to_ids.get(h),p=this.scores[f],d=h.length;e.insert(l,d,p,f),!a&&d===1&&(a=!0)}a||e.insert(l,1,this.unkScore,this.unk_token_id),l+=1}}tokenize(e){const i=new TokenLattice(e,this.bosTokenId,this.eosTokenId);return this.populateNodes(i),i.tokens()}encode(e){const i=[];for(const o of e){const l=this.tokenize(o);i.push(...l)}return i}}const BYTES_TO_UNICODE=(()=>{const n=[...Array.from({length:94},(l,c)=>c+33),...Array.from({length:12},(l,c)=>c+161),...Array.from({length:82},(l,c)=>c+174)],e=n.slice();let i=0;for(let l=0;l<256;++l)n.includes(l)||(n.push(l),e.push(256+i),i+=1);const o=e.map(l=>String.fromCharCode(l));return Object.fromEntries(n.map((l,c)=>[l,o[c]]))})(),UNICODE_TO_BYTES=reverseDictionary(BYTES_TO_UNICODE);class BPE extends TokenizerModel{constructor(e){super(e),this.BPE_SPLIT_TOKEN=" ",this.tokens_to_ids=objectToMap(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[i,o]of this.tokens_to_ids)this.vocab[o]=i;this.bpe_ranks=new Map(e.merges.map((i,o)=>[i,o])),this.merges=e.merges.map(i=>i.split(this.BPE_SPLIT_TOKEN)),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(e){if(e.length===0)return[];const i=this.cache.get(e);if(i!==void 0)return i;const o=Array.from(e);this.end_of_word_suffix&&(o[o.length-1]+=this.end_of_word_suffix);let l=[];if(o.length>1){const c=new PriorityQueue((f,p)=>f.score<p.score);let a={token:o[0],bias:0,prev:null,next:null},h=a;for(let f=1;f<o.length;++f){const p={bias:f/o.length,token:o[f],prev:h,next:null};h.next=p,this._add_node(c,h),h=p}for(;!c.isEmpty();){const f=c.pop();if(f.deleted||!f.next||f.next.deleted)continue;if(f.deleted=!0,f.next.deleted=!0,f.prev){const d={...f.prev};f.prev.deleted=!0,f.prev=d,d.prev?d.prev.next=d:a=d}const p={token:f.token+f.next.token,bias:f.bias,prev:f.prev,next:f.next.next};p.prev?(p.prev.next=p,this._add_node(c,p.prev)):a=p,p.next&&(p.next.prev=p,this._add_node(c,p))}for(let f=a;f!==null;f=f.next)l.push(f.token)}else l=o;if(this.continuing_subword_suffix)for(let c=0;c<l.length-1;++c)l[c]+=this.continuing_subword_suffix;return this.cache.set(e,l),l}_add_node(e,i){const o=this.bpe_ranks.get(i.token+this.BPE_SPLIT_TOKEN+i.next.token);o!==void 0&&(i.score=o+i.bias,e.push(i))}encode(e){const i=[];for(const o of e){if(this.ignore_merges&&this.tokens_to_ids.has(o)){i.push(o);continue}const l=this.bpe(o);for(const c of l)this.tokens_to_ids.has(c)?i.push(c):this.byte_fallback?i.push(...Array.from(this.text_encoder.encode(c)).map(a=>`<0x${a.toString(16).toUpperCase().padStart(2,"0")}>`)):i.push(this.unk_token)}return i}}class LegacyTokenizerModel extends TokenizerModel{constructor(e,i){super(e),this.tokens_to_ids=objectToMap(i.target_lang?e.vocab[i.target_lang]:e.vocab),this.bos_token=i.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=i.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=i.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=i.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[o,l]of this.tokens_to_ids)this.vocab[l]=o}encode(e){return e}}class Normalizer extends Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(e===null)return null;switch(e.type){case"BertNormalizer":return new BertNormalizer(e);case"Precompiled":return new Precompiled(e);case"Sequence":return new NormalizerSequence(e);case"Replace":return new Replace(e);case"NFC":return new NFC(e);case"NFKC":return new NFKC(e);case"NFKD":return new NFKD(e);case"Strip":return new StripNormalizer(e);case"StripAccents":return new StripAccents(e);case"Lowercase":return new Lowercase(e);case"Prepend":return new Prepend(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class Replace extends Normalizer{normalize(e){const i=createPattern(this.config.pattern);return i===null?e:e.replaceAll(i,this.config.content)}}class NFC extends Normalizer{normalize(e){return e=e.normalize("NFC"),e}}class NFKC extends Normalizer{normalize(e){return e=e.normalize("NFKC"),e}}class NFKD extends Normalizer{normalize(e){return e=e.normalize("NFKD"),e}}class StripNormalizer extends Normalizer{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class StripAccents extends Normalizer{normalize(e){return e=remove_accents(e),e}}class Lowercase extends Normalizer{normalize(e){return e=e.toLowerCase(),e}}class Prepend extends Normalizer{normalize(e){return e=this.config.prepend+e,e}}class NormalizerSequence extends Normalizer{constructor(e){super(e),this.normalizers=e.normalizers.map(i=>Normalizer.fromConfig(i))}normalize(e){return this.normalizers.reduce((i,o)=>o.normalize(i),e)}}class BertNormalizer extends Normalizer{_tokenize_chinese_chars(e){const i=[];for(let o=0;o<e.length;++o){const l=e[o],c=l.charCodeAt(0);this._is_chinese_char(c)?(i.push(" "),i.push(l),i.push(" ")):i.push(l)}return i.join("")}_is_chinese_char(e){return e>=19968&&e<=40959||e>=13312&&e<=19903||e>=131072&&e<=173791||e>=173824&&e<=177983||e>=177984&&e<=178207||e>=178208&&e<=183983||e>=63744&&e<=64255||e>=194560&&e<=195103}stripAccents(e){return e.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}_is_control(e){switch(e){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(e)}}_clean_text(e){const i=[];for(const o of e){const l=o.charCodeAt(0);l===0||l===65533||this._is_control(o)||(/^\s$/.test(o)?i.push(" "):i.push(o))}return i.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),this.config.strip_accents!==!1&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class PreTokenizer extends Callable{static fromConfig(e){if(e===null)return null;switch(e.type){case"BertPreTokenizer":return new BertPreTokenizer(e);case"Sequence":return new PreTokenizerSequence(e);case"Whitespace":return new WhitespacePreTokenizer(e);case"WhitespaceSplit":return new WhitespaceSplit(e);case"Metaspace":return new MetaspacePreTokenizer(e);case"ByteLevel":return new ByteLevelPreTokenizer(e);case"Split":return new SplitPreTokenizer(e);case"Punctuation":return new PunctuationPreTokenizer(e);case"Digits":return new DigitsPreTokenizer(e);case"Replace":return new ReplacePreTokenizer(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,i){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,i){return(Array.isArray(e)?e.map(o=>this.pre_tokenize_text(o,i)):this.pre_tokenize_text(e,i)).flat()}_call(e,i){return this.pre_tokenize(e,i)}}class BertPreTokenizer extends PreTokenizer{constructor(e){super(),this.pattern=new RegExp(`[^\\s${PUNCTUATION_REGEX}]+|[${PUNCTUATION_REGEX}]`,"gu")}pre_tokenize_text(e,i){return e.trim().match(this.pattern)||[]}}class ByteLevelPreTokenizer extends PreTokenizer{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=BYTES_TO_UNICODE,this.text_encoder=new TextEncoder}pre_tokenize_text(e,i){return this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e),(this.use_regex?e.match(this.pattern)||[]:[e]).map(l=>Array.from(this.text_encoder.encode(l),c=>this.byte_encoder[c]).join(""))}}class SplitPreTokenizer extends PreTokenizer{constructor(e){super(),this.config=e,this.pattern=createPattern(this.config.pattern,this.config.invert)}pre_tokenize_text(e,i){return this.pattern===null?[]:this.config.invert?e.match(this.pattern)||[]:regexSplit(e,this.pattern)}}class PunctuationPreTokenizer extends PreTokenizer{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${PUNCTUATION_REGEX}]+|[${PUNCTUATION_REGEX}]+`,"gu")}pre_tokenize_text(e,i){return e.match(this.pattern)||[]}}class DigitsPreTokenizer extends PreTokenizer{constructor(e){super(),this.config=e;const i=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(i,"gu")}pre_tokenize_text(e,i){return e.match(this.pattern)||[]}}class PostProcessor extends Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(e===null)return null;switch(e.type){case"TemplateProcessing":return new TemplateProcessing(e);case"ByteLevel":return new ByteLevelPostProcessor(e);case"RobertaProcessing":return new RobertaProcessing(e);case"BertProcessing":return new BertProcessing(e);case"Sequence":return new PostProcessorSequence(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...i){throw Error("post_process should be implemented in subclass.")}_call(e,...i){return this.post_process(e,...i)}}class BertProcessing extends PostProcessor{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,i=null,{add_special_tokens:o=!0}={}){o&&(e=mergeArrays([this.cls],e,[this.sep]));let l=new Array(e.length).fill(0);if(i!==null){const c=o&&this instanceof RobertaProcessing?[this.sep]:[],a=o?[this.sep]:[];e=mergeArrays(e,c,i,a),l=mergeArrays(l,new Array(i.length+c.length+a.length).fill(1))}return{tokens:e,token_type_ids:l}}}class RobertaProcessing extends BertProcessing{}class TemplateProcessing extends PostProcessor{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,i=null,{add_special_tokens:o=!0}={}){const l=i===null?this.single:this.pair;let c=[],a=[];for(const h of l)"SpecialToken"in h?o&&(c.push(h.SpecialToken.id),a.push(h.SpecialToken.type_id)):"Sequence"in h&&(h.Sequence.id==="A"?(c=mergeArrays(c,e),a=mergeArrays(a,new Array(e.length).fill(h.Sequence.type_id))):h.Sequence.id==="B"&&(c=mergeArrays(c,i),a=mergeArrays(a,new Array(i.length).fill(h.Sequence.type_id))));return{tokens:c,token_type_ids:a}}}class ByteLevelPostProcessor extends PostProcessor{post_process(e,i=null){return i&&(e=mergeArrays(e,i)),{tokens:e}}}class PostProcessorSequence extends PostProcessor{constructor(e){super(e),this.processors=e.processors.map(i=>PostProcessor.fromConfig(i))}post_process(e,i=null,o={}){let l;for(const c of this.processors)if(c instanceof ByteLevelPostProcessor)e=c.post_process(e).tokens,i&&(i=c.post_process(i).tokens);else{const a=c.post_process(e,i,o);e=a.tokens,l=a.token_type_ids}return{tokens:e,token_type_ids:l}}}class Decoder extends Callable{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(e===null)return null;switch(e.type){case"WordPiece":return new WordPieceDecoder(e);case"Metaspace":return new MetaspaceDecoder(e);case"ByteLevel":return new ByteLevelDecoder(e);case"Replace":return new ReplaceDecoder(e);case"ByteFallback":return new ByteFallback(e);case"Fuse":return new FuseDecoder(e);case"Strip":return new StripDecoder(e);case"Sequence":return new DecoderSequence(e);case"CTC":return new CTCDecoder(e);case"BPEDecoder":return new BPEDecoder(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class ReplaceDecoder extends Decoder{decode_chain(e){const i=createPattern(this.config.pattern);return i===null?e:e.map(o=>o.replaceAll(i,this.config.content))}}class ByteFallback extends Decoder{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const i=[];let o=[];for(const l of e){let c=null;if(l.length===6&&l.startsWith("<0x")&&l.endsWith(">")){const a=parseInt(l.slice(3,5),16);isNaN(a)||(c=a)}if(c!==null)o.push(c);else{if(o.length>0){const a=this.text_decoder.decode(Uint8Array.from(o));i.push(a),o=[]}i.push(l)}}if(o.length>0){const l=this.text_decoder.decode(Uint8Array.from(o));i.push(l),o=[]}return i}}class FuseDecoder extends Decoder{decode_chain(e){return[e.join("")]}}class StripDecoder extends Decoder{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map(i=>{let o=0;for(let c=0;c<this.start&&i[c]===this.content;++c){o=c+1;continue}let l=i.length;for(let c=0;c<this.stop;++c){const a=i.length-c-1;if(i[a]===this.content){l=a;continue}else break}return i.slice(o,l)})}}class WordPieceDecoder extends Decoder{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map((i,o)=>(o!==0&&(i.startsWith(this.config.prefix)?i=i.replace(this.config.prefix,""):i=" "+i),this.cleanup&&(i=clean_up_tokenization(i)),i))}}class ByteLevelDecoder extends Decoder{constructor(e){super(e),this.byte_decoder=UNICODE_TO_BYTES,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const i=e.join(""),o=new Uint8Array([...i].map(c=>this.byte_decoder[c]));return this.text_decoder.decode(o)}decode_chain(e){const i=[];let o=[];for(const l of e)this.added_tokens.find(c=>c.content===l)!==void 0?(o.length>0&&(i.push(this.convert_tokens_to_string(o)),o=[]),i.push(l)):o.push(l);return o.length>0&&i.push(this.convert_tokens_to_string(o)),i}}class CTCDecoder extends Decoder{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(e.length===0)return"";const i=[e[0]];for(let c=1;c<e.length;++c)e[c]!==i.at(-1)&&i.push(e[c]);let l=i.filter(c=>c!==this.pad_token).join("");return this.cleanup&&(l=clean_up_tokenization(l).replaceAll(this.word_delimiter_token," ").trim()),l}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class DecoderSequence extends Decoder{constructor(e){super(e),this.decoders=e.decoders.map(i=>Decoder.fromConfig(i))}decode_chain(e){return this.decoders.reduce((i,o)=>o.decode_chain(i),e)}}class BPEDecoder extends Decoder{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map((i,o)=>i.replaceAll(this.suffix,o===e.length-1?"":" "))}}class VitsDecoder extends Decoder{decode_chain(e){let i="";for(let o=1;o<e.length;o+=2)i+=e[o];return[i]}}class MetaspacePreTokenizer extends PreTokenizer{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:i=void 0}={}){let o=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!o.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&i===0)&&(o=this.strRep+o),[o]}}class MetaspaceDecoder extends Decoder{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const i=[];for(let o=0;o<e.length;++o){let l=e[o].replaceAll(this.replacement," ");this.addPrefixSpace&&o==0&&l.startsWith(" ")&&(l=l.substring(1)),i.push(l)}return i}}class Precompiled extends Normalizer{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){return e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),e=e.replace(/[\u0009\u000A\u000C\u000D\u1680\u200B\u200C\u200E\u200F\u2028\u2029\u2581\uFEFF\uFFFD]/gm," "),e.includes("～")?e=e.split("～").map(o=>o.normalize("NFKC")).join("～"):e=e.normalize("NFKC"),e}}class PreTokenizerSequence extends PreTokenizer{constructor(e){super(),this.tokenizers=e.pretokenizers.map(i=>PreTokenizer.fromConfig(i))}pre_tokenize_text(e,i){return this.tokenizers.reduce((o,l)=>l.pre_tokenize(o,i),[e])}}class WhitespacePreTokenizer extends PreTokenizer{constructor(e){super()}pre_tokenize_text(e,i){return e.match(/\w+|[^\w\s]+/g)||[]}}class WhitespaceSplit extends PreTokenizer{constructor(e){super()}pre_tokenize_text(e,i){return whitespace_split(e)}}class ReplacePreTokenizer extends PreTokenizer{constructor(e){super(),this.config=e,this.pattern=createPattern(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,i){return this.pattern===null?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const SPECIAL_TOKEN_ATTRIBUTES=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function padHelper(n,e,i,o){for(const l of Object.keys(n)){const c=e-n[l].length,a=i(l),h=new Array(c).fill(a);n[l]=o==="right"?mergeArrays(n[l],h):mergeArrays(h,n[l])}}function truncateHelper(n,e){for(const i of Object.keys(n))n[i].length=e}class PreTrainedTokenizer extends Callable{constructor(i,o){super();Ae(this,"return_token_type_ids",!1);Ae(this,"_default_chat_template",`{% for message in messages %}{{'<|im_start|>' + message['role'] + '
' + message['content'] + '<|im_end|>' + '
'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant
' }}{% endif %}`);this._tokenizer_config=o,this.normalizer=Normalizer.fromConfig(i.normalizer),this.pre_tokenizer=PreTokenizer.fromConfig(i.pre_tokenizer),this.model=TokenizerModel.fromConfig(i.model,o),this.post_processor=PostProcessor.fromConfig(i.post_processor),this.decoder=Decoder.fromConfig(i.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const l of i.added_tokens){const c=new AddedToken(l);this.added_tokens.push(c),this.model.tokens_to_ids.set(c.content,c.id),this.model.vocab[c.id]=c.content,c.special&&(this.special_tokens.push(c.content),this.all_special_ids.push(c.id))}if(this.additional_special_tokens=o.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.map(l=>`${l.lstrip?"\\s*":""}(${escapeRegExp(l.content)})${l.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=o.model_max_length,this.remove_space=o.remove_space,this.clean_up_tokenization_spaces=o.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=o.do_lowercase_and_remove_accent??!1,this.padding_side="right",this.legacy=!1,this.chat_template=o.chat_template??null,Array.isArray(this.chat_template)){const l=Object.create(null);for(const{name:c,template:a}of this.chat_template){if(typeof c!="string"||typeof a!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');l[c]=a}this.chat_template=l}this._compiled_template_cache=new Map}getToken(...i){for(const o of i){const l=this._tokenizer_config[o];if(l)if(typeof l=="object"){if(l.__type==="AddedToken")return l.content;throw Error(`Unknown token: ${l}`)}else return l}return null}static async from_pretrained(i,{progress_callback:o=null,config:l=null,cache_dir:c=null,local_files_only:a=!1,revision:h="main",legacy:f=null}={}){const p=await loadTokenizer(i,{progress_callback:o,config:l,cache_dir:c,local_files_only:a,revision:h,legacy:f});return new this(...p)}_call(i,{text_pair:o=null,add_special_tokens:l=!0,padding:c=!1,truncation:a=null,max_length:h=null,return_tensor:f=!0,return_token_type_ids:p=null}={}){const d=Array.isArray(i);let r;if(d){if(i.length===0)throw Error("text array must be non-empty");if(o!==null){if(Array.isArray(o)){if(i.length!==o.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");r=i.map((u,s)=>this._encode_plus(u,o[s],{add_special_tokens:l,return_token_type_ids:p}))}else r=i.map(u=>this._encode_plus(u,null,{add_special_tokens:l,return_token_type_ids:p}))}else{if(i==null)throw Error("text may not be null or undefined");if(Array.isArray(o))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");r=[this._encode_plus(i,o,{add_special_tokens:l,return_token_type_ids:p})]}if(h===null?c==="max_length"?h=this.model_max_length:h=max(r.map(u=>u.input_ids.length))[0]:a||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),h=Math.min(h,this.model_max_length),c||a)for(let u=0;u<r.length;++u)r[u].input_ids.length!==h&&(r[u].input_ids.length>h?a&&truncateHelper(r[u],h):c&&padHelper(r[u],h,s=>s==="input_ids"?this.pad_token_id:0,this.padding_side));const t={};if(f){if(!(c&&a)&&r.some(s=>{var m;for(const g of Object.keys(s))if(s[g].length!==((m=r[0][g])==null?void 0:m.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const u=[r.length,r[0].input_ids.length];for(const s of Object.keys(r[0]))t[s]=new Tensor("int64",BigInt64Array.from(r.flatMap(m=>m[s]).map(BigInt)),u)}else{for(const u of Object.keys(r[0]))t[u]=r.map(s=>s[u]);if(!d)for(const u of Object.keys(t))t[u]=t[u][0]}return t}_encode_text(i){return i===null?null:(this.added_tokens_regex?i.split(this.added_tokens_regex).filter(c=>c):[i]).map((c,a)=>{if(this.added_tokens.find(f=>f.content===c)!==void 0)return c;{if(this.remove_space===!0&&(c=c.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(c=lowercase_and_remove_accent(c)),this.normalizer!==null&&(c=this.normalizer(c)),c.length===0)return[];const f=this.pre_tokenizer!==null?this.pre_tokenizer(c,{section_index:a}):[c];return this.model(f)}}).flat()}_encode_plus(i,o=null,{add_special_tokens:l=!0,return_token_type_ids:c=null}={}){const a=this._encode_text(i),h=this._encode_text(o),f=this.post_processor?this.post_processor(a,h,{add_special_tokens:l}):{tokens:mergeArrays(a??[],h??[])},p=this.model.convert_tokens_to_ids(f.tokens),d={input_ids:p,attention_mask:new Array(p.length).fill(1)};return(c??this.return_token_type_ids)&&f.token_type_ids&&(d.token_type_ids=f.token_type_ids),d}encode(i,o=null,{add_special_tokens:l=!0,return_token_type_ids:c=null}={}){const{input_ids:a}=this._encode_plus(i,o,{add_special_tokens:l,return_token_type_ids:c});return a}batch_decode(i,o={}){return i instanceof Tensor&&(i=i.tolist()),i.map(l=>this.decode(l,o))}decode(i,o={}){if(i instanceof Tensor&&(i=prepareTensorForDecode(i)),!Array.isArray(i)||i.length===0||!isIntegralNumber(i[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(i,o)}decode_single(i,{skip_special_tokens:o=!1,clean_up_tokenization_spaces:l=null}){let c=this.model.convert_ids_to_tokens(i);o&&(c=c.filter(h=>!this.special_tokens.includes(h)));let a=this.decoder?this.decoder(c):c.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(a=a.replaceAll(this.decoder.end_of_word_suffix," "),o&&(a=a.trim())),(l??this.clean_up_tokenization_spaces)&&(a=clean_up_tokenization(a)),a}get default_chat_template(){return this._warned_about_chat_template||(console.warn("No chat template is defined for this tokenizer - using a default chat template that implements the ChatML format. If the default is not appropriate for your model, please set `tokenizer.chat_template` to an appropriate template. See https://huggingface.co/docs/transformers/main/chat_templating for more information."),this._warned_about_chat_template=!0),this._default_chat_template}apply_chat_template(i,{chat_template:o=null,add_generation_prompt:l=!1,tokenize:c=!0,padding:a=!1,truncation:h=!1,max_length:f=null,return_tensor:p=!0,tokenizer_kwargs:d={},...r}={}){if(this.chat_template&&typeof this.chat_template=="object"||this.chat_template===null&&this.default_chat_template&&typeof this.default_chat_template=="object"){const m=this.chat_template??this.default_chat_template;if(o!==null&&Object.hasOwn(m,o))o=m[o];else if(o===null&&"default"in m)o=m.default;else if(o===null)throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(m).sort()}.`)}else o??(o=this.chat_template??this.default_chat_template);if(typeof o!="string")throw Error(`chat_template must be a string, but got ${typeof o}`);let t=this._compiled_template_cache.get(o);t===void 0&&(t=new Template(o),this._compiled_template_cache.set(o,t));const u=Object.create(null);for(const m of SPECIAL_TOKEN_ATTRIBUTES){const g=this.getToken(m);g&&(u[m]=g)}const s=t.render({messages:i,add_generation_prompt:l,...u,...r});return c?this._call(s,{add_special_tokens:!1,padding:a,truncation:h,max_length:f,return_tensor:p,...d}).input_ids:s}}class BertTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"return_token_type_ids",!0)}}class AlbertTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"return_token_type_ids",!0)}}class MobileBertTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"return_token_type_ids",!0)}}class SqueezeBertTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"return_token_type_ids",!0)}}class DebertaTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"return_token_type_ids",!0)}}class DebertaV2Tokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"return_token_type_ids",!0)}}class HerbertTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"return_token_type_ids",!0)}}class ConvBertTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"return_token_type_ids",!0)}}class RoFormerTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"return_token_type_ids",!0)}}class DistilBertTokenizer extends PreTrainedTokenizer{}class CamembertTokenizer extends PreTrainedTokenizer{}class XLMTokenizer extends PreTrainedTokenizer{constructor(i,o){super(i,o);Ae(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class ElectraTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"return_token_type_ids",!0)}}class T5Tokenizer extends PreTrainedTokenizer{}class GPT2Tokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"_default_chat_template",'{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}')}}class BartTokenizer extends PreTrainedTokenizer{}class MBartTokenizer extends PreTrainedTokenizer{constructor(e,i){super(e,i),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(o=>this.languageRegex.test(o)),this.lang_to_token=o=>o}_build_translation_inputs(e,i,o){return _build_translation_inputs(this,e,i,o)}}class MBart50Tokenizer extends MBartTokenizer{}class RobertaTokenizer extends PreTrainedTokenizer{}class BloomTokenizer extends GPT2Tokenizer{constructor(e,i){var c,a;const o=".,!?…。，、।۔،",l=(a=(c=e.pre_tokenizer)==null?void 0:c.pretokenizers[0])==null?void 0:a.pattern;l&&l.Regex===` ?[^(\\s|[${o}])]+`&&(l.Regex=` ?[^\\s${o}]+`),super(e,i)}}const SPIECE_UNDERLINE="▁";class LlamaTokenizer extends PreTrainedTokenizer{constructor(i,o){super(i,o);Ae(this,"_default_chat_template",`{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% elif USE_DEFAULT_PROMPT == true and not '<<SYS>>' in messages[0]['content'] %}{% set loop_messages = messages %}{% set system_message = 'DEFAULT_SYSTEM_MESSAGE' %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>
' + system_message + '
<</SYS>>

' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' %}{{ bos_token + '[INST] ' + content.strip() + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>
' + content.strip() + '
<</SYS>>

' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content.strip() + ' ' + eos_token }}{% endif %}{% endfor %}`);Ae(this,"DEFAULT_SYSTEM_PROMPT",`You are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.

If a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.`);this.use_default_system_prompt=o.use_default_system_prompt??!1,this.legacy=o.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new MetaspacePreTokenizer({replacement:SPIECE_UNDERLINE,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(i){if(i===null)return null;if(this.legacy||i.length===0)return super._encode_text(i);let o=super._encode_text(SPIECE_UNDERLINE+i.replaceAll(SPIECE_UNDERLINE," "));return o.length>1&&o[0]===SPIECE_UNDERLINE&&this.special_tokens.includes(o[1])&&(o=o.slice(1)),o}get default_chat_template(){return super.default_chat_template.replaceAll("USE_DEFAULT_PROMPT",this.use_default_system_prompt?"true":"false").replaceAll("DEFAULT_SYSTEM_MESSAGE",this.DEFAULT_SYSTEM_PROMPT.replaceAll(`
`,"\\n").replaceAll("'","\\'"))}}class CodeLlamaTokenizer extends LlamaTokenizer{}class XLMRobertaTokenizer extends PreTrainedTokenizer{}class MPNetTokenizer extends PreTrainedTokenizer{}class FalconTokenizer extends PreTrainedTokenizer{}class GPTNeoXTokenizer extends PreTrainedTokenizer{}class EsmTokenizer extends PreTrainedTokenizer{}class Qwen2Tokenizer extends PreTrainedTokenizer{}class GemmaTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"_default_chat_template",`{% if messages[0]['role'] == 'system' %}{{ raise_exception('System role not supported') }}{% endif %}{% for message in messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if (message['role'] == 'assistant') %}{% set role = 'model' %}{% else %}{% set role = message['role'] %}{% endif %}{{ '<start_of_turn>' + role + '
' + message['content'] | trim + '<end_of_turn>
' }}{% endfor %}{% if add_generation_prompt %}{{'<start_of_turn>model
'}}{% endif %}`)}}class Grok1Tokenizer extends PreTrainedTokenizer{}function _build_translation_inputs(n,e,i,o){if(!("language_codes"in n)||!Array.isArray(n.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in n)||!(n.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in n)||typeof n.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const l=o.src_lang,c=o.tgt_lang;if(!n.language_codes.includes(c))throw new Error(`Target language code "${c}" is not valid. Must be one of: {${n.language_codes.join(", ")}}`);if(l!==void 0){if(!n.language_codes.includes(l))throw new Error(`Source language code "${l}" is not valid. Must be one of: {${n.language_codes.join(", ")}}`);for(const a of n.post_processor.config.single)if("SpecialToken"in a&&n.languageRegex.test(a.SpecialToken.id)){a.SpecialToken.id=n.lang_to_token(l);break}}return o.forced_bos_token_id=n.model.convert_tokens_to_ids([n.lang_to_token(c)])[0],n._call(e,i)}class NllbTokenizer extends PreTrainedTokenizer{constructor(e,i){super(e,i),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(o=>this.languageRegex.test(o)),this.lang_to_token=o=>o}_build_translation_inputs(e,i,o){return _build_translation_inputs(this,e,i,o)}}class M2M100Tokenizer extends PreTrainedTokenizer{constructor(e,i){super(e,i),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(o=>this.languageRegex.test(o)).map(o=>o.slice(2,-2)),this.lang_to_token=o=>`__${o}__`}_build_translation_inputs(e,i,o){return _build_translation_inputs(this,e,i,o)}}const WHISPER_LANGUAGES=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],WHISPER_LANGUAGE_MAPPING=new Map(WHISPER_LANGUAGES),WHISPER_TO_LANGUAGE_CODE_MAPPING=new Map([...WHISPER_LANGUAGES.map(([n,e])=>[e,n]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);class WhisperTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"_default_chat_template",'{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}')}_decode_asr(i,{return_timestamps:o=!1,return_language:l=!1,time_precision:c=null,force_full_sequences:a=!0}={}){if(c===null)throw Error("Must specify time_precision");let h=null;const f=o==="word";function p(){return{language:h,timestamp:[null,null],text:""}}const d=[];let r=p(),t=0;const u=this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1;let s=[],m=[],g=!1,b=null;const y=new Set(this.all_special_ids);for(const v of i){const E=v.tokens,O=f?v.token_timestamps:null;let C=null,S=u;if("stride"in v){const[te,Z,Y]=v.stride;if(t-=Z,b=te-Y,Z&&(S=Z/c+u),Y)for(let G=E.length-1;G>=0;--G){const R=E[G];if(R>=u){if(C!==null&&(R-u)*c<b)break;C=R}}}let N=[],Q=[];for(let te=0;te<E.length;++te){const Z=E[te];if(y.has(Z)){const Y=this.decode([Z]),G=WHISPER_LANGUAGE_MAPPING.get(Y.slice(2,-2));if(G!==void 0){if(h!==null&&G!==h&&!o){s.push(N);const R=this.findLongestCommonSequence(s)[0],V=this.decode(R);r.text=V,d.push(r),s=[],N=[],r=p()}h=r.language=G}}else if(Z>=u){const Y=(Z-u)*c+t,G=round(Y,2);if(C!==null&&Z>=C)g=!0;else if(g||s.length>0&&Z<S)g=!1;else if(r.timestamp[0]===null)r.timestamp[0]=G;else if(G!==r.timestamp[0]){r.timestamp[1]=G,s.push(N),f&&m.push(Q);const[R,V]=this.findLongestCommonSequence(s,m),ce=this.decode(R);r.text=ce,f&&(r.words=this.collateWordTimestamps(R,V,h)),d.push(r),s=[],N=[],m=[],Q=[],r=p()}}else if(N.push(Z),f){let Y=round(O[te]+t,2),G;te+1<O.length?G=round(O[te+1]+t,2):G=null,Q.push([Y,G])}}if("stride"in v){const[te,Z,Y]=v.stride;t+=te-Y}N.length>0?(s.push(N),f&&m.push(Q)):s.every(te=>te.length===0)&&(r=p(),s=[],N=[],m=[],Q=[])}if(s.length>0){if(a&&o)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[v,E]=this.findLongestCommonSequence(s,m),O=this.decode(v);r.text=O,f&&(r.words=this.collateWordTimestamps(v,E,h)),d.push(r)}let w=Object.create(null);const x=d.map(v=>v.text).join("");if(o||l){for(let v=0;v<d.length;++v){const E=d[v];o||delete E.timestamp,l||delete E.language}if(f){const v=[];for(const E of d)for(const O of E.words)v.push(O);w={chunks:v}}else w={chunks:d}}return[x,w]}findLongestCommonSequence(i,o=null){let l=i[0],c=l.length,a=[];const h=Array.isArray(o)&&o.length>0;let f=h?[]:null,p=h?o[0]:null;for(let d=1;d<i.length;++d){const r=i[d];let t=0,u=[c,c,0,0];const s=r.length;for(let v=1;v<c+s;++v){const E=v/1e4,O=Math.max(0,c-v),C=Math.min(c,c+s-v),S=l.slice(O,C),N=Math.max(0,v-c),Q=Math.min(s,v),te=r.slice(N,Q);if(S.length!==te.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");const Z=S.filter((G,R)=>G===te[R]).length,Y=Z/v+E;Z>1&&Y>t&&(t=Y,u=[O,C,N,Q])}const[m,g,b,y]=u,w=Math.floor((g+m)/2),x=Math.floor((y+b)/2);a.push(...l.slice(0,w)),l=r.slice(x),c=l.length,h&&(f.push(...p.slice(0,w)),p=o[d].slice(x))}return a.push(...l),h?(f.push(...p),[a,f]):[a,[]]}collateWordTimestamps(i,o,l){const[c,a,h]=this.combineTokensIntoWords(i,l),f=[];for(let p=0;p<c.length;++p){const d=h[p];f.push({text:c[p],timestamp:[o[d.at(0)][0],o[d.at(-1)][1]]})}return f}combineTokensIntoWords(i,o,l=`"'“¡¿([{-`,c=`"'.。,，!！?？:：”)]}、`){o=o??"english";let a,h,f;return["chinese","japanese","thai","lao","myanmar"].includes(o)?[a,h,f]=this.splitTokensOnUnicode(i):[a,h,f]=this.splitTokensOnSpaces(i),this.mergePunctuations(a,h,f,l,c)}decode(i,o){let l;return o&&o.decode_with_timestamps?(i instanceof Tensor&&(i=prepareTensorForDecode(i)),l=this.decodeWithTimestamps(i,o)):l=super.decode(i,o),l}decodeWithTimestamps(i,o){const l=(o==null?void 0:o.time_precision)??.02,c=Array.from(this.all_special_ids).at(-1)+1;let a=[[]];for(const h of i)if(h>=c){const f=round((h-c)*l,2);a.push(`<|${f}|>`),a.push([])}else a[a.length-1].push(h);return a=a.map(h=>typeof h=="string"?h:super.decode(h,o)),a.join("")}splitTokensOnUnicode(i){const o=this.decode(i,{decode_with_timestamps:!0}),l="�",c=[],a=[],h=[];let f=[],p=[],d=0;for(let r=0;r<i.length;++r){const t=i[r];f.push(t),p.push(r);const u=this.decode(f,{decode_with_timestamps:!0});(!u.includes(l)||o[d+u.indexOf(l)]===l)&&(c.push(u),a.push(f),h.push(p),f=[],p=[],d+=u.length)}return[c,a,h]}splitTokensOnSpaces(i){const[o,l,c]=this.splitTokensOnUnicode(i),a=[],h=[],f=[],p=new RegExp(`^[${PUNCTUATION_REGEX}]$`,"gu");for(let d=0;d<o.length;++d){const r=o[d],t=l[d],u=c[d],s=t[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),m=r.startsWith(" "),g=r.trim(),b=p.test(g);if(s||m||b||a.length===0)a.push(r),h.push(t),f.push(u);else{const y=a.length-1;a[y]+=r,h[y].push(...t),f[y].push(...u)}}return[a,h,f]}mergePunctuations(i,o,l,c,a){const h=structuredClone(i),f=structuredClone(o),p=structuredClone(l);let d=h.length-2,r=h.length-1;for(;d>=0;)h[d].startsWith(" ")&&c.includes(h[d].trim())?(h[r]=h[d]+h[r],f[r]=mergeArrays(f[d],f[r]),p[r]=mergeArrays(p[d],p[r]),h[d]="",f[d]=[],p[d]=[]):r=d,--d;for(d=0,r=1;r<h.length;)!h[d].endsWith(" ")&&a.includes(h[r])?(h[d]+=h[r],f[d]=mergeArrays(f[d],f[r]),p[d]=mergeArrays(p[d],p[r]),h[r]="",f[r]=[],p[r]=[]):d=r,++r;return[h.filter(t=>t),f.filter(t=>t.length>0),p.filter(t=>t.length>0)]}get_decoder_prompt_ids({language:i=null,task:o=null,no_timestamps:l=!0}={}){const c=[];if(i){i=i.toLowerCase();let a=WHISPER_TO_LANGUAGE_CODE_MAPPING.get(i);if(a===void 0)if(WHISPER_LANGUAGE_MAPPING.has(i))a=i;else{const p=i.length===2?WHISPER_LANGUAGE_MAPPING.keys():WHISPER_LANGUAGE_MAPPING.values();throw new Error(`Language "${i}" is not supported. Must be one of: ${JSON.stringify(p)}`)}const h=this.model.tokens_to_ids.get(`<|${a}|>`);if(h===void 0)throw new Error(`Unable to find language "${a}" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.`);c.push(h)}else c.push(null);if(o){if(o=o.toLowerCase(),o!=="transcribe"&&o!=="translate")throw new Error(`Task "${o}" is not supported. Must be one of: ["transcribe", "translate"]`);const a=this.model.tokens_to_ids.get(`<|${o}|>`);if(a===void 0)throw new Error(`Unable to find task "${o}" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.`);c.push(a)}else c.push(null);if(l){const a=this.model.tokens_to_ids.get("<|notimestamps|>");if(a===void 0)throw new Error('Unable to find "<|notimestamps|>" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.');c.push(a)}return c.map((a,h)=>[h+1,a]).filter(a=>a[1]!==null)}}class CodeGenTokenizer extends PreTrainedTokenizer{}class CLIPTokenizer extends PreTrainedTokenizer{}class SiglipTokenizer extends PreTrainedTokenizer{}class MarianTokenizer extends PreTrainedTokenizer{constructor(e,i){super(e,i),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(o=>this.languageRegex.test(o)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(e===null)return null;const[i,...o]=e.trim().split(this.languageRegex);if(o.length===0)return super._encode_text(i);if(o.length===2){const[l,c]=o;return this.supported_language_codes.includes(l)||console.warn(`Unsupported language code "${l}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),mergeArrays([l],super._encode_text(c))}}}class Wav2Vec2CTCTokenizer extends PreTrainedTokenizer{}class BlenderbotTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ae(this,"_default_chat_template","{% for message in messages %}{% if message['role'] == 'user' %}{{ ' ' }}{% endif %}{{ message['content'] }}{% if not loop.last %}{{ '  ' }}{% endif %}{% endfor %}{{ eos_token }}")}}class BlenderbotSmallTokenizer extends BlenderbotTokenizer{}class SpeechT5Tokenizer extends PreTrainedTokenizer{}class NougatTokenizer extends PreTrainedTokenizer{}class VitsTokenizer extends PreTrainedTokenizer{constructor(e,i){super(e,i),this.decoder=new VitsDecoder({})}}class CohereTokenizer extends PreTrainedTokenizer{}class AutoTokenizer{static async from_pretrained(e,{quantized:i=!0,progress_callback:o=null,config:l=null,cache_dir:c=null,local_files_only:a=!1,revision:h="main",legacy:f=null}={}){var u;const[p,d]=await loadTokenizer(e,{quantized:i,progress_callback:o,config:l,cache_dir:c,local_files_only:a,revision:h,legacy:f}),r=((u=d.tokenizer_class)==null?void 0:u.replace(/Fast$/,""))??"PreTrainedTokenizer";let t=this.TOKENIZER_CLASS_MAPPING[r];return t||(console.warn(`Unknown tokenizer class "${r}", attempting to construct from base class.`),t=PreTrainedTokenizer),new t(p,d)}}Ae(AutoTokenizer,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer,DistilBertTokenizer,CamembertTokenizer,DebertaTokenizer,DebertaV2Tokenizer,BertTokenizer,HerbertTokenizer,ConvBertTokenizer,RoFormerTokenizer,XLMTokenizer,ElectraTokenizer,MobileBertTokenizer,SqueezeBertTokenizer,AlbertTokenizer,GPT2Tokenizer,BartTokenizer,MBartTokenizer,MBart50Tokenizer,RobertaTokenizer,WhisperTokenizer,CodeGenTokenizer,CLIPTokenizer,SiglipTokenizer,MarianTokenizer,BloomTokenizer,NllbTokenizer,M2M100Tokenizer,LlamaTokenizer,CodeLlamaTokenizer,XLMRobertaTokenizer,MPNetTokenizer,FalconTokenizer,GPTNeoXTokenizer,EsmTokenizer,Wav2Vec2CTCTokenizer,BlenderbotTokenizer,BlenderbotSmallTokenizer,SpeechT5Tokenizer,NougatTokenizer,VitsTokenizer,Qwen2Tokenizer,GemmaTokenizer,Grok1Tokenizer,CohereTokenizer,PreTrainedTokenizer});async function loadConfig(n,e){return await getModelJSON(n,"config.json",!0,e)}class PretrainedConfig{constructor(e){this.model_type=null,this.is_encoder_decoder=!1,Object.assign(this,e)}static async from_pretrained(e,{progress_callback:i=null,config:o=null,cache_dir:l=null,local_files_only:c=!1,revision:a="main"}={}){let h=o??await loadConfig(e,{progress_callback:i,config:o,cache_dir:l,local_files_only:c,revision:a});return new this(h)}}class AutoConfig{static async from_pretrained(...e){return PretrainedConfig.from_pretrained(...e)}}class LogitsProcessorList extends Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,i){for(let o of i)this.processors.forEach(l=>l(e,o))}[Symbol.iterator](){return this.processors.values()}}class LogitsProcessor extends Callable{_call(e,i){throw Error("`_call` should be implemented in a subclass")}}class ForceTokensLogitsProcessor extends LogitsProcessor{constructor(e){super(),this.force_token_map=Object.fromEntries(e??[])}_call(e,i){let o=this.force_token_map[e.length];return exists(o)&&(i.data.fill(-1/0),i.data[o]=0),i}}class ForcedBOSTokenLogitsProcessor extends LogitsProcessor{constructor(e){super(),this.bos_token_id=e}_call(e,i){return e.length===1&&(i.data.fill(-1/0),i.data[this.bos_token_id]=0),i}}class ForcedEOSTokenLogitsProcessor extends LogitsProcessor{constructor(e,i){super(),this.max_length=e,this.forced_eos_token_id=i}_call(e,i){}}class SuppressTokensAtBeginLogitsProcessor extends LogitsProcessor{constructor(e,i){super(),this.begin_suppress_tokens=e,this.begin_index=i}_call(e,i){if(e.length===this.begin_index)for(let o of this.begin_suppress_tokens)i.data[o]=-1/0;return i}}class WhisperTimeStampLogitsProcessor extends LogitsProcessor{constructor(e){super(),this.eos_token_id=e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=(e.forced_decoder_ids||[]).length+2,e.forced_decoder_ids.slice(-1)[0][1]===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,i){const o=i.data;if(o[this.no_timestamps_token_id]=-1/0,e.length===this.begin_index-1)return o.fill(-1/0),o[this.timestamp_begin]=0,i;const l=e.slice(this.begin_index),c=l.length>=1&&l[l.length-1]>=this.timestamp_begin,a=l.length<2||l[l.length-2]>=this.timestamp_begin;if(c&&(a?o.subarray(this.timestamp_begin).fill(-1/0):o.subarray(0,this.eos_token_id).fill(-1/0)),e.length===this.begin_index&&this.max_initial_timestamp_index!==null){const d=this.timestamp_begin+this.max_initial_timestamp_index;o.subarray(d+1).fill(-1/0)}const h=log_softmax(o),f=Math.log(h.subarray(this.timestamp_begin).map(Math.exp).reduce((d,r)=>d+r)),p=max(h.subarray(0,this.timestamp_begin))[0];return f>p&&o.subarray(0,this.timestamp_begin).fill(-1/0),i}}class NoRepeatNGramLogitsProcessor extends LogitsProcessor{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const i=e.length,o=[];for(let c=0;c<i+1-this.no_repeat_ngram_size;++c){const a=[];for(let h=0;h<this.no_repeat_ngram_size;++h)a.push(e[c+h]);o.push(a)}const l=new Map;for(const c of o){const a=c.slice(0,c.length-1),h=JSON.stringify(a),f=l.get(h)??[];f.push(c[c.length-1]),l.set(h,f)}return l}getGeneratedNgrams(e,i){const o=i.slice(i.length+1-this.no_repeat_ngram_size,i.length);return e.get(JSON.stringify(o))??[]}calcBannedNgramTokens(e){const i=[];if(e.length+1<this.no_repeat_ngram_size)return i;{const o=this.getNgrams(e);return this.getGeneratedNgrams(o,e)}}_call(e,i){const o=this.calcBannedNgramTokens(e);for(const l of o)i.data[l]=-1/0;return i}}class RepetitionPenaltyLogitsProcessor extends LogitsProcessor{constructor(e){super(),this.penalty=e}_call(e,i){for(const o of e)i.data[o]<0?i.data[o]*=this.penalty:i.data[o]/=this.penalty;return i}}class MinLengthLogitsProcessor extends LogitsProcessor{constructor(e,i){super(),this.min_length=e,this.eos_token_id=Array.isArray(i)?i:[i]}_call(e,i){if(e.length<this.min_length)for(const o of this.eos_token_id)i.data[o]=-1/0;return i}}class MinNewTokensLengthLogitsProcessor extends LogitsProcessor{constructor(e,i,o){super(),this.prompt_length_to_skip=e,this.min_new_tokens=i,this.eos_token_id=Array.isArray(o)?o:[o]}_call(e,i){if(e.length-this.prompt_length_to_skip<this.min_new_tokens)for(const l of this.eos_token_id)i.data[l]=-1/0;return i}}class NoBadWordsLogitsProcessor extends LogitsProcessor{constructor(e,i){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(i)?i:[i]}_call(e,i){for(const o of this.bad_words_ids){let l=!0;for(let c=1;c<=o.length-1&&o.length<e.length;++c)if(o.at(-c-1)!==e.at(-c)){l=!1;break}l&&(i.data[o.at(-1)]=-1/0)}return i}}const GenerationConfig=class{constructor(n={}){this.max_length=n.max_length??20,this.max_new_tokens=n.max_new_tokens??null,this.min_length=n.min_length??0,this.min_new_tokens=n.min_new_tokens??null,this.early_stopping=n.early_stopping??!1,this.max_time=n.max_time??null,this.do_sample=n.do_sample??!1,this.num_beams=n.num_beams??1,this.num_beam_groups=n.num_beam_groups??1,this.penalty_alpha=n.penalty_alpha??null,this.use_cache=n.use_cache??!0,this.temperature=n.temperature??1,this.top_k=n.top_k??50,this.top_p=n.top_p??1,this.typical_p=n.typical_p??1,this.epsilon_cutoff=n.epsilon_cutoff??0,this.eta_cutoff=n.eta_cutoff??0,this.diversity_penalty=n.diversity_penalty??0,this.repetition_penalty=n.repetition_penalty??1,this.encoder_repetition_penalty=n.encoder_repetition_penalty??1,this.length_penalty=n.length_penalty??1,this.no_repeat_ngram_size=n.no_repeat_ngram_size??0,this.bad_words_ids=n.bad_words_ids??null,this.force_words_ids=n.force_words_ids??null,this.renormalize_logits=n.renormalize_logits??!1,this.constraints=n.constraints??null,this.forced_bos_token_id=n.forced_bos_token_id??null,this.forced_eos_token_id=n.forced_eos_token_id??null,this.remove_invalid_values=n.remove_invalid_values??!1,this.exponential_decay_length_penalty=n.exponential_decay_length_penalty??null,this.suppress_tokens=n.suppress_tokens??null,this.begin_suppress_tokens=n.begin_suppress_tokens??null,this.forced_decoder_ids=n.forced_decoder_ids??null,this.num_return_sequences=n.num_return_sequences??1,this.output_attentions=n.output_attentions??!1,this.output_hidden_states=n.output_hidden_states??!1,this.output_scores=n.output_scores??!1,this.return_dict_in_generate=n.return_dict_in_generate??!1,this.pad_token_id=n.pad_token_id??null,this.bos_token_id=n.bos_token_id??null,this.eos_token_id=n.eos_token_id??null,this.encoder_no_repeat_ngram_size=n.encoder_no_repeat_ngram_size??0,this.decoder_start_token_id=n.decoder_start_token_id??null,this.generation_kwargs=n.generation_kwargs??{}}};class Sampler extends Callable{constructor(e){super(),this.generation_config=e}_call(e,i=-1){return this.sample(e,i)}sample(e,i){throw Error("sample should be implemented in subclasses.")}getLogits(e,i){let o=e.dims.at(-1),l=e.data;if(i===-1)l=l.slice(-o);else{let c=i*o;l=l.slice(c,c+o)}return this.generation_config.temperature>0&&(l=l.map(c=>c/this.generation_config.temperature)),l}randomSelect(e){let i=e.reduce((l,c)=>l+c,0),o=Math.random()*i;for(let l=0;l<e.length;++l)if(o-=e[l],o<=0)return l;return 0}static getSampler(e){if(e.do_sample)return new MultinomialSampler(e);if(e.num_beams>1)return new BeamSearchSampler(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new GreedySampler(e)}}class GreedySampler extends Sampler{sample(e,i=-1){let o=this.getLogits(e,i);return[[max(o)[1],0]]}}class MultinomialSampler extends Sampler{sample(e,i=-1){let o=e.dims.at(-1);this.generation_config.top_k>0&&(o=Math.min(this.generation_config.top_k,o));const l=this.getLogits(e,i),c=getTopItems(l,o),a=softmax(c.map(h=>h[1]));return Array.from({length:this.generation_config.num_beams},()=>{const h=this.randomSelect(a);return[c[h][0],Math.log(a[h])]})}}class BeamSearchSampler extends Sampler{sample(e,i=-1){let o=e.dims.at(-1);this.generation_config.top_k>0&&(o=Math.min(this.generation_config.top_k,o));const l=this.getLogits(e,i),c=getTopItems(l,o),a=softmax(c.map(h=>h[1]));return Array.from({length:this.generation_config.num_beams},(h,f)=>[c[f][0],Math.log(a[f])])}}const{InferenceSession,Tensor:ONNXTensor,env}=ONNX,MODEL_TYPES={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5},MODEL_TYPE_MAPPING=new Map,MODEL_NAME_TO_CLASS_MAPPING=new Map,MODEL_CLASS_TO_NAME_MAPPING=new Map;async function constructSession(n,e,i){let o=`onnx/${e}${i.quantized?"_quantized":""}.onnx`,l=await getModelFile(n,o,!0,i);try{return await InferenceSession.create(l,{executionProviders})}catch(c){if(executionProviders.length===1&&executionProviders[0]==="wasm")throw c;return console.warn(c),console.warn("Something went wrong during model construction (most likely a missing operation). Using `wasm` as a fallback. "),await InferenceSession.create(l,{executionProviders:["wasm"]})}}function validateInputs(n,e){const i=Object.create(null),o=[];for(const a of n.inputNames){const h=e[a];if(!(h instanceof Tensor)){o.push(a);continue}i[a]=env.wasm.proxy?h.clone():h}if(o.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${o.join(", ")}.`);const l=Object.keys(e).length,c=n.inputNames.length;if(l>c){let a=Object.keys(e).filter(h=>!n.inputNames.includes(h));console.warn(`WARNING: Too many inputs were provided (${l} > ${c}). The following inputs will be ignored: "${a.join(", ")}".`)}return i}async function sessionRun(n,e){const i=validateInputs(n,e);try{let o=await n.run(i);return o=replaceTensors(o),o}catch(o){throw console.error(`An error occurred during model execution: "${o}".`),console.error("Inputs given to model:",i),o}}function replaceTensors(n){for(let e in n)n[e]instanceof ONNXTensor?n[e]=new Tensor(n[e]):typeof n[e]=="object"&&replaceTensors(n[e]);return n}function toI64Tensor(n){if(n instanceof Tensor)return n;if(n.length===0)throw Error("items must be non-empty");if(Array.isArray(n[0])){if(n.some(e=>e.length!==n[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new Tensor("int64",BigInt64Array.from(n.flat().map(e=>BigInt(e))),[n.length,n[0].length])}else return new Tensor("int64",BigInt64Array.from(n.map(e=>BigInt(e))),[1,n.length])}function prepareAttentionMask(n,e){let i=n.config.pad_token_id??null,o=n.config.eos_token_id??null;isIntegralNumber(o)&&(o=[o]);let l=e.indexOf(i)!==-1,c=o===null||!o.includes(i);if(l&&c){let a=BigInt64Array.from(e.data.map(h=>h!=i));return new Tensor("int64",a,e.dims)}else return ones_like(e)}function preparePositionIds(n,e,i){if(!n.inputNames.includes("position_ids"))return;const o=new BigInt64Array(e.attention_mask.data.length);for(let l=0;l<e.attention_mask.dims[0];++l){let c=l*e.attention_mask.dims[1],a=BigInt(0);for(let h=0;h<e.attention_mask.dims[1];++h){const f=c+h;e.attention_mask.data[f]===0n?o[f]=BigInt(1):(o[f]=a,a+=e.attention_mask.data[f])}}e.position_ids=new Tensor("int64",o,e.attention_mask.dims),i&&(e.position_ids=e.position_ids.slice(null,-1).unsqueeze_(-1))}function boolTensor(n){return new Tensor("bool",[n],[1])}async function seq2seqForward(n,e){let{encoder_outputs:i,past_key_values:o}=e;i||(i=(await encoderForward(n,e)).last_hidden_state);let l={input_ids:e.decoder_input_ids,encoder_hidden_states:i};const c=!!o;n.decoder_merged_session.inputNames.includes("use_cache_branch")&&(l.use_cache_branch=boolTensor(c)),n.decoder_merged_session.inputNames.includes("encoder_attention_mask")&&(l.encoder_attention_mask=e.attention_mask),preparePositionIds(n.decoder_merged_session,l,c),n.addPastKeyValues(l,o);const a=await sessionRun(n.decoder_merged_session,l);let h=a.logits;o=n.getPastKeyValues(a,o);const f=n.getAttentions(a);return new Seq2SeqLMOutput({logits:h,past_key_values:o,encoder_outputs:i,...f})}function seq2seqStartBeams(n,e,i,o){let l=[],c=0;const a=n.requires_attention_mask??!0;let h=i.decoder_input_ids??i.decoder_start_token_id??i.bos_token_id??i.eos_token_id;h instanceof Tensor?h=h.tolist().flat():Array.isArray(h)||(h=[h]);for(let f of e){f.dims=[1,...f.dims];let p={inputs:f,encoder_outputs:null,prev_model_outputs:null,output_token_ids:h,done:!1,score:0,id:c++};a&&(p.attention_mask=prepareAttentionMask(n,f)),l.push(p)}return l}async function seq2seqRunBeam(n,e){var a;const i=n.main_input_name;let o=e.output_token_ids;e.prev_model_outputs&&(o=o.slice(-1));let l={[i]:e.inputs,decoder_input_ids:toI64Tensor(o),encoder_outputs:e.encoder_outputs,past_key_values:(a=e.prev_model_outputs)==null?void 0:a.past_key_values};e.attention_mask&&(l.attention_mask=e.attention_mask);let c=await n.forward(l);return e.prev_model_outputs=c,e.encoder_outputs=c.encoder_outputs,c}function seq2seqUpdatebeam(n,e){n.output_token_ids=[...n.output_token_ids,e]}async function encoderForward(n,e){const i=Object.create(null);for(const o of n.session.inputNames)i[o]=e[o];return n.session.inputNames.includes("token_type_ids")&&!i.token_type_ids&&(i.token_type_ids=new Tensor("int64",new BigInt64Array(i.input_ids.data.length),i.input_ids.dims)),await sessionRun(n.session,i)}async function decoderForward(n,e){let{input_ids:i,past_key_values:o,attention_mask:l}=e,c={input_ids:i,attention_mask:l??prepareAttentionMask(n,i)};const a=!!o;n.session.inputNames.includes("use_cache_branch")&&(c.use_cache_branch=boolTensor(a)),preparePositionIds(n.session,c,a),n.addPastKeyValues(c,o);let h=await sessionRun(n.session,c),f=h.logits;return o=n.getPastKeyValues(h,o),{logits:f,past_key_values:o}}function decoderStartBeams(n,e,i,o,l){let c=[],a=0;for(let h of e){let f=h.tolist().map(Number);h.dims=[1,...h.dims];let p;l?(p=l[a],p.dims=[1,...p.dims]):p=prepareAttentionMask(n,h);let d={input:h,model_input_ids:h,attention_mask:p,prev_model_outputs:null,output_token_ids:f,num_output_tokens:o,done:!1,score:0,id:a++};c.push(d)}return c}async function decoderRunBeam(n,e){var c;let i=new BigInt64Array(e.output_token_ids.length).fill(1n),o={input_ids:e.model_input_ids,attention_mask:new Tensor("int64",i,[1,i.length]),past_key_values:(c=e.prev_model_outputs)==null?void 0:c.past_key_values},l=await n.forward(o);return e.prev_model_outputs=l,l}function decoderUpdatebeam(n,e){n.output_token_ids=[...n.output_token_ids,e],n.model_input_ids=new Tensor("int64",[BigInt(e)],[1,1])}class PreTrainedModel extends Callable{constructor(i,o){super();Ae(this,"main_input_name","input_ids");this.config=i,this.session=o;const l=MODEL_CLASS_TO_NAME_MAPPING.get(this.constructor),c=MODEL_TYPE_MAPPING.get(l);this.can_generate=!1,this._runBeam=null,this._getStartBeams=null,this._updateBeam=null,this._forward=null,c===MODEL_TYPES.DecoderOnly?(this.can_generate=!0,this._runBeam=decoderRunBeam,this._getStartBeams=decoderStartBeams,this._updateBeam=decoderUpdatebeam,this._forward=decoderForward):c===MODEL_TYPES.Seq2Seq||c===MODEL_TYPES.Vision2Seq?(this.can_generate=!0,this._runBeam=seq2seqRunBeam,this._getStartBeams=seq2seqStartBeams,this._updateBeam=seq2seqUpdatebeam,this._forward=seq2seqForward):c===MODEL_TYPES.EncoderDecoder?this._forward=encoderForward:this._forward=encoderForward}async dispose(){const i=[];for(let o of Object.keys(this)){const l=this[o];l instanceof InferenceSession&&i.push(l.handler.dispose())}return await Promise.all(i)}static async from_pretrained(i,{quantized:o=!0,progress_callback:l=null,config:c=null,cache_dir:a=null,local_files_only:h=!1,revision:f="main",model_file_name:p=null}={}){let d={quantized:o,progress_callback:l,config:c,cache_dir:a,local_files_only:h,revision:f,model_file_name:p};const r=MODEL_CLASS_TO_NAME_MAPPING.get(this),t=MODEL_TYPE_MAPPING.get(r);let u;return t===MODEL_TYPES.DecoderOnly?u=await Promise.all([AutoConfig.from_pretrained(i,d),constructSession(i,d.model_file_name??"decoder_model_merged",d),getModelJSON(i,"generation_config.json",!1,d)]):t===MODEL_TYPES.Seq2Seq||t===MODEL_TYPES.Vision2Seq?u=await Promise.all([AutoConfig.from_pretrained(i,d),constructSession(i,"encoder_model",d),constructSession(i,"decoder_model_merged",d),getModelJSON(i,"generation_config.json",!1,d)]):t===MODEL_TYPES.MaskGeneration?u=await Promise.all([AutoConfig.from_pretrained(i,d),constructSession(i,"vision_encoder",d),constructSession(i,"prompt_encoder_mask_decoder",d)]):t===MODEL_TYPES.EncoderDecoder?u=await Promise.all([AutoConfig.from_pretrained(i,d),constructSession(i,"encoder_model",d),constructSession(i,"decoder_model_merged",d)]):(t!==MODEL_TYPES.EncoderOnly&&console.warn(`Model type for '${r??(c==null?void 0:c.model_type)}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`),u=await Promise.all([AutoConfig.from_pretrained(i,d),constructSession(i,d.model_file_name??"model",d)])),new this(...u)}async _call(i){return await this.forward(i)}async forward(i){return await this._forward(this,i)}_get_logits_processor(i,o,l=null){const c=new LogitsProcessorList;if(i.repetition_penalty!==null&&i.repetition_penalty!==1&&c.push(new RepetitionPenaltyLogitsProcessor(i.repetition_penalty)),i.no_repeat_ngram_size!==null&&i.no_repeat_ngram_size>0&&c.push(new NoRepeatNGramLogitsProcessor(i.no_repeat_ngram_size)),i.bad_words_ids!==null&&c.push(new NoBadWordsLogitsProcessor(i.bad_words_ids,i.eos_token_id)),i.min_length!==null&&i.eos_token_id!==null&&i.min_length>0&&c.push(new MinLengthLogitsProcessor(i.min_length,i.eos_token_id)),i.min_new_tokens!==null&&i.eos_token_id!==null&&i.min_new_tokens>0&&c.push(new MinNewTokensLengthLogitsProcessor(o,i.min_new_tokens,i.eos_token_id)),i.forced_bos_token_id!==null&&c.push(new ForcedBOSTokenLogitsProcessor(i.forced_bos_token_id)),i.forced_eos_token_id!==null&&c.push(new ForcedEOSTokenLogitsProcessor(i.max_length,i.forced_eos_token_id)),i.begin_suppress_tokens!==null){let a=o>1||i.forced_bos_token_id===null?o:o+1;i.forced_decoder_ids!==null&&(a+=i.forced_decoder_ids[i.forced_decoder_ids.length-1][0]),c.push(new SuppressTokensAtBeginLogitsProcessor(i.begin_suppress_tokens,a))}return i.forced_decoder_ids!==null&&c.push(new ForceTokensLogitsProcessor(i.forced_decoder_ids)),l!==null&&c.extend(l),c}_get_generation_config(i){let o=new GenerationConfig(this.config);return"generation_config"in this&&Object.assign(o,this.generation_config),i!==null&&Object.assign(o,i),o}async generate(i,o=null,l=null,{inputs_attention_mask:c=null}={}){if(!this.can_generate){let b=`The current model class (${MODEL_CLASS_TO_NAME_MAPPING.get(this.constructor)}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;const y=this.config.model_type,w=MODEL_WITH_LM_HEAD_MAPPING_NAMES.get(y)??MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING_NAMES.get(y)??MODEL_FOR_SPEECH_SEQ_2_SEQ_MAPPING_NAMES.get(y)??MODEL_FOR_VISION_2_SEQ_MAPPING_NAMES.get(y);throw w&&(b+=` Please use the following class instead: '${w[0]}'`),Error(b)}if(!(i instanceof Tensor)&&!isTypedArray(i)&&!Array.isArray(i))throw Error(`\`inputs\` must be a Tensor, TypedArray, or Array, but is "${i.constructor.name}".`);let a;if(this.config.is_encoder_decoder)a=0;else if(a=i instanceof Tensor?i.dims.at(-1):i.length,a===0)throw Error("Must supply a non-empty array of input token ids.");o=this._get_generation_config(o),l=l??new LogitsProcessorList,l=this._get_logits_processor(o,a,l);let h=o.eos_token_id;h!==null&&!Array.isArray(h)&&(h=[h]);let f=1;const p=f+(o.max_new_tokens??1/0),d=Number.isInteger(o.max_length)&&(o.max_new_tokens??null)===null;let r=Sampler.getSampler(o),t=this.getStartBeams(i,o,f,c);for(;t.some(g=>!g.done)&&f<p;){let g=[];for(let b of t){if(b.done){g.push(b);continue}if(d&&b.output_token_ids.length>=o.max_length){b.done=!0,g.push(b);continue}let y=await this.runBeam(b);o.output_attentions&&this.addAttentionsToBeam(b,y),o.output_scores;let w=y.logits.slice(null,-1,null);l(b.output_token_ids,w);let x=r(w);for(let[v,E]of x){let O={...b};this.updateBeam(O,v),O.score+=E,h&&h.includes(v)&&(O.done=!0),g.push(O)}}++f,g=this.groupBeams(g).map(b=>b.sort((y,w)=>w.score-y.score).slice(0,o.num_beams)),t=g.flat(),o.callback_function&&o.callback_function(t)}const u=this.groupBeams(t),s=g=>u.map(b=>o.num_return_sequences>1?b.slice(0,o.num_return_sequences).map(y=>y[g]):[b[0][g]]).flat(),m=s("output_token_ids");if(o.return_dict_in_generate){const g=s("decoder_attentions"),b=s("cross_attentions");return{sequences:m,decoder_attentions:g,cross_attentions:b}}else return m}addAttentionsToBeam(i,o){if(this.config.is_encoder_decoder){if(!o.cross_attentions||o.cross_attentions.length===0)throw Error("`output_attentions` is true, but the model did not produce cross-attentions. This is most likely because the model was not exported with `output_attentions=True`.");i.cross_attentions||(i.cross_attentions=[]),i.cross_attentions.push(o.cross_attentions)}if(!o.decoder_attentions||o.decoder_attentions.length===0)throw Error("`output_attentions` is true, but the model did not produce decoder-attentions. This is most likely because the model was not exported with `output_attentions=True`.");i.decoder_attentions||(i.decoder_attentions=[]),i.decoder_attentions.push(o.decoder_attentions)}groupBeams(i){const o=Object.create(null);for(const l of i)o[l.id]===void 0?o[l.id]=[l]:o[l.id].push(l);return Object.values(o)}getPastKeyValues(i,o){const l=Object.create(null);for(const c in i)if(c.startsWith("present")){let a=c.replace("present","past_key_values");o&&c.includes("encoder")?l[a]=o[a]:l[a]=i[c]}return l}getAttentions(i){const o=Object.create(null);for(const l of["cross_attentions","decoder_attentions"]){const c=[];for(const a in i)if(a.startsWith(l)){const h=a.split(".").pop();c[h]=i[a]}o[l]=c}return o}addPastKeyValues(i,o){if(o)Object.assign(i,o);else if(this.config.is_encoder_decoder&&(this.add_encoder_pkv??!0)){let c=[1,this.num_encoder_heads,0,this.encoder_dim_kv],a=[1,this.num_decoder_heads,0,this.decoder_dim_kv];for(let h=0;h<this.num_decoder_layers;++h)i[`past_key_values.${h}.encoder.key`]=new Tensor("float32",[],c),i[`past_key_values.${h}.encoder.value`]=new Tensor("float32",[],c),i[`past_key_values.${h}.decoder.key`]=new Tensor("float32",[],a),i[`past_key_values.${h}.decoder.value`]=new Tensor("float32",[],a)}else if(this.config.model_type==="falcon"){let c=[1*this.num_heads,0,this.dim_kv];for(let a=0;a<this.num_layers;++a)i[`past_key_values.${a}.key`]=new Tensor("float32",[],c),i[`past_key_values.${a}.value`]=new Tensor("float32",[],c)}else if(this.config.multi_query){let c=[1*this.num_heads,0,2*this.dim_kv];for(let a=0;a<this.num_layers;++a)i[`past_key_values.${a}.key_value`]=new Tensor("float32",[],c)}else if(this.config.model_type==="bloom"){let c=[1*this.num_heads,this.dim_kv,0],a=[1*this.num_heads,0,this.dim_kv];for(let h=0;h<this.num_layers;++h)i[`past_key_values.${h}.key`]=new Tensor("float32",[],c),i[`past_key_values.${h}.value`]=new Tensor("float32",[],a)}else{let c=[1,this.num_heads,0,this.dim_kv];for(let a=0;a<this.num_layers;++a)i[`past_key_values.${a}.key`]=new Tensor("float32",[],c),i[`past_key_values.${a}.value`]=new Tensor("float32",[],c)}}getStartBeams(i,o,l,c){return this._getStartBeams(this,i,o,l,c)}async runBeam(i){return await this._runBeam(this,i)}updateBeam(i,o){return this._updateBeam(i,o)}}class ModelOutput{}class BertPreTrainedModel extends PreTrainedModel{}class BertModel extends BertPreTrainedModel{}class BertForMaskedLM extends BertPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class BertForSequenceClassification extends BertPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class BertForTokenClassification extends BertPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class BertForQuestionAnswering extends BertPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class NomicBertPreTrainedModel extends PreTrainedModel{}class NomicBertModel extends NomicBertPreTrainedModel{}class RoFormerPreTrainedModel extends PreTrainedModel{}class RoFormerModel extends RoFormerPreTrainedModel{}class RoFormerForMaskedLM extends RoFormerPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class RoFormerForSequenceClassification extends RoFormerPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class RoFormerForTokenClassification extends RoFormerPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class RoFormerForQuestionAnswering extends RoFormerPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class ConvBertPreTrainedModel extends PreTrainedModel{}class ConvBertModel extends ConvBertPreTrainedModel{}class ConvBertForMaskedLM extends ConvBertPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class ConvBertForSequenceClassification extends ConvBertPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class ConvBertForTokenClassification extends ConvBertPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class ConvBertForQuestionAnswering extends ConvBertPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class ElectraPreTrainedModel extends PreTrainedModel{}class ElectraModel extends ElectraPreTrainedModel{}class ElectraForMaskedLM extends ElectraPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class ElectraForSequenceClassification extends ElectraPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class ElectraForTokenClassification extends ElectraPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class ElectraForQuestionAnswering extends ElectraPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class CamembertPreTrainedModel extends PreTrainedModel{}class CamembertModel extends CamembertPreTrainedModel{}class CamembertForMaskedLM extends CamembertPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class CamembertForSequenceClassification extends CamembertPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class CamembertForTokenClassification extends CamembertPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class CamembertForQuestionAnswering extends CamembertPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class DebertaPreTrainedModel extends PreTrainedModel{}class DebertaModel extends DebertaPreTrainedModel{}class DebertaForMaskedLM extends DebertaPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class DebertaForSequenceClassification extends DebertaPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class DebertaForTokenClassification extends DebertaPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class DebertaForQuestionAnswering extends DebertaPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class DebertaV2PreTrainedModel extends PreTrainedModel{}class DebertaV2Model extends DebertaV2PreTrainedModel{}class DebertaV2ForMaskedLM extends DebertaV2PreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class DebertaV2ForSequenceClassification extends DebertaV2PreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class DebertaV2ForTokenClassification extends DebertaV2PreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class DebertaV2ForQuestionAnswering extends DebertaV2PreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class DistilBertPreTrainedModel extends PreTrainedModel{}class DistilBertModel extends DistilBertPreTrainedModel{}class DistilBertForSequenceClassification extends DistilBertPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class DistilBertForTokenClassification extends DistilBertPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class DistilBertForQuestionAnswering extends DistilBertPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class DistilBertForMaskedLM extends DistilBertPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class EsmPreTrainedModel extends PreTrainedModel{}class EsmModel extends EsmPreTrainedModel{}class EsmForMaskedLM extends EsmPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class EsmForSequenceClassification extends EsmPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class EsmForTokenClassification extends EsmPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class MobileBertPreTrainedModel extends PreTrainedModel{}class MobileBertModel extends MobileBertPreTrainedModel{}class MobileBertForMaskedLM extends MobileBertPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class MobileBertForSequenceClassification extends MobileBertPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class MobileBertForQuestionAnswering extends MobileBertPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class MPNetPreTrainedModel extends PreTrainedModel{}class MPNetModel extends MPNetPreTrainedModel{}class MPNetForMaskedLM extends MPNetPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class MPNetForSequenceClassification extends MPNetPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class MPNetForTokenClassification extends MPNetPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class MPNetForQuestionAnswering extends MPNetPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class SqueezeBertPreTrainedModel extends PreTrainedModel{}class SqueezeBertModel extends SqueezeBertPreTrainedModel{}class SqueezeBertForMaskedLM extends SqueezeBertPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class SqueezeBertForSequenceClassification extends SqueezeBertPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class SqueezeBertForQuestionAnswering extends SqueezeBertPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class AlbertPreTrainedModel extends PreTrainedModel{}class AlbertModel extends AlbertPreTrainedModel{}class AlbertForSequenceClassification extends AlbertPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class AlbertForQuestionAnswering extends AlbertPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class AlbertForMaskedLM extends AlbertPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class T5PreTrainedModel extends PreTrainedModel{}class T5Model extends T5PreTrainedModel{}class T5ForConditionalGeneration extends T5PreTrainedModel{constructor(e,i,o,l){super(e,i),this.decoder_merged_session=o,this.generation_config=l,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class LongT5PreTrainedModel extends PreTrainedModel{}class LongT5Model extends LongT5PreTrainedModel{}class LongT5ForConditionalGeneration extends LongT5PreTrainedModel{constructor(e,i,o,l){super(e,i),this.decoder_merged_session=o,this.generation_config=l,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class MT5PreTrainedModel extends PreTrainedModel{}class MT5Model extends MT5PreTrainedModel{}class MT5ForConditionalGeneration extends MT5PreTrainedModel{constructor(e,i,o,l){super(e,i),this.decoder_merged_session=o,this.generation_config=l,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class BartPretrainedModel extends PreTrainedModel{}class BartModel extends BartPretrainedModel{}class BartForConditionalGeneration extends BartPretrainedModel{constructor(e,i,o,l){super(e,i),this.decoder_merged_session=o,this.generation_config=l,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class BartForSequenceClassification extends BartPretrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class MBartPreTrainedModel extends PreTrainedModel{}class MBartModel extends MBartPreTrainedModel{}class MBartForConditionalGeneration extends MBartPreTrainedModel{constructor(e,i,o,l){super(e,i),this.decoder_merged_session=o,this.generation_config=l,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class MBartForSequenceClassification extends MBartPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class MBartForCausalLM extends MBartPreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class BlenderbotPreTrainedModel extends PreTrainedModel{}class BlenderbotModel extends BlenderbotPreTrainedModel{}class BlenderbotForConditionalGeneration extends BlenderbotPreTrainedModel{constructor(e,i,o,l){super(e,i),this.decoder_merged_session=o,this.generation_config=l,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class BlenderbotSmallPreTrainedModel extends PreTrainedModel{}class BlenderbotSmallModel extends BlenderbotSmallPreTrainedModel{}class BlenderbotSmallForConditionalGeneration extends BlenderbotSmallPreTrainedModel{constructor(e,i,o,l){super(e,i),this.decoder_merged_session=o,this.generation_config=l,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class RobertaPreTrainedModel extends PreTrainedModel{}class RobertaModel extends RobertaPreTrainedModel{}class RobertaForMaskedLM extends RobertaPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class RobertaForSequenceClassification extends RobertaPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class RobertaForTokenClassification extends RobertaPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class RobertaForQuestionAnswering extends RobertaPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class XLMPreTrainedModel extends PreTrainedModel{}class XLMModel extends XLMPreTrainedModel{}class XLMWithLMHeadModel extends XLMPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class XLMForSequenceClassification extends XLMPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class XLMForTokenClassification extends XLMPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class XLMForQuestionAnswering extends XLMPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class XLMRobertaPreTrainedModel extends PreTrainedModel{}class XLMRobertaModel extends XLMRobertaPreTrainedModel{}class XLMRobertaForMaskedLM extends XLMRobertaPreTrainedModel{async _call(e){return new MaskedLMOutput(await super._call(e))}}class XLMRobertaForSequenceClassification extends XLMRobertaPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class XLMRobertaForTokenClassification extends XLMRobertaPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class XLMRobertaForQuestionAnswering extends XLMRobertaPreTrainedModel{async _call(e){return new QuestionAnsweringModelOutput(await super._call(e))}}class ASTPreTrainedModel extends PreTrainedModel{}class ASTModel extends ASTPreTrainedModel{}class ASTForAudioClassification extends ASTPreTrainedModel{}class WhisperPreTrainedModel extends PreTrainedModel{}class WhisperModel extends WhisperPreTrainedModel{}class WhisperForConditionalGeneration extends WhisperPreTrainedModel{constructor(i,o,l,c){super(i,o);Ae(this,"requires_attention_mask",!1);Ae(this,"main_input_name","input_features");this.decoder_merged_session=l,this.generation_config=c,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}async generate(i,o=null,l=null){if(o=this._get_generation_config(o),o.return_timestamps??(o.return_timestamps=!1),o.return_timestamps&&(l=[new WhisperTimeStampLogitsProcessor(o)]),o.return_token_timestamps&&(o.output_attentions=!0,o.return_dict_in_generate=!0,o.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),!o.alignment_heads))throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");const c=await super.generate(i,o,l);return o.return_token_timestamps&&o.alignment_heads&&(c.token_timestamps=this._extract_token_timestamps(c,o.alignment_heads,o.num_frames)),c}_extract_token_timestamps(i,o,l=null,c=.02){if(!i.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");let a=this.config.median_filter_width;a===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),a=7);const h=i.cross_attentions.map(d=>{let r=Array.from({length:this.config.decoder_layers},(b,y)=>cat(d.map(w=>w[y]),2)),t=stack(o.map(([b,y])=>l?r[b].slice(null,y,null,[0,l]):r[b].slice(null,y)));t=t.transpose(1,0,2,3);let[u,s]=std_mean(t,-2,0,!0),m=t.clone();for(let b=0;b<m.dims[0];++b){let y=m[b];for(let w=0;w<y.dims[0];++w){let x=y[w];const v=u[b][w][0],E=s[b][w][0];for(let O=0;O<x.dims[0];++O){let C=x[O];for(let S=0;S<C.data.length;++S)C.data[S]=(C.data[S]-E.data[S])/v.data[S];C.data.set(medianFilter(C.data,a))}}}return mean(m,1)}),f=[i.sequences.length,i.sequences[0].length],p=new Tensor("float32",new Float32Array(f[0]*f[1]),f);for(let d=0;d<f[0];++d){const r=h[d].neg().squeeze_(0);let[t,u]=dynamicTimeWarping(r),s=Array.from({length:t.length-1},(b,y)=>t[y+1]-t[y]),m=mergeArrays([1],s).map(b=>!!b),g=[];for(let b=0;b<m.length;++b)m[b]&&g.push(u[b]*c);p[d].data.set(g,1)}return p}}class VisionEncoderDecoderModel extends PreTrainedModel{constructor(i,o,l,c){super(i,o);Ae(this,"main_input_name","pixel_values");this.decoder_merged_session=l,this.generation_config=c;const a=this.config.encoder,h=this.config.decoder,f=a.model_type;(MODEL_MAPPING_NAMES_ENCODER_ONLY.get(f)??MODEL_MAPPING_NAMES_ENCODER_DECODER.get(f))||console.warn(`Model type for encoder '${f}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`);const d=MODEL_WITH_LM_HEAD_MAPPING_NAMES.get(h.model_type);if(!d)throw new Error(`Unable to construct \`VisionEncoderDecoder\` due to unsupported decoder: "${this.config.decoder.model_type}"`);const r=d[1],t=new r(h,l,c);this.add_encoder_pkv="num_decoder_layers"in t,this.add_encoder_pkv?(this.num_decoder_layers=t.num_decoder_layers,this.num_decoder_heads=t.num_decoder_heads,this.decoder_dim_kv=t.decoder_dim_kv,this.num_encoder_layers=t.num_encoder_layers,this.num_encoder_heads=t.num_encoder_heads,this.encoder_dim_kv=t.encoder_dim_kv):(this.num_layers=t.num_layers,this.num_heads=t.num_heads,this.dim_kv=t.dim_kv)}}class CLIPPreTrainedModel extends PreTrainedModel{}class CLIPModel extends CLIPPreTrainedModel{}class CLIPTextModelWithProjection extends CLIPPreTrainedModel{static async from_pretrained(e,i={}){return i.model_file_name??(i.model_file_name="text_model"),super.from_pretrained(e,i)}}class CLIPVisionModelWithProjection extends CLIPPreTrainedModel{static async from_pretrained(e,i={}){return i.model_file_name??(i.model_file_name="vision_model"),super.from_pretrained(e,i)}}class SiglipPreTrainedModel extends PreTrainedModel{}class SiglipModel extends SiglipPreTrainedModel{}class SiglipTextModel extends SiglipPreTrainedModel{static async from_pretrained(e,i={}){return i.model_file_name??(i.model_file_name="text_model"),super.from_pretrained(e,i)}}class SiglipVisionModel extends CLIPPreTrainedModel{static async from_pretrained(e,i={}){return i.model_file_name??(i.model_file_name="vision_model"),super.from_pretrained(e,i)}}class ChineseCLIPPreTrainedModel extends PreTrainedModel{}class ChineseCLIPModel extends ChineseCLIPPreTrainedModel{}class CLIPSegPreTrainedModel extends PreTrainedModel{}class CLIPSegModel extends CLIPSegPreTrainedModel{}class CLIPSegForImageSegmentation extends CLIPSegPreTrainedModel{}class GPT2PreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class GPT2Model extends GPT2PreTrainedModel{}class GPT2LMHeadModel extends GPT2PreTrainedModel{}class GPTNeoPreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_heads,this.num_layers=this.config.num_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class GPTNeoModel extends GPTNeoPreTrainedModel{}class GPTNeoForCausalLM extends GPTNeoPreTrainedModel{}class GPTNeoXPreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class GPTNeoXModel extends GPTNeoXPreTrainedModel{}class GPTNeoXForCausalLM extends GPTNeoXPreTrainedModel{}class GPTJPreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class GPTJModel extends GPTJPreTrainedModel{}class GPTJForCausalLM extends GPTJPreTrainedModel{}class GPTBigCodePreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class GPTBigCodeModel extends GPTBigCodePreTrainedModel{}class GPTBigCodeForCausalLM extends GPTBigCodePreTrainedModel{}class CodeGenPreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class CodeGenModel extends CodeGenPreTrainedModel{}class CodeGenForCausalLM extends CodeGenPreTrainedModel{}class LlamaPreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads??this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class LlamaModel extends LlamaPreTrainedModel{}class LlamaForCausalLM extends LlamaPreTrainedModel{}class Qwen2PreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads??this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class Qwen2Model extends Qwen2PreTrainedModel{}class Qwen2ForCausalLM extends Qwen2PreTrainedModel{}class PhiPreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class PhiModel extends PhiPreTrainedModel{}class PhiForCausalLM extends PhiPreTrainedModel{}class BloomPreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.hidden_size/this.num_heads}}class BloomModel extends BloomPreTrainedModel{}class BloomForCausalLM extends BloomPreTrainedModel{}class MptPreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_heads,this.num_layers=this.config.n_layers,this.dim_kv=this.config.d_model/this.num_heads}}class MptModel extends MptPreTrainedModel{}class MptForCausalLM extends MptPreTrainedModel{}class OPTPreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class OPTModel extends OPTPreTrainedModel{}class OPTForCausalLM extends OPTPreTrainedModel{}class ViTPreTrainedModel extends PreTrainedModel{}class ViTModel extends ViTPreTrainedModel{}class ViTForImageClassification extends ViTPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class FastViTPreTrainedModel extends PreTrainedModel{}class FastViTModel extends FastViTPreTrainedModel{}class FastViTForImageClassification extends FastViTPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class VitMattePreTrainedModel extends PreTrainedModel{}class VitMatteForImageMatting extends VitMattePreTrainedModel{async _call(e){return new ImageMattingOutput(await super._call(e))}}class MobileViTPreTrainedModel extends PreTrainedModel{}class MobileViTModel extends MobileViTPreTrainedModel{}class MobileViTForImageClassification extends MobileViTPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class MobileViTV2PreTrainedModel extends PreTrainedModel{}class MobileViTV2Model extends MobileViTV2PreTrainedModel{}class MobileViTV2ForImageClassification extends MobileViTV2PreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class OwlViTPreTrainedModel extends PreTrainedModel{}class OwlViTModel extends OwlViTPreTrainedModel{}class OwlViTForObjectDetection extends OwlViTPreTrainedModel{}class Owlv2PreTrainedModel extends PreTrainedModel{}class Owlv2Model extends Owlv2PreTrainedModel{}class Owlv2ForObjectDetection extends Owlv2PreTrainedModel{}class BeitPreTrainedModel extends PreTrainedModel{}class BeitModel extends BeitPreTrainedModel{}class BeitForImageClassification extends BeitPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class DetrPreTrainedModel extends PreTrainedModel{}class DetrModel extends DetrPreTrainedModel{}class DetrForObjectDetection extends DetrPreTrainedModel{async _call(e){return new DetrObjectDetectionOutput(await super._call(e))}}class DetrForSegmentation extends DetrPreTrainedModel{async _call(e){return new DetrSegmentationOutput(await super._call(e))}}class DetrObjectDetectionOutput extends ModelOutput{constructor({logits:e,pred_boxes:i}){super(),this.logits=e,this.pred_boxes=i}}class DetrSegmentationOutput extends ModelOutput{constructor({logits:e,pred_boxes:i,pred_masks:o}){super(),this.logits=e,this.pred_boxes=i,this.pred_masks=o}}class TableTransformerPreTrainedModel extends PreTrainedModel{}class TableTransformerModel extends TableTransformerPreTrainedModel{}class TableTransformerForObjectDetection extends TableTransformerPreTrainedModel{async _call(e){return new TableTransformerObjectDetectionOutput(await super._call(e))}}class TableTransformerObjectDetectionOutput extends DetrObjectDetectionOutput{}class DeiTPreTrainedModel extends PreTrainedModel{}class DeiTModel extends DeiTPreTrainedModel{}class DeiTForImageClassification extends DeiTPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class ResNetPreTrainedModel extends PreTrainedModel{}class ResNetModel extends ResNetPreTrainedModel{}class ResNetForImageClassification extends ResNetPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class SwinPreTrainedModel extends PreTrainedModel{}class SwinModel extends SwinPreTrainedModel{}class SwinForImageClassification extends SwinPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class Swin2SRPreTrainedModel extends PreTrainedModel{}class Swin2SRModel extends Swin2SRPreTrainedModel{}class Swin2SRForImageSuperResolution extends Swin2SRPreTrainedModel{}class DPTPreTrainedModel extends PreTrainedModel{}class DPTModel extends DPTPreTrainedModel{}class DPTForDepthEstimation extends DPTPreTrainedModel{}class DepthAnythingPreTrainedModel extends PreTrainedModel{}class DepthAnythingForDepthEstimation extends DepthAnythingPreTrainedModel{}class GLPNPreTrainedModel extends PreTrainedModel{}class GLPNModel extends GLPNPreTrainedModel{}class GLPNForDepthEstimation extends GLPNPreTrainedModel{}class DonutSwinPreTrainedModel extends PreTrainedModel{}class DonutSwinModel extends DonutSwinPreTrainedModel{}class ConvNextPreTrainedModel extends PreTrainedModel{}class ConvNextModel extends ConvNextPreTrainedModel{}class ConvNextForImageClassification extends ConvNextPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class ConvNextV2PreTrainedModel extends PreTrainedModel{}class ConvNextV2Model extends ConvNextV2PreTrainedModel{}class ConvNextV2ForImageClassification extends ConvNextV2PreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class Dinov2PreTrainedModel extends PreTrainedModel{}class Dinov2Model extends Dinov2PreTrainedModel{}class Dinov2ForImageClassification extends Dinov2PreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class YolosPreTrainedModel extends PreTrainedModel{}class YolosModel extends YolosPreTrainedModel{}class YolosForObjectDetection extends YolosPreTrainedModel{async _call(e){return new YolosObjectDetectionOutput(await super._call(e))}}class YolosObjectDetectionOutput extends ModelOutput{constructor({logits:e,pred_boxes:i}){super(),this.logits=e,this.pred_boxes=i}}class SamPreTrainedModel extends PreTrainedModel{}class SamModel extends SamPreTrainedModel{constructor(e,i,o){super(e,i),this.prompt_encoder_mask_decoder=o}async get_image_embeddings({pixel_values:e}){return await encoderForward(this,{pixel_values:e})}async forward(e){if((!e.image_embeddings||!e.image_positional_embeddings)&&(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels){const i=e.input_points.dims.slice(0,-1),o=i.reduce((l,c)=>l*c,1);e.input_labels=new Tensor("int64",new BigInt64Array(o).fill(1n),i)}return await sessionRun(this.prompt_encoder_mask_decoder,{input_points:e.input_points,input_labels:e.input_labels,image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings})}async _call(e){return new SamImageSegmentationOutput(await super._call(e))}}class SamImageSegmentationOutput extends ModelOutput{constructor({iou_scores:e,pred_masks:i}){super(),this.iou_scores=e,this.pred_masks=i}}class MarianPreTrainedModel extends PreTrainedModel{}class MarianModel extends MarianPreTrainedModel{}class MarianMTModel extends MarianPreTrainedModel{constructor(e,i,o,l){super(e,i),this.decoder_merged_session=o,this.generation_config=l,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class M2M100PreTrainedModel extends PreTrainedModel{}class M2M100Model extends M2M100PreTrainedModel{}class M2M100ForConditionalGeneration extends M2M100PreTrainedModel{constructor(e,i,o,l){super(e,i),this.decoder_merged_session=o,this.generation_config=l,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class Wav2Vec2PreTrainedModel extends PreTrainedModel{}class Wav2Vec2Model extends Wav2Vec2PreTrainedModel{}class Wav2Vec2ForCTC extends Wav2Vec2PreTrainedModel{async _call(e){return new CausalLMOutput(await super._call(e))}}class Wav2Vec2ForSequenceClassification extends Wav2Vec2PreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class Wav2Vec2ForAudioFrameClassification extends Wav2Vec2PreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class UniSpeechPreTrainedModel extends PreTrainedModel{}class UniSpeechModel extends UniSpeechPreTrainedModel{}class UniSpeechForCTC extends UniSpeechPreTrainedModel{async _call(e){return new CausalLMOutput(await super._call(e))}}class UniSpeechForSequenceClassification extends UniSpeechPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class UniSpeechSatPreTrainedModel extends PreTrainedModel{}class UniSpeechSatModel extends UniSpeechSatPreTrainedModel{}class UniSpeechSatForCTC extends UniSpeechSatPreTrainedModel{async _call(e){return new CausalLMOutput(await super._call(e))}}class UniSpeechSatForSequenceClassification extends UniSpeechSatPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class UniSpeechSatForAudioFrameClassification extends UniSpeechSatPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class Wav2Vec2BertPreTrainedModel extends PreTrainedModel{}class Wav2Vec2BertModel extends Wav2Vec2BertPreTrainedModel{}class Wav2Vec2BertForCTC extends Wav2Vec2BertPreTrainedModel{async _call(e){return new CausalLMOutput(await super._call(e))}}class Wav2Vec2BertForSequenceClassification extends Wav2Vec2BertPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class HubertModel extends Wav2Vec2PreTrainedModel{}class HubertForCTC extends Wav2Vec2PreTrainedModel{async _call(e){return new CausalLMOutput(await super._call(e))}}class HubertForSequenceClassification extends Wav2Vec2PreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class WavLMPreTrainedModel extends PreTrainedModel{}class WavLMModel extends WavLMPreTrainedModel{}class WavLMForCTC extends WavLMPreTrainedModel{async _call(e){return new CausalLMOutput(await super._call(e))}}class WavLMForSequenceClassification extends WavLMPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class WavLMForXVector extends WavLMPreTrainedModel{async _call(e){return new XVectorOutput(await super._call(e))}}class WavLMForAudioFrameClassification extends WavLMPreTrainedModel{async _call(e){return new TokenClassifierOutput(await super._call(e))}}class SpeechT5PreTrainedModel extends PreTrainedModel{}class SpeechT5ForSpeechToText extends SpeechT5PreTrainedModel{}class SpeechT5ForTextToSpeech extends SpeechT5PreTrainedModel{constructor(e,i,o,l){super(e,i),this.decoder_merged_session=o,this.generation_config=l,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.hidden_size/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.hidden_size/this.num_encoder_heads}async generate_speech(e,i,{threshold:o=.5,minlenratio:l=0,maxlenratio:c=20,vocoder:a=null}={}){const h={input_ids:e},{encoder_outputs:f,encoder_attention_mask:p}=await encoderForward(this,h),d=f.dims[1]/this.config.reduction_factor,r=Math.floor(d*c),t=Math.floor(d*l),u=this.config.num_mel_bins;let s=[],m=null,g=null,b=0;for(;;){++b;const x=boolTensor(!!g);let v;g?v=g.output_sequence_out:v=new Tensor("float32",new Float32Array(u),[1,1,u]);let E={use_cache_branch:x,output_sequence:v,encoder_attention_mask:p,speaker_embeddings:i,encoder_hidden_states:f};this.addPastKeyValues(E,m),g=await sessionRun(this.decoder_merged_session,E),m=this.getPastKeyValues(g,m);const{prob:O,spectrum:C}=g;if(s.push(C),b>=t&&(Array.from(O.data).filter(S=>S>=o).length>0||b>=r))break}const y=cat(s),{waveform:w}=await sessionRun(a.session,{spectrogram:y});return{spectrogram:y,waveform:w}}}class SpeechT5HifiGan extends PreTrainedModel{constructor(){super(...arguments);Ae(this,"main_input_name","spectrogram")}}class TrOCRPreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_encoder_layers=this.num_decoder_layers=this.config.decoder_layers,this.num_encoder_heads=this.num_decoder_heads=this.config.decoder_attention_heads,this.encoder_dim_kv=this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads}}class TrOCRForCausalLM extends TrOCRPreTrainedModel{}class MistralPreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class MistralModel extends MistralPreTrainedModel{}class MistralForCausalLM extends MistralPreTrainedModel{}class Starcoder2PreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class Starcoder2Model extends Starcoder2PreTrainedModel{}class Starcoder2ForCausalLM extends Starcoder2PreTrainedModel{}class FalconPreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class FalconModel extends FalconPreTrainedModel{}class FalconForCausalLM extends FalconPreTrainedModel{}class ClapPreTrainedModel extends PreTrainedModel{}class ClapModel extends ClapPreTrainedModel{}class ClapTextModelWithProjection extends ClapPreTrainedModel{static async from_pretrained(e,i={}){return i.model_file_name??(i.model_file_name="text_model"),super.from_pretrained(e,i)}}class ClapAudioModelWithProjection extends ClapPreTrainedModel{static async from_pretrained(e,i={}){return i.model_file_name??(i.model_file_name="audio_model"),super.from_pretrained(e,i)}}class VitsPreTrainedModel extends PreTrainedModel{}class VitsModel extends VitsPreTrainedModel{async _call(e){return new VitsModelOutput(await super._call(e))}}class SegformerPreTrainedModel extends PreTrainedModel{}class SegformerForImageClassification extends SegformerPreTrainedModel{}class SegformerForSemanticSegmentation extends SegformerPreTrainedModel{}class StableLmPreTrainedModel extends PreTrainedModel{constructor(e,i,o){super(e,i),this.generation_config=o,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class StableLmForCausalLM extends StableLmPreTrainedModel{}class EfficientNetPreTrainedModel extends PreTrainedModel{}class EfficientNetModel extends EfficientNetPreTrainedModel{}class EfficientNetForImageClassification extends EfficientNetPreTrainedModel{async _call(e){return new SequenceClassifierOutput(await super._call(e))}}class PretrainedMixin{static async from_pretrained(e,{quantized:i=!0,progress_callback:o=null,config:l=null,cache_dir:c=null,local_files_only:a=!1,revision:h="main",model_file_name:f=null}={}){let p={quantized:i,progress_callback:o,config:l,cache_dir:c,local_files_only:a,revision:h,model_file_name:f};if(l=await AutoConfig.from_pretrained(e,p),p.config||(p.config=l),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(let d of this.MODEL_CLASS_MAPPINGS){const r=d.get(l.model_type);if(r)return await r[1].from_pretrained(e,p)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${l.model_type}", attempting to construct from base class.`),await PreTrainedModel.from_pretrained(e,p);throw Error(`Unsupported model type: ${l.model_type}`)}}Ae(PretrainedMixin,"MODEL_CLASS_MAPPINGS",null),Ae(PretrainedMixin,"BASE_IF_FAIL",!1);const MODEL_MAPPING_NAMES_ENCODER_ONLY=new Map([["bert",["BertModel",BertModel]],["nomic_bert",["NomicBertModel",NomicBertModel]],["roformer",["RoFormerModel",RoFormerModel]],["electra",["ElectraModel",ElectraModel]],["esm",["EsmModel",EsmModel]],["convbert",["ConvBertModel",ConvBertModel]],["camembert",["CamembertModel",CamembertModel]],["deberta",["DebertaModel",DebertaModel]],["deberta-v2",["DebertaV2Model",DebertaV2Model]],["mpnet",["MPNetModel",MPNetModel]],["albert",["AlbertModel",AlbertModel]],["distilbert",["DistilBertModel",DistilBertModel]],["roberta",["RobertaModel",RobertaModel]],["xlm",["XLMModel",XLMModel]],["xlm-roberta",["XLMRobertaModel",XLMRobertaModel]],["clap",["ClapModel",ClapModel]],["clip",["CLIPModel",CLIPModel]],["clipseg",["CLIPSegModel",CLIPSegModel]],["chinese_clip",["ChineseCLIPModel",ChineseCLIPModel]],["siglip",["SiglipModel",SiglipModel]],["mobilebert",["MobileBertModel",MobileBertModel]],["squeezebert",["SqueezeBertModel",SqueezeBertModel]],["wav2vec2",["Wav2Vec2Model",Wav2Vec2Model]],["wav2vec2-bert",["Wav2Vec2BertModel",Wav2Vec2BertModel]],["unispeech",["UniSpeechModel",UniSpeechModel]],["unispeech-sat",["UniSpeechSatModel",UniSpeechSatModel]],["hubert",["HubertModel",HubertModel]],["wavlm",["WavLMModel",WavLMModel]],["audio-spectrogram-transformer",["ASTModel",ASTModel]],["vits",["VitsModel",VitsModel]],["detr",["DetrModel",DetrModel]],["table-transformer",["TableTransformerModel",TableTransformerModel]],["vit",["ViTModel",ViTModel]],["fastvit",["FastViTModel",FastViTModel]],["mobilevit",["MobileViTModel",MobileViTModel]],["mobilevitv2",["MobileViTV2Model",MobileViTV2Model]],["owlvit",["OwlViTModel",OwlViTModel]],["owlv2",["Owlv2Model",Owlv2Model]],["beit",["BeitModel",BeitModel]],["deit",["DeiTModel",DeiTModel]],["convnext",["ConvNextModel",ConvNextModel]],["convnextv2",["ConvNextV2Model",ConvNextV2Model]],["dinov2",["Dinov2Model",Dinov2Model]],["resnet",["ResNetModel",ResNetModel]],["swin",["SwinModel",SwinModel]],["swin2sr",["Swin2SRModel",Swin2SRModel]],["donut-swin",["DonutSwinModel",DonutSwinModel]],["yolos",["YolosModel",YolosModel]],["dpt",["DPTModel",DPTModel]],["glpn",["GLPNModel",GLPNModel]],["hifigan",["SpeechT5HifiGan",SpeechT5HifiGan]],["efficientnet",["EfficientNetModel",EfficientNetModel]]]),MODEL_MAPPING_NAMES_ENCODER_DECODER=new Map([["t5",["T5Model",T5Model]],["longt5",["LongT5Model",LongT5Model]],["mt5",["MT5Model",MT5Model]],["bart",["BartModel",BartModel]],["mbart",["MBartModel",MBartModel]],["marian",["MarianModel",MarianModel]],["whisper",["WhisperModel",WhisperModel]],["m2m_100",["M2M100Model",M2M100Model]],["blenderbot",["BlenderbotModel",BlenderbotModel]],["blenderbot-small",["BlenderbotSmallModel",BlenderbotSmallModel]]]),MODEL_MAPPING_NAMES_DECODER_ONLY=new Map([["bloom",["BloomModel",BloomModel]],["gpt2",["GPT2Model",GPT2Model]],["gptj",["GPTJModel",GPTJModel]],["gpt_bigcode",["GPTBigCodeModel",GPTBigCodeModel]],["gpt_neo",["GPTNeoModel",GPTNeoModel]],["gpt_neox",["GPTNeoXModel",GPTNeoXModel]],["codegen",["CodeGenModel",CodeGenModel]],["llama",["LlamaModel",LlamaModel]],["qwen2",["Qwen2Model",Qwen2Model]],["phi",["PhiModel",PhiModel]],["mpt",["MptModel",MptModel]],["opt",["OPTModel",OPTModel]],["mistral",["MistralModel",MistralModel]],["starcoder2",["Starcoder2Model",Starcoder2Model]],["falcon",["FalconModel",FalconModel]]]),MODEL_FOR_SPEECH_SEQ_2_SEQ_MAPPING_NAMES=new Map([["speecht5",["SpeechT5ForSpeechToText",SpeechT5ForSpeechToText]],["whisper",["WhisperForConditionalGeneration",WhisperForConditionalGeneration]]]),MODEL_FOR_TEXT_TO_SPECTROGRAM_MAPPING_NAMES=new Map([["speecht5",["SpeechT5ForTextToSpeech",SpeechT5ForTextToSpeech]]]),MODEL_FOR_TEXT_TO_WAVEFORM_MAPPING_NAMES=new Map([["vits",["VitsModel",VitsModel]]]),MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING_NAMES=new Map([["bert",["BertForSequenceClassification",BertForSequenceClassification]],["roformer",["RoFormerForSequenceClassification",RoFormerForSequenceClassification]],["electra",["ElectraForSequenceClassification",ElectraForSequenceClassification]],["esm",["EsmForSequenceClassification",EsmForSequenceClassification]],["convbert",["ConvBertForSequenceClassification",ConvBertForSequenceClassification]],["camembert",["CamembertForSequenceClassification",CamembertForSequenceClassification]],["deberta",["DebertaForSequenceClassification",DebertaForSequenceClassification]],["deberta-v2",["DebertaV2ForSequenceClassification",DebertaV2ForSequenceClassification]],["mpnet",["MPNetForSequenceClassification",MPNetForSequenceClassification]],["albert",["AlbertForSequenceClassification",AlbertForSequenceClassification]],["distilbert",["DistilBertForSequenceClassification",DistilBertForSequenceClassification]],["roberta",["RobertaForSequenceClassification",RobertaForSequenceClassification]],["xlm",["XLMForSequenceClassification",XLMForSequenceClassification]],["xlm-roberta",["XLMRobertaForSequenceClassification",XLMRobertaForSequenceClassification]],["bart",["BartForSequenceClassification",BartForSequenceClassification]],["mbart",["MBartForSequenceClassification",MBartForSequenceClassification]],["mobilebert",["MobileBertForSequenceClassification",MobileBertForSequenceClassification]],["squeezebert",["SqueezeBertForSequenceClassification",SqueezeBertForSequenceClassification]]]),MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING_NAMES=new Map([["bert",["BertForTokenClassification",BertForTokenClassification]],["roformer",["RoFormerForTokenClassification",RoFormerForTokenClassification]],["electra",["ElectraForTokenClassification",ElectraForTokenClassification]],["esm",["EsmForTokenClassification",EsmForTokenClassification]],["convbert",["ConvBertForTokenClassification",ConvBertForTokenClassification]],["camembert",["CamembertForTokenClassification",CamembertForTokenClassification]],["deberta",["DebertaForTokenClassification",DebertaForTokenClassification]],["deberta-v2",["DebertaV2ForTokenClassification",DebertaV2ForTokenClassification]],["mpnet",["MPNetForTokenClassification",MPNetForTokenClassification]],["distilbert",["DistilBertForTokenClassification",DistilBertForTokenClassification]],["roberta",["RobertaForTokenClassification",RobertaForTokenClassification]],["xlm",["XLMForTokenClassification",XLMForTokenClassification]],["xlm-roberta",["XLMRobertaForTokenClassification",XLMRobertaForTokenClassification]]]),MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING_NAMES=new Map([["t5",["T5ForConditionalGeneration",T5ForConditionalGeneration]],["longt5",["LongT5ForConditionalGeneration",LongT5ForConditionalGeneration]],["mt5",["MT5ForConditionalGeneration",MT5ForConditionalGeneration]],["bart",["BartForConditionalGeneration",BartForConditionalGeneration]],["mbart",["MBartForConditionalGeneration",MBartForConditionalGeneration]],["marian",["MarianMTModel",MarianMTModel]],["m2m_100",["M2M100ForConditionalGeneration",M2M100ForConditionalGeneration]],["blenderbot",["BlenderbotForConditionalGeneration",BlenderbotForConditionalGeneration]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",BlenderbotSmallForConditionalGeneration]]]),MODEL_WITH_LM_HEAD_MAPPING_NAMES=new Map([["bloom",["BloomForCausalLM",BloomForCausalLM]],["gpt2",["GPT2LMHeadModel",GPT2LMHeadModel]],["gptj",["GPTJForCausalLM",GPTJForCausalLM]],["gpt_bigcode",["GPTBigCodeForCausalLM",GPTBigCodeForCausalLM]],["gpt_neo",["GPTNeoForCausalLM",GPTNeoForCausalLM]],["gpt_neox",["GPTNeoXForCausalLM",GPTNeoXForCausalLM]],["codegen",["CodeGenForCausalLM",CodeGenForCausalLM]],["llama",["LlamaForCausalLM",LlamaForCausalLM]],["qwen2",["Qwen2ForCausalLM",Qwen2ForCausalLM]],["phi",["PhiForCausalLM",PhiForCausalLM]],["mpt",["MptForCausalLM",MptForCausalLM]],["opt",["OPTForCausalLM",OPTForCausalLM]],["mbart",["MBartForCausalLM",MBartForCausalLM]],["mistral",["MistralForCausalLM",MistralForCausalLM]],["starcoder2",["Starcoder2ForCausalLM",Starcoder2ForCausalLM]],["falcon",["FalconForCausalLM",FalconForCausalLM]],["trocr",["TrOCRForCausalLM",TrOCRForCausalLM]],["stablelm",["StableLmForCausalLM",StableLmForCausalLM]]]),MODEL_FOR_MASKED_LM_MAPPING_NAMES=new Map([["bert",["BertForMaskedLM",BertForMaskedLM]],["roformer",["RoFormerForMaskedLM",RoFormerForMaskedLM]],["electra",["ElectraForMaskedLM",ElectraForMaskedLM]],["esm",["EsmForMaskedLM",EsmForMaskedLM]],["convbert",["ConvBertForMaskedLM",ConvBertForMaskedLM]],["camembert",["CamembertForMaskedLM",CamembertForMaskedLM]],["deberta",["DebertaForMaskedLM",DebertaForMaskedLM]],["deberta-v2",["DebertaV2ForMaskedLM",DebertaV2ForMaskedLM]],["mpnet",["MPNetForMaskedLM",MPNetForMaskedLM]],["albert",["AlbertForMaskedLM",AlbertForMaskedLM]],["distilbert",["DistilBertForMaskedLM",DistilBertForMaskedLM]],["roberta",["RobertaForMaskedLM",RobertaForMaskedLM]],["xlm",["XLMWithLMHeadModel",XLMWithLMHeadModel]],["xlm-roberta",["XLMRobertaForMaskedLM",XLMRobertaForMaskedLM]],["mobilebert",["MobileBertForMaskedLM",MobileBertForMaskedLM]],["squeezebert",["SqueezeBertForMaskedLM",SqueezeBertForMaskedLM]]]),MODEL_FOR_QUESTION_ANSWERING_MAPPING_NAMES=new Map([["bert",["BertForQuestionAnswering",BertForQuestionAnswering]],["roformer",["RoFormerForQuestionAnswering",RoFormerForQuestionAnswering]],["electra",["ElectraForQuestionAnswering",ElectraForQuestionAnswering]],["convbert",["ConvBertForQuestionAnswering",ConvBertForQuestionAnswering]],["camembert",["CamembertForQuestionAnswering",CamembertForQuestionAnswering]],["deberta",["DebertaForQuestionAnswering",DebertaForQuestionAnswering]],["deberta-v2",["DebertaV2ForQuestionAnswering",DebertaV2ForQuestionAnswering]],["mpnet",["MPNetForQuestionAnswering",MPNetForQuestionAnswering]],["albert",["AlbertForQuestionAnswering",AlbertForQuestionAnswering]],["distilbert",["DistilBertForQuestionAnswering",DistilBertForQuestionAnswering]],["roberta",["RobertaForQuestionAnswering",RobertaForQuestionAnswering]],["xlm",["XLMForQuestionAnswering",XLMForQuestionAnswering]],["xlm-roberta",["XLMRobertaForQuestionAnswering",XLMRobertaForQuestionAnswering]],["mobilebert",["MobileBertForQuestionAnswering",MobileBertForQuestionAnswering]],["squeezebert",["SqueezeBertForQuestionAnswering",SqueezeBertForQuestionAnswering]]]),MODEL_FOR_VISION_2_SEQ_MAPPING_NAMES=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",VisionEncoderDecoderModel]]]),MODEL_FOR_IMAGE_CLASSIFICATION_MAPPING_NAMES=new Map([["vit",["ViTForImageClassification",ViTForImageClassification]],["fastvit",["FastViTForImageClassification",FastViTForImageClassification]],["mobilevit",["MobileViTForImageClassification",MobileViTForImageClassification]],["mobilevitv2",["MobileViTV2ForImageClassification",MobileViTV2ForImageClassification]],["beit",["BeitForImageClassification",BeitForImageClassification]],["deit",["DeiTForImageClassification",DeiTForImageClassification]],["convnext",["ConvNextForImageClassification",ConvNextForImageClassification]],["convnextv2",["ConvNextV2ForImageClassification",ConvNextV2ForImageClassification]],["dinov2",["Dinov2ForImageClassification",Dinov2ForImageClassification]],["resnet",["ResNetForImageClassification",ResNetForImageClassification]],["swin",["SwinForImageClassification",SwinForImageClassification]],["segformer",["SegformerForImageClassification",SegformerForImageClassification]],["efficientnet",["EfficientNetForImageClassification",EfficientNetForImageClassification]]]),MODEL_FOR_OBJECT_DETECTION_MAPPING_NAMES=new Map([["detr",["DetrForObjectDetection",DetrForObjectDetection]],["table-transformer",["TableTransformerForObjectDetection",TableTransformerForObjectDetection]],["yolos",["YolosForObjectDetection",YolosForObjectDetection]]]),MODEL_FOR_ZERO_SHOT_OBJECT_DETECTION_MAPPING_NAMES=new Map([["owlvit",["OwlViTForObjectDetection",OwlViTForObjectDetection]],["owlv2",["Owlv2ForObjectDetection",Owlv2ForObjectDetection]]]),MODEL_FOR_IMAGE_SEGMENTATION_MAPPING_NAMES=new Map([["detr",["DetrForSegmentation",DetrForSegmentation]],["clipseg",["CLIPSegForImageSegmentation",CLIPSegForImageSegmentation]]]),MODEL_FOR_SEMANTIC_SEGMENTATION_MAPPING_NAMES=new Map([["segformer",["SegformerForSemanticSegmentation",SegformerForSemanticSegmentation]]]),MODEL_FOR_MASK_GENERATION_MAPPING_NAMES=new Map([["sam",["SamModel",SamModel]]]),MODEL_FOR_CTC_MAPPING_NAMES=new Map([["wav2vec2",["Wav2Vec2ForCTC",Wav2Vec2ForCTC]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Wav2Vec2BertForCTC]],["unispeech",["UniSpeechForCTC",UniSpeechForCTC]],["unispeech-sat",["UniSpeechSatForCTC",UniSpeechSatForCTC]],["wavlm",["WavLMForCTC",WavLMForCTC]],["hubert",["HubertForCTC",HubertForCTC]]]),MODEL_FOR_AUDIO_CLASSIFICATION_MAPPING_NAMES=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Wav2Vec2ForSequenceClassification]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Wav2Vec2BertForSequenceClassification]],["unispeech",["UniSpeechForSequenceClassification",UniSpeechForSequenceClassification]],["unispeech-sat",["UniSpeechSatForSequenceClassification",UniSpeechSatForSequenceClassification]],["wavlm",["WavLMForSequenceClassification",WavLMForSequenceClassification]],["hubert",["HubertForSequenceClassification",HubertForSequenceClassification]],["audio-spectrogram-transformer",["ASTForAudioClassification",ASTForAudioClassification]]]),MODEL_FOR_AUDIO_XVECTOR_MAPPING_NAMES=new Map([["wavlm",["WavLMForXVector",WavLMForXVector]]]),MODEL_FOR_AUDIO_FRAME_CLASSIFICATION_MAPPING_NAMES=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",UniSpeechSatForAudioFrameClassification]],["wavlm",["WavLMForAudioFrameClassification",WavLMForAudioFrameClassification]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Wav2Vec2ForAudioFrameClassification]]]),MODEL_FOR_IMAGE_MATTING_MAPPING_NAMES=new Map([["vitmatte",["VitMatteForImageMatting",VitMatteForImageMatting]]]),MODEL_FOR_IMAGE_TO_IMAGE_MAPPING_NAMES=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Swin2SRForImageSuperResolution]]]),MODEL_FOR_DEPTH_ESTIMATION_MAPPING_NAMES=new Map([["dpt",["DPTForDepthEstimation",DPTForDepthEstimation]],["depth_anything",["DepthAnythingForDepthEstimation",DepthAnythingForDepthEstimation]],["glpn",["GLPNForDepthEstimation",GLPNForDepthEstimation]]]),MODEL_FOR_IMAGE_FEATURE_EXTRACTION_MAPPING_NAMES=new Map([["clip",["CLIPVisionModelWithProjection",CLIPVisionModelWithProjection]],["siglip",["SiglipVisionModel",SiglipVisionModel]]]),MODEL_CLASS_TYPE_MAPPING=[[MODEL_MAPPING_NAMES_ENCODER_ONLY,MODEL_TYPES.EncoderOnly],[MODEL_MAPPING_NAMES_ENCODER_DECODER,MODEL_TYPES.EncoderDecoder],[MODEL_MAPPING_NAMES_DECODER_ONLY,MODEL_TYPES.DecoderOnly],[MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING_NAMES,MODEL_TYPES.Seq2Seq],[MODEL_FOR_SPEECH_SEQ_2_SEQ_MAPPING_NAMES,MODEL_TYPES.Seq2Seq],[MODEL_WITH_LM_HEAD_MAPPING_NAMES,MODEL_TYPES.DecoderOnly],[MODEL_FOR_MASKED_LM_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_QUESTION_ANSWERING_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_VISION_2_SEQ_MAPPING_NAMES,MODEL_TYPES.Vision2Seq],[MODEL_FOR_IMAGE_CLASSIFICATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_IMAGE_SEGMENTATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_SEMANTIC_SEGMENTATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_IMAGE_MATTING_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_IMAGE_TO_IMAGE_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_DEPTH_ESTIMATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_OBJECT_DETECTION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_ZERO_SHOT_OBJECT_DETECTION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_MASK_GENERATION_MAPPING_NAMES,MODEL_TYPES.MaskGeneration],[MODEL_FOR_CTC_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_AUDIO_CLASSIFICATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_TEXT_TO_SPECTROGRAM_MAPPING_NAMES,MODEL_TYPES.Seq2Seq],[MODEL_FOR_TEXT_TO_WAVEFORM_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_AUDIO_XVECTOR_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_AUDIO_FRAME_CLASSIFICATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_IMAGE_FEATURE_EXTRACTION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly]];for(const[n,e]of MODEL_CLASS_TYPE_MAPPING)for(const[i,o]of n.values())MODEL_TYPE_MAPPING.set(i,e),MODEL_CLASS_TO_NAME_MAPPING.set(o,i),MODEL_NAME_TO_CLASS_MAPPING.set(i,o);const CUSTOM_MAPPING=[["CLIPTextModelWithProjection",CLIPTextModelWithProjection,MODEL_TYPES.EncoderOnly],["SiglipTextModel",SiglipTextModel,MODEL_TYPES.EncoderOnly],["ClapTextModelWithProjection",ClapTextModelWithProjection,MODEL_TYPES.EncoderOnly],["ClapAudioModelWithProjection",ClapAudioModelWithProjection,MODEL_TYPES.EncoderOnly]];for(const[n,e,i]of CUSTOM_MAPPING)MODEL_TYPE_MAPPING.set(n,i),MODEL_CLASS_TO_NAME_MAPPING.set(e,n),MODEL_NAME_TO_CLASS_MAPPING.set(n,e);class AutoModel extends PretrainedMixin{}Ae(AutoModel,"MODEL_CLASS_MAPPINGS",MODEL_CLASS_TYPE_MAPPING.map(e=>e[0])),Ae(AutoModel,"BASE_IF_FAIL",!0);class Seq2SeqLMOutput extends ModelOutput{constructor({logits:e,past_key_values:i,encoder_outputs:o,decoder_attentions:l=null,cross_attentions:c=null}){super(),this.logits=e,this.past_key_values=i,this.encoder_outputs=o,this.decoder_attentions=l,this.cross_attentions=c}}class SequenceClassifierOutput extends ModelOutput{constructor({logits:e}){super(),this.logits=e}}class XVectorOutput extends ModelOutput{constructor({logits:e,embeddings:i}){super(),this.logits=e,this.embeddings=i}}class TokenClassifierOutput extends ModelOutput{constructor({logits:e}){super(),this.logits=e}}class MaskedLMOutput extends ModelOutput{constructor({logits:e}){super(),this.logits=e}}class QuestionAnsweringModelOutput extends ModelOutput{constructor({start_logits:e,end_logits:i}){super(),this.start_logits=e,this.end_logits=i}}class CausalLMOutput extends ModelOutput{constructor({logits:e}){super(),this.logits=e}}class ImageMattingOutput extends ModelOutput{constructor({alphas:e}){super(),this.alphas=e}}class VitsModelOutput extends ModelOutput{constructor({waveform:e,spectrogram:i}){super(),this.waveform=e,this.spectrogram=i}}const BROWSER_ENV=typeof self<"u";if(!BROWSER_ENV){if(!sharp)throw new Error("Unable to load image processing library.")}/*!
 * ONNX Runtime Web v1.19.0-dev.20240509-69cfcba38a
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var Oi=Object.defineProperty,nc=Object.getOwnPropertyDescriptor,ic=Object.getOwnPropertyNames,ac=Object.prototype.hasOwnProperty,j=(n,e)=>()=>(n&&(e=n(n=0)),e),Er=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),kr=(n,e)=>{for(var i in e)Oi(n,i,{get:e[i],enumerable:!0})},oc=(n,e,i,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let l of ic(e))!ac.call(n,l)&&l!==i&&Oi(n,l,{get:()=>e[l],enumerable:!(o=nc(e,l))||o.enumerable});return n},sr=n=>oc(Oi({},"__esModule",{value:!0}),n),kn,ur,lr,sc,On,Pn=j(()=>{kn=new Map,ur=[],lr=(n,e,i)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let o=kn.get(n);if(o===void 0)kn.set(n,{backend:e,priority:i});else{if(o.priority>i)return;if(o.priority===i&&o.backend!==e)throw new Error(`cannot register backend "${n}" using priority ${i}`)}if(i>=0){let l=ur.indexOf(n);l!==-1&&ur.splice(l,1);for(let c=0;c<ur.length;c++)if(kn.get(ur[c]).priority<=i){ur.splice(c,0,n);return}ur.push(n)}return}throw new TypeError("not a valid backend")},sc=async n=>{let e=kn.get(n);if(!e)return"backend not found.";if(e.initialized)return e.backend;if(e.aborted)return e.error;{let i=!!e.initPromise;try{return i||(e.initPromise=e.backend.init(n)),await e.initPromise,e.initialized=!0,e.backend}catch(o){return i||(e.error=`${o}`,e.aborted=!0),e.error}finally{delete e.initPromise}}},On=async n=>{let e=n.executionProviders||[],i=e.map(f=>typeof f=="string"?f:f.name),o=i.length===0?ur:i,l,c=[],a=new Set;for(let f of o){let p=await sc(f);typeof p=="string"?c.push({name:f,err:p}):(l||(l=p),l===p&&a.add(f))}if(!l)throw new Error(`no available backend found. ERR: ${c.map(f=>`[${f.name}] ${f.err}`).join(", ")}`);for(let{name:f,err:p}of c)i.includes(f)&&console.warn(`removing requested execution provider "${f}" from session options because it is not available: ${p}`);let h=e.filter(f=>a.has(typeof f=="string"?f:f.name));return[l,new Proxy(n,{get:(f,p)=>p==="executionProviders"?h:Reflect.get(f,p)})]}}),to=j(()=>{Pn()}),ro,no=j(()=>{ro="1.18.0-dev.20240424-218b6b0a73"}),io,gt,Pi=j(()=>{no(),io="warning",gt={wasm:{},webgl:{},webgpu:{},versions:{common:ro},set logLevel(n){if(n!==void 0){if(typeof n!="string"||["verbose","info","warning","error","fatal"].indexOf(n)===-1)throw new Error(`Unsupported logging level: ${n}`);io=n}},get logLevel(){return io}},Object.defineProperty(gt,"logLevel",{enumerable:!0})}),ke,ao=j(()=>{Pi(),ke=gt}),oo,so,uo=j(()=>{oo=(n,e)=>{let i=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);i.width=n.dims[3],i.height=n.dims[2];let o=i.getContext("2d");if(o!=null){let l,c;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(l=n.dims[2],c=n.dims[3]):(l=n.dims[3],c=n.dims[2]);let a=(e==null?void 0:e.format)!==void 0?e.format:"RGB",h=e==null?void 0:e.norm,f,p;h===void 0||h.mean===void 0?f=[255,255,255,255]:typeof h.mean=="number"?f=[h.mean,h.mean,h.mean,h.mean]:(f=[h.mean[0],h.mean[1],h.mean[2],0],h.mean[3]!==void 0&&(f[3]=h.mean[3])),h===void 0||h.bias===void 0?p=[0,0,0,0]:typeof h.bias=="number"?p=[h.bias,h.bias,h.bias,h.bias]:(p=[h.bias[0],h.bias[1],h.bias[2],0],h.bias[3]!==void 0&&(p[3]=h.bias[3]));let d=c*l,r=0,t=d,u=d*2,s=-1;a==="RGBA"?(r=0,t=d,u=d*2,s=d*3):a==="RGB"?(r=0,t=d,u=d*2):a==="RBG"&&(r=0,u=d,t=d*2);for(let m=0;m<c;m++)for(let g=0;g<l;g++){let b=(n.data[r++]-p[0])*f[0],y=(n.data[t++]-p[1])*f[1],w=(n.data[u++]-p[2])*f[2],x=s===-1?255:(n.data[s++]-p[3])*f[3];o.fillStyle="rgba("+b+","+y+","+w+","+x+")",o.fillRect(g,m,1,1)}if("toDataURL"in i)return i.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},so=(n,e)=>{let i=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),o;if(i!=null){let l,c,a;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(l=n.dims[2],c=n.dims[1],a=n.dims[3]):(l=n.dims[3],c=n.dims[2],a=n.dims[1]);let h=e!==void 0&&e.format!==void 0?e.format:"RGB",f=e==null?void 0:e.norm,p,d;f===void 0||f.mean===void 0?p=[255,255,255,255]:typeof f.mean=="number"?p=[f.mean,f.mean,f.mean,f.mean]:(p=[f.mean[0],f.mean[1],f.mean[2],255],f.mean[3]!==void 0&&(p[3]=f.mean[3])),f===void 0||f.bias===void 0?d=[0,0,0,0]:typeof f.bias=="number"?d=[f.bias,f.bias,f.bias,f.bias]:(d=[f.bias[0],f.bias[1],f.bias[2],0],f.bias[3]!==void 0&&(d[3]=f.bias[3]));let r=c*l;if(e!==void 0&&(e.format!==void 0&&a===4&&e.format!=="RGBA"||a===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let t=4,u=0,s=1,m=2,g=3,b=0,y=r,w=r*2,x=-1;h==="RGBA"?(b=0,y=r,w=r*2,x=r*3):h==="RGB"?(b=0,y=r,w=r*2):h==="RBG"&&(b=0,w=r,y=r*2),o=i.createImageData(l,c);for(let v=0;v<c*l;u+=t,s+=t,m+=t,g+=t,v++)o.data[u]=(n.data[b++]-d[0])*p[0],o.data[s]=(n.data[y++]-d[1])*p[1],o.data[m]=(n.data[w++]-d[2])*p[2],o.data[g]=x===-1?255:(n.data[x++]-d[3])*p[3]}else throw new Error("Can not access image data");return o}}),Ri,lo,co,po,mo,fo=j(()=>{Rn(),Ri=(n,e)=>{if(n===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:i,width:o}=e,l=e.norm??{mean:255,bias:0},c,a;typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:c=[l.mean[0],l.mean[1],l.mean[2],l.mean[3]??255],typeof l.bias=="number"?a=[l.bias,l.bias,l.bias,l.bias]:a=[l.bias[0],l.bias[1],l.bias[2],l.bias[3]??0];let h=e.format!==void 0?e.format:"RGBA",f=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",p=i*o,d=f==="RGBA"?new Float32Array(p*4):new Float32Array(p*3),r=4,t=0,u=1,s=2,m=3,g=0,b=p,y=p*2,w=-1;h==="RGB"&&(r=3,t=0,u=1,s=2,m=-1),f==="RGBA"?w=p*3:f==="RBG"?(g=0,y=p,b=p*2):f==="BGR"&&(y=0,b=p,g=p*2);for(let x=0;x<p;x++,t+=r,s+=r,u+=r,m+=r)d[g++]=(n[t]+a[0])/c[0],d[b++]=(n[u]+a[1])/c[1],d[y++]=(n[s]+a[2])/c[2],w!==-1&&m!==-1&&(d[w++]=(n[m]+a[3])/c[3]);return f==="RGBA"?new at("float32",d,[1,4,i,o]):new at("float32",d,[1,3,i,o])},lo=async(n,e)=>{let i=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,o=typeof ImageData<"u"&&n instanceof ImageData,l=typeof ImageBitmap<"u"&&n instanceof ImageBitmap,c=typeof n=="string",a,h=e??{},f=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},p=d=>d instanceof HTMLCanvasElement||d instanceof OffscreenCanvas?d.getContext("2d"):null;if(i){let d=f();d.width=n.width,d.height=n.height;let r=p(d);if(r!=null){let t=n.height,u=n.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(t=e.resizedHeight,u=e.resizedWidth),e!==void 0){if(h=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");h.tensorFormat="RGBA",h.height=t,h.width=u}else h.tensorFormat="RGBA",h.height=t,h.width=u;r.drawImage(n,0,0),a=r.getImageData(0,0,u,t).data}else throw new Error("Can not access image data")}else if(o){let d,r;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(d=e.resizedHeight,r=e.resizedWidth):(d=n.height,r=n.width),e!==void 0&&(h=e),h.format="RGBA",h.height=d,h.width=r,e!==void 0){let t=f();t.width=r,t.height=d;let u=p(t);if(u!=null)u.putImageData(n,0,0),a=u.getImageData(0,0,r,d).data;else throw new Error("Can not access image data")}else a=n.data}else if(l){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let d=f();d.width=n.width,d.height=n.height;let r=p(d);if(r!=null){let t=n.height,u=n.width;return r.drawImage(n,0,0,u,t),a=r.getImageData(0,0,u,t).data,h.height=t,h.width=u,Ri(a,h)}else throw new Error("Can not access image data")}else{if(c)return new Promise((d,r)=>{let t=f(),u=p(t);if(!n||!u)return r();let s=new Image;s.crossOrigin="Anonymous",s.src=n,s.onload=()=>{t.width=s.width,t.height=s.height,u.drawImage(s,0,0,t.width,t.height);let m=u.getImageData(0,0,t.width,t.height);h.height=t.height,h.width=t.width,d(Ri(m.data,h))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(a!==void 0)return Ri(a,h);throw new Error("Input data provided is not supported - aborted tensor creation")},co=(n,e)=>{let{width:i,height:o,download:l,dispose:c}=e,a=[1,o,i,4];return new at({location:"texture",type:"float32",texture:n,dims:a,download:l,dispose:c})},po=(n,e)=>{let{dataType:i,dims:o,download:l,dispose:c}=e;return new at({location:"gpu-buffer",type:i??"float32",gpuBuffer:n,dims:o,download:l,dispose:c})},mo=(n,e,i)=>new at({location:"cpu-pinned",type:n,data:e,dims:i??[e.length]})}),dr,Qr,ho,go,yo=j(()=>{dr=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Qr=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),ho=!1,go=()=>{if(!ho){ho=!0;let n=typeof BigInt64Array<"u"&&BigInt64Array.from,e=typeof BigUint64Array<"u"&&BigUint64Array.from,i=typeof Float16Array<"u"&&Float16Array.from;n&&(dr.set("int64",BigInt64Array),Qr.set(BigInt64Array,"int64")),e&&(dr.set("uint64",BigUint64Array),Qr.set(BigUint64Array,"uint64")),i?(dr.set("float16",Float16Array),Qr.set(Float16Array,"float16")):dr.set("float16",Uint16Array)}}}),bo,vo,wo=j(()=>{Rn(),bo=n=>{let e=1;for(let i=0;i<n.length;i++){let o=n[i];if(typeof o!="number"||!Number.isSafeInteger(o))throw new TypeError(`dims[${i}] must be an integer, got: ${o}`);if(o<0)throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${o}`);e*=o}return e},vo=(n,e)=>{switch(n.location){case"cpu":return new at(n.type,n.data,e);case"cpu-pinned":return new at({location:"cpu-pinned",data:n.data,type:n.type,dims:e});case"texture":return new at({location:"texture",texture:n.texture,type:n.type,dims:e});case"gpu-buffer":return new at({location:"gpu-buffer",gpuBuffer:n.gpuBuffer,type:n.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${n.location} is not supported`)}}}),at,Rn=j(()=>{uo(),fo(),yo(),wo(),at=class{constructor(n,e,i){go();let o,l;if(typeof n=="object"&&"location"in n)switch(this.dataLocation=n.location,o=n.type,l=n.dims,n.location){case"cpu-pinned":{let a=dr.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(n.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=n.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=n.texture,this.downloader=n.download,this.disposer=n.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="uint8"&&o!=="bool")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=n.gpuBuffer,this.downloader=n.download,this.disposer=n.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,h;if(typeof n=="string")if(o=n,h=i,n==="string"){if(!Array.isArray(e))throw new TypeError("A string tensor's data must be a string array.");a=e}else{let f=dr.get(n);if(f===void 0)throw new TypeError(`Unsupported tensor type: ${n}.`);if(Array.isArray(e)){if(n==="float16"&&f===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");n==="uint64"||n==="int64"?a=f.from(e,BigInt):a=f.from(e)}else if(e instanceof f)a=e;else throw new TypeError(`A ${o} tensor's data must be type of ${f}`)}else if(h=e,Array.isArray(n)){if(n.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let f=typeof n[0];if(f==="string")o="string",a=n;else if(f==="boolean")o="bool",a=Uint8Array.from(n);else throw new TypeError(`Invalid element type of data array: ${f}.`)}else{let f=Qr.get(n.constructor);if(f===void 0)throw new TypeError(`Unsupported type for tensor data: ${n.constructor}.`);o=f,a=n}if(h===void 0)h=[a.length];else if(!Array.isArray(h))throw new TypeError("A tensor's dims must be a number array");l=h,this.cpuData=a,this.dataLocation="cpu"}let c=bo(l);if(this.cpuData&&c!==this.cpuData.length)throw new Error(`Tensor's size(${c}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=l,this.size=c}static async fromImage(n,e){return lo(n,e)}static fromTexture(n,e){return co(n,e)}static fromGpuBuffer(n,e){return po(n,e)}static fromPinnedBuffer(n,e,i){return mo(n,e,i)}toDataURL(n){return oo(this,n)}toImageData(n){return so(this,n)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(n){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let e=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=e,n&&this.disposer&&(this.disposer(),this.disposer=void 0),e}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(n){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return vo(this,n)}}}),tt,zn=j(()=>{Rn(),tt=at}),Bn,$o,yt,ut,zi=j(()=>{Pi(),Bn=(n,e)=>{(typeof gt.trace>"u"?!gt.wasm.trace:!gt.trace)||console.timeStamp(`${n}::ORT::${e}`)},$o=(n,e)=>{var l;let i=((l=new Error().stack)==null?void 0:l.split(/\r\n|\r|\n/g))||[],o=!1;for(let c=0;c<i.length;c++){if(o&&!i[c].includes("TRACE_FUNC")){let a=`FUNC_${n}::${i[c].trim().split(" ")[1]}`;e&&(a+=`::${e}`),Bn("CPU",a);return}i[c].includes("TRACE_FUNC")&&(o=!0)}},yt=n=>{(typeof gt.trace>"u"?!gt.wasm.trace:!gt.trace)||$o("BEGIN",n)},ut=n=>{(typeof gt.trace>"u"?!gt.wasm.trace:!gt.trace)||$o("END",n)}}),Dn,_o=j(()=>{Pn(),zn(),zi(),Dn=class xu{constructor(e){this.handler=e}async run(e,i,o){yt();let l={},c={};if(typeof e!="object"||e===null||e instanceof tt||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if(typeof i=="object"){if(i===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof tt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(i.length===0)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(let p of i){if(typeof p!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(p)===-1)throw new RangeError(`'fetches' contains invalid output name: ${p}.`);l[p]=null}if(typeof o=="object"&&o!==null)c=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else{let p=!1,d=Object.getOwnPropertyNames(i);for(let r of this.outputNames)if(d.indexOf(r)!==-1){let t=i[r];(t===null||t instanceof tt)&&(p=!0,a=!1,l[r]=t)}if(p){if(typeof o=="object"&&o!==null)c=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else c=i}}else if(typeof i<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let p of this.inputNames)if(typeof e[p]>"u")throw new Error(`input '${p}' is missing in 'feeds'.`);if(a)for(let p of this.outputNames)l[p]=null;let h=await this.handler.run(e,l,c),f={};for(let p in h)if(Object.hasOwnProperty.call(h,p)){let d=h[p];d instanceof tt?f[p]=d:f[p]=new tt(d.type,d.data,d.dims)}return ut(),f}async release(){return this.handler.dispose()}static async create(e,i,o,l){yt();let c,a={};if(typeof e=="string"){if(c=e,typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(c=e,typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let d=e,r=0,t=e.byteLength;if(typeof i=="object"&&i!==null)a=i;else if(typeof i=="number"){if(r=i,!Number.isSafeInteger(r))throw new RangeError("'byteOffset' must be an integer.");if(r<0||r>=d.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${d.byteLength}).`);if(t=e.byteLength-r,typeof o=="number"){if(t=o,!Number.isSafeInteger(t))throw new RangeError("'byteLength' must be an integer.");if(t<=0||r+t>d.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${d.byteLength-r}].`);if(typeof l=="object"&&l!==null)a=l;else if(typeof l<"u")throw new TypeError("'options' must be an object.")}else if(typeof o<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof i<"u")throw new TypeError("'options' must be an object.");c=new Uint8Array(d,r,t)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[h,f]=await On(a),p=await h.createInferenceSessionHandler(c,f);return ut(),new xu(p)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),uc,xo=j(()=>{_o(),uc=Dn}),So=j(()=>{}),Co=j(()=>{}),Io=j(()=>{}),To=j(()=>{}),lc,Mn,Ao=j(()=>{Pn(),zn(),lc="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Mn=class Qd{constructor(e,i,o){this.handler=e,this.hasOptimizerModel=i,this.hasEvalModel=o}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,i){let o=e.evalModel||"",l=e.optimizerModel||"",c=i||{},[a,h]=await On(c);if(a.createTrainingSessionHandler){let f=await a.createTrainingSessionHandler(e.checkpointState,e.trainModel,o,l,h);return new Qd(f,!!e.optimizerModel,!!e.evalModel)}else throw new Error(lc)}typeNarrowingForRunStep(e,i,o,l,c){let a={},h={};if(typeof o!="object"||o===null||o instanceof tt||Array.isArray(o))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let f=!0;if(typeof l=="object"){if(l===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(l instanceof tt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(l)){if(l.length===0)throw new TypeError("'fetches' cannot be an empty array.");f=!1;for(let p of l){if(typeof p!="string")throw new TypeError("'fetches' must be a string array or an object.");if(i.indexOf(p)===-1)throw new RangeError(`'fetches' contains invalid output name: ${p}.`);a[p]=null}if(typeof c=="object"&&c!==null)h=c;else if(typeof c<"u")throw new TypeError("'options' must be an object.")}else{let p=!1,d=Object.getOwnPropertyNames(l);for(let r of i)if(d.indexOf(r)!==-1){let t=l[r];(t===null||t instanceof tt)&&(p=!0,f=!1,a[r]=t)}if(p){if(typeof c=="object"&&c!==null)h=c;else if(typeof c<"u")throw new TypeError("'options' must be an object.")}else h=l}}else if(typeof l<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let p of e)if(typeof o[p]>"u")throw new Error(`input '${p}' is missing in 'feeds'.`);if(f)for(let p of i)a[p]=null;return[a,h]}convertHandlerReturnTypeToMapOfTensors(e){let i={};for(let o in e)if(Object.hasOwnProperty.call(e,o)){let l=e[o];l instanceof tt?i[o]=l:i[o]=new tt(l.type,l.data,l.dims)}return i}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,i,o){let[l,c]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,i,o),a=await this.handler.runTrainStep(e,l,c);return this.convertHandlerReturnTypeToMapOfTensors(a)}async runOptimizerStep(e){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(e||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(e,i,o){if(this.hasEvalModel){let[l,c]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,i,o),a=await this.handler.runEvalStep(e,l,c);return this.convertHandlerReturnTypeToMapOfTensors(a)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,i=!0){let o=await this.getParametersSize(i);if(e.length!==4*o)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,i)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}}),dc,Eo=j(()=>{Ao(),dc=Mn}),Bi={};kr(Bi,{InferenceSession:()=>uc,TRACE:()=>Bn,TRACE_FUNC_BEGIN:()=>yt,TRACE_FUNC_END:()=>ut,Tensor:()=>tt,TrainingSession:()=>dc,env:()=>ke,registerBackend:()=>lr});var _t=j(()=>{to(),ao(),xo(),zn(),So(),Co(),zi(),Io(),To(),Eo()}),Di={};kr(Di,{createReadStream:()=>Oo,readFile:()=>cc,readFileSync:()=>pc});var cc,pc,Oo,Mi=j(()=>{cc=void 0,pc=void 0,Oo=void 0}),Ui={};kr(Ui,{join:()=>mc});var mc,Wi=j(()=>{mc=void 0}),zo=Er((n,e)=>{var i=(()=>{var l;var o=typeof document<"u"?(l=document.currentScript)==null?void 0:l.src:void 0;return typeof __filename<"u"&&(o||(o=__filename)),function(c={}){var a=c,h,f,p=new Promise((T,k)=>{h=T,f=k});a.mountExternalData=(T,k)=>{(a.eb||(a.eb=new Map)).set(T,k)},a.unmountExternalData=()=>{delete a.eb};let d=()=>{let T=(D,F,J)=>(...ue)=>{let Te=$n,Se=F==null?void 0:F();ue=D(...ue);let Le=F==null?void 0:F();return Se!==Le&&(D=Le,J(Se),F=J=null),$n!=Te?ae():ue},k=D=>async(...F)=>{var J;try{if(a.cb)throw Error("Session already started");let ue=a.cb={xb:F[0],errors:[]},Te=await D(...F);if(a.cb!==ue)throw Error("Session mismatch");(J=a.kb)==null||J.flush();let Se=ue.errors;if(0<Se.length){let Le=await Promise.all(Se);if(Le=Le.filter(Me=>Me),0<Le.length)throw Error(Le.join(`
`))}return Te}finally{a.cb=null}};a._OrtCreateSession=T(a._OrtCreateSession,()=>a._OrtCreateSession,D=>a._OrtCreateSession=D),a._OrtRun=k(T(a._OrtRun,()=>a._OrtRun,D=>a._OrtRun=D)),a._OrtRunWithBinding=k(T(a._OrtRunWithBinding,()=>a._OrtRunWithBinding,D=>a._OrtRunWithBinding=D)),a._OrtBindInput=T(a._OrtBindInput,()=>a._OrtBindInput,D=>a._OrtBindInput=D),d=void 0};a.jsepInit=(T,k)=>{if(d==null||d(),T==="webgpu"){[a.kb,a.pb,a.tb,a.lb,a.sb,a.Ra,a.ub,a.wb,a.qb,a.rb,a.vb]=k;let D=a.kb;a.jsepRegisterBuffer=(F,J,ue,Te)=>D.registerBuffer(F,J,ue,Te),a.jsepGetBuffer=F=>D.getBuffer(F),a.jsepCreateDownloader=(F,J,ue)=>D.createDownloader(F,J,ue),a.jsepOnReleaseSession=F=>{D.onReleaseSession(F)},a.jsepOnRunStart=F=>D.onRunStart(F)}};var r=Object.assign({},a),t="./this.program",u=(T,k)=>{throw k},s=typeof window=="object",m=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",b="",y,w,x;if(g){var v=(Mi(),sr(Di)),E=(Wi(),sr(Ui));b=m?E.dirname(b)+"/":__dirname+"/",y=(T,k)=>(T=jt(T)?new URL(T):E.normalize(T),v.readFileSync(T,k?void 0:"utf8")),x=T=>(T=y(T,!0),T.buffer||(T=new Uint8Array(T)),T),w=(T,k,D,F=!0)=>{T=jt(T)?new URL(T):E.normalize(T),v.readFile(T,F?void 0:"utf8",(J,ue)=>{J?D(J):k(F?ue.buffer:ue)})},!a.thisProgram&&1<process.argv.length&&(t=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),u=(T,k)=>{throw process.exitCode=T,k}}else(s||m)&&(m?b=self.location.href:typeof document<"u"&&document.currentScript&&(b=document.currentScript.src),o&&(b=o),b.startsWith("blob:")?b="":b=b.substr(0,b.replace(/[?#].*/,"").lastIndexOf("/")+1),y=T=>{var k=new XMLHttpRequest;return k.open("GET",T,!1),k.send(null),k.responseText},m&&(x=T=>{var k=new XMLHttpRequest;return k.open("GET",T,!1),k.responseType="arraybuffer",k.send(null),new Uint8Array(k.response)}),w=(T,k,D)=>{var F=new XMLHttpRequest;F.open("GET",T,!0),F.responseType="arraybuffer",F.onload=()=>{F.status==200||F.status==0&&F.response?k(F.response):D()},F.onerror=D,F.send(null)});var O=console.log.bind(console),C=console.error.bind(console);Object.assign(a,r),r=null;var S,N=!1,Q,te,Z,Y,G,R,V,ce,se,be,ee;function ve(){var T=S.buffer;a.HEAP8=te=new Int8Array(T),a.HEAP16=Y=new Int16Array(T),a.HEAPU8=Z=new Uint8Array(T),a.HEAPU16=G=new Uint16Array(T),a.HEAP32=R=new Int32Array(T),a.HEAPU32=V=new Uint32Array(T),a.HEAPF32=ce=new Float32Array(T),a.HEAPF64=ee=new Float64Array(T),a.HEAP64=se=new BigInt64Array(T),a.HEAPU64=be=new BigUint64Array(T)}var Ce=[],Ge=[],De=[],ct=0,ht=null;function Wt(T){throw T="Aborted("+T+")",C(T),N=!0,Q=1,T=new WebAssembly.RuntimeError(T+". Build with -sASSERTIONS for more info."),f(T),T}var _n=T=>T.startsWith("data:application/octet-stream;base64,"),jt=T=>T.startsWith("file://"),ln;if(ln="ort-wasm-simd.wasm",!_n(ln)){var ft=ln;ln=a.locateFile?a.locateFile(ft,b):b+ft}function bt(T){if(x)return x(T);throw"both async and sync fetching of the wasm failed"}function Lt(T){if(s||m){if(typeof fetch=="function"&&!jt(T))return fetch(T,{credentials:"same-origin"}).then(k=>{if(!k.ok)throw`failed to load wasm binary file at '${T}'`;return k.arrayBuffer()}).catch(()=>bt(T));if(w)return new Promise((k,D)=>{w(T,F=>k(new Uint8Array(F)),D)})}return Promise.resolve().then(()=>bt(T))}function Jt(T,k,D){return Lt(T).then(F=>WebAssembly.instantiate(F,k)).then(D,F=>{C(`failed to asynchronously prepare wasm: ${F}`),Wt(F)})}function En(T,k){var D=ln;return typeof WebAssembly.instantiateStreaming!="function"||_n(D)||jt(D)||g||typeof fetch!="function"?Jt(D,T,k):fetch(D,{credentials:"same-origin"}).then(F=>WebAssembly.instantiateStreaming(F,T).then(k,function(J){return C(`wasm streaming compile failed: ${J}`),C("falling back to ArrayBuffer instantiation"),Jt(D,T,k)}))}var An={824936:(T,k,D,F)=>{if(typeof a>"u"||!a.eb)return 1;if(T=Vt(T>>>0),T.startsWith("./")&&(T=T.substring(2)),T=a.eb.get(T),!T)return 2;if(k>>>=0,D>>>=0,k+D>T.byteLength)return 3;try{return Z.set(T.subarray(k,k+D),F>>>0>>>0),0}catch{return 4}},825437:()=>{a.qb()},825468:()=>{a.rb()},825497:()=>{a.vb()},825522:T=>a.pb(T),825555:T=>a.tb(T),825587:(T,k,D)=>{a.lb(T,k,D,!0)},825626:(T,k,D)=>{a.lb(T,k,D)},825659:T=>{a.Ra("Abs",T,void 0)},825710:T=>{a.Ra("Neg",T,void 0)},825761:T=>{a.Ra("Floor",T,void 0)},825814:T=>{a.Ra("Ceil",T,void 0)},825866:T=>{a.Ra("Reciprocal",T,void 0)},825924:T=>{a.Ra("Sqrt",T,void 0)},825976:T=>{a.Ra("Exp",T,void 0)},826027:T=>{a.Ra("Erf",T,void 0)},826078:T=>{a.Ra("Sigmoid",T,void 0)},826133:(T,k,D)=>{a.Ra("HardSigmoid",T,{alpha:k,beta:D})},826212:T=>{a.Ra("Log",T,void 0)},826263:T=>{a.Ra("Sin",T,void 0)},826314:T=>{a.Ra("Cos",T,void 0)},826365:T=>{a.Ra("Tan",T,void 0)},826416:T=>{a.Ra("Asin",T,void 0)},826468:T=>{a.Ra("Acos",T,void 0)},826520:T=>{a.Ra("Atan",T,void 0)},826572:T=>{a.Ra("Sinh",T,void 0)},826624:T=>{a.Ra("Cosh",T,void 0)},826676:T=>{a.Ra("Asinh",T,void 0)},826729:T=>{a.Ra("Acosh",T,void 0)},826782:T=>{a.Ra("Atanh",T,void 0)},826835:T=>{a.Ra("Tanh",T,void 0)},826887:T=>{a.Ra("Not",T,void 0)},826938:(T,k,D)=>{a.Ra("Clip",T,{min:k,max:D})},827007:T=>{a.Ra("Clip",T,void 0)},827059:(T,k)=>{a.Ra("Elu",T,{alpha:k})},827117:T=>{a.Ra("Relu",T,void 0)},827169:(T,k)=>{a.Ra("LeakyRelu",T,{alpha:k})},827233:(T,k)=>{a.Ra("ThresholdedRelu",T,{alpha:k})},827303:(T,k)=>{a.Ra("Cast",T,{to:k})},827361:T=>{a.Ra("Add",T,void 0)},827412:T=>{a.Ra("Sub",T,void 0)},827463:T=>{a.Ra("Mul",T,void 0)},827514:T=>{a.Ra("Div",T,void 0)},827565:T=>{a.Ra("Pow",T,void 0)},827616:T=>{a.Ra("Equal",T,void 0)},827669:T=>{a.Ra("Greater",T,void 0)},827724:T=>{a.Ra("GreaterOrEqual",T,void 0)},827786:T=>{a.Ra("Less",T,void 0)},827838:T=>{a.Ra("LessOrEqual",T,void 0)},827897:(T,k,D,F,J)=>{a.Ra("ReduceMean",T,{keepDims:!!k,noopWithEmptyAxes:!!D,axes:F?Array.from(R.subarray(F>>>0,J>>>0)):[]})},828056:(T,k,D,F,J)=>{a.Ra("ReduceMax",T,{keepDims:!!k,noopWithEmptyAxes:!!D,axes:F?Array.from(R.subarray(F>>>0,J>>>0)):[]})},828214:(T,k,D,F,J)=>{a.Ra("ReduceMin",T,{keepDims:!!k,noopWithEmptyAxes:!!D,axes:F?Array.from(R.subarray(F>>>0,J>>>0)):[]})},828372:(T,k,D,F,J)=>{a.Ra("ReduceProd",T,{keepDims:!!k,noopWithEmptyAxes:!!D,axes:F?Array.from(R.subarray(F>>>0,J>>>0)):[]})},828531:(T,k,D,F,J)=>{a.Ra("ReduceSum",T,{keepDims:!!k,noopWithEmptyAxes:!!D,axes:F?Array.from(R.subarray(F>>>0,J>>>0)):[]})},828689:(T,k,D,F,J)=>{a.Ra("ReduceL1",T,{keepDims:!!k,noopWithEmptyAxes:!!D,axes:F?Array.from(R.subarray(F>>>0,J>>>0)):[]})},828846:(T,k,D,F,J)=>{a.Ra("ReduceL2",T,{keepDims:!!k,noopWithEmptyAxes:!!D,axes:F?Array.from(R.subarray(F>>>0,J>>>0)):[]})},829003:(T,k,D,F,J)=>{a.Ra("ReduceLogSum",T,{keepDims:!!k,noopWithEmptyAxes:!!D,axes:F?Array.from(R.subarray(F>>>0,J>>>0)):[]})},829164:(T,k,D,F,J)=>{a.Ra("ReduceSumSquare",T,{keepDims:!!k,noopWithEmptyAxes:!!D,axes:F?Array.from(R.subarray(F>>>0,J>>>0)):[]})},829328:(T,k,D,F,J)=>{a.Ra("ReduceLogSumExp",T,{keepDims:!!k,noopWithEmptyAxes:!!D,axes:F?Array.from(R.subarray(F>>>0,J>>>0)):[]})},829492:T=>{a.Ra("Where",T,void 0)},829545:(T,k,D)=>{a.Ra("Transpose",T,{perm:k?Array.from(R.subarray(k>>>0,D>>>0)):[]})},829653:(T,k,D,F)=>{a.Ra("DepthToSpace",T,{blocksize:k,mode:Vt(D),format:F?"NHWC":"NCHW"})},829786:(T,k,D,F)=>{a.Ra("DepthToSpace",T,{blocksize:k,mode:Vt(D),format:F?"NHWC":"NCHW"})},829919:(T,k,D,F,J,ue,Te,Se,Le,Me,Ye,Gt,A,I,L)=>{a.Ra("ConvTranspose",T,{format:Le?"NHWC":"NCHW",autoPad:k,dilations:[D],group:F,kernelShape:[J],pads:[ue,Te],strides:[Se],wIsConst:()=>!!te[Me>>>0],outputPadding:Ye?Array.from(R.subarray(Ye>>>0,Gt>>>0)):[],outputShape:A?Array.from(R.subarray(A>>>0,I>>>0)):[],activation:Vt(L)})},830320:(T,k,D,F,J,ue,Te,Se,Le,Me,Ye,Gt,A,I)=>{a.Ra("ConvTranspose",T,{format:Se?"NHWC":"NCHW",autoPad:k,dilations:Array.from(R.subarray(D>>>0,(D>>>0)+2>>>0)),group:F,kernelShape:Array.from(R.subarray(J>>>0,(J>>>0)+2>>>0)),pads:Array.from(R.subarray(ue>>>0,(ue>>>0)+4>>>0)),strides:Array.from(R.subarray(Te>>>0,(Te>>>0)+2>>>0)),wIsConst:()=>!!te[Le>>>0],outputPadding:Me?Array.from(R.subarray(Me>>>0,Ye>>>0)):[],outputShape:Gt?Array.from(R.subarray(Gt>>>0,A>>>0)):[],activation:Vt(I)})},830885:(T,k,D,F,J,ue,Te,Se,Le,Me,Ye,Gt,A,I,L)=>{a.Ra("ConvTranspose",T,{format:Le?"NHWC":"NCHW",autoPad:k,dilations:[D],group:F,kernelShape:[J],pads:[ue,Te],strides:[Se],wIsConst:()=>!!te[Me>>>0],outputPadding:Ye?Array.from(R.subarray(Ye>>>0,Gt>>>0)):[],outputShape:A?Array.from(R.subarray(A>>>0,I>>>0)):[],activation:Vt(L)})},831286:(T,k,D,F,J,ue,Te,Se,Le,Me,Ye,Gt,A,I)=>{a.Ra("ConvTranspose",T,{format:Se?"NHWC":"NCHW",autoPad:k,dilations:Array.from(R.subarray(D>>>0,(D>>>0)+2>>>0)),group:F,kernelShape:Array.from(R.subarray(J>>>0,(J>>>0)+2>>>0)),pads:Array.from(R.subarray(ue>>>0,(ue>>>0)+4>>>0)),strides:Array.from(R.subarray(Te>>>0,(Te>>>0)+2>>>0)),wIsConst:()=>!!te[Le>>>0],outputPadding:Me?Array.from(R.subarray(Me>>>0,Ye>>>0)):[],outputShape:Gt?Array.from(R.subarray(Gt>>>0,A>>>0)):[],activation:Vt(I)})},831851:(T,k)=>{a.Ra("GlobalAveragePool",T,{format:k?"NHWC":"NCHW"})},831942:(T,k,D,F,J,ue,Te,Se,Le,Me,Ye,Gt,A,I,L,W)=>{a.Ra("AveragePool",T,{format:W?"NHWC":"NCHW",auto_pad:k,ceil_mode:D,count_include_pad:F,storage_order:J,dilations:[ue,Te],kernel_shape:[Se,Le],pads:[Me,Ye,Gt,A],strides:[I,L]})},832226:(T,k)=>{a.Ra("GlobalAveragePool",T,{format:k?"NHWC":"NCHW"})},832317:(T,k,D,F,J,ue,Te,Se,Le,Me,Ye,Gt,A,I,L,W)=>{a.Ra("AveragePool",T,{format:W?"NHWC":"NCHW",auto_pad:k,ceil_mode:D,count_include_pad:F,storage_order:J,dilations:[ue,Te],kernel_shape:[Se,Le],pads:[Me,Ye,Gt,A],strides:[I,L]})},832601:(T,k)=>{a.Ra("GlobalMaxPool",T,{format:k?"NHWC":"NCHW"})},832688:(T,k,D,F,J,ue,Te,Se,Le,Me,Ye,Gt,A,I,L,W)=>{a.Ra("MaxPool",T,{format:W?"NHWC":"NCHW",auto_pad:k,ceil_mode:D,count_include_pad:F,storage_order:J,dilations:[ue,Te],kernel_shape:[Se,Le],pads:[Me,Ye,Gt,A],strides:[I,L]})},832968:(T,k)=>{a.Ra("GlobalMaxPool",T,{format:k?"NHWC":"NCHW"})},833055:(T,k,D,F,J,ue,Te,Se,Le,Me,Ye,Gt,A,I,L,W)=>{a.Ra("MaxPool",T,{format:W?"NHWC":"NCHW",auto_pad:k,ceil_mode:D,count_include_pad:F,storage_order:J,dilations:[ue,Te],kernel_shape:[Se,Le],pads:[Me,Ye,Gt,A],strides:[I,L]})},833335:(T,k,D,F,J)=>{a.Ra("Gemm",T,{alpha:k,beta:D,transA:F,transB:J})},833439:T=>{a.Ra("MatMul",T,void 0)},833493:(T,k,D,F)=>{a.Ra("ArgMax",T,{keepDims:!!k,selectLastIndex:!!D,axis:F})},833601:(T,k,D,F)=>{a.Ra("ArgMin",T,{keepDims:!!k,selectLastIndex:!!D,axis:F})},833709:(T,k)=>{a.Ra("Softmax",T,{axis:k})},833772:(T,k)=>{a.Ra("Concat",T,{axis:k})},833832:(T,k,D,F,J)=>{a.Ra("Split",T,{axis:k,numOutputs:D,splitSizes:F?Array.from(R.subarray(F>>>0,J>>>0)):[]})},833972:T=>{a.Ra("Expand",T,void 0)},834026:(T,k)=>{a.Ra("Gather",T,{axis:Number(k)})},834097:(T,k)=>{a.Ra("GatherElements",T,{axis:Number(k)})},834176:(T,k,D,F,J,ue,Te,Se,Le,Me,Ye)=>{a.Ra("Resize",T,{antialias:k,axes:D?Array.from(R.subarray(D>>>0,F>>>0)):[],coordinateTransformMode:Vt(J),cubicCoeffA:ue,excludeOutside:Te,extrapolationValue:Se,keepAspectRatioPolicy:Vt(Le),mode:Vt(Me),nearestMode:Vt(Ye)})},834522:(T,k,D,F,J,ue,Te)=>{a.Ra("Slice",T,{starts:k?Array.from(R.subarray(k>>>0,D>>>0)):[],ends:F?Array.from(R.subarray(F>>>0,J>>>0)):[],axes:ue?Array.from(R.subarray(ue>>>0,Te>>>0)):[]})},834738:T=>{a.Ra("Tile",T,void 0)},834790:(T,k,D,F)=>{a.Ra("LayerNormalization",T,{axis:k,epsilon:D,simplified:!!F})},834901:(T,k,D)=>{a.Ra("InstanceNormalization",T,{epsilon:k,format:D?"NHWC":"NCHW"})},835015:(T,k,D)=>{a.Ra("InstanceNormalization",T,{epsilon:k,format:D?"NHWC":"NCHW"})},835129:T=>{a.Ra("Range",T,void 0)},835182:(T,k)=>{a.Ra("Einsum",T,{equation:Vt(k)})},835263:(T,k,D,F,J)=>{a.Ra("Pad",T,{mode:k,value:D,pads:F?Array.from(R.subarray(F>>>0,J>>>0)):[]})},835390:(T,k,D,F,J,ue)=>{a.Ra("BatchNormalization",T,{epsilon:k,momentum:D,spatial:!!J,trainingMode:!!F,format:ue?"NHWC":"NCHW"})},835559:(T,k,D,F,J,ue)=>{a.Ra("BatchNormalization",T,{epsilon:k,momentum:D,spatial:!!J,trainingMode:!!F,format:ue?"NHWC":"NCHW"})},835728:(T,k,D)=>{a.Ra("CumSum",T,{exclusive:Number(k),reverse:Number(D)})},835825:(T,k,D,F,J,ue,Te,Se,Le)=>{a.Ra("Attention",T,{numHeads:k,isUnidirectional:D,maskFilterValue:F,scale:J,doRotary:ue,qkvHiddenSizes:Te?Array.from(R.subarray(Number(Se)>>>0,Number(Se)+Te>>>0)):[],pastPresentShareBuffer:!!Le})},836097:T=>{a.Ra("BiasAdd",T,void 0)},836152:T=>{a.Ra("BiasSplitGelu",T,void 0)},836213:T=>{a.Ra("FastGelu",T,void 0)},836269:(T,k,D,F,J,ue,Te,Se,Le,Me,Ye,Gt,A)=>{a.Ra("Conv",T,{format:Le?"NHWC":"NCHW",auto_pad:k,dilations:[D],group:F,kernel_shape:[J],pads:ue?Array.from(R.subarray(ue>>>0,Te>>>0)):[],strides:[Se],w_is_const:()=>!!te[Me>>>0],activation:Vt(Ye),activation_params:Gt?Array.from(ce.subarray(Gt>>>0,A>>>0)):[]})},836639:(T,k,D,F,J,ue,Te,Se,Le,Me,Ye,Gt,A,I,L,W)=>{a.Ra("Conv",T,{format:Gt?"NHWC":"NCHW",auto_pad:k,dilations:[D,F],group:J,kernel_shape:[ue,Te],pads:Se?Array.from(R.subarray(Se>>>0,Le>>>0)):[],strides:[Me,Ye],w_is_const:()=>!!te[A>>>0],activation:Vt(I),activation_params:L?Array.from(ce.subarray(L>>>0,W>>>0)):[]})},837030:T=>{a.Ra("Gelu",T,void 0)},837082:(T,k,D,F,J,ue)=>{a.Ra("MatMulNBits",T,{k,n:D,accuracyLevel:F,bits:J,blockSize:ue})},837209:(T,k,D,F,J,ue)=>{a.Ra("MultiHeadAttention",T,{numHeads:k,isUnidirectional:D,maskFilterValue:F,scale:J,doRotary:ue})},837368:(T,k,D,F,J)=>{a.Ra("RotaryEmbedding",T,{interleaved:!!k,numHeads:D,rotaryEmbeddingDim:F,scale:J})},837507:(T,k,D)=>{a.Ra("SkipLayerNormalization",T,{epsilon:k,simplified:!!D})},837609:(T,k,D)=>{a.Ra("SkipLayerNormalization",T,{epsilon:k,simplified:!!D})},837711:(T,k,D,F)=>{a.Ra("LayerNormalization",T,{axis:k,epsilon:D,simplified:!!F})},837822:T=>{a.ub(T)},837856:(T,k)=>a.wb(T,k,a.cb.xb,a.cb.errors)};function Cn(T){this.name="ExitStatus",this.message=`Program terminated with exit(${T})`,this.status=T}class xr{constructor(k){this.hb=k-24}}var wn=0,vn=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Qt=(T,k,D)=>{k>>>=0;var F=k+D;for(D=k;T[D]&&!(D>=F);)++D;if(16<D-k&&T.buffer&&vn)return vn.decode(T.subarray(k,D));for(F="";k<D;){var J=T[k++];if(J&128){var ue=T[k++]&63;if((J&224)==192)F+=String.fromCharCode((J&31)<<6|ue);else{var Te=T[k++]&63;J=(J&240)==224?(J&15)<<12|ue<<6|Te:(J&7)<<18|ue<<12|Te<<6|T[k++]&63,65536>J?F+=String.fromCharCode(J):(J-=65536,F+=String.fromCharCode(55296|J>>10,56320|J&1023))}}else F+=String.fromCharCode(J)}return F},Vt=(T,k)=>(T>>>=0)?Qt(Z,T,k):"",tr=T=>{for(var k=0,D=0;D<T.length;++D){var F=T.charCodeAt(D);127>=F?k++:2047>=F?k+=2:55296<=F&&57343>=F?(k+=4,++D):k+=3}return k},ot=(T,k,D,F)=>{if(D>>>=0,!(0<F))return 0;var J=D;F=D+F-1;for(var ue=0;ue<T.length;++ue){var Te=T.charCodeAt(ue);if(55296<=Te&&57343>=Te){var Se=T.charCodeAt(++ue);Te=65536+((Te&1023)<<10)|Se&1023}if(127>=Te){if(D>=F)break;k[D++>>>0]=Te}else{if(2047>=Te){if(D+1>=F)break;k[D++>>>0]=192|Te>>6}else{if(65535>=Te){if(D+2>=F)break;k[D++>>>0]=224|Te>>12}else{if(D+3>=F)break;k[D++>>>0]=240|Te>>18,k[D++>>>0]=128|Te>>12&63}k[D++>>>0]=128|Te>>6&63}k[D++>>>0]=128|Te&63}}return k[D>>>0]=0,D-J},_r,Tn=T=>{for(var k="";Z[T>>>0];)k+=_r[Z[T++>>>0]];return k},Wr={},or={},nr;function Ar(T,k,D={}){var F=k.name;if(!T)throw new nr(`type "${F}" must have a positive integer typeid pointer`);if(or.hasOwnProperty(T)){if(D.nb)return;throw new nr(`Cannot register type '${F}' twice`)}or[T]=k,Wr.hasOwnProperty(T)&&(k=Wr[T],delete Wr[T],k.forEach(J=>J()))}function Ht(T,k,D={}){if(!("argPackAdvance"in k))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Ar(T,k,D)}var wr=(T,k,D)=>{switch(k){case 1:return D?F=>te[F>>>0]:F=>Z[F>>>0];case 2:return D?F=>Y[F>>>1>>>0]:F=>G[F>>>1>>>0];case 4:return D?F=>R[F>>>2>>>0]:F=>V[F>>>2>>>0];case 8:return D?F=>se[F>>>3]:F=>be[F>>>3];default:throw new TypeError(`invalid integer width (${k}): ${T}`)}},Xe=[],pn=[];function Hr(T){T>>>=0,9<T&&--pn[T+1]===0&&(pn[T]=void 0,Xe.push(T))}var mt=T=>{if(!T)throw new nr("Cannot use deleted val. handle = "+T);return pn[T]},bn=T=>{switch(T){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let k=Xe.pop()||pn.length;return pn[k]=T,pn[k+1]=1,k}};function Pt(T){return this.fromWireType(V[T>>>2>>>0])}var Lr={name:"emscripten::val",fromWireType:T=>{var k=mt(T);return Hr(T),k},toWireType:(T,k)=>bn(k),argPackAdvance:8,readValueFromPointer:Pt,bb:null},qr=(T,k)=>{switch(k){case 4:return function(D){return this.fromWireType(ce[D>>>2>>>0])};case 8:return function(D){return this.fromWireType(ee[D>>>3>>>0])};default:throw new TypeError(`invalid float width (${k}): ${T}`)}},Ir=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Ee=(T,k)=>{for(var D=T>>1,F=D+k/2;!(D>=F)&&G[D>>>0];)++D;if(D<<=1,32<D-T&&Ir)return Ir.decode(Z.subarray(T>>>0,D>>>0));for(D="",F=0;!(F>=k/2);++F){var J=Y[T+2*F>>>1>>>0];if(J==0)break;D+=String.fromCharCode(J)}return D},Qe=(T,k,D)=>{if(D??(D=2147483647),2>D)return 0;D-=2;var F=k;D=D<2*T.length?D/2:T.length;for(var J=0;J<D;++J)Y[k>>>1>>>0]=T.charCodeAt(J),k+=2;return Y[k>>>1>>>0]=0,k-F},st=T=>2*T.length,_i=(T,k)=>{for(var D=0,F="";!(D>=k/4);){var J=R[T+4*D>>>2>>>0];if(J==0)break;++D,65536<=J?(J-=65536,F+=String.fromCharCode(55296|J>>10,56320|J&1023)):F+=String.fromCharCode(J)}return F},Cr=(T,k,D)=>{if(k>>>=0,D??(D=2147483647),4>D)return 0;var F=k;D=F+D-4;for(var J=0;J<T.length;++J){var ue=T.charCodeAt(J);if(55296<=ue&&57343>=ue){var Te=T.charCodeAt(++J);ue=65536+((ue&1023)<<10)|Te&1023}if(R[k>>>2>>>0]=ue,k+=4,k+4>D)break}return R[k>>>2>>>0]=0,k-F},Kr=T=>{for(var k=0,D=0;D<T.length;++D){var F=T.charCodeAt(D);55296<=F&&57343>=F&&++D,k+=4}return k},Mr=(T,k)=>{var D=or[T];if(D===void 0)throw T=ki(T),D=Tn(T),Sn(T),new nr(`${k} has unknown type ${D}`);return D},Fr=(T,k,D)=>{var F=[];return T=T.toWireType(F,D),F.length&&(V[k>>>2>>>0]=bn(F)),T},Tr=T=>{try{T()}catch(k){Wt(k)}},hn=T=>{var k;if(!N)try{T();try{Q=Q=T=Q,(k=a.onExit)==null||k.call(a,T),N=!0,u(T,new Cn(T))}catch(D){D instanceof Cn||D=="unwind"||u(1,D)}}catch(D){D instanceof Cn||D=="unwind"||u(1,D)}};function Yr(){var T=Je,k={};for(let[D,F]of Object.entries(T))k[D]=typeof F=="function"?(...J)=>{ir.push(D);try{return F(...J)}finally{N||(ir.pop(),$n&&rr===1&&ir.length===0&&(rr=0,Tr(Tt),typeof Fibers<"u"&&Fibers.Db()))}}:F;return k}var rr=0,$n=null,Ur=0,ir=[],Vr={},jr={},B=0,H=null,ne=[];function ae(){return new Promise((T,k)=>{H={resolve:T,reject:k}})}function oe(){var T=Gr(65548),k=T+12;V[T>>>2>>>0]=k,V[T+4>>>2>>>0]=k+65536,k=ir[0];var D=Vr[k];return D===void 0&&(D=B++,Vr[k]=D,jr[D]=k),R[T+8>>>2>>>0]=D,T}function pe(T){if(!N){if(rr===0){var k=!1,D=!1;T((F=0)=>{if(!N&&(Ur=F,k=!0,D)){rr=2,Tr(()=>vr($n)),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.resume(),F=!1;try{var J=(0,Je[jr[R[$n+8>>>2>>>0]]])()}catch(Se){J=Se,F=!0}var ue=!1;if(!$n){var Te=H;Te&&(H=null,(F?Te.reject:Te.resolve)(J),ue=!0)}if(F&&!ue)throw J}}),D=!0,k||(rr=1,$n=oe(),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.pause(),Tr(()=>gi($n)))}else rr===2?(rr=0,Tr(et),Sn($n),$n=null,ne.forEach(hn)):Wt(`invalid state: ${rr}`);return Ur}}function Oe(T){return pe(k=>{T().then(k)})}var je=[],Re={},dt=T=>{var k=Re[T];return k===void 0?Tn(T):k},wt=()=>typeof globalThis=="object"?globalThis:Function("return this")(),yn=T=>{var k=je.length;return je.push(T),k},gn=(T,k)=>{for(var D=Array(T),F=0;F<T;++F)D[F]=Mr(V[k+4*F>>>2>>>0],"parameter "+F);return D},le=(T,k)=>Object.defineProperty(k,"name",{value:T});function Ct(T){var k=Function;if(!(k instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof k} which is not a function`);var D=le(k.name||"unknownFunctionName",function(){});return D.prototype=k.prototype,D=new D,T=k.apply(D,T),T instanceof Object?T:D}var vt=T=>T%4===0&&(T%100!==0||T%400===0),er=[0,31,60,91,121,152,182,213,244,274,305,335],br=[0,31,59,90,120,151,181,212,243,273,304,334],ar=[],Xr=(T,k)=>{ar.length=0;for(var D;D=Z[T++>>>0];){var F=D!=105;F&=D!=112,k+=F&&k%8?4:0,ar.push(D==112?V[k>>>2>>>0]:D==106?se[k>>>3]:D==105?R[k>>>2>>>0]:ee[k>>>3>>>0]),k+=F?8:4}return ar},xn={},dn=()=>{if(!Dr){var T={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:t||"./this.program"},k;for(k in xn)xn[k]===void 0?delete T[k]:T[k]=xn[k];var D=[];for(k in T)D.push(`${k}=${T[k]}`);Dr=D}return Dr},Dr,Ni=[null,[],[]],Ai=[31,29,31,30,31,30,31,31,30,31,30,31],Ei=[31,28,31,30,31,30,31,31,30,31,30,31];function Ea(T){var k=Array(tr(T)+1);return ot(T,k,0,k.length),k}function Vi(T,k,D,F){function J(I,L,W){for(I=typeof I=="number"?I.toString():I||"";I.length<L;)I=W[0]+I;return I}function ue(I,L){return J(I,L,"0")}function Te(I,L){function W(de){return 0>de?-1:0<de?1:0}var ie;return(ie=W(I.getFullYear()-L.getFullYear()))===0&&(ie=W(I.getMonth()-L.getMonth()))===0&&(ie=W(I.getDate()-L.getDate())),ie}function Se(I){switch(I.getDay()){case 0:return new Date(I.getFullYear()-1,11,29);case 1:return I;case 2:return new Date(I.getFullYear(),0,3);case 3:return new Date(I.getFullYear(),0,2);case 4:return new Date(I.getFullYear(),0,1);case 5:return new Date(I.getFullYear()-1,11,31);case 6:return new Date(I.getFullYear()-1,11,30)}}function Le(I){var L=I.$a;for(I=new Date(new Date(I.ab+1900,0,1).getTime());0<L;){var W=I.getMonth(),ie=(vt(I.getFullYear())?Ai:Ei)[W];if(L>ie-I.getDate())L-=ie-I.getDate()+1,I.setDate(1),11>W?I.setMonth(W+1):(I.setMonth(0),I.setFullYear(I.getFullYear()+1));else{I.setDate(I.getDate()+L);break}}return W=new Date(I.getFullYear()+1,0,4),L=Se(new Date(I.getFullYear(),0,4)),W=Se(W),0>=Te(L,I)?0>=Te(W,I)?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}T>>>=0,k>>>=0,D>>>=0,F>>>=0;var Me=V[F+40>>>2>>>0];F={Ab:R[F>>>2>>>0],zb:R[F+4>>>2>>>0],fb:R[F+8>>>2>>>0],jb:R[F+12>>>2>>>0],gb:R[F+16>>>2>>>0],ab:R[F+20>>>2>>>0],Va:R[F+24>>>2>>>0],$a:R[F+28>>>2>>>0],Cb:R[F+32>>>2>>>0],yb:R[F+36>>>2>>>0],Bb:Me?Vt(Me):""},D=Vt(D),Me={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var Ye in Me)D=D.replace(new RegExp(Ye,"g"),Me[Ye]);var Gt="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),A="January February March April May June July August September October November December".split(" ");Me={"%a":I=>Gt[I.Va].substring(0,3),"%A":I=>Gt[I.Va],"%b":I=>A[I.gb].substring(0,3),"%B":I=>A[I.gb],"%C":I=>ue((I.ab+1900)/100|0,2),"%d":I=>ue(I.jb,2),"%e":I=>J(I.jb,2," "),"%g":I=>Le(I).toString().substring(2),"%G":Le,"%H":I=>ue(I.fb,2),"%I":I=>(I=I.fb,I==0?I=12:12<I&&(I-=12),ue(I,2)),"%j":I=>{for(var L=0,W=0;W<=I.gb-1;L+=(vt(I.ab+1900)?Ai:Ei)[W++]);return ue(I.jb+L,3)},"%m":I=>ue(I.gb+1,2),"%M":I=>ue(I.zb,2),"%n":()=>`
`,"%p":I=>0<=I.fb&&12>I.fb?"AM":"PM","%S":I=>ue(I.Ab,2),"%t":()=>"	","%u":I=>I.Va||7,"%U":I=>ue(Math.floor((I.$a+7-I.Va)/7),2),"%V":I=>{var L=Math.floor((I.$a+7-(I.Va+6)%7)/7);if(2>=(I.Va+371-I.$a-2)%7&&L++,L)L==53&&(W=(I.Va+371-I.$a)%7,W==4||W==3&&vt(I.ab)||(L=1));else{L=52;var W=(I.Va+7-I.$a-1)%7;(W==4||W==5&&vt(I.ab%400-1))&&L++}return ue(L,2)},"%w":I=>I.Va,"%W":I=>ue(Math.floor((I.$a+7-(I.Va+6)%7)/7),2),"%y":I=>(I.ab+1900).toString().substring(2),"%Y":I=>I.ab+1900,"%z":I=>{I=I.yb;var L=0<=I;return I=Math.abs(I)/60,(L?"+":"-")+("0000"+(I/60*100+I%60)).slice(-4)},"%Z":I=>I.Bb,"%%":()=>"%"},D=D.replace(/%%/g,"\0\0");for(Ye in Me)D.includes(Ye)&&(D=D.replace(new RegExp(Ye,"g"),Me[Ye](F)));return D=D.replace(/\0\0/g,"%"),Ye=Ea(D),Ye.length>k?0:(te.set(Ye,T>>>0),Ye.length-1)}for(var wi=Array(256),Zr=0;256>Zr;++Zr)wi[Zr]=String.fromCharCode(Zr);_r=wi,nr=a.BindingError=class extends Error{constructor(T){super(T),this.name="BindingError"}},a.InternalError=class extends Error{constructor(T){super(T),this.name="InternalError"}},pn.push(0,1,void 0,1,null,1,!0,1,!1,1),a.count_emval_handles=()=>pn.length/2-5-Xe.length;var Ta={ia:function(T,k,D){return Oe(async()=>{await a.sb(T,k,D)})},a:function(T,k,D){T>>>=0;var F=new xr(T);throw V[F.hb+16>>>2>>>0]=0,V[F.hb+4>>>2>>>0]=k>>>0,V[F.hb+8>>>2>>>0]=D>>>0,wn=T,wn},z:function(){return 0},ea:function(){},R:function(){},T:function(){},ga:function(){return 0},ca:function(){},Z:function(){},ba:function(){},G:function(){},S:function(){},P:function(){},da:function(){},Q:function(){},C:function(T,k,D){k=Tn(k>>>0),Ht(T>>>0,{name:k,fromWireType:F=>F,toWireType:function(F,J){if(typeof J!="bigint"&&typeof J!="number")throw J===null?J="null":(F=typeof J,J=F==="object"||F==="array"||F==="function"?J.toString():""+J),new TypeError(`Cannot convert "${J}" to ${this.name}`);return typeof J=="number"&&(J=BigInt(J)),J},argPackAdvance:8,readValueFromPointer:wr(k,D>>>0,k.indexOf("u")==-1),bb:null})},K:function(T,k,D,F){k=Tn(k>>>0),Ht(T>>>0,{name:k,fromWireType:function(J){return!!J},toWireType:function(J,ue){return ue?D:F},argPackAdvance:8,readValueFromPointer:function(J){return this.fromWireType(Z[J>>>0])},bb:null})},J:function(T){return Ht(T>>>0,Lr)},B:function(T,k,D){k=Tn(k>>>0),Ht(T>>>0,{name:k,fromWireType:F=>F,toWireType:(F,J)=>J,argPackAdvance:8,readValueFromPointer:qr(k,D>>>0),bb:null})},s:function(T,k,D,F,J){if(T>>>=0,D>>>=0,k=Tn(k>>>0),J===-1&&(J=4294967295),J=Se=>Se,F===0){var ue=32-8*D;J=Se=>Se<<ue>>>ue}var Te=k.includes("unsigned")?function(Se,Le){return Le>>>0}:function(Se,Le){return Le};Ht(T,{name:k,fromWireType:J,toWireType:Te,argPackAdvance:8,readValueFromPointer:wr(k,D,F!==0),bb:null})},o:function(T,k,D){function F(ue){return new J(te.buffer,V[ue+4>>>2>>>0],V[ue>>>2>>>0])}var J=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][k];D=Tn(D>>>0),Ht(T>>>0,{name:D,fromWireType:F,argPackAdvance:8,readValueFromPointer:F},{nb:!0})},D:function(T,k){k=Tn(k>>>0);var D=k==="std::string";Ht(T>>>0,{name:k,fromWireType:function(F){var J=V[F>>>2>>>0],ue=F+4;if(D)for(var Te=ue,Se=0;Se<=J;++Se){var Le=ue+Se;if(Se==J||Z[Le>>>0]==0){if(Te=Vt(Te,Le-Te),Me===void 0)var Me=Te;else Me+="\0",Me+=Te;Te=Le+1}}else{for(Me=Array(J),Se=0;Se<J;++Se)Me[Se]=String.fromCharCode(Z[ue+Se>>>0]);Me=Me.join("")}return Sn(F),Me},toWireType:function(F,J){J instanceof ArrayBuffer&&(J=new Uint8Array(J));var ue=typeof J=="string";if(!(ue||J instanceof Uint8Array||J instanceof Uint8ClampedArray||J instanceof Int8Array))throw new nr("Cannot pass non-string to std::string");var Te=D&&ue?tr(J):J.length,Se=Gr(4+Te+1),Le=Se+4;if(V[Se>>>2>>>0]=Te,D&&ue)ot(J,Z,Le,Te+1);else if(ue)for(ue=0;ue<Te;++ue){var Me=J.charCodeAt(ue);if(255<Me)throw Sn(Le),new nr("String has UTF-16 code units that do not fit in 8 bits");Z[Le+ue>>>0]=Me}else for(ue=0;ue<Te;++ue)Z[Le+ue>>>0]=J[ue];return F!==null&&F.push(Sn,Se),Se},argPackAdvance:8,readValueFromPointer:Pt,bb(F){Sn(F)}})},y:function(T,k,D){if(k>>>=0,D>>>=0,D=Tn(D),k===2)var F=Ee,J=Qe,ue=st,Te=Se=>G[Se>>>1>>>0];else k===4&&(F=_i,J=Cr,ue=Kr,Te=Se=>V[Se>>>2>>>0]);Ht(T>>>0,{name:D,fromWireType:Se=>{for(var Le=V[Se>>>2>>>0],Me,Ye=Se+4,Gt=0;Gt<=Le;++Gt){var A=Se+4+Gt*k;(Gt==Le||Te(A)==0)&&(Ye=F(Ye,A-Ye),Me===void 0?Me=Ye:(Me+="\0",Me+=Ye),Ye=A+k)}return Sn(Se),Me},toWireType:(Se,Le)=>{if(typeof Le!="string")throw new nr(`Cannot pass non-string to C++ string type ${D}`);var Me=ue(Le),Ye=Gr(4+Me+k);return V[Ye>>>2>>>0]=Me/k,J(Le,Ye+4,Me+k),Se!==null&&Se.push(Sn,Ye),Ye},argPackAdvance:8,readValueFromPointer:Pt,bb(Se){Sn(Se)}})},L:function(T,k){k=Tn(k>>>0),Ht(T>>>0,{ob:!0,name:k,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ha:()=>1,u:function(T,k,D){return k>>>=0,D>>>=0,T=mt(T>>>0),k=Mr(k,"emval::as"),Fr(k,D,T)},x:function(T){return T>>>=0,Oe(()=>(T=mt(T),T.then(bn)))},n:function(T,k,D,F){return D>>>=0,F>>>=0,T=je[T>>>0],k=mt(k>>>0),T(null,k,D,F)},j:function(T,k,D,F,J){return D>>>=0,F>>>=0,J>>>=0,T=je[T>>>0],k=mt(k>>>0),D=dt(D),T(k,k[D],F,J)},b:Hr,w:function(T,k){return k>>>=0,T=mt(T>>>0),k=mt(k),T==k},m:function(T){return T>>>=0,T===0?bn(wt()):(T=dt(T),bn(wt()[T]))},i:function(T,k,D){k=gn(T,k>>>0);var F=k.shift();T--;var J=`return function (obj, func, destructorsRef, args) {
`,ue=0,Te=[];D===0&&Te.push("obj");for(var Se=["retType"],Le=[F],Me=0;Me<T;++Me)Te.push("arg"+Me),Se.push("argType"+Me),Le.push(k[Me]),J+=`  var arg${Me} = argType${Me}.readValueFromPointer(args${ue?"+"+ue:""});
`,ue+=k[Me].argPackAdvance;return J+=`  var rv = ${D===1?"new func":"func.call"}(${Te.join(", ")});
`,F.ob||(Se.push("emval_returnValue"),Le.push(Fr),J+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Se.push(J+`};
`),T=Ct(Se)(...Le),D=`methodCaller<(${k.map(Ye=>Ye.name).join(", ")}) => ${F.name}>`,yn(le(D,T))},r:function(T,k){return k>>>=0,T=mt(T>>>0),k=mt(k),bn(T[k])},e:function(T){T>>>=0,9<T&&(pn[T+1]+=1)},t:function(){return bn([])},l:function(T){T=mt(T>>>0);for(var k=Array(T.length),D=0;D<T.length;D++)k[D]=T[D];return bn(k)},f:function(T){return bn(dt(T>>>0))},k:function(){return bn({})},h:function(T){T>>>=0;for(var k=mt(T);k.length;){var D=k.pop();k.pop()(D)}Hr(T)},g:function(T,k,D){k>>>=0,D>>>=0,T=mt(T>>>0),k=mt(k),D=mt(D),T[k]=D},c:function(T,k){return k>>>=0,T=Mr(T>>>0,"_emval_take_value"),T=T.readValueFromPointer(k),bn(T)},W:function(T,k){T=-9007199254740992>T||9007199254740992<T?NaN:Number(T),k>>>=0,T=new Date(1e3*T),R[k>>>2>>>0]=T.getUTCSeconds(),R[k+4>>>2>>>0]=T.getUTCMinutes(),R[k+8>>>2>>>0]=T.getUTCHours(),R[k+12>>>2>>>0]=T.getUTCDate(),R[k+16>>>2>>>0]=T.getUTCMonth(),R[k+20>>>2>>>0]=T.getUTCFullYear()-1900,R[k+24>>>2>>>0]=T.getUTCDay(),R[k+28>>>2>>>0]=(T.getTime()-Date.UTC(T.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},X:function(T,k){T=-9007199254740992>T||9007199254740992<T?NaN:Number(T),k>>>=0,T=new Date(1e3*T),R[k>>>2>>>0]=T.getSeconds(),R[k+4>>>2>>>0]=T.getMinutes(),R[k+8>>>2>>>0]=T.getHours(),R[k+12>>>2>>>0]=T.getDate(),R[k+16>>>2>>>0]=T.getMonth(),R[k+20>>>2>>>0]=T.getFullYear()-1900,R[k+24>>>2>>>0]=T.getDay(),R[k+28>>>2>>>0]=(vt(T.getFullYear())?er:br)[T.getMonth()]+T.getDate()-1|0,R[k+36>>>2>>>0]=-(60*T.getTimezoneOffset());var D=new Date(T.getFullYear(),6,1).getTimezoneOffset(),F=new Date(T.getFullYear(),0,1).getTimezoneOffset();R[k+32>>>2>>>0]=(D!=F&&T.getTimezoneOffset()==Math.min(F,D))|0},Y:function(T){T>>>=0;var k=new Date(R[T+20>>>2>>>0]+1900,R[T+16>>>2>>>0],R[T+12>>>2>>>0],R[T+8>>>2>>>0],R[T+4>>>2>>>0],R[T>>>2>>>0],0),D=R[T+32>>>2>>>0],F=k.getTimezoneOffset(),J=new Date(k.getFullYear(),6,1).getTimezoneOffset(),ue=new Date(k.getFullYear(),0,1).getTimezoneOffset(),Te=Math.min(ue,J);return 0>D?R[T+32>>>2>>>0]=+(J!=ue&&Te==F):0<D!=(Te==F)&&(J=Math.max(ue,J),k.setTime(k.getTime()+6e4*((0<D?Te:J)-F))),R[T+24>>>2>>>0]=k.getDay(),R[T+28>>>2>>>0]=(vt(k.getFullYear())?er:br)[k.getMonth()]+k.getDate()-1|0,R[T>>>2>>>0]=k.getSeconds(),R[T+4>>>2>>>0]=k.getMinutes(),R[T+8>>>2>>>0]=k.getHours(),R[T+12>>>2>>>0]=k.getDate(),R[T+16>>>2>>>0]=k.getMonth(),R[T+20>>>2>>>0]=k.getYear(),T=k.getTime(),BigInt(isNaN(T)?-1:T/1e3)},U:function(){return-52},V:function(){},N:function(T,k,D,F){D>>>=0,F>>>=0;var J=new Date().getFullYear(),ue=new Date(J,0,1),Te=new Date(J,6,1);J=ue.getTimezoneOffset();var Se=Te.getTimezoneOffset();V[T>>>0>>>2>>>0]=60*Math.max(J,Se),R[k>>>0>>>2>>>0]=+(J!=Se),T=Le=>Le.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],ue=T(ue),Te=T(Te),Se<J?(ot(ue,Z,D,17),ot(Te,Z,F,17)):(ot(ue,Z,F,17),ot(Te,Z,D,17))},v:()=>{Wt("")},d:function(T,k,D){return T>>>=0,k=Xr(k>>>0,D>>>0),An[T](...k)},I:function(T,k,D){return T>>>=0,k=Xr(k>>>0,D>>>0),An[T](...k)},H:()=>Date.now(),O:function(){return 4294901760},q:()=>performance.now(),M:function(T){T>>>=0;var k=Z.length;if(4294901760<T)return!1;for(var D=1;4>=D;D*=2){var F=k*(1+.2/D);F=Math.min(F,T+100663296);var J=Math;F=Math.max(T,F);e:{J=(J.min.call(J,4294901760,F+(65536-F%65536)%65536)-S.buffer.byteLength+65535)/65536;try{S.grow(J),ve();var ue=1;break e}catch{}ue=void 0}if(ue)return!0}return!1},$:function(T,k){T>>>=0,k>>>=0;var D=0;return dn().forEach((F,J)=>{var ue=k+D;for(J=V[T+4*J>>>2>>>0]=ue,ue=0;ue<F.length;++ue)te[J++>>>0]=F.charCodeAt(ue);te[J>>>0]=0,D+=F.length+1}),0},aa:function(T,k){T>>>=0,k>>>=0;var D=dn();V[T>>>2>>>0]=D.length;var F=0;return D.forEach(J=>F+=J.length+1),V[k>>>2>>>0]=F,0},A:()=>52,F:function(){return 52},_:function(){return 70},E:function(T,k,D,F){k>>>=0,D>>>=0,F>>>=0;for(var J=0,ue=0;ue<D;ue++){var Te=V[k>>>2>>>0],Se=V[k+4>>>2>>>0];k+=8;for(var Le=0;Le<Se;Le++){var Me=Z[Te+Le>>>0],Ye=Ni[T];Me===0||Me===10?((T===1?O:C)(Qt(Ye,0)),Ye.length=0):Ye.push(Me)}J+=Se}return V[F>>>2>>>0]=J,0},fa:Vi,p:function(T,k,D,F){return Vi(T>>>0,k>>>0,D>>>0,F>>>0)}},Je=function(){function T(D){return Je=D.exports,Je=Yr(),Je=pt(),S=Je.ja,ve(),Ge.unshift(Je.ka),ct--,ct==0&&ht&&(D=ht,ht=null,D()),Je}var k={a:Ta};if(ct++,a.instantiateWasm)try{return a.instantiateWasm(k,T)}catch(D){C(`Module.instantiateWasm callback failed with error: ${D}`),f(D)}return En(k,function(D){T(D.instance)}).catch(f),{}}(),ki=T=>(ki=Je.la)(T);a._OrtInit=(T,k)=>(a._OrtInit=Je.ma)(T,k),a._OrtGetLastError=(T,k)=>(a._OrtGetLastError=Je.na)(T,k),a._OrtCreateSessionOptions=(T,k,D,F,J,ue,Te,Se,Le,Me)=>(a._OrtCreateSessionOptions=Je.oa)(T,k,D,F,J,ue,Te,Se,Le,Me),a._OrtAppendExecutionProvider=(T,k)=>(a._OrtAppendExecutionProvider=Je.pa)(T,k),a._OrtAddFreeDimensionOverride=(T,k,D)=>(a._OrtAddFreeDimensionOverride=Je.qa)(T,k,D),a._OrtAddSessionConfigEntry=(T,k,D)=>(a._OrtAddSessionConfigEntry=Je.ra)(T,k,D),a._OrtReleaseSessionOptions=T=>(a._OrtReleaseSessionOptions=Je.sa)(T),a._OrtCreateSession=(T,k,D)=>(a._OrtCreateSession=Je.ta)(T,k,D),a._OrtReleaseSession=T=>(a._OrtReleaseSession=Je.ua)(T),a._OrtGetInputOutputCount=(T,k,D)=>(a._OrtGetInputOutputCount=Je.va)(T,k,D),a._OrtGetInputName=(T,k)=>(a._OrtGetInputName=Je.wa)(T,k),a._OrtGetOutputName=(T,k)=>(a._OrtGetOutputName=Je.xa)(T,k),a._OrtFree=T=>(a._OrtFree=Je.ya)(T),a._OrtCreateTensor=(T,k,D,F,J,ue)=>(a._OrtCreateTensor=Je.za)(T,k,D,F,J,ue),a._OrtGetTensorData=(T,k,D,F,J)=>(a._OrtGetTensorData=Je.Aa)(T,k,D,F,J),a._OrtReleaseTensor=T=>(a._OrtReleaseTensor=Je.Ba)(T),a._OrtCreateRunOptions=(T,k,D,F)=>(a._OrtCreateRunOptions=Je.Ca)(T,k,D,F),a._OrtAddRunConfigEntry=(T,k,D)=>(a._OrtAddRunConfigEntry=Je.Da)(T,k,D),a._OrtReleaseRunOptions=T=>(a._OrtReleaseRunOptions=Je.Ea)(T),a._OrtCreateBinding=T=>(a._OrtCreateBinding=Je.Fa)(T),a._OrtBindInput=(T,k,D)=>(a._OrtBindInput=Je.Ga)(T,k,D),a._OrtBindOutput=(T,k,D,F)=>(a._OrtBindOutput=Je.Ha)(T,k,D,F),a._OrtClearBoundOutputs=T=>(a._OrtClearBoundOutputs=Je.Ia)(T),a._OrtReleaseBinding=T=>(a._OrtReleaseBinding=Je.Ja)(T),a._OrtRunWithBinding=(T,k,D,F,J)=>(a._OrtRunWithBinding=Je.Ka)(T,k,D,F,J),a._OrtRun=(T,k,D,F,J,ue,Te,Se)=>(a._OrtRun=Je.La)(T,k,D,F,J,ue,Te,Se),a._OrtEndProfiling=T=>(a._OrtEndProfiling=Je.Ma)(T),a._JsepOutput=(T,k,D)=>(a._JsepOutput=Je.Na)(T,k,D),a._JsepGetNodeName=T=>(a._JsepGetNodeName=Je.Oa)(T);var Gr=a._malloc=T=>(Gr=a._malloc=Je.Pa)(T),Sn=a._free=T=>(Sn=a._free=Je.Qa)(T),vi=T=>(vi=Je.Sa)(T),xi=T=>(xi=Je.Ta)(T),Ti=()=>(Ti=Je.Ua)(),gi=T=>(gi=Je.Wa)(T),Tt=()=>(Tt=Je.Xa)(),vr=T=>(vr=Je.Ya)(T),et=()=>(et=Je.Za)();a.___start_em_js=837968,a.___stop_em_js=838129;function pt(){var T=Je;T=Object.assign({},T);var k=D=>F=>D(F)>>>0;return T.la=k(T.la),T.Pa=k(T.Pa),T.Ta=k(T.Ta),T.Ua=(D=>()=>D()>>>0)(T.Ua),T}a.stackSave=()=>Ti(),a.stackRestore=T=>vi(T),a.stackAlloc=T=>xi(T),a.UTF8ToString=Vt,a.stringToUTF8=(T,k,D)=>ot(T,Z,k,D),a.lengthBytesUTF8=tr;var $r;ht=function T(){$r||bi(),$r||(ht=T)};function bi(){if(!(0<ct)){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;){var T=a.preRun.shift();Ce.unshift(T)}for(;0<Ce.length;)Ce.shift()(a);if(!(0<ct||$r||($r=!0,a.calledRun=!0,N))){for(;0<Ge.length;)Ge.shift()(a);for(h(a);0<De.length;)De.shift()(a)}}}return bi(),p}})();typeof n=="object"&&typeof e=="object"?e.exports=i:typeof define=="function"&&define.amd&&define([],()=>i)}),Bo=Er(()=>{}),Do=Er(()=>{}),Mo={};kr(Mo,{cpus:()=>fc});var fc,Uo=j(()=>{fc=void 0}),Vo=Er((n,e)=>{var i=(()=>{var l;var o=typeof document<"u"?(l=document.currentScript)==null?void 0:l.src:void 0;return typeof __filename<"u"&&(o||(o=__filename)),function(c={}){function a(){return ee.buffer!=De.buffer&&Jt(),De}function h(){return ee.buffer!=De.buffer&&Jt(),ct}function f(){return ee.buffer!=De.buffer&&Jt(),ht}function p(){return ee.buffer!=De.buffer&&Jt(),Wt}function d(){return ee.buffer!=De.buffer&&Jt(),_n}function r(){return ee.buffer!=De.buffer&&Jt(),jt}function t(){return ee.buffer!=De.buffer&&Jt(),ln}function u(){return ee.buffer!=De.buffer&&Jt(),Lt}var s=c,m,g,b=new Promise((_,$)=>{m=_,g=$});s.mountExternalData=(_,$)=>{(s.Db||(s.Db=new Map)).set(_,$)},s.unmountExternalData=()=>{delete s.Db};let y=()=>{let _=(P,z,q)=>(...re)=>{let ge=et,$e=z==null?void 0:z();re=P(...re);let Ve=z==null?void 0:z();return $e!==Ve&&(P=Ve,q($e),z=q=null),et!=ge?J():re},$=P=>async(...z)=>{var q;try{if(s.Cb)throw Error("Session already started");let re=s.Cb={ec:z[0],errors:[]},ge=await P(...z);if(s.Cb!==re)throw Error("Session mismatch");(q=s.Kb)==null||q.flush();let $e=re.errors;if(0<$e.length){let Ve=await Promise.all($e);if(Ve=Ve.filter(ze=>ze),0<Ve.length)throw Error(Ve.join(`
`))}return ge}finally{s.Cb=null}};s._OrtCreateSession=_(s._OrtCreateSession,()=>s._OrtCreateSession,P=>s._OrtCreateSession=P),s._OrtRun=$(_(s._OrtRun,()=>s._OrtRun,P=>s._OrtRun=P)),s._OrtRunWithBinding=$(_(s._OrtRunWithBinding,()=>s._OrtRunWithBinding,P=>s._OrtRunWithBinding=P)),s._OrtBindInput=_(s._OrtBindInput,()=>s._OrtBindInput,P=>s._OrtBindInput=P),y=void 0};s.jsepInit=(_,$)=>{if(y==null||y(),_==="webgpu"){[s.Kb,s.Wb,s.$b,s.Lb,s.Zb,s.ob,s.ac,s.cc,s.Xb,s.Yb,s.bc]=$;let P=s.Kb;s.jsepRegisterBuffer=(z,q,re,ge)=>P.registerBuffer(z,q,re,ge),s.jsepGetBuffer=z=>P.getBuffer(z),s.jsepCreateDownloader=(z,q,re)=>P.createDownloader(z,q,re),s.jsepOnReleaseSession=z=>{P.onReleaseSession(z)},s.jsepOnRunStart=z=>P.onRunStart(z)}};var w=Object.assign({},s),x="./this.program",v=(_,$)=>{throw $},E=typeof window=="object",O=typeof importScripts=="function",C=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",S=s.ENVIRONMENT_IS_PTHREAD||!1,N="";function Q(_){return s.locateFile?s.locateFile(_,N):N+_}var te,Z,Y;if(C){var G=(Mi(),sr(Di)),R=(Wi(),sr(Ui));N=O?R.dirname(N)+"/":__dirname+"/",te=(_,$)=>(_=ot(_)?new URL(_):R.normalize(_),G.readFileSync(_,$?void 0:"utf8")),Y=_=>(_=te(_,!0),_.buffer||(_=new Uint8Array(_)),_),Z=(_,$,P,z=!0)=>{_=ot(_)?new URL(_):R.normalize(_),G.readFile(_,z?void 0:"utf8",(q,re)=>{q?P(q):$(z?re.buffer:re)})},!s.thisProgram&&1<process.argv.length&&(x=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),v=(_,$)=>{throw process.exitCode=_,$},global.Worker=Bo().Worker}else(E||O)&&(O?N=self.location.href:typeof document<"u"&&document.currentScript&&(N=document.currentScript.src),typeof o<"u"&&o&&(N=o),N.startsWith("blob:")?N="":N=N.substr(0,N.replace(/[?#].*/,"").lastIndexOf("/")+1),C||(te=_=>{var $=new XMLHttpRequest;return $.open("GET",_,!1),$.send(null),$.responseText},O&&(Y=_=>{var $=new XMLHttpRequest;return $.open("GET",_,!1),$.responseType="arraybuffer",$.send(null),new Uint8Array($.response)}),Z=(_,$,P)=>{var z=new XMLHttpRequest;z.open("GET",_,!0),z.responseType="arraybuffer",z.onload=()=>{z.status==200||z.status==0&&z.response?$(z.response):P()},z.onerror=P,z.send(null)}));C&&typeof performance>"u"&&(global.performance=Do().performance);var V=console.log.bind(console),ce=console.error.bind(console);C&&(V=(..._)=>G.writeSync(1,_.join(" ")+`
`),ce=(..._)=>G.writeSync(2,_.join(" ")+`
`));var se=V,be=ce;Object.assign(s,w),w=null;var ee,ve,Ce=!1,Ge,De,ct,ht,Wt,_n,jt,ln,ft,bt,Lt;function Jt(){var _=ee.buffer;s.HEAP8=De=new Int8Array(_),s.HEAP16=ht=new Int16Array(_),s.HEAPU8=ct=new Uint8Array(_),s.HEAPU16=Wt=new Uint16Array(_),s.HEAP32=_n=new Int32Array(_),s.HEAPU32=jt=new Uint32Array(_),s.HEAPF32=ln=new Float32Array(_),s.HEAPF64=Lt=new Float64Array(_),s.HEAP64=ft=new BigInt64Array(_),s.HEAPU64=bt=new BigUint64Array(_)}var En=16777216;if(S)ee=s.wasmMemory;else if(s.wasmMemory)ee=s.wasmMemory;else if(ee=new WebAssembly.Memory({initial:En/65536,maximum:65536,shared:!0}),!(ee.buffer instanceof SharedArrayBuffer))throw be("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),C&&be("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Jt(),En=ee.buffer.byteLength;var An=[],Cn=[],xr=[],wn=0,vn=null;function Qt(){if(wn--,wn==0&&vn){var _=vn;vn=null,_()}}function Vt(_){throw _="Aborted("+_+")",be(_),Ce=!0,Ge=1,_=new WebAssembly.RuntimeError(_+". Build with -sASSERTIONS for more info."),g(_),_}var tr=_=>_.startsWith("data:application/octet-stream;base64,"),ot=_=>_.startsWith("file://"),_r;_r="ort-wasm-simd-threaded.wasm",tr(_r)||(_r=Q(_r));function Tn(_){if(Y)return Y(_);throw"both async and sync fetching of the wasm failed"}function Wr(_){if(E||O){if(typeof fetch=="function"&&!ot(_))return fetch(_,{credentials:"same-origin"}).then($=>{if(!$.ok)throw`failed to load wasm binary file at '${_}'`;return $.arrayBuffer()}).catch(()=>Tn(_));if(Z)return new Promise(($,P)=>{Z(_,z=>$(new Uint8Array(z)),P)})}return Promise.resolve().then(()=>Tn(_))}function or(_,$,P){return Wr(_).then(z=>WebAssembly.instantiate(z,$)).then(P,z=>{be(`failed to asynchronously prepare wasm: ${z}`),Vt(z)})}function nr(_,$){var P=_r;return typeof WebAssembly.instantiateStreaming!="function"||tr(P)||ot(P)||C||typeof fetch!="function"?or(P,_,$):fetch(P,{credentials:"same-origin"}).then(z=>WebAssembly.instantiateStreaming(z,_).then($,function(q){return be(`wasm streaming compile failed: ${q}`),be("falling back to ArrayBuffer instantiation"),or(P,_,$)}))}var Ar={826468:(_,$,P,z)=>{if(typeof s>"u"||!s.Db)return 1;if(_=hn(_>>>0),_.startsWith("./")&&(_=_.substring(2)),_=s.Db.get(_),!_)return 2;if($>>>=0,P>>>=0,z>>>=0,$+P>_.byteLength)return 3;try{return h().set(_.subarray($,$+P),z>>>0),0}catch{return 4}},826969:()=>{s.Xb()},827e3:()=>{s.Yb()},827029:()=>{s.bc()},827054:_=>s.Wb(_),827087:_=>s.$b(_),827119:(_,$,P)=>{s.Lb(_,$,P,!0)},827158:(_,$,P)=>{s.Lb(_,$,P)},827191:_=>{s.ob("Abs",_,void 0)},827242:_=>{s.ob("Neg",_,void 0)},827293:_=>{s.ob("Floor",_,void 0)},827346:_=>{s.ob("Ceil",_,void 0)},827398:_=>{s.ob("Reciprocal",_,void 0)},827456:_=>{s.ob("Sqrt",_,void 0)},827508:_=>{s.ob("Exp",_,void 0)},827559:_=>{s.ob("Erf",_,void 0)},827610:_=>{s.ob("Sigmoid",_,void 0)},827665:(_,$,P)=>{s.ob("HardSigmoid",_,{alpha:$,beta:P})},827744:_=>{s.ob("Log",_,void 0)},827795:_=>{s.ob("Sin",_,void 0)},827846:_=>{s.ob("Cos",_,void 0)},827897:_=>{s.ob("Tan",_,void 0)},827948:_=>{s.ob("Asin",_,void 0)},828e3:_=>{s.ob("Acos",_,void 0)},828052:_=>{s.ob("Atan",_,void 0)},828104:_=>{s.ob("Sinh",_,void 0)},828156:_=>{s.ob("Cosh",_,void 0)},828208:_=>{s.ob("Asinh",_,void 0)},828261:_=>{s.ob("Acosh",_,void 0)},828314:_=>{s.ob("Atanh",_,void 0)},828367:_=>{s.ob("Tanh",_,void 0)},828419:_=>{s.ob("Not",_,void 0)},828470:(_,$,P)=>{s.ob("Clip",_,{min:$,max:P})},828539:_=>{s.ob("Clip",_,void 0)},828591:(_,$)=>{s.ob("Elu",_,{alpha:$})},828649:_=>{s.ob("Relu",_,void 0)},828701:(_,$)=>{s.ob("LeakyRelu",_,{alpha:$})},828765:(_,$)=>{s.ob("ThresholdedRelu",_,{alpha:$})},828835:(_,$)=>{s.ob("Cast",_,{to:$})},828893:_=>{s.ob("Add",_,void 0)},828944:_=>{s.ob("Sub",_,void 0)},828995:_=>{s.ob("Mul",_,void 0)},829046:_=>{s.ob("Div",_,void 0)},829097:_=>{s.ob("Pow",_,void 0)},829148:_=>{s.ob("Equal",_,void 0)},829201:_=>{s.ob("Greater",_,void 0)},829256:_=>{s.ob("GreaterOrEqual",_,void 0)},829318:_=>{s.ob("Less",_,void 0)},829370:_=>{s.ob("LessOrEqual",_,void 0)},829429:(_,$,P,z,q)=>{s.ob("ReduceMean",_,{keepDims:!!$,noopWithEmptyAxes:!!P,axes:z?Array.from(d().subarray(z>>>0,q>>>0)):[]})},829588:(_,$,P,z,q)=>{s.ob("ReduceMax",_,{keepDims:!!$,noopWithEmptyAxes:!!P,axes:z?Array.from(d().subarray(z>>>0,q>>>0)):[]})},829746:(_,$,P,z,q)=>{s.ob("ReduceMin",_,{keepDims:!!$,noopWithEmptyAxes:!!P,axes:z?Array.from(d().subarray(z>>>0,q>>>0)):[]})},829904:(_,$,P,z,q)=>{s.ob("ReduceProd",_,{keepDims:!!$,noopWithEmptyAxes:!!P,axes:z?Array.from(d().subarray(z>>>0,q>>>0)):[]})},830063:(_,$,P,z,q)=>{s.ob("ReduceSum",_,{keepDims:!!$,noopWithEmptyAxes:!!P,axes:z?Array.from(d().subarray(z>>>0,q>>>0)):[]})},830221:(_,$,P,z,q)=>{s.ob("ReduceL1",_,{keepDims:!!$,noopWithEmptyAxes:!!P,axes:z?Array.from(d().subarray(z>>>0,q>>>0)):[]})},830378:(_,$,P,z,q)=>{s.ob("ReduceL2",_,{keepDims:!!$,noopWithEmptyAxes:!!P,axes:z?Array.from(d().subarray(z>>>0,q>>>0)):[]})},830535:(_,$,P,z,q)=>{s.ob("ReduceLogSum",_,{keepDims:!!$,noopWithEmptyAxes:!!P,axes:z?Array.from(d().subarray(z>>>0,q>>>0)):[]})},830696:(_,$,P,z,q)=>{s.ob("ReduceSumSquare",_,{keepDims:!!$,noopWithEmptyAxes:!!P,axes:z?Array.from(d().subarray(z>>>0,q>>>0)):[]})},830860:(_,$,P,z,q)=>{s.ob("ReduceLogSumExp",_,{keepDims:!!$,noopWithEmptyAxes:!!P,axes:z?Array.from(d().subarray(z>>>0,q>>>0)):[]})},831024:_=>{s.ob("Where",_,void 0)},831077:(_,$,P)=>{s.ob("Transpose",_,{perm:$?Array.from(d().subarray($>>>0,P>>>0)):[]})},831185:(_,$,P,z)=>{s.ob("DepthToSpace",_,{blocksize:$,mode:hn(P),format:z?"NHWC":"NCHW"})},831318:(_,$,P,z)=>{s.ob("DepthToSpace",_,{blocksize:$,mode:hn(P),format:z?"NHWC":"NCHW"})},831451:(_,$,P,z,q,re,ge,$e,Ve,ze,it,un,cn,me,$t)=>{s.ob("ConvTranspose",_,{format:Ve?"NHWC":"NCHW",autoPad:$,dilations:[P],group:z,kernelShape:[q],pads:[re,ge],strides:[$e],wIsConst:()=>!!a()[ze>>>0],outputPadding:it?Array.from(d().subarray(it>>>0,un>>>0)):[],outputShape:cn?Array.from(d().subarray(cn>>>0,me>>>0)):[],activation:hn($t)})},831852:(_,$,P,z,q,re,ge,$e,Ve,ze,it,un,cn,me)=>{s.ob("ConvTranspose",_,{format:$e?"NHWC":"NCHW",autoPad:$,dilations:Array.from(d().subarray(P>>>0,(P>>>0)+2>>>0)),group:z,kernelShape:Array.from(d().subarray(q>>>0,(q>>>0)+2>>>0)),pads:Array.from(d().subarray(re>>>0,(re>>>0)+4>>>0)),strides:Array.from(d().subarray(ge>>>0,(ge>>>0)+2>>>0)),wIsConst:()=>!!a()[Ve>>>0],outputPadding:ze?Array.from(d().subarray(ze>>>0,it>>>0)):[],outputShape:un?Array.from(d().subarray(un>>>0,cn>>>0)):[],activation:hn(me)})},832417:(_,$,P,z,q,re,ge,$e,Ve,ze,it,un,cn,me,$t)=>{s.ob("ConvTranspose",_,{format:Ve?"NHWC":"NCHW",autoPad:$,dilations:[P],group:z,kernelShape:[q],pads:[re,ge],strides:[$e],wIsConst:()=>!!a()[ze>>>0],outputPadding:it?Array.from(d().subarray(it>>>0,un>>>0)):[],outputShape:cn?Array.from(d().subarray(cn>>>0,me>>>0)):[],activation:hn($t)})},832818:(_,$,P,z,q,re,ge,$e,Ve,ze,it,un,cn,me)=>{s.ob("ConvTranspose",_,{format:$e?"NHWC":"NCHW",autoPad:$,dilations:Array.from(d().subarray(P>>>0,(P>>>0)+2>>>0)),group:z,kernelShape:Array.from(d().subarray(q>>>0,(q>>>0)+2>>>0)),pads:Array.from(d().subarray(re>>>0,(re>>>0)+4>>>0)),strides:Array.from(d().subarray(ge>>>0,(ge>>>0)+2>>>0)),wIsConst:()=>!!a()[Ve>>>0],outputPadding:ze?Array.from(d().subarray(ze>>>0,it>>>0)):[],outputShape:un?Array.from(d().subarray(un>>>0,cn>>>0)):[],activation:hn(me)})},833383:(_,$)=>{s.ob("GlobalAveragePool",_,{format:$?"NHWC":"NCHW"})},833474:(_,$,P,z,q,re,ge,$e,Ve,ze,it,un,cn,me,$t,qt)=>{s.ob("AveragePool",_,{format:qt?"NHWC":"NCHW",auto_pad:$,ceil_mode:P,count_include_pad:z,storage_order:q,dilations:[re,ge],kernel_shape:[$e,Ve],pads:[ze,it,un,cn],strides:[me,$t]})},833758:(_,$)=>{s.ob("GlobalAveragePool",_,{format:$?"NHWC":"NCHW"})},833849:(_,$,P,z,q,re,ge,$e,Ve,ze,it,un,cn,me,$t,qt)=>{s.ob("AveragePool",_,{format:qt?"NHWC":"NCHW",auto_pad:$,ceil_mode:P,count_include_pad:z,storage_order:q,dilations:[re,ge],kernel_shape:[$e,Ve],pads:[ze,it,un,cn],strides:[me,$t]})},834133:(_,$)=>{s.ob("GlobalMaxPool",_,{format:$?"NHWC":"NCHW"})},834220:(_,$,P,z,q,re,ge,$e,Ve,ze,it,un,cn,me,$t,qt)=>{s.ob("MaxPool",_,{format:qt?"NHWC":"NCHW",auto_pad:$,ceil_mode:P,count_include_pad:z,storage_order:q,dilations:[re,ge],kernel_shape:[$e,Ve],pads:[ze,it,un,cn],strides:[me,$t]})},834500:(_,$)=>{s.ob("GlobalMaxPool",_,{format:$?"NHWC":"NCHW"})},834587:(_,$,P,z,q,re,ge,$e,Ve,ze,it,un,cn,me,$t,qt)=>{s.ob("MaxPool",_,{format:qt?"NHWC":"NCHW",auto_pad:$,ceil_mode:P,count_include_pad:z,storage_order:q,dilations:[re,ge],kernel_shape:[$e,Ve],pads:[ze,it,un,cn],strides:[me,$t]})},834867:(_,$,P,z,q)=>{s.ob("Gemm",_,{alpha:$,beta:P,transA:z,transB:q})},834971:_=>{s.ob("MatMul",_,void 0)},835025:(_,$,P,z)=>{s.ob("ArgMax",_,{keepDims:!!$,selectLastIndex:!!P,axis:z})},835133:(_,$,P,z)=>{s.ob("ArgMin",_,{keepDims:!!$,selectLastIndex:!!P,axis:z})},835241:(_,$)=>{s.ob("Softmax",_,{axis:$})},835304:(_,$)=>{s.ob("Concat",_,{axis:$})},835364:(_,$,P,z,q)=>{s.ob("Split",_,{axis:$,numOutputs:P,splitSizes:z?Array.from(d().subarray(z>>>0,q>>>0)):[]})},835504:_=>{s.ob("Expand",_,void 0)},835558:(_,$)=>{s.ob("Gather",_,{axis:Number($)})},835629:(_,$)=>{s.ob("GatherElements",_,{axis:Number($)})},835708:(_,$,P,z,q,re,ge,$e,Ve,ze,it)=>{s.ob("Resize",_,{antialias:$,axes:P?Array.from(d().subarray(P>>>0,z>>>0)):[],coordinateTransformMode:hn(q),cubicCoeffA:re,excludeOutside:ge,extrapolationValue:$e,keepAspectRatioPolicy:hn(Ve),mode:hn(ze),nearestMode:hn(it)})},836054:(_,$,P,z,q,re,ge)=>{s.ob("Slice",_,{starts:$?Array.from(d().subarray($>>>0,P>>>0)):[],ends:z?Array.from(d().subarray(z>>>0,q>>>0)):[],axes:re?Array.from(d().subarray(re>>>0,ge>>>0)):[]})},836270:_=>{s.ob("Tile",_,void 0)},836322:(_,$,P,z)=>{s.ob("LayerNormalization",_,{axis:$,epsilon:P,simplified:!!z})},836433:(_,$,P)=>{s.ob("InstanceNormalization",_,{epsilon:$,format:P?"NHWC":"NCHW"})},836547:(_,$,P)=>{s.ob("InstanceNormalization",_,{epsilon:$,format:P?"NHWC":"NCHW"})},836661:_=>{s.ob("Range",_,void 0)},836714:(_,$)=>{s.ob("Einsum",_,{equation:hn($)})},836795:(_,$,P,z,q)=>{s.ob("Pad",_,{mode:$,value:P,pads:z?Array.from(d().subarray(z>>>0,q>>>0)):[]})},836922:(_,$,P,z,q,re)=>{s.ob("BatchNormalization",_,{epsilon:$,momentum:P,spatial:!!q,trainingMode:!!z,format:re?"NHWC":"NCHW"})},837091:(_,$,P,z,q,re)=>{s.ob("BatchNormalization",_,{epsilon:$,momentum:P,spatial:!!q,trainingMode:!!z,format:re?"NHWC":"NCHW"})},837260:(_,$,P)=>{s.ob("CumSum",_,{exclusive:Number($),reverse:Number(P)})},837357:(_,$,P,z,q,re,ge,$e,Ve)=>{s.ob("Attention",_,{numHeads:$,isUnidirectional:P,maskFilterValue:z,scale:q,doRotary:re,qkvHiddenSizes:ge?Array.from(d().subarray(Number($e)>>>0,Number($e)+ge>>>0)):[],pastPresentShareBuffer:!!Ve})},837629:_=>{s.ob("BiasAdd",_,void 0)},837684:_=>{s.ob("BiasSplitGelu",_,void 0)},837745:_=>{s.ob("FastGelu",_,void 0)},837801:(_,$,P,z,q,re,ge,$e,Ve,ze,it,un,cn)=>{s.ob("Conv",_,{format:Ve?"NHWC":"NCHW",auto_pad:$,dilations:[P],group:z,kernel_shape:[q],pads:re?Array.from(d().subarray(re>>>0,ge>>>0)):[],strides:[$e],w_is_const:()=>!!a()[ze>>>0],activation:hn(it),activation_params:un?Array.from(t().subarray(un>>>0,cn>>>0)):[]})},838171:(_,$,P,z,q,re,ge,$e,Ve,ze,it,un,cn,me,$t,qt)=>{s.ob("Conv",_,{format:un?"NHWC":"NCHW",auto_pad:$,dilations:[P,z],group:q,kernel_shape:[re,ge],pads:$e?Array.from(d().subarray($e>>>0,Ve>>>0)):[],strides:[ze,it],w_is_const:()=>!!a()[cn>>>0],activation:hn(me),activation_params:$t?Array.from(t().subarray($t>>>0,qt>>>0)):[]})},838562:_=>{s.ob("Gelu",_,void 0)},838614:(_,$,P,z,q,re)=>{s.ob("MatMulNBits",_,{k:$,n:P,accuracyLevel:z,bits:q,blockSize:re})},838741:(_,$,P,z,q,re)=>{s.ob("MultiHeadAttention",_,{numHeads:$,isUnidirectional:P,maskFilterValue:z,scale:q,doRotary:re})},838900:(_,$,P,z,q)=>{s.ob("RotaryEmbedding",_,{interleaved:!!$,numHeads:P,rotaryEmbeddingDim:z,scale:q})},839039:(_,$,P)=>{s.ob("SkipLayerNormalization",_,{epsilon:$,simplified:!!P})},839141:(_,$,P)=>{s.ob("SkipLayerNormalization",_,{epsilon:$,simplified:!!P})},839243:(_,$,P,z)=>{s.ob("LayerNormalization",_,{axis:$,epsilon:P,simplified:!!z})},839354:_=>{s.ac(_)},839388:(_,$)=>s.cc(_,$,s.Cb.ec,s.Cb.errors)};function Ht(_){this.name="ExitStatus",this.message=`Program terminated with exit(${_})`,this.status=_}var wr=_=>{_.terminate(),_.onmessage=()=>{}},Xe=_=>{Ee.xb.length==0&&(qr(),Ee.Mb(Ee.xb[0]));var $=Ee.xb.pop();if(!$)return 6;Ee.yb.push($),Ee.ub[_.wb]=$,$.wb=_.wb;var P={cmd:"run",start_routine:_.fc,arg:_.Rb,pthread_ptr:_.wb};return C&&$.unref(),$.postMessage(P,_.mc),0},pn=0,Hr=_=>{var $=La();return _=_(),Ma($),_},mt=(_,$,...P)=>Hr(()=>{for(var z=2*P.length,q=Ba(8*z),re=q>>>3,ge=0;ge<P.length;ge++){var $e=P[ge];typeof $e=="bigint"?(ft[re+2*ge]=1n,ft[re+2*ge+1]=$e):(ft[re+2*ge]=0n,u()[re+2*ge+1>>>0]=$e)}return Ya(_,0,z,q,$)});function bn(_){var $;if(S)return mt(0,1,_);Ge=_,0<pn||(Ee.hc(),($=s.onExit)==null||$.call(s,_),Ce=!0),v(_,new Ht(_))}var Pt=_=>{if(Ge=_,S)throw st(_),"unwind";bn(_)};function Lr(){for(var _=s.numThreads;_--;)qr();An.unshift(()=>{wn++,Ir(()=>Qt())})}function qr(){var _=Q("ort-wasm-simd-threaded.worker.js");_=new Worker(_),Ee.xb.push(_)}function Ir(_){S?_():Promise.all(Ee.xb.map(Ee.Mb)).then(_)}var Ee={xb:[],yb:[],Qb:[],ub:{},Gb(){S?(Ee.receiveObjectTransfer=Ee.dc,Ee.threadInitTLS=Ee.Pb,Ee.setExitStatus=Ee.Ob):Lr()},Ob:_=>Ge=_,pc:["$terminateWorker"],hc:()=>{for(var _ of Ee.yb)wr(_);for(_ of Ee.xb)wr(_);Ee.xb=[],Ee.yb=[],Ee.ub=[]},Nb:_=>{var $=_.wb;delete Ee.ub[$],Ee.xb.push(_),Ee.yb.splice(Ee.yb.indexOf(_),1),_.wb=0,Na($)},dc(){},Pb(){Ee.Qb.forEach(_=>_())},Mb:_=>new Promise($=>{_.onmessage=re=>{re=re.data;var ge=re.cmd;if(re.targetThread&&re.targetThread!=Aa()){var $e=Ee.ub[re.targetThread];$e?$e.postMessage(re,re.transferList):be(`Internal error! Worker sent a message "${ge}" to target pthread ${re.targetThread}, but that thread no longer exists!`)}else ge==="checkMailbox"?Sn():ge==="spawnThread"?Xe(re):ge==="cleanupThread"?Ee.Nb(Ee.ub[re.thread]):ge==="killThread"?(re=re.thread,ge=Ee.ub[re],delete Ee.ub[re],wr(ge),Na(re),Ee.yb.splice(Ee.yb.indexOf(ge),1),ge.wb=0):ge==="cancelThread"?Ee.ub[re.thread].postMessage({cmd:"cancel"}):ge==="loaded"?(_.loaded=!0,C&&!_.wb&&_.unref(),$(_)):ge==="alert"?alert(`Thread ${re.threadId}: ${re.text}`):re.target==="setimmediate"?_.postMessage(re):ge==="callHandler"?s[re.handler](...re.args):ge&&be(`worker sent an unknown command ${ge}`)},_.onerror=re=>{throw be(`worker sent an error! ${re.filename}:${re.lineno}: ${re.message}`),re},C&&(_.on("message",re=>_.onmessage({data:re})),_.on("error",re=>_.onerror(re)));var P=[],z=["onExit"],q;for(q of z)s.hasOwnProperty(q)&&P.push(q);_.postMessage({cmd:"load",handlers:P,urlOrBlob:s.mainScriptUrlOrBlob||o,wasmMemory:ee,wasmModule:ve})})};s.PThread=Ee;var Qe=_=>{for(;0<_.length;)_.shift()(s)};s.establishStackSpace=()=>{var _=Aa(),$=r()[_+52>>>2>>>0];_=r()[_+56>>>2>>>0],Qa($,$-_),Ma($)};function st(_){if(S)return mt(1,0,_);Pt(_)}s.invokeEntryPoint=(_,$)=>{pn=0,_=Za(_,$),0<pn?Ee.Ob(_):za(_)};class _i{constructor($){this.Ib=$-24}Gb($,P){r()[this.Ib+16>>>2>>>0]=0,r()[this.Ib+4>>>2>>>0]=$,r()[this.Ib+8>>>2>>>0]=P}}var Cr=0;function Kr(_,$,P,z){return S?mt(2,1,_,$,P,z):Mr(_,$,P,z)}function Mr(_,$,P,z){if(_>>>=0,$>>>=0,P>>>=0,z>>>=0,typeof SharedArrayBuffer>"u")return be("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var q=[];return S&&q.length===0?Kr(_,$,P,z):(_={fc:P,wb:_,Rb:z,mc:q},S?(_.oc="spawnThread",postMessage(_,q),0):Xe(_))}var Fr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Tr=(_,$,P)=>{$>>>=0;var z=$+P;for(P=$;_[P]&&!(P>=z);)++P;if(16<P-$&&_.buffer&&Fr)return Fr.decode(_.buffer instanceof SharedArrayBuffer?_.slice($,P):_.subarray($,P));for(z="";$<P;){var q=_[$++];if(q&128){var re=_[$++]&63;if((q&224)==192)z+=String.fromCharCode((q&31)<<6|re);else{var ge=_[$++]&63;q=(q&240)==224?(q&15)<<12|re<<6|ge:(q&7)<<18|re<<12|ge<<6|_[$++]&63,65536>q?z+=String.fromCharCode(q):(q-=65536,z+=String.fromCharCode(55296|q>>10,56320|q&1023))}}else z+=String.fromCharCode(q)}return z},hn=(_,$)=>(_>>>=0)?Tr(h(),_,$):"";function Yr(_,$,P){return S?mt(3,1,_,$,P):0}function rr(_,$){if(S)return mt(4,1,_,$)}var $n=_=>{for(var $=0,P=0;P<_.length;++P){var z=_.charCodeAt(P);127>=z?$++:2047>=z?$+=2:55296<=z&&57343>=z?($+=4,++P):$+=3}return $},Ur=(_,$,P,z)=>{if(P>>>=0,!(0<z))return 0;var q=P;z=P+z-1;for(var re=0;re<_.length;++re){var ge=_.charCodeAt(re);if(55296<=ge&&57343>=ge){var $e=_.charCodeAt(++re);ge=65536+((ge&1023)<<10)|$e&1023}if(127>=ge){if(P>=z)break;$[P++>>>0]=ge}else{if(2047>=ge){if(P+1>=z)break;$[P++>>>0]=192|ge>>6}else{if(65535>=ge){if(P+2>=z)break;$[P++>>>0]=224|ge>>12}else{if(P+3>=z)break;$[P++>>>0]=240|ge>>18,$[P++>>>0]=128|ge>>12&63}$[P++>>>0]=128|ge>>6&63}$[P++>>>0]=128|ge&63}}return $[P>>>0]=0,P-q},ir=(_,$,P)=>Ur(_,h(),$,P);function Vr(_,$){if(S)return mt(5,1,_,$)}function jr(_,$,P){if(S)return mt(6,1,_,$,P)}function B(_,$,P){return S?mt(7,1,_,$,P):0}function H(_,$){if(S)return mt(8,1,_,$)}function ne(_,$,P){if(S)return mt(9,1,_,$,P)}function ae(_,$,P,z){if(S)return mt(10,1,_,$,P,z)}function oe(_,$,P,z){if(S)return mt(11,1,_,$,P,z)}function pe(_,$,P,z){if(S)return mt(12,1,_,$,P,z)}function Oe(_){if(S)return mt(13,1,_)}function je(_,$){if(S)return mt(14,1,_,$)}function Re(_,$,P){if(S)return mt(15,1,_,$,P)}var dt,wt=_=>{for(var $="";h()[_>>>0];)$+=dt[h()[_++>>>0]];return $},yn={},gn={},le;function Ct(_,$,P={}){var z=$.name;if(!_)throw new le(`type "${z}" must have a positive integer typeid pointer`);if(gn.hasOwnProperty(_)){if(P.Ub)return;throw new le(`Cannot register type '${z}' twice`)}gn[_]=$,yn.hasOwnProperty(_)&&($=yn[_],delete yn[_],$.forEach(q=>q()))}function vt(_,$,P={}){if(!("argPackAdvance"in $))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Ct(_,$,P)}var er=(_,$,P)=>{switch($){case 1:return P?z=>a()[z>>>0]:z=>h()[z>>>0];case 2:return P?z=>f()[z>>>1>>>0]:z=>p()[z>>>1>>>0];case 4:return P?z=>d()[z>>>2>>>0]:z=>r()[z>>>2>>>0];case 8:return P?z=>ft[z>>>3]:z=>bt[z>>>3];default:throw new TypeError(`invalid integer width (${$}): ${_}`)}},br=[],ar=[];function Xr(_){_>>>=0,9<_&&--ar[_+1]===0&&(ar[_]=void 0,br.push(_))}var xn=_=>{if(!_)throw new le("Cannot use deleted val. handle = "+_);return ar[_]},dn=_=>{switch(_){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let $=br.pop()||ar.length;return ar[$]=_,ar[$+1]=1,$}};function Dr(_){return this.fromWireType(r()[_>>>2>>>0])}var Ni={name:"emscripten::val",fromWireType:_=>{var $=xn(_);return Xr(_),$},toWireType:(_,$)=>dn($),argPackAdvance:8,readValueFromPointer:Dr,Bb:null},Ai=(_,$)=>{switch($){case 4:return function(P){return this.fromWireType(t()[P>>>2>>>0])};case 8:return function(P){return this.fromWireType(u()[P>>>3>>>0])};default:throw new TypeError(`invalid float width (${$}): ${_}`)}},Ei=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Ea=(_,$)=>{for(var P=_>>1,z=P+$/2;!(P>=z)&&p()[P>>>0];)++P;if(P<<=1,32<P-_&&Ei)return Ei.decode(h().slice(_,P));for(P="",z=0;!(z>=$/2);++z){var q=f()[_+2*z>>>1>>>0];if(q==0)break;P+=String.fromCharCode(q)}return P},Vi=(_,$,P)=>{if(P??(P=2147483647),2>P)return 0;P-=2;var z=$;P=P<2*_.length?P/2:_.length;for(var q=0;q<P;++q){var re=_.charCodeAt(q);f()[$>>>1>>>0]=re,$+=2}return f()[$>>>1>>>0]=0,$-z},wi=_=>2*_.length,Zr=(_,$)=>{for(var P=0,z="";!(P>=$/4);){var q=d()[_+4*P>>>2>>>0];if(q==0)break;++P,65536<=q?(q-=65536,z+=String.fromCharCode(55296|q>>10,56320|q&1023)):z+=String.fromCharCode(q)}return z},Ta=(_,$,P)=>{if($>>>=0,P??(P=2147483647),4>P)return 0;var z=$;P=z+P-4;for(var q=0;q<_.length;++q){var re=_.charCodeAt(q);if(55296<=re&&57343>=re){var ge=_.charCodeAt(++q);re=65536+((re&1023)<<10)|ge&1023}if(d()[$>>>2>>>0]=re,$+=4,$+4>P)break}return d()[$>>>2>>>0]=0,$-z},Je=_=>{for(var $=0,P=0;P<_.length;++P){var z=_.charCodeAt(P);55296<=z&&57343>=z&&++P,$+=4}return $},ki=_=>{if(!Ce)try{if(_(),!(0<pn))try{S?za(Ge):Pt(Ge)}catch($){$ instanceof Ht||$=="unwind"||v(1,$)}}catch($){$ instanceof Ht||$=="unwind"||v(1,$)}};function Gr(_){_>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(d(),_>>>2,_).value.then(Sn),_+=128,Atomics.store(d(),_>>>2,1))}s.__emscripten_thread_mailbox_await=Gr;var Sn=()=>{var _=Aa();_&&(Gr(_),ki(Xa))};s.checkMailbox=Sn;var vi=[],xi=(_,$)=>{var P=gn[_];if(P===void 0)throw _=qa(_),P=wt(_),yi(_),new le(`${$} has unknown type ${P}`);return P},Ti=(_,$,P)=>{var z=[];return _=_.toWireType(z,P),z.length&&(r()[$>>>2>>>0]=dn(z)),_},gi=_=>{try{_()}catch($){Vt($)}};function Tt(){var _=Ke,$={};for(let[P,z]of Object.entries(_))$[P]=typeof z=="function"?(...q)=>{$r.push(P);try{return z(...q)}finally{Ce||($r.pop(),et&&vr===1&&$r.length===0&&(vr=0,pn+=1,gi(eo),typeof Fibers<"u"&&Fibers.rc()))}}:z;return $}var vr=0,et=null,pt=0,$r=[],bi={},T={},k=0,D=null,F=[];function J(){return new Promise((_,$)=>{D={resolve:_,reject:$}})}function ue(){var _=Pa(65548),$=_+12;r()[_>>>2>>>0]=$,r()[_+4>>>2>>>0]=$+65536,$=$r[0];var P=bi[$];return P===void 0&&(P=k++,bi[$]=P,T[P]=$),$=P,d()[_+8>>>2>>>0]=$,_}function Te(){var _=d()[et+8>>>2>>>0];return _=Ke[T[_]],--pn,_()}function Se(_){if(!Ce){if(vr===0){var $=!1,P=!1;_((z=0)=>{if(!Ce&&(pt=z,$=!0,P)){vr=2,gi(()=>Po(et)),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.resume(),z=!1;try{var q=Te()}catch($e){q=$e,z=!0}var re=!1;if(!et){var ge=D;ge&&(D=null,(z?ge.reject:ge.resolve)(q),re=!0)}if(z&&!re)throw q}}),P=!0,$||(vr=1,et=ue(),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.pause(),gi(()=>Ja(et)))}else vr===2?(vr=0,gi(Ro),yi(et),et=null,F.forEach(ki)):Vt(`invalid state: ${vr}`);return pt}}function Le(_){return Se($=>{_().then($)})}var Me=[],Ye={},Gt=_=>{var $=Ye[_];return $===void 0?wt(_):$},A=()=>typeof globalThis=="object"?globalThis:Function("return this")(),I=_=>{var $=Me.length;return Me.push(_),$},L=(_,$)=>{for(var P=Array(_),z=0;z<_;++z)P[z]=xi(r()[$+4*z>>>2>>>0],"parameter "+z);return P},W=(_,$)=>Object.defineProperty($,"name",{value:_});function ie(_){var $=Function;if(!($ instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof $} which is not a function`);var P=W($.name||"unknownFunctionName",function(){});return P.prototype=$.prototype,P=new P,_=$.apply(P,_),_ instanceof Object?_:P}var de=_=>_%4===0&&(_%100!==0||_%400===0),Ie=[0,31,60,91,121,152,182,213,244,274,305,335],He=[0,31,59,90,120,151,181,212,243,273,304,334];function It(_,$,P,z,q,re,ge){return S?mt(16,1,_,$,P,z,q,re,ge):-52}function Nt(_,$,P,z,q,re){if(S)return mt(17,1,_,$,P,z,q,re)}var fn=[],Sr=(_,$)=>{fn.length=0;for(var P;P=h()[_++>>>0];){var z=P!=105;z&=P!=112,$+=z&&$%8?4:0,fn.push(P==112?r()[$>>>2>>>0]:P==106?ft[$>>>3]:P==105?d()[$>>>2>>>0]:u()[$>>>3>>>0]),$+=z?8:4}return fn},yr={},he=()=>{if(!Ft){var _={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:x||"./this.program"},$;for($ in yr)yr[$]===void 0?delete _[$]:_[$]=yr[$];var P=[];for($ in _)P.push(`${$}=${_[$]}`);Ft=P}return Ft},Ft;function mn(_,$){if(S)return mt(18,1,_,$);_>>>=0,$>>>=0;var P=0;return he().forEach((z,q)=>{var re=$+P;for(q=r()[_+4*q>>>2>>>0]=re,re=0;re<z.length;++re)a()[q++>>>0]=z.charCodeAt(re);a()[q>>>0]=0,P+=z.length+1}),0}function Nr(_,$){if(S)return mt(19,1,_,$);_>>>=0,$>>>=0;var P=he();r()[_>>>2>>>0]=P.length;var z=0;return P.forEach(q=>z+=q.length+1),r()[$>>>2>>>0]=z,0}function $i(_){return S?mt(20,1,_):52}function Fa(_,$,P,z){return S?mt(21,1,_,$,P,z):52}function Ua(_,$,P,z){return S?mt(22,1,_,$,P,z):70}var Jd=[null,[],[]];function Va(_,$,P,z){if(S)return mt(23,1,_,$,P,z);$>>>=0,P>>>=0,z>>>=0;for(var q=0,re=0;re<P;re++){var ge=r()[$>>>2>>>0],$e=r()[$+4>>>2>>>0];$+=8;for(var Ve=0;Ve<$e;Ve++){var ze=h()[ge+Ve>>>0],it=Jd[_];ze===0||ze===10?((_===1?se:be)(Tr(it,0)),it.length=0):it.push(ze)}q+=$e}return r()[z>>>2>>>0]=q,0}var ja=[31,29,31,30,31,30,31,31,30,31,30,31],Ga=[31,28,31,30,31,30,31,31,30,31,30,31];function ec(_){var $=Array($n(_)+1);return Ur(_,$,0,$.length),$}var tc=(_,$)=>{a().set(_,$>>>0)};function Wa(_,$,P,z){function q(me,$t,qt){for(me=typeof me=="number"?me.toString():me||"";me.length<$t;)me=qt[0]+me;return me}function re(me,$t){return q(me,$t,"0")}function ge(me,$t){function qt(Wo){return 0>Wo?-1:0<Wo?1:0}var Ii;return(Ii=qt(me.getFullYear()-$t.getFullYear()))===0&&(Ii=qt(me.getMonth()-$t.getMonth()))===0&&(Ii=qt(me.getDate()-$t.getDate())),Ii}function $e(me){switch(me.getDay()){case 0:return new Date(me.getFullYear()-1,11,29);case 1:return me;case 2:return new Date(me.getFullYear(),0,3);case 3:return new Date(me.getFullYear(),0,2);case 4:return new Date(me.getFullYear(),0,1);case 5:return new Date(me.getFullYear()-1,11,31);case 6:return new Date(me.getFullYear()-1,11,30)}}function Ve(me){var $t=me.zb;for(me=new Date(new Date(me.Ab+1900,0,1).getTime());0<$t;){var qt=me.getMonth(),Ii=(de(me.getFullYear())?ja:Ga)[qt];if($t>Ii-me.getDate())$t-=Ii-me.getDate()+1,me.setDate(1),11>qt?me.setMonth(qt+1):(me.setMonth(0),me.setFullYear(me.getFullYear()+1));else{me.setDate(me.getDate()+$t);break}}return qt=new Date(me.getFullYear()+1,0,4),$t=$e(new Date(me.getFullYear(),0,4)),qt=$e(qt),0>=ge($t,me)?0>=ge(qt,me)?me.getFullYear()+1:me.getFullYear():me.getFullYear()-1}_>>>=0,$>>>=0,P>>>=0,z>>>=0;var ze=r()[z+40>>>2>>>0];z={kc:d()[z>>>2>>>0],jc:d()[z+4>>>2>>>0],Eb:d()[z+8>>>2>>>0],Jb:d()[z+12>>>2>>>0],Fb:d()[z+16>>>2>>>0],Ab:d()[z+20>>>2>>>0],vb:d()[z+24>>>2>>>0],zb:d()[z+28>>>2>>>0],qc:d()[z+32>>>2>>>0],ic:d()[z+36>>>2>>>0],lc:ze?hn(ze):""},P=hn(P),ze={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var it in ze)P=P.replace(new RegExp(it,"g"),ze[it]);var un="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),cn="January February March April May June July August September October November December".split(" ");ze={"%a":me=>un[me.vb].substring(0,3),"%A":me=>un[me.vb],"%b":me=>cn[me.Fb].substring(0,3),"%B":me=>cn[me.Fb],"%C":me=>re((me.Ab+1900)/100|0,2),"%d":me=>re(me.Jb,2),"%e":me=>q(me.Jb,2," "),"%g":me=>Ve(me).toString().substring(2),"%G":Ve,"%H":me=>re(me.Eb,2),"%I":me=>(me=me.Eb,me==0?me=12:12<me&&(me-=12),re(me,2)),"%j":me=>{for(var $t=0,qt=0;qt<=me.Fb-1;$t+=(de(me.Ab+1900)?ja:Ga)[qt++]);return re(me.Jb+$t,3)},"%m":me=>re(me.Fb+1,2),"%M":me=>re(me.jc,2),"%n":()=>`
`,"%p":me=>0<=me.Eb&&12>me.Eb?"AM":"PM","%S":me=>re(me.kc,2),"%t":()=>"	","%u":me=>me.vb||7,"%U":me=>re(Math.floor((me.zb+7-me.vb)/7),2),"%V":me=>{var $t=Math.floor((me.zb+7-(me.vb+6)%7)/7);if(2>=(me.vb+371-me.zb-2)%7&&$t++,$t)$t==53&&(qt=(me.vb+371-me.zb)%7,qt==4||qt==3&&de(me.Ab)||($t=1));else{$t=52;var qt=(me.vb+7-me.zb-1)%7;(qt==4||qt==5&&de(me.Ab%400-1))&&$t++}return re($t,2)},"%w":me=>me.vb,"%W":me=>re(Math.floor((me.zb+7-(me.vb+6)%7)/7),2),"%y":me=>(me.Ab+1900).toString().substring(2),"%Y":me=>me.Ab+1900,"%z":me=>{me=me.ic;var $t=0<=me;return me=Math.abs(me)/60,($t?"+":"-")+("0000"+(me/60*100+me%60)).slice(-4)},"%Z":me=>me.lc,"%%":()=>"%"},P=P.replace(/%%/g,"\0\0");for(it in ze)P.includes(it)&&(P=P.replace(new RegExp(it,"g"),ze[it](z)));return P=P.replace(/\0\0/g,"%"),it=ec(P),it.length>$?0:(tc(it,_),it.length-1)}Ee.Gb();for(var Ha=Array(256),ka=0;256>ka;++ka)Ha[ka]=String.fromCharCode(ka);dt=Ha,le=s.BindingError=class extends Error{constructor(_){super(_),this.name="BindingError"}},s.InternalError=class extends Error{constructor(_){super(_),this.name="InternalError"}},ar.push(0,1,void 0,1,null,1,!0,1,!1,1),s.count_emval_handles=()=>ar.length/2-5-br.length;var rc=[bn,st,Kr,Yr,rr,Vr,jr,B,H,ne,ae,oe,pe,Oe,je,Re,It,Nt,mn,Nr,$i,Fa,Ua,Va],hc={ua:function(_,$,P){return Le(async()=>{await s.Zb(_,$,P)})},b:function(_,$,P){throw _>>>=0,new _i(_).Gb($>>>0,P>>>0),Cr=_,Cr},ia:function(_){Ka(_>>>0,!O,1,!E,131072,!1),Ee.Pb()},G:function(_){_>>>=0,S?postMessage({cmd:"cleanupThread",thread:_}):Ee.Nb(Ee.ub[_])},_:Mr,B:Yr,pa:rr,W:Vr,Y:jr,qa:B,na:H,fa:ne,ma:ae,K:oe,X:pe,U:Oe,oa:je,V:Re,E:function(_,$,P){_>>>=0,P>>>=0,$=wt($>>>0),vt(_,{name:$,fromWireType:z=>z,toWireType:function(z,q){if(typeof q!="bigint"&&typeof q!="number")throw q===null?q="null":(z=typeof q,q=z==="object"||z==="array"||z==="function"?q.toString():""+q),new TypeError(`Cannot convert "${q}" to ${this.name}`);return typeof q=="number"&&(q=BigInt(q)),q},argPackAdvance:8,readValueFromPointer:er($,P,$.indexOf("u")==-1),Bb:null})},O:function(_,$,P,z){_>>>=0,$=wt($>>>0),vt(_,{name:$,fromWireType:function(q){return!!q},toWireType:function(q,re){return re?P:z},argPackAdvance:8,readValueFromPointer:function(q){return this.fromWireType(h()[q>>>0])},Bb:null})},N:function(_){return vt(_>>>0,Ni)},D:function(_,$,P){_>>>=0,P>>>=0,$=wt($>>>0),vt(_,{name:$,fromWireType:z=>z,toWireType:(z,q)=>q,argPackAdvance:8,readValueFromPointer:Ai($,P),Bb:null})},t:function(_,$,P,z,q){if(_>>>=0,P>>>=0,$=wt($>>>0),q===-1&&(q=4294967295),q=$e=>$e,z===0){var re=32-8*P;q=$e=>$e<<re>>>re}var ge=$.includes("unsigned")?function($e,Ve){return Ve>>>0}:function($e,Ve){return Ve};vt(_,{name:$,fromWireType:q,toWireType:ge,argPackAdvance:8,readValueFromPointer:er($,P,z!==0),Bb:null})},p:function(_,$,P){function z(re){var ge=r()[re>>>2>>>0];return re=r()[re+4>>>2>>>0],new q(a().buffer,re,ge)}_>>>=0;var q=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][$];P=wt(P>>>0),vt(_,{name:P,fromWireType:z,argPackAdvance:8,readValueFromPointer:z},{Ub:!0})},F:function(_,$){_>>>=0,$=wt($>>>0);var P=$==="std::string";vt(_,{name:$,fromWireType:function(z){var q=r()[z>>>2>>>0],re=z+4;if(P)for(var ge=re,$e=0;$e<=q;++$e){var Ve=re+$e;if($e==q||h()[Ve>>>0]==0){if(ge=hn(ge,Ve-ge),ze===void 0)var ze=ge;else ze+="\0",ze+=ge;ge=Ve+1}}else{for(ze=Array(q),$e=0;$e<q;++$e)ze[$e]=String.fromCharCode(h()[re+$e>>>0]);ze=ze.join("")}return yi(z),ze},toWireType:function(z,q){q instanceof ArrayBuffer&&(q=new Uint8Array(q));var re=typeof q=="string";if(!(re||q instanceof Uint8Array||q instanceof Uint8ClampedArray||q instanceof Int8Array))throw new le("Cannot pass non-string to std::string");var ge=P&&re?$n(q):q.length,$e=Pa(4+ge+1),Ve=$e+4;if(r()[$e>>>2>>>0]=ge,P&&re)ir(q,Ve,ge+1);else if(re)for(re=0;re<ge;++re){var ze=q.charCodeAt(re);if(255<ze)throw yi(Ve),new le("String has UTF-16 code units that do not fit in 8 bits");h()[Ve+re>>>0]=ze}else for(re=0;re<ge;++re)h()[Ve+re>>>0]=q[re];return z!==null&&z.push(yi,$e),$e},argPackAdvance:8,readValueFromPointer:Dr,Bb(z){yi(z)}})},A:function(_,$,P){if(_>>>=0,$>>>=0,P>>>=0,P=wt(P),$===2)var z=Ea,q=Vi,re=wi,ge=$e=>p()[$e>>>1>>>0];else $===4&&(z=Zr,q=Ta,re=Je,ge=$e=>r()[$e>>>2>>>0]);vt(_,{name:P,fromWireType:$e=>{for(var Ve=r()[$e>>>2>>>0],ze,it=$e+4,un=0;un<=Ve;++un){var cn=$e+4+un*$;(un==Ve||ge(cn)==0)&&(it=z(it,cn-it),ze===void 0?ze=it:(ze+="\0",ze+=it),it=cn+$)}return yi($e),ze},toWireType:($e,Ve)=>{if(typeof Ve!="string")throw new le(`Cannot pass non-string to C++ string type ${P}`);var ze=re(Ve),it=Pa(4+ze+$);return r()[it>>>2>>>0]=ze/$,q(Ve,it+4,ze+$),$e!==null&&$e.push(yi,it),it},argPackAdvance:8,readValueFromPointer:Dr,Bb($e){yi($e)}})},P:function(_,$){_>>>=0,$=wt($>>>0),vt(_,{Vb:!0,name:$,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ta:()=>1,S:function(_,$){_>>>=0,_==$>>>0?setTimeout(Sn):S?postMessage({targetThread:_,cmd:"checkMailbox"}):(_=Ee.ub[_])&&_.postMessage({cmd:"checkMailbox"})},$:function(_,$,P,z,q){$>>>=0,P>>>=0,z/=2,vi.length=z,q=q>>>0>>>3;for(var re=0;re<z;re++)vi[re]=ft[q+2*re]?ft[q+2*re+1]:u()[q+2*re+1>>>0];return _=$?Ar[$]:rc[_],Ee.Sb=P,P=_(...vi),Ee.Sb=0,P},ha:Gr,sa:function(_){C&&Ee.ub[_>>>0].ref()},w:function(_,$,P){return $>>>=0,P>>>=0,_=xn(_>>>0),$=xi($,"emval::as"),Ti($,P,_)},z:function(_){return _>>>=0,Le(()=>(_=xn(_),_.then(dn)))},o:function(_,$,P,z){return P>>>=0,z>>>=0,_=Me[_>>>0],$=xn($>>>0),_(null,$,P,z)},k:function(_,$,P,z,q){return P>>>=0,z>>>=0,q>>>=0,_=Me[_>>>0],$=xn($>>>0),P=Gt(P),_($,$[P],z,q)},c:Xr,y:function(_,$){return $>>>=0,_=xn(_>>>0),$=xn($),_==$},n:function(_){return _>>>=0,_===0?dn(A()):(_=Gt(_),dn(A()[_]))},j:function(_,$,P){$=L(_,$>>>0);var z=$.shift();_--;var q=`return function (obj, func, destructorsRef, args) {
`,re=0,ge=[];P===0&&ge.push("obj");for(var $e=["retType"],Ve=[z],ze=0;ze<_;++ze)ge.push("arg"+ze),$e.push("argType"+ze),Ve.push($[ze]),q+=`  var arg${ze} = argType${ze}.readValueFromPointer(args${re?"+"+re:""});
`,re+=$[ze].argPackAdvance;return q+=`  var rv = ${P===1?"new func":"func.call"}(${ge.join(", ")});
`,z.Vb||($e.push("emval_returnValue"),Ve.push(Ti),q+=`  return emval_returnValue(retType, destructorsRef, rv);
`),$e.push(q+`};
`),_=ie($e)(...Ve),P=`methodCaller<(${$.map(it=>it.name).join(", ")}) => ${z.name}>`,I(W(P,_))},s:function(_,$){return $>>>=0,_=xn(_>>>0),$=xn($),dn(_[$])},d:function(_){_>>>=0,9<_&&(ar[_+1]+=1)},v:function(){return dn([])},m:function(_){_=xn(_>>>0);for(var $=Array(_.length),P=0;P<_.length;P++)$[P]=_[P];return dn($)},g:function(_){return dn(Gt(_>>>0))},l:function(){return dn({})},i:function(_){_>>>=0;for(var $=xn(_);$.length;){var P=$.pop();$.pop()(P)}Xr(_)},h:function(_,$,P){$>>>=0,P>>>=0,_=xn(_>>>0),$=xn($),P=xn(P),_[$]=P},e:function(_,$){return $>>>=0,_=xi(_>>>0,"_emval_take_value"),_=_.readValueFromPointer($),dn(_)},ca:function(_,$){_=-9007199254740992>_||9007199254740992<_?NaN:Number(_),$>>>=0,_=new Date(1e3*_),d()[$>>>2>>>0]=_.getUTCSeconds(),d()[$+4>>>2>>>0]=_.getUTCMinutes(),d()[$+8>>>2>>>0]=_.getUTCHours(),d()[$+12>>>2>>>0]=_.getUTCDate(),d()[$+16>>>2>>>0]=_.getUTCMonth(),d()[$+20>>>2>>>0]=_.getUTCFullYear()-1900,d()[$+24>>>2>>>0]=_.getUTCDay(),_=(_.getTime()-Date.UTC(_.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,d()[$+28>>>2>>>0]=_},da:function(_,$){_=-9007199254740992>_||9007199254740992<_?NaN:Number(_),$>>>=0,_=new Date(1e3*_),d()[$>>>2>>>0]=_.getSeconds(),d()[$+4>>>2>>>0]=_.getMinutes(),d()[$+8>>>2>>>0]=_.getHours(),d()[$+12>>>2>>>0]=_.getDate(),d()[$+16>>>2>>>0]=_.getMonth(),d()[$+20>>>2>>>0]=_.getFullYear()-1900,d()[$+24>>>2>>>0]=_.getDay();var P=(de(_.getFullYear())?Ie:He)[_.getMonth()]+_.getDate()-1|0;d()[$+28>>>2>>>0]=P,d()[$+36>>>2>>>0]=-(60*_.getTimezoneOffset()),P=new Date(_.getFullYear(),6,1).getTimezoneOffset();var z=new Date(_.getFullYear(),0,1).getTimezoneOffset();_=(P!=z&&_.getTimezoneOffset()==Math.min(z,P))|0,d()[$+32>>>2>>>0]=_},ea:function(_){_>>>=0;var $=new Date(d()[_+20>>>2>>>0]+1900,d()[_+16>>>2>>>0],d()[_+12>>>2>>>0],d()[_+8>>>2>>>0],d()[_+4>>>2>>>0],d()[_>>>2>>>0],0),P=d()[_+32>>>2>>>0],z=$.getTimezoneOffset(),q=new Date($.getFullYear(),6,1).getTimezoneOffset(),re=new Date($.getFullYear(),0,1).getTimezoneOffset(),ge=Math.min(re,q);return 0>P?d()[_+32>>>2>>>0]=+(q!=re&&ge==z):0<P!=(ge==z)&&(q=Math.max(re,q),$.setTime($.getTime()+6e4*((0<P?ge:q)-z))),d()[_+24>>>2>>>0]=$.getDay(),P=(de($.getFullYear())?Ie:He)[$.getMonth()]+$.getDate()-1|0,d()[_+28>>>2>>>0]=P,d()[_>>>2>>>0]=$.getSeconds(),d()[_+4>>>2>>>0]=$.getMinutes(),d()[_+8>>>2>>>0]=$.getHours(),d()[_+12>>>2>>>0]=$.getDate(),d()[_+16>>>2>>>0]=$.getMonth(),d()[_+20>>>2>>>0]=$.getYear(),_=$.getTime(),BigInt(isNaN(_)?-1:_/1e3)},aa:It,ba:Nt,R:function(_,$,P,z){_>>>=0,$>>>=0,P>>>=0,z>>>=0;var q=new Date().getFullYear(),re=new Date(q,0,1),ge=new Date(q,6,1);q=re.getTimezoneOffset();var $e=ge.getTimezoneOffset(),Ve=Math.max(q,$e);r()[_>>>2>>>0]=60*Ve,d()[$>>>2>>>0]=+(q!=$e),_=ze=>ze.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],re=_(re),ge=_(ge),$e<q?(ir(re,P,17),ir(ge,z,17)):(ir(re,z,17),ir(ge,P,17))},q:()=>{Vt("")},f:function(_,$,P){return _>>>=0,$=Sr($>>>0,P>>>0),Ar[_](...$)},M:function(_,$,P){return _>>>=0,$=Sr($>>>0,P>>>0),Ar[_](...$)},H:()=>{},L:()=>Date.now(),ra:()=>{throw pn+=1,"unwind"},T:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>C?(Uo(),sr(Mo)).cpus().length:navigator.hardwareConcurrency,Q:function(_){_>>>=0;var $=h().length;if(_<=$||4294901760<_)return!1;for(var P=1;4>=P;P*=2){var z=$*(1+.2/P);z=Math.min(z,_+100663296);var q=Math;z=Math.max(_,z);e:{q=(q.min.call(q,4294901760,z+(65536-z%65536)%65536)-ee.buffer.byteLength+65535)/65536;try{ee.grow(q),Jt();var re=1;break e}catch{}re=void 0}if(re)return!0}return!1},ja:mn,la:Nr,Z:Pt,C:$i,J:Fa,ga:Ua,I:Va,a:ee||s.wasmMemory,ka:Wa,r:function(_,$,P,z){return Wa(_>>>0,$>>>0,P>>>0,z>>>0)}},Ke=function(){function _(P,z){return Ke=P.exports,Ke=Tt(),Ke=bp(),Ee.Qb.push(Ke.cb),Cn.unshift(Ke.va),ve=z,Qt(),Ke}var $={a:hc};if(wn++,s.instantiateWasm)try{return s.instantiateWasm($,_)}catch(P){be(`Module.instantiateWasm callback failed with error: ${P}`),g(P)}return nr($,function(P){_(P.instance,P.module)}).catch(g),{}}(),qa=_=>(qa=Ke.wa)(_);s.__embind_initialize_bindings=()=>(s.__embind_initialize_bindings=Ke.xa)(),s._OrtInit=(_,$)=>(s._OrtInit=Ke.ya)(_,$),s._OrtGetLastError=(_,$)=>(s._OrtGetLastError=Ke.za)(_,$),s._OrtCreateSessionOptions=(_,$,P,z,q,re,ge,$e,Ve,ze)=>(s._OrtCreateSessionOptions=Ke.Aa)(_,$,P,z,q,re,ge,$e,Ve,ze),s._OrtAppendExecutionProvider=(_,$)=>(s._OrtAppendExecutionProvider=Ke.Ba)(_,$),s._OrtAddFreeDimensionOverride=(_,$,P)=>(s._OrtAddFreeDimensionOverride=Ke.Ca)(_,$,P),s._OrtAddSessionConfigEntry=(_,$,P)=>(s._OrtAddSessionConfigEntry=Ke.Da)(_,$,P),s._OrtReleaseSessionOptions=_=>(s._OrtReleaseSessionOptions=Ke.Ea)(_),s._OrtCreateSession=(_,$,P)=>(s._OrtCreateSession=Ke.Fa)(_,$,P),s._OrtReleaseSession=_=>(s._OrtReleaseSession=Ke.Ga)(_),s._OrtGetInputOutputCount=(_,$,P)=>(s._OrtGetInputOutputCount=Ke.Ha)(_,$,P),s._OrtGetInputName=(_,$)=>(s._OrtGetInputName=Ke.Ia)(_,$),s._OrtGetOutputName=(_,$)=>(s._OrtGetOutputName=Ke.Ja)(_,$),s._OrtFree=_=>(s._OrtFree=Ke.Ka)(_),s._OrtCreateTensor=(_,$,P,z,q,re)=>(s._OrtCreateTensor=Ke.La)(_,$,P,z,q,re),s._OrtGetTensorData=(_,$,P,z,q)=>(s._OrtGetTensorData=Ke.Ma)(_,$,P,z,q),s._OrtReleaseTensor=_=>(s._OrtReleaseTensor=Ke.Na)(_),s._OrtCreateRunOptions=(_,$,P,z)=>(s._OrtCreateRunOptions=Ke.Oa)(_,$,P,z),s._OrtAddRunConfigEntry=(_,$,P)=>(s._OrtAddRunConfigEntry=Ke.Pa)(_,$,P),s._OrtReleaseRunOptions=_=>(s._OrtReleaseRunOptions=Ke.Qa)(_),s._OrtCreateBinding=_=>(s._OrtCreateBinding=Ke.Ra)(_),s._OrtBindInput=(_,$,P)=>(s._OrtBindInput=Ke.Sa)(_,$,P),s._OrtBindOutput=(_,$,P,z)=>(s._OrtBindOutput=Ke.Ta)(_,$,P,z),s._OrtClearBoundOutputs=_=>(s._OrtClearBoundOutputs=Ke.Ua)(_),s._OrtReleaseBinding=_=>(s._OrtReleaseBinding=Ke.Va)(_),s._OrtRunWithBinding=(_,$,P,z,q)=>(s._OrtRunWithBinding=Ke.Wa)(_,$,P,z,q),s._OrtRun=(_,$,P,z,q,re,ge,$e)=>(s._OrtRun=Ke.Xa)(_,$,P,z,q,re,ge,$e),s._OrtEndProfiling=_=>(s._OrtEndProfiling=Ke.Ya)(_),s._JsepOutput=(_,$,P)=>(s._JsepOutput=Ke.Za)(_,$,P),s._JsepGetNodeName=_=>(s._JsepGetNodeName=Ke._a)(_);var Aa=s._pthread_self=()=>(Aa=s._pthread_self=Ke.$a)(),Pa=s._malloc=_=>(Pa=s._malloc=Ke.ab)(_),yi=s._free=_=>(yi=s._free=Ke.bb)(_);s.__emscripten_tls_init=()=>(s.__emscripten_tls_init=Ke.cb)();var Ka=s.__emscripten_thread_init=(_,$,P,z,q,re)=>(Ka=s.__emscripten_thread_init=Ke.eb)(_,$,P,z,q,re);s.__emscripten_thread_crashed=()=>(s.__emscripten_thread_crashed=Ke.fb)();var Ya=(_,$,P,z,q)=>(Ya=Ke.gb)(_,$,P,z,q),Na=_=>(Na=Ke.hb)(_),za=s.__emscripten_thread_exit=_=>(za=s.__emscripten_thread_exit=Ke.ib)(_),Xa=()=>(Xa=Ke.jb)(),Qa=(_,$)=>(Qa=Ke.kb)(_,$),Ma=_=>(Ma=Ke.lb)(_),Ba=_=>(Ba=Ke.mb)(_),La=()=>(La=Ke.nb)(),Za=s.dynCall_ii=(_,$)=>(Za=s.dynCall_ii=Ke.pb)(_,$),Ja=_=>(Ja=Ke.qb)(_),eo=()=>(eo=Ke.rb)(),Po=_=>(Po=Ke.sb)(_),Ro=()=>(Ro=Ke.tb)();s.___start_em_js=839500,s.___stop_em_js=839661;function bp(){var _=Ke;_=Object.assign({},_);var $=z=>q=>z(q)>>>0,P=z=>()=>z()>>>0;return _.wa=$(_.wa),_.$a=P(_.$a),_.ab=$(_.ab),_.emscripten_main_runtime_thread_id=P(_.emscripten_main_runtime_thread_id),_.mb=$(_.mb),_.nb=P(_.nb),_}s.wasmMemory=ee,s.stackSave=()=>La(),s.stackRestore=_=>Ma(_),s.stackAlloc=_=>Ba(_),s.keepRuntimeAlive=()=>0<pn,s.UTF8ToString=hn,s.stringToUTF8=ir,s.lengthBytesUTF8=$n,s.ExitStatus=Ht,s.PThread=Ee;var Da;vn=function _(){Da||No(),Da||(vn=_)};function No(){if(!(0<wn))if(S)m(s),S||Qe(Cn),startWorker(s);else{if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)An.unshift(s.preRun.shift());Qe(An),0<wn||Da||(Da=!0,s.calledRun=!0,Ce||(S||Qe(Cn),m(s),S||Qe(xr)))}}return No(),b}})();typeof n=="object"&&typeof e=="object"?e.exports=i:typeof define=="function"&&define.amd&&define([],()=>i)}),Ho=Er((n,e)=>{e.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(...e){var a=e.join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,a+`\n`);return}console.error(a)}function threadAlert(...e){var a=e.join(" ");postMessage({cmd:"alert",text:a,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,a)=>{var r=Module.wasmModule;Module.wasmModule=null;var t=new WebAssembly.Instance(r,e);return a(t)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let r=[];self.onmessage=t=>r.push(t),self.startWorker=t=>{Module=t,postMessage({cmd:"loaded"});for(let s of r)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const t of e.data.handlers)Module[t]=(...s)=>{postMessage({cmd:"callHandler",handler:t,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var a=URL.createObjectURL(e.data.urlOrBlob);importScripts(a),URL.revokeObjectURL(a)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(r){if(r!="unwind")throw r}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(r){throw Module.__emscripten_thread_crashed?.(),r}}self.onmessage=handleMessage;\n'}),Lo,gc,Hi,Gi,Un,Go,yc,bc,vc,Fo,Fe,Or=j(()=>{Lo=zo(),gc=Vo(),Gi=!1,Un=!1,Go=!1,yc=n=>{if(n===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+n+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+n+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},bc=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},vc=(n,e)=>n?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Fo=async n=>{if(Gi)return Promise.resolve();if(Un)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Go)throw new Error("previous call to 'initializeWebAssembly()' failed.");Un=!0;let e=n.initTimeout,i=n.numThreads,o=n.simd,l=yc(i),c=o&&bc(),a=n.wasmPaths,h=typeof a=="string"?a:void 0,f=vc(c,l),p=typeof a=="object"?a[f]:void 0,d=!1,r=[];if(e>0&&r.push(new Promise(t=>{setTimeout(()=>{d=!0,t()},e)})),r.push(new Promise((t,u)=>{let s=l?gc:Lo,m={locateFile:(g,b)=>{if(l&&g.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Ho()],{type:"text/javascript"}));if(g.endsWith(".wasm")){if(p)return p;let y=h??b;return f==="ort-wasm-simd.wasm"?y+"ort-wasm-simd.jsep.wasm":f==="ort-wasm-simd-threaded.wasm"?y+"ort-wasm-simd-threaded.jsep.wasm":y+f}return b+g}};if(l)if(m.numThreads=i,typeof Blob>"u")m.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let g=`var ortWasmThreaded=${s.toString()};`;m.mainScriptUrlOrBlob=new Blob([g],{type:"text/javascript"})}s(m).then(g=>{Un=!1,Gi=!0,Hi=g,t()},g=>{Un=!1,Go=!0,u(g)})})),await Promise.race(r),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},Fe=()=>{if(Gi&&Hi)return Hi;throw new Error("WebAssembly is not initialized yet.")}}),qe,Jr,We,Wn=j(()=>{Or(),qe=(n,e)=>{let i=Fe(),o=i.lengthBytesUTF8(n)+1,l=i._malloc(o);return i.stringToUTF8(n,l,o),e.push(l),l},Jr=(n,e,i,o)=>{if(typeof n=="object"&&n!==null){if(i.has(n))throw new Error("Circular reference in options");i.add(n)}Object.entries(n).forEach(([l,c])=>{let a=e?e+l:l;if(typeof c=="object")Jr(c,a+".",i,o);else if(typeof c=="string"||typeof c=="number")o(a,c.toString());else if(typeof c=="boolean")o(a,c?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof c}`)})},We=n=>{let e=Fe(),i=e.stackSave();try{let o=e.stackAlloc(8);e._OrtGetLastError(o,o+4);let l=e.HEAP32[o/4],c=e.HEAPU32[o/4+1],a=c?e.UTF8ToString(c):"";throw new Error(`${n} ERROR_CODE: ${l}, ERROR_MESSAGE: ${a}`)}finally{e.stackRestore(i)}}}),qo,jo=j(()=>{Or(),Wn(),qo=n=>{let e=Fe(),i=0,o=[],l=n||{};try{if((n==null?void 0:n.logSeverityLevel)===void 0)l.logSeverityLevel=2;else if(typeof n.logSeverityLevel!="number"||!Number.isInteger(n.logSeverityLevel)||n.logSeverityLevel<0||n.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${n.logSeverityLevel}`);if((n==null?void 0:n.logVerbosityLevel)===void 0)l.logVerbosityLevel=0;else if(typeof n.logVerbosityLevel!="number"||!Number.isInteger(n.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${n.logVerbosityLevel}`);(n==null?void 0:n.terminate)===void 0&&(l.terminate=!1);let c=0;return(n==null?void 0:n.tag)!==void 0&&(c=qe(n.tag,o)),i=e._OrtCreateRunOptions(l.logSeverityLevel,l.logVerbosityLevel,!!l.terminate,c),i===0&&We("Can't create run options."),(n==null?void 0:n.extra)!==void 0&&Jr(n.extra,"",new WeakSet,(a,h)=>{let f=qe(a,o),p=qe(h,o);e._OrtAddRunConfigEntry(i,f,p)!==0&&We(`Can't set a run config entry: ${a} - ${h}.`)}),[i,o]}catch(c){throw i!==0&&e._OrtReleaseRunOptions(i),o.forEach(a=>e._free(a)),c}}}),wc,$c,_c,xc,Ko,Yo=j(()=>{Or(),Wn(),wc=n=>{switch(n){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${n}`)}},$c=n=>{switch(n){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${n}`)}},_c=n=>{n.extra||(n.extra={}),n.extra.session||(n.extra.session={});let e=n.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),n.executionProviders&&n.executionProviders.some(i=>(typeof i=="string"?i:i.name)==="webgpu")&&(n.enableMemPattern=!1)},xc=(n,e,i)=>{for(let o of e){let l=typeof o=="string"?o:o.name;switch(l){case"webnn":if(l="WEBNN",typeof o!="string"){let a=o;if(a!=null&&a.deviceType){let h=qe("deviceType",i),f=qe(a.deviceType,i);Fe()._OrtAddSessionConfigEntry(n,h,f)!==0&&We(`Can't set a session config entry: 'deviceType' - ${a.deviceType}.`)}if(a!=null&&a.numThreads){let h=a.numThreads;(typeof h!="number"||!Number.isInteger(h)||h<0)&&(h=0);let f=qe("numThreads",i),p=qe(h.toString(),i);Fe()._OrtAddSessionConfigEntry(n,f,p)!==0&&We(`Can't set a session config entry: 'numThreads' - ${a.numThreads}.`)}if(a!=null&&a.powerPreference){let h=qe("powerPreference",i),f=qe(a.powerPreference,i);Fe()._OrtAddSessionConfigEntry(n,h,f)!==0&&We(`Can't set a session config entry: 'powerPreference' - ${a.powerPreference}.`)}}break;case"webgpu":if(l="JS",typeof o!="string"){let a=o;if(a!=null&&a.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${a.preferredLayout}`);let h=qe("preferredLayout",i),f=qe(a.preferredLayout,i);Fe()._OrtAddSessionConfigEntry(n,h,f)!==0&&We(`Can't set a session config entry: 'preferredLayout' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${l}`)}let c=qe(l,i);Fe()._OrtAppendExecutionProvider(n,c)!==0&&We(`Can't append execution provider: ${l}.`)}},Ko=n=>{let e=Fe(),i=0,o=[],l=n||{};_c(l);try{let c=wc(l.graphOptimizationLevel??"all"),a=$c(l.executionMode??"sequential"),h=typeof l.logId=="string"?qe(l.logId,o):0,f=l.logSeverityLevel??2;if(!Number.isInteger(f)||f<0||f>4)throw new Error(`log serverity level is not valid: ${f}`);let p=l.logVerbosityLevel??0;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log verbosity level is not valid: ${p}`);let d=typeof l.optimizedModelFilePath=="string"?qe(l.optimizedModelFilePath,o):0;if(i=e._OrtCreateSessionOptions(c,!!l.enableCpuMemArena,!!l.enableMemPattern,a,!!l.enableProfiling,0,h,f,p,d),i===0&&We("Can't create session options."),l.executionProviders&&xc(i,l.executionProviders,o),l.enableGraphCapture!==void 0){if(typeof l.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${l.enableGraphCapture}`);let r=qe("enableGraphCapture",o),t=qe(l.enableGraphCapture.toString(),o);e._OrtAddSessionConfigEntry(i,r,t)!==0&&We(`Can't set a session config entry: 'enableGraphCapture' - ${l.enableGraphCapture}.`)}if(l.freeDimensionOverrides)for(let[r,t]of Object.entries(l.freeDimensionOverrides)){if(typeof r!="string")throw new Error(`free dimension override name must be a string: ${r}`);if(typeof t!="number"||!Number.isInteger(t)||t<0)throw new Error(`free dimension override value must be a non-negative integer: ${t}`);let u=qe(r,o);e._OrtAddFreeDimensionOverride(i,u,t)!==0&&We(`Can't set a free dimension override: ${r} - ${t}.`)}return l.extra!==void 0&&Jr(l.extra,"",new WeakSet,(r,t)=>{let u=qe(r,o),s=qe(t,o);e._OrtAddSessionConfigEntry(i,u,s)!==0&&We(`Can't set a session config entry: ${r} - ${t}.`)}),[i,o]}catch(c){throw i!==0&&e._OrtReleaseSessionOptions(i),o.forEach(a=>e._free(a)),c}}}),Li,Kt,cr,Nn,en,Vn,Fi,ye=j(()=>{Li=n=>{switch(n){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${n}`)}},Kt=n=>{switch(n){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${n}`)}},cr=n=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][n],Nn=n=>{switch(n){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${n}`)}},en=n=>{switch(n){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${n}`)}},Vn=n=>n==="float32"||n==="float16"||n==="int32"||n==="int64"||n==="uint32"||n==="uint8"||n==="bool",Fi=n=>{switch(n){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${n}`)}}}),tn,qi=j(()=>{tn=async n=>{if(typeof n=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(n))}catch(e){if(e.code==="ERR_FS_FILE_TOO_LARGE"){let i=(void 0)(n),o=[];for await(let l of i)o.push(l);return new Uint8Array(Buffer.concat(o))}throw e}else{let e=await fetch(n);if(!e.ok)throw new Error(`failed to load external data file: ${n}`);let i=e.headers.get("Content-Length"),o=i?parseInt(i,10):0;if(o<1073741824)return new Uint8Array(await e.arrayBuffer());{if(!e.body)throw new Error(`failed to load external data file: ${n}, no response body.`);let l=e.body.getReader(),c;try{c=new ArrayBuffer(o)}catch(h){if(h instanceof RangeError){let f=Math.ceil(o/65536);c=new WebAssembly.Memory({initial:f,maximum:f}).buffer}else throw h}let a=0;for(;;){let{done:h,value:f}=await l.read();if(h)break;let p=f.byteLength;new Uint8Array(c,a,p).set(f),a+=p}return new Uint8Array(c,0,o)}}else return n instanceof Blob?new Uint8Array(await n.arrayBuffer()):n instanceof Uint8Array?n:new Uint8Array(n)}}),Sc,Cc,Xo,Zo,Qo,Ic,Ne,Yt=j(()=>{ye(),Sc=["V","I","W","E","F"],Cc=(n,e)=>{console.log(`[${Sc[n]},${new Date().toISOString()}]${e}`)},Qo=(n,e)=>{Xo=n,Zo=e},Ic=(n,e)=>{let i=en(n),o=en(Xo);i>=o&&Cc(i,typeof e=="function"?e():e)},Ne=(...n)=>{Zo&&Ic(...n)}}),Jo,es=j(()=>{ye(),Jo=(n,e)=>new(Nn(e))(n)}),Hn=j(()=>{}),ts,ji,Ki,Tc,Ac,rs,Xi,Yi,is,as=j(()=>{Yt(),Hn(),ts=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),ji=[],Ki=n=>Math.ceil(n/16)*16,Tc=n=>{for(let e=0;e<ji.length;e++){let i=ji[e];if(n<=i)return i}return Math.ceil(n/16)*16},Ac=1,rs=()=>Ac++,Xi=async(n,e,i,o)=>{let l=Ki(i),c=n.device.createBuffer({size:l,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=n.getCommandEncoder();n.endComputePass(),a.copyBufferToBuffer(e,0,c,0,l),n.flush(),await c.mapAsync(GPUMapMode.READ);let h=c.getMappedRange();if(o){let f=o();return f.set(new Uint8Array(h,0,i)),f}else return new Uint8Array(h.slice(0,i))}finally{c.destroy()}},Yi=class{constructor(n){this.backend=n,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map;for(let[e]of ts)ji.push(e),this.freeBuffers.set(e,[]),this.freeUniformBuffers.set(e,[])}upload(n,e){let i=e.buffer,o=e.byteOffset,l=e.byteLength,c=Ki(l),a=this.storageCache.get(n);if(!a)throw new Error("gpu data for uploading does not exist");if(a.originalSize!==l)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${l}`);let h=this.backend.device.createBuffer({mappedAtCreation:!0,size:c,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),f=h.getMappedRange();new Uint8Array(f).set(new Uint8Array(i,o,l)),h.unmap();let p=this.backend.getCommandEncoder();this.backend.endComputePass(),p.copyBufferToBuffer(h,0,a.gpuData.buffer,0,c),Ne("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${n})`),this.buffersForUploadingPending.push(h)}memcpy(n,e){let i=this.storageCache.get(n);if(!i)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(e);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(i.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let l=Ki(i.originalSize),c=this.backend.getCommandEncoder();this.backend.endComputePass(),c.copyBufferToBuffer(i.gpuData.buffer,0,o.gpuData.buffer,0,l)}registerExternalBuffer(n,e,i){let o;if(i){if(o=this.externalBuffers.get(i),o===void 0)throw new Error("previous buffer is not registered");if(n===i)return Ne("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${e}) => id=${o}, buffer is the same, skip.`),o;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);this.externalBuffers.delete(i)}else o=rs();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:n},originalSize:e}),this.externalBuffers.set(n,o),Ne("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${e}) => id=${o}, registered.`),o}unregisterExternalBuffer(n){let e=this.externalBuffers.get(n);e!==void 0&&(this.storageCache.delete(e),this.externalBuffers.delete(n),Ne("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(n,e=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let i=Tc(n),o,l=(e&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,c=(e&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(l||c){let h=(l?this.freeBuffers:this.freeUniformBuffers).get(i);h?h.length>0?o=h.pop():o=this.backend.device.createBuffer({size:i,usage:e}):o=this.backend.device.createBuffer({size:i,usage:e})}else o=this.backend.device.createBuffer({size:i,usage:e});let a={id:rs(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:n}),Ne("verbose",()=>`[WebGPU] GpuDataManager.create(size=${n}) => id=${a.id}`),a}get(n){var e;return(e=this.storageCache.get(n))==null?void 0:e.gpuData}release(n){let e=this.storageCache.get(n);if(!e)throw new Error("releasing data does not exist");return Ne("verbose",()=>`[WebGPU] GpuDataManager.release(id=${n}), gpuDataId=${e.gpuData.id}`),this.storageCache.delete(n),this.buffersPending.push(e.gpuData.buffer),e.originalSize}async download(n,e){let i=this.storageCache.get(n);if(!i)throw new Error("data does not exist");await Xi(this.backend,i.gpuData.buffer,i.originalSize,e)}refreshPendingBuffers(){for(let n of this.buffersForUploadingPending)n.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let n of this.buffersPending){let e=ts.get(n.size);if((n.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let i=this.freeBuffers.get(n.size)||[];e===void 0||i.length>=e?n.destroy():i.push(n)}else if((n.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let i=this.freeUniformBuffers.get(n.size)||[];e===void 0||i.length>=e?n.destroy():i.push(n)}else n.destroy()}this.buffersPending=[]}else{let n=this.capturedPendingBuffers.get(this.backend.currentSessionId);n||(n=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,n));for(let e of this.buffersPending)n.push(e);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(n=>{n.forEach(e=>{e.destroy()})}),this.freeUniformBuffers.forEach(n=>{n.forEach(e=>{e.destroy()})}),this.storageCache.forEach(n=>{n.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(n=>{n.forEach(e=>{e.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(n){let e=this.capturedPendingBuffers.get(n);e&&(e.forEach(i=>{i.destroy()}),this.capturedPendingBuffers.delete(n))}},is=(...n)=>new Yi(...n)}),Zi,we,Ze=j(()=>{Zi=class{constructor(n){Object.assign(this,n)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(n=>`${this[n]}`).join(";")),this.key}},we=n=>new Zi(n)}),Qi,Rt,M,pr,Gn,Ln,Fn,xe=j(()=>{Qi=class{static calcMatMulShape(n,e){return n[1]!==e[0]?void 0:[n[0],e[1]]}},Rt=class{static calcShape(n,e,i=!1){let o=n.length,l=e.length;if(o===0)return e;if(l===0)return n;let c=Math.max(n.length,e.length),a=new Array(c);if(i){if(o<2||l<2)return;let h=Qi.calcMatMulShape([n[o-2],n[o-1]],[e[l-2],e[l-1]]);if(h===void 0)return;[a[c-2],a[c-1]]=h}for(let h=i?3:1;h<=c;h++){let f=o-h<0?1:n[o-h],p=l-h<0?1:e[l-h];if(f!==p&&f>1&&p>1)return;let d=Math.max(f,p);if(f&&p)a[c-h]=Math.max(f,p);else{if(d>1)return;a[c-h]=0}}return a}static isValidBroadcast(n,e){let i=n.length,o=e.length;if(i>o)return!1;for(let l=1;l<=i;l++)if(n[i-l]!==1&&n[i-l]!==e[o-l])return!1;return!0}},M=class Ra{static size(e){return Ra.getSizeFromDimensionRange(e,0,e.length)}static convertShape(e,i=4){let o=e.length;if(o===0)return[];let l=new Array(o),c=o-1;for(;c>=0;){if(e[c]%i===0){l[c]=e[c]/i;break}if(i%e[c]!==0)throw new Error("cannot convert shape");l[c]=1,i/=e[c],c--}for(c--;c>=0;c--)l[c]=e[c];return l}static sizeFromDimension(e,i){if(i<0||i>e.length)throw new Error(`invalid dimension of ${i} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return Ra.getSizeFromDimensionRange(e,i,e.length)}static sizeToDimension(e,i){if(i<0||i>e.length)throw new Error(`invalid dimension of ${i} for sizeToDimension as Tensor has ${e.length} dimensions.`);return Ra.getSizeFromDimensionRange(e,0,i)}static getSizeFromDimensionRange(e,i,o){let l=1;for(let c=i;c<o;c++){if(e[c]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");l*=e[c]}return l}static computeStrides(e){let i=e.length;if(i===0)return[];if(i===1)return[1];let o=new Array(i);o[i-1]=1,o[i-2]=e[i-1];for(let l=i-3;l>=0;--l)o[l]=o[l+1]*e[l+1];return o}static normalizeAxis(e,i){if(e<-i&&e>=i)throw new Error("unsupported axis for this operation.");return e<0?e+i:e}static normalizeAxes(e,i){return e.map(o=>this.normalizeAxis(o,i??e.length))}static sortBasedOnPerm(e,i){return i?i.map(o=>e[o]):e.slice().reverse()}static padShape(e,i){let o=e.length;return e.map((l,c)=>l+i[c]+i[c+o])}static areEqual(e,i){return e.length!==i.length?!1:e.every((o,l)=>o===i[l])}},pr=class Oa{static adjustPoolAttributes(e,i,o,l,c,a){if(!e&&o.length!==i.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let h=0;h<i.length-2;h++)h>=o.length?o.push(i[h+2]):o[h]=i[h+2];for(let h=0;h<o.length;h++)if(h<l.length){if(l[h]<0)throw new Error("strides should be greater than or equal to 1")}else l.push(1);for(let h=0;h<o.length;h++)if(h<c.length){if(c[h]<0)throw new Error("dilations should be greater than or equal to 1")}else c.push(1);for(let h=0;h<o.length*2;h++)if(h<a.length){if(a[h]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let h=0;h<o.length;h++){if(o[h]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[h]>=o[h]||a[h+o.length]>=o[h])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,i,o,l,c,a,h){if(h){if(c.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(i.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(l.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let f=0;f<e.length-2;f++)Oa.adjustPadAndReturnShape(e[f+(a?1:2)],i[f],o[f],l[f],c,f,f+e.length-2,h)}}static computePoolOutputShape(e,i,o,l,c,a,h){if(i.length<=0)throw new Error("input shape must be of size greater than 0");let f=[i[0],i[1]];return Oa.computeShapeHelper(e,i,f,o,l,c,a,h),f}static computeConvOutputShape(e,i,o,l,c,a,h){if(e.length<=0||i.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let f=[e[0],i[0]];return Oa.computeShapeHelper(!1,e,f,o,l,c,a,h),f}static computeShapeHelper(e,i,o,l,c,a,h,f){if(e)for(let p=0;p<i.length-2;p++)o.push(1);else for(let p=0;p<i.length-2;p++)o.push(Oa.adjustPadAndReturnShape(i[p+2],l[p],c[p],a[p],h,p,p+i.length-2,f))}static adjustPadAndReturnShape(e,i,o,l,c,a,h,f){let p=o*(l-1)+1;if(f&&f!=="NOTSET")switch(f){case"VALID":return c[a]=0,c[h]=0,Math.floor((e-p)/i+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let d=((e+i-1)/i-1)*i+l-e;return c[a]=Math.floor(f==="SAME_LOWER"?(d+1)/2:d/2),c[h]=d-c[a],Math.floor((e+d-l)/i+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+c[a]+c[h]-p)/i+1)}},Gn=class{static getShapeOfGemmResult(n,e,i,o,l){if(n.length!==2||i.length!==2)throw new Error("shape need to be of size 2");let c,a,h;e?(c=n[1],a=n[0]):(c=n[0],a=n[1]);let f=-1;if(o?(h=i[0],f=1):(h=i[1],f=0),i[f]!==a)throw new Error("dimension mismatch");if(c<=0||h<=0||a<=0)throw new Error("invalid shape specified");if(l&&!Rt.isValidBroadcast(l,[c,h]))throw new Error("gemm: invalid bias shape for broadcast");return[c,h,a]}},Ln=-34028234663852886e22,Fn=34028234663852886e22}),mr,ea,Be,rt,X,Ue,Xt,fr,At,fe,ta,U,K,qn,Ji,os,Pr,_e=j(()=>{ye(),xe(),mr=64,ea=(n,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(n){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${n}`)}},Be=(n,e=1)=>{let i=ea(n,e);return typeof i=="string"?i:i[0]},rt=(n,e=1)=>{let i=ea(n,e);return typeof i=="string"?i:i[1]},X=(...n)=>{let e=[];return n.forEach(i=>{i.length!==0&&e.push({type:12,data:i},{type:12,data:M.computeStrides(i)})}),e},Ue=n=>n%4===0?4:n%2===0?2:1,Xt=(n="f32",e,i="0")=>!e||e===1?`${n}(${i})`:`vec${e}<${n}>(${i})`,fr=(n,e,i)=>n==="f32"?i:e===1?`f32(${i})`:`vec${e}<f32>(${i})`,At=(n,e)=>e===4?`(${n}.x + ${n}.y + ${n}.z + ${n}.w)`:e===2?`(${n}.x + ${n}.y)`:e===3?`(${n}.x + ${n}.y + ${n}.z)`:n,fe=(n,e,i,o)=>n.startsWith("uniforms.")&&i>4?typeof e=="string"?o==="f16"?`${n}[(${e}) / 8][(${e}) % 8 / 4][(${e}) % 8 % 4]`:`${n}[(${e}) / 4][(${e}) % 4]`:o==="f16"?`${n}[${Math.floor(e/8)}][${Math.floor(e%8/4)}][${e%8%4}]`:`${n}[${Math.floor(e/4)}][${e%4}]`:i>1?`${n}[${e}]`:n,ta=(n,e,i,o,l)=>{let c=typeof i=="number",a=c?i:i.length,h=[...new Array(a).keys()],f=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,p=ea(e,l),d=typeof p=="string"?p:p[1],r=typeof p=="string"?p:p[0],t={indices:f,value:d,storage:r,tensor:e},u=ee=>typeof ee=="string"?ee:`${ee}u`,s={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},m=c?"uniforms.":"",g=`${m}${n}_shape`,b=`${m}${n}_strides`,y="";for(let ee=0;ee<a-1;ee++)y+=`
    let dim${ee} = current / ${fe(b,ee,a)};
    let rest${ee} = current % ${fe(b,ee,a)};
    indices[${ee}] = dim${ee};
    current = rest${ee};
    `;y+=`indices[${a-1}] = current;`;let w=a<2?"":`
  fn o2i_${n}(offset: u32) -> ${t.indices} {
    var indices: ${t.indices};
    var current = offset;
    ${y}
    return indices;
  }`,x=ee=>(s.offsetToIndices=!0,a<2?ee:`o2i_${n}(${ee})`),v=[];if(a>=2)for(let ee=a-1;ee>=0;ee--)v.push(`${fe(b,ee,a)} * (indices[${ee}])`);let E=a<2?"":`
  fn i2o_${n}(indices: ${t.indices}) -> u32 {
    return ${v.join("+")};
  }`,O=ee=>(s.indicesToOffset=!0,a<2?ee:`i2o_${n}(${ee})`),C=(...ee)=>a===0?"0u":`${t.indices}(${ee.map(u).join(",")})`,S=(ee,ve)=>a<2?`${ee}`:`${fe(ee,ve,a)}`,N=(ee,ve,Ce)=>a<2?`${ee}=${Ce};`:`${fe(ee,ve,a)}=${Ce};`,Q={},te=(ee,ve)=>{s.broadcastedIndicesToOffset=!0;let Ce=`${ve.name}broadcastedIndicesTo${n}Offset`;if(Ce in Q)return`${Ce}(${ee})`;let Ge=[];for(let De=a-1;De>=0;De--){let ct=ve.indicesGet("outputIndices",De+ve.rank-a);Ge.push(`${S(b,De)} * (${ct} % ${S(g,De)})`)}return Q[Ce]=`fn ${Ce}(outputIndices: ${ve.type.indices}) -> u32 {
             return ${Ge.length>0?Ge.join("+"):"0u"};
           }`,`${Ce}(${ee})`},Z=(ee,ve)=>(()=>{if(t.storage===t.value)return`${n}[${ee}]=${ve};`;if(t.storage==="vec2<u32>"&&t.value==="i32")return`${n}[${ee}]=vec2<u32>(u32(${ve}), select(0u, 0xFFFFFFFFu, ${ve} < 0));`;if(t.storage==="vec2<u32>"&&t.value==="u32")return`${n}[${ee}]=vec2<u32>(u32(${ve}), 0u);`;if(t.storage==="u32"&&t.value==="vec4<bool>")return`${n}[${ee}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ve}));`;throw new Error(`not supported combination of storage type ${t.storage} and value type ${t.value} yet`)})(),Y=ee=>(()=>{if(t.storage===t.value)return`${n}[${ee}]`;if(t.storage==="vec2<u32>"&&t.value==="i32")return`i32(${n}[${ee}].x)`;if(t.storage==="vec2<u32>"&&t.value==="u32")return`u32(${n}[${ee}].x)`;if(t.storage==="u32"&&t.value==="vec4<bool>")return`vec4<bool>(bool(${n}[${ee}] & 0xFFu), bool(${n}[${ee}] & 0xFF00u), bool(${n}[${ee}] & 0xFF0000u), bool(${n}[${ee}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${t.storage} and value type ${t.value} yet`)})(),G=a<2?"":`
  fn get_${n}ByIndices(indices: ${t.indices}) -> ${d} {
    return ${Y(`i2o_${n}(indices)`)};
  }`,R=a<2?"":(()=>{let ee=h.map(Ce=>`d${Ce}: u32`).join(", "),ve=h.map(Ce=>`d${Ce}`).join(", ");return`
  fn get_${n}(${ee}) -> ${d} {
    return get_${n}ByIndices(${C(ve)});
  }`})(),V=(...ee)=>{if(ee.length!==a)throw new Error(`indices length must be ${a}`);let ve=ee.map(u).join(",");return a===0?Y("0u"):a===1?Y(ve[0]):(s.get=!0,s.getByIndices=!0,s.indicesToOffset=!0,`get_${n}(${ve})`)},ce=ee=>a<2?Y(ee):(s.getByIndices=!0,s.indicesToOffset=!0,`get_${n}ByIndices(${ee})`),se=a<2?"":`
  fn set_${n}ByIndices(indices: ${t.indices}, value: ${d}) {
    ${Z(`i2o_${n}(indices)`,"value")}
  }`,be=a<2?"":(()=>{let ee=h.map(Ce=>`d${Ce}: u32`).join(", "),ve=h.map(Ce=>`d${Ce}`).join(", ");return`
  fn set_${n}(${ee}, value: ${d}) {
    set_${n}ByIndices(${C(ve)}, value);
  }`})();return{impl:()=>{let ee=[],ve=!1;return s.offsetToIndices&&(ee.push(w),ve=!0),s.indicesToOffset&&(ee.push(E),ve=!0),s.broadcastedIndicesToOffset&&(Object.values(Q).forEach(Ce=>ee.push(Ce)),ve=!0),s.set&&(ee.push(be),ve=!0),s.setByIndices&&(ee.push(se),ve=!0),s.get&&(ee.push(R),ve=!0),s.getByIndices&&(ee.push(G),ve=!0),!c&&ve&&ee.unshift(`const ${g} = ${t.indices}(${i.join(",")});`,`const ${b} = ${t.indices}(${M.computeStrides(i).join(",")});`),ee.join(`
`)},type:t,offsetToIndices:x,indicesToOffset:O,broadcastedIndicesToOffset:te,indices:C,indicesGet:S,indicesSet:N,set:(...ee)=>{if(ee.length!==a+1)throw new Error(`indices length must be ${a}`);let ve=ee[a];if(typeof ve!="string")throw new Error("value must be string");let Ce=ee.slice(0,a).map(u).join(",");return a===0?Z("0u",ve):a===1?Z(Ce[0],ve):(s.set=!0,s.setByIndices=!0,s.indicesToOffset=!0,`set_${n}(${Ce}, ${ve})`)},setByOffset:Z,setByIndices:(ee,ve)=>a<2?Z(ee,ve):(s.setByIndices=!0,s.indicesToOffset=!0,`set_${n}ByIndices(${ee}, ${ve});`),get:V,getByOffset:Y,getByIndices:ce,usage:o,name:n,strides:b,shape:g,rank:a}},U=(n,e,i,o=1)=>ta(n,e,i,"input",o),K=(n,e,i,o=1)=>ta(n,e,i,"output",o),qn=(n,e,i,o=1)=>ta(n,e,i,"internal",o),Ji=class{constructor(n,e){this.normalizedDispatchGroup=n,this.limits=e,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(n){return`if (global_idx >= ${typeof n=="number"?`${n}u`:n}) { return; }`}mainStart(n=mr){let e=typeof n=="number"?n:n[0],i=typeof n=="number"?1:n[1],o=typeof n=="number"?1:n[2];if(e>this.limits.maxComputeWorkgroupSizeX||i>this.limits.maxComputeWorkgroupSizeY||o>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${e}, ${i}, ${o}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(e*i*o>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${e}, ${i}, ${o}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let l=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,c=l?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,a=l?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${e*i*o}u + local_idx;`;return`@compute @workgroup_size(${e}, ${i}, ${o})
  fn main(${c}) {
    ${a}
  `}appendVariableUniforms(n){n.rank!==0&&(n.shape.startsWith("uniforms.")&&this.uniforms.push({name:n.shape.replace("uniforms.",""),type:"u32",length:n.rank}),n.strides.startsWith("uniforms.")&&this.uniforms.push({name:n.strides.replace("uniforms.",""),type:"u32",length:n.rank}))}declareVariable(n,e){if(n.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(n),this.appendVariableUniforms(n);let i=n.usage==="input"?"read":"read_write",o=n.type.storage;return`@group(0) @binding(${e}) var<storage, ${i}> ${n.name}: array<${o}>;`}declareVariables(...n){return n.map(e=>this.declareVariable(e,this.variableIndex++)).join(`
`)}registerInternalVariable(n){if(n.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(n),this.appendVariableUniforms(n)}registerInternalVariables(...n){return n.forEach(e=>this.registerInternalVariable(e)),this}registerUniform(n,e,i=1){return this.uniforms.push({name:n,type:e,length:i}),this}registerUniforms(n){return this.uniforms=this.uniforms.concat(n),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let n=[];for(let{name:e,type:i,length:o}of this.uniforms)if(o&&o>4)i==="f16"?n.push(`@align(16) ${e}:array<mat2x4<${i}>, ${Math.ceil(o/8)}>`):n.push(`${e}:array<vec4<${i}>, ${Math.ceil(o/4)}>`);else{let l=o==null||o===1?i:`vec${o}<${i}>`;n.push(`${e}:${l}`)}return`
      struct Uniforms { ${n.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(n=>n.impl()).join(`
`)+this.internalVariables.map(n=>n.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let n=e=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(e)];return this.uniforms.map(e=>[n(e.type),e.length??1])}},os=(n,e)=>new Ji(n,e),Pr=(n,e)=>{let i=n.length,o=[];for(let l=0;l<i;l++){let c=i-1-l,a=n[c]||1;(e[e.length-1-l]||1)>1&&a===1&&o.unshift(c)}return o}}),Ec,ss,kc,Oc,xt,us,ls,Rr=j(()=>{ye(),xe(),Ze(),_e(),Ec=n=>{if(!n||n.length!==1)throw new Error("Transpose requires 1 input.")},ss=(n,e)=>e&&e.length!==n?[...new Array(n).keys()].reverse():e,kc=(n,e)=>M.sortBasedOnPerm(n,ss(n.length,e)),Oc=(n,e,i,o)=>{let l=[];l.push(`fn perm(i: ${o.type.indices}) -> ${i.type.indices} {
    var a: ${i.type.indices};`);for(let c=0;c<e;++c)l.push(i.indicesSet("a",n[c],`i[${c}]`));return l.push("return a;}"),l.join(`
`)},xt=(n,e)=>{let i=n.dataType,o=n.dims.length,l=ss(o,e),c=kc(n.dims,l),a=K("output",i,c.length),h=U("a",i,o),f=p=>`
  ${p.registerUniform("output_size","u32").declareVariables(h,a)}

  ${Oc(l,o,h,a)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${a.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${a.setByOffset("global_idx",h.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:["rank"]},getRunData:p=>{let d=M.size(c);return{outputs:[{dims:c,dataType:p[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...X(p[0].dims,c)]}},getShaderSource:f}},us=(n,e)=>{Ec(n.inputs),n.compute(xt(n.inputs[0],e.perm))},ls=n=>we({perm:n.perm})}),Pc,Rc,zc,Bc,Dc,Mc,Uc,Wc,Nc,Vc,zt,ds,cs,ps,ms,fs,hs,gs,ys,bs,vs,ws=j(()=>{ye(),xe(),_e(),jn(),Rr(),Pc={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Rc={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},zc={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Bc={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Dc=(n,e)=>{let i=[];for(let o=e-n;o<e;++o)i.push(o);return i},Mc=(n,e)=>{let i=[],o=n.length;for(let c=0;c<o;c++)e.indexOf(c)===-1&&i.push(n[c]);let l=e.map(c=>n[c]);return[i,l]},Uc=(n,e)=>{let i=n.length+e.length,o=[],l=0;for(let c=0;c<i;c++)e.indexOf(c)===-1?o.push(n[l++]):o.push(1);return o},Wc=(n,e)=>{for(let i=0;i<n.length;++i)if(n[n.length-i-1]!==e-1-i)return!1;return!0},Nc=(n,e)=>{let i=[];if(!Wc(n,e)){for(let o=0;o<e;++o)n.indexOf(o)===-1&&i.push(o);n.forEach(o=>i.push(o))}return i},Vc=(n,e,i,o,l,c,a)=>{let h=i[0].dims,f=M.size(c),p=M.size(a),d=U("_A",i[0].dataType,h),r=K("output",l,c),t=32,u=`
          var<workgroup> aBestValues : array<f32, ${t}>;
       `;return{name:n,shaderCache:e,getShaderSource:s=>`
        ${s.registerUniform("reduceSize","u32").declareVariables(d,r)}
        ${u}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${s.mainStart(t)}

          let outputIndex = global_idx / ${t};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${zc[o]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${t}) {
           let candidate = f32(${d.getByOffset("offset + k")});
           bestValue = ${Pc[o]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${t}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Rc[o]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${r.setByOffset("outputIndex",`${o==="mean"?`${r.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${r.type.storage}(${Bc[o]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:c,dataType:l}],dispatchGroup:{x:f},programUniforms:[{type:12,data:p}]})}},zt=(n,e,i,o)=>{let l=n.inputs.length===1?i:ra(n.inputs,i),c=l.axes;c.length===0&&!l.noopWithEmptyAxes&&(c=n.inputs[0].dims.map((u,s)=>s));let a=M.normalizeAxes(c,n.inputs[0].dims.length),h=a,f=n.inputs[0],p=Nc(h,n.inputs[0].dims.length);p.length>0&&(f=n.compute(xt(n.inputs[0],p),{inputs:[0],outputs:[-1]})[0],h=Dc(h.length,f.dims.length));let[d,r]=Mc(f.dims,h),t=d;l.keepDims&&(t=Uc(d,a)),n.compute(Vc(e,{hint:l.cacheKey,inputDependencies:["type"]},[f],o,n.inputs[0].dataType,t,r),{inputs:[f]})},ds=(n,e)=>{zt(n,"ReduceMeanShared",e,"mean")},cs=(n,e)=>{zt(n,"ReduceL1Shared",e,"l1")},ps=(n,e)=>{zt(n,"ReduceL2Shared",e,"l2")},ms=(n,e)=>{zt(n,"ReduceLogSumExpShared",e,"logSumExp")},fs=(n,e)=>{zt(n,"ReduceMaxShared",e,"max")},hs=(n,e)=>{zt(n,"ReduceMinShared",e,"min")},gs=(n,e)=>{zt(n,"ReduceProdShared",e,"prod")},ys=(n,e)=>{zt(n,"ReduceSumShared",e,"sum")},bs=(n,e)=>{zt(n,"ReduceSumSquareShared",e,"sumSquare")},vs=(n,e)=>{zt(n,"ReduceLogSumShared",e,"logSum")}}),Bt,Hc,Kn,ra,Dt,Gc,Lc,Fc,qc,jc,Kc,Yc,Xc,Zc,Qc,Mt,$s,_s,xs,Ss,Cs,Is,Ts,As,Es,ks,jn=j(()=>{ye(),xe(),Ze(),_e(),ws(),Bt=n=>{if(!n||n.length===0||n.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(n.length===2&&n[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Hc=n=>["","",`var value = ${n.getByIndices("input_indices")};`,""],Kn=(n,e,i,o,l,c,a=!1,h=!1)=>{let f=[],p=i[0].dims,d=p.length,r=M.normalizeAxes(l,d),t=!h&&r.length===0;p.forEach((m,g)=>{t||r.indexOf(g)>=0?a&&f.push(1):f.push(m)});let u=f.length,s=M.size(f);return{name:n,shaderCache:e,getShaderSource:m=>{let g=[],b=U("_A",i[0].dataType,d),y=K("output",c,u),w=o(b,y,r),x=w[2];for(let v=0,E=0;v<d;v++)t||r.indexOf(v)>=0?(a&&E++,x=`for(var j${v}: u32 = 0; j${v} < ${p[v]}; j${v}++) {
                  ${w[2].includes("last_index")?`let last_index = j${v};`:""}
                  ${b.indicesSet("input_indices",v,`j${v}`)}
                  ${x}
                }`):(g.push(`${b.indicesSet("input_indices",v,y.indicesGet("output_indices",E))};`),E++);return`

        ${m.registerUniform("output_size","u32").declareVariables(b,y)}

        ${m.mainStart()}
          ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${b.type.indices};
          let output_indices = ${y.offsetToIndices("global_idx")};

          ${g.join(`
`)}
          ${w[0]}       // init ops for reduce max/min
          ${w[1]}
          ${x}
          ${w[3]}
          ${w.length===4?y.setByOffset("global_idx","value"):w.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:f,dataType:c}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},...X(p,f)]})}},ra=(n,e)=>{let i=[];return n[1].dims[0]>0&&n[1].getBigInt64Array().forEach(o=>i.push(Number(o))),we({axes:i,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},Dt=(n,e,i,o)=>{let l=n.inputs,c=l.length===1?i:ra(l,i);n.compute(Kn(e,{hint:c.cacheKey,inputDependencies:["rank"]},[l[0]],c.noopWithEmptyAxes&&c.axes.length===0?Hc:o,c.axes,l[0].dataType,c.keepDims,c.noopWithEmptyAxes),{inputs:[0]})},Gc=(n,e)=>{Bt(n.inputs),Dt(n,"ReduceLogSum",e,(i,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${i.getByIndices("input_indices")};`,"value = log(value);"])},Lc=(n,e)=>{Bt(n.inputs),Dt(n,"ReduceL1",e,(i,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${i.getByIndices("input_indices")});`,""])},Fc=(n,e)=>{Bt(n.inputs),Dt(n,"ReduceL2",e,(i,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${i.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},qc=(n,e)=>{Bt(n.inputs),Dt(n,"ReduceLogSumExp",e,(i,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${i.getByIndices("input_indices")});`,"value = log(value);"])},jc=(n,e)=>{Bt(n.inputs),Dt(n,"ReduceMax",e,(i,o,l)=>{let c=[];for(let a=0;a<i.rank;a++)(l.indexOf(a)>=0||l.length===0)&&c.push(i.indicesSet("input_indices",a,0));return[`${c.join(`
`)}`,`var value = ${i.getByIndices("input_indices")};`,`value = max(value, ${i.getByIndices("input_indices")});`,""]})},Kc=(n,e)=>{Bt(n.inputs),Dt(n,"ReduceMean",e,(i,o,l)=>{let c=1;for(let a=0;a<i.rank;a++)(l.indexOf(a)>=0||l.length===0)&&(c*=n.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${i.getByIndices("input_indices")});`,`let value = ${o.type.value}(sum / ${c});`]})},Yc=(n,e)=>{Bt(n.inputs),Dt(n,"ReduceMin",e,(i,o,l)=>{let c=[];for(let a=0;a<i.rank;a++)(l.indexOf(a)>=0||l.length===0)&&c.push(`input_indices[${a}] = 0;`);return[`${c.join(`
`)}`,`var value = ${i.getByIndices("input_indices")};`,`value = min(value, ${i.getByIndices("input_indices")});`,""]})},Xc=(n,e)=>{Bt(n.inputs),Dt(n,"ReduceProd",e,(i,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${i.getByIndices("input_indices")};`,""])},Zc=(n,e)=>{Bt(n.inputs),Dt(n,"ReduceSum",e,(i,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${i.getByIndices("input_indices")};`,""])},Qc=(n,e)=>{Bt(n.inputs),Dt(n,"ReduceSumSquare",e,(i,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${i.getByIndices("input_indices")}; value += t * t;`,""])},Mt=(n,e,i)=>{if(e.length===0)return i;let o=1,l=1;for(let c=0;c<e.length;c++)e.indexOf(c)===-1?o*=n[c]:l*=n[c];return l<32&&o>1024},$s=(n,e)=>{Mt(n.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Kc(n,e):ds(n,e)},_s=(n,e)=>{Mt(n.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Lc(n,e):cs(n,e)},xs=(n,e)=>{Mt(n.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Fc(n,e):ps(n,e)},Ss=(n,e)=>{Mt(n.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?qc(n,e):ms(n,e)},Cs=(n,e)=>{Mt(n.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?jc(n,e):fs(n,e)},Is=(n,e)=>{Mt(n.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Yc(n,e):hs(n,e)},Ts=(n,e)=>{Mt(n.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Xc(n,e):gs(n,e)},As=(n,e)=>{Mt(n.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Zc(n,e):ys(n,e)},Es=(n,e)=>{Mt(n.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Qc(n,e):bs(n,e)},ks=(n,e)=>{Mt(n.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Gc(n,e):vs(n,e)}}),Os,Ps,Rs,na,zs=j(()=>{ye(),Ze(),jn(),Os=n=>{if(!n||n.length===0||n.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(n[0].dataType!==1)throw new Error("Invalid input type.")},Ps=(n,e)=>{Os(n.inputs);let i=(o,l,c)=>{let a=[];for(let h=0;h<o.rank;h++)(c.indexOf(h)>=0||c.length===0)&&a.push(`input_indices[${h}] = 0;`);return[`${a.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${o.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",l.setByOffset("global_idx","best_index")]};n.compute(Kn("ArgMin",{hint:e.cacheKey,inputDependencies:["rank"]},[n.inputs[0]],i,[e.axis],7,e.keepDims),{inputs:[0]})},Rs=(n,e)=>{Os(n.inputs);let i=(o,l,c)=>{let a=[];for(let h=0;h<o.rank;h++)(c.indexOf(h)>=0||c.length===0)&&a.push(`input_indices[${h}] = 0;`);return[`${a.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${o.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",l.setByOffset("global_idx","best_index")]};n.compute(Kn("argMax",{hint:e.cacheKey,inputDependencies:["rank"]},[n.inputs[0]],i,[e.axis],7,e.keepDims),{inputs:[0]})},na=n=>we(n)}),Jc,ep,tp,Yn,Bs,Ds,ia=j(()=>{ye(),xe(),Ze(),_e(),Jc=(n,e)=>{if(!n||n.length<1)throw new Error("too few inputs");let i=0,o=n[i],l=o.dataType,c=o.dims.length;n.forEach((a,h)=>{if(h!==i){if(a.dataType!==l)throw new Error("input tensors should be one type");if(a.dims.length!==c)throw new Error("input tensors should have the same shape");a.dims.forEach((f,p)=>{if(p!==e&&f!==o.dims[p])throw new Error("non concat dimensions must match")})}})},ep=(n,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${n}u>(${e});
    for (var i: u32 = 0u; i < ${n}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${n}u;
  }`,tp=(n,e)=>{let i=n.length,o=[];for(let l=0;l<i;++l){let c=e.setByOffset("global_idx",n[l].getByIndices("indices"));i===1?o.push(c):l===0?o.push(`if (inputIndex == ${l}u) { ${c} }`):l===i-1?o.push(`else { ${c} }`):o.push(`else if (inputIndex == ${l}) { ${c} }`)}return o.join(`
`)},Yn=(n,e,i,o)=>{let l=M.size(i),c=new Array(n.length),a=new Array(n.length),h=0,f=[],p=[],d=[{type:12,data:l}];for(let m=0;m<n.length;++m)h+=n[m].dims[e],c[m]=h,p.push(n[m].dims.length),a[m]=U(`input${m}`,o,p[m]),f.push("rank"),d.push({type:12,data:c[m]});for(let m=0;m<n.length;++m)d.push(...X(n[m].dims));d.push(...X(i));let r=K("output",o,i.length),t=r.indicesGet("indices",e),u=Array.from(Array(c.length).keys()).map(m=>`uniforms.sizeInConcatAxis${m}`).join(","),s=m=>`

  ${(()=>{m.registerUniform("outputSize","u32");for(let g=0;g<n.length;g++)m.registerUniform(`sizeInConcatAxis${g}`,"u32");return m.declareVariables(...a,r)})()}

  ${ep(c.length,u)}

  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${r.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${t});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${c.length}u>(${u});
      ${t} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${tp(a,r)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:s}},Bs=(n,e)=>{let i=n.inputs,o=i[0].dims,l=M.normalizeAxis(e.axis,o.length);Jc(i,l);let c=o.slice();c[l]=i.reduce((h,f)=>h+(f.dims.length>l?f.dims[l]:0),0);let a=i.filter(h=>M.size(h.dims)>0);n.compute(Yn(a,l,c,i[0].dataType),{inputs:a})},Ds=n=>we({axis:n.axis})}),rp,np,ip,ap,Xn,op,Ms,aa=j(()=>{ye(),Hn(),_e(),ia(),rp=(n,e)=>{let i=n[0],o=n[1],l=n[2],c=n[3],a=n[4],h=n[5];if(a&&h)throw new Error("Attention cannot have both past and relative_position_bias");if(i.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let f=i.dims[0],p=i.dims[1],d=i.dims[2];if(l.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(o.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(o.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(l.dims[0]!==o.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let r=l.dims[0]/3,t=r,u=t;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let w of e.qkvHiddenSizes)if(w%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");r=e.qkvHiddenSizes[0],t=e.qkvHiddenSizes[1],u=e.qkvHiddenSizes[2]}let s=p;if(r!==t)throw new Error("qkv_hidden_sizes first element should be same as the second");if(l.dims[0]!==r+t+u)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let m=0;if(a){if(t!==u)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(a.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(a.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(a.dims[1]!==f)throw new Error('Input "past" second dimension must be batch_size');if(a.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(a.dims[4]!==t/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(m=a.dims[3])}let g=s+m,b=-1,y=0;if(c)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");return{batchSize:f,sequenceLength:p,pastSequenceLength:m,kvSequenceLength:s,totalSequenceLength:g,maxSequenceLength:b,inputHiddenSize:d,hiddenSize:r,vHiddenSize:u,headSize:Math.floor(r/e.numHeads),vHeadSize:Math.floor(u/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:y,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},np=(n,e,i,o)=>{let l=Ue(o),c=64,a=o/l;a<c?c=1:a/8<64&&(c=Math.ceil(a/8));let h=Math.ceil(o/l/c),f=[{type:e.dataType,data:1/o},{type:12,data:a},{type:12,data:h}],p=Be(e.dataType,l),d=rt(1,l),r=t=>{let u=K("x",e.dataType,e.dims,l),s=[{name:"d_inv",type:rt(e.dataType)},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${c}>;
  var<workgroup> thread_sum: array<f32, ${c}>;
  ${t.registerUniforms(s).declareVariables(u)}
  ${t.mainStart([c,1,1])}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = workgroup_id.x * uniforms.d_comp + local_offset;

    var thread_max_vector = ${d}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      thread_max_vector = max(${d}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${c}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${d}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      sum_vector += exp(${d}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${c}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        x[offset + i] = ${u.type.value}(uniforms.d_inv);
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        var f32input = ${d}(x[offset + i]);
        x[offset + i] = ${u.type.value}(exp(f32input - max_value) / sum);
      }
    }
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${c};${p};${l}`},getShaderSource:r,getRunData:()=>({outputs:[],dispatchGroup:{x:i},programUniforms:f})}},ip=(n,e,i,o,l,c,a)=>{let h=a+l.kvSequenceLength,f=[l.batchSize,l.numHeads,l.sequenceLength,h],p=c.scale===0?1/Math.sqrt(l.headSize):c.scale,d=Ue(l.headSize),r=l.headSize/d,t=12,u={x:Math.ceil(h/t),y:Math.ceil(l.sequenceLength/t),z:l.batchSize*l.numHeads},s=[{type:12,data:l.sequenceLength},{type:12,data:r},{type:12,data:h},{type:12,data:l.numHeads},{type:1,data:p}],m=o?["type","type","type"]:["type","type"],g=b=>{let y=U("q",e.dataType,e.dims,d),w=U("key",i.dataType,i.dims,d),x=[y,w];o&&x.push(U("relative_position_bias",o.dataType,o.dims));let v=K("output",e.dataType,f),E=rt(1,d),O=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"}];return`
  const TILE_SIZE = ${t}u;

  var<workgroup> tileQ: array<${y.type.storage}, ${t*t}>;
  var<workgroup> tileK: array<${y.type.storage}, ${t*t}>;
  ${b.registerUniforms(O).declareVariables(...x,v)}
  ${b.mainStart([t,t,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;

    var value = ${E}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
        value += ${E}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(d){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${d}`)}})()};
        output[outputIdx] = ${v.type.value} (sum * uniforms.alpha) + ${o?"relative_position_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${d}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:f,dataType:e.dataType,gpuDataType:0}],dispatchGroup:u,programUniforms:s}),getShaderSource:g}},ap=(n,e,i,o,l)=>{let c=l+o.kvSequenceLength,a=[o.batchSize,o.sequenceLength,o.vHiddenSize],h=12,f={x:Math.ceil(o.vHeadSize/h),y:Math.ceil(o.sequenceLength/h),z:o.batchSize*o.numHeads},p=[{type:12,data:o.sequenceLength},{type:12,data:c},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}];return{name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:e.dataType,gpuDataType:0}],dispatchGroup:f,programUniforms:p}),getShaderSource:d=>{let r=U("probs",e.dataType,e.dims),t=U("v",i.dataType,i.dims),u=K("output",e.dataType,a),s=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${h}u;
  var<workgroup> tileQ: array<${r.type.value}, ${h*h}>;
  var<workgroup> tileK: array<${r.type.value}, ${h*h}>;
  ${d.registerUniforms(s).declareVariables(r,t,u)}
  ${d.mainStart([h,h,1])}
   let headIdx = workgroup_id.z;
   let m = global_id.y;
   let n = global_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${r.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`}}},Xn=(n,e,i,o,l,c,a,h,f,p,d)=>{let r=n.outputCount>1,t=n.outputCount>2,u=r&&t?p.pastSequenceLength:0,s=u+p.kvSequenceLength,m=[p.batchSize,p.numHeads,s,p.headSize],g=a?[a,i]:[i],b=r?n.compute(Yn(g,2,m,i.dataType),{inputs:g,outputs:[1]})[0]:i,y=[p.batchSize,p.numHeads,s,p.headSize],w=h?[h,o]:[o],x=t?n.compute(Yn(w,2,y,o.dataType),{inputs:w,outputs:[2]})[0]:o,v=[e,b];f&&v.push(f);let E=n.compute(ip(n,e,b,f,p,d,u),{inputs:v,outputs:[-1]})[0];n.compute(np(n,E,p.batchSize*p.numHeads*p.sequenceLength,s),{inputs:[E],outputs:[]});let O=[E,x];n.compute(ap(n,E,x,p,u),{inputs:O,outputs:[0]})},op=(n,e)=>{let i=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],o=e.sequenceLength,l=e.inputHiddenSize,c=e.headSize,a=12,h={x:Math.ceil(e.headSize/a),y:Math.ceil(e.sequenceLength/a),z:e.batchSize*e.numHeads},f=[n.inputs[0],n.inputs[1],n.inputs[2]],p=[{type:12,data:o},{type:12,data:l},{type:12,data:c},{type:12,data:e.numHeads},{type:12,data:e.headSize},{type:12,data:e.hiddenSize},{type:12,data:e.hiddenSize+e.hiddenSize+e.vHiddenSize}],d=r=>{let t=K("output_q",f[0].dataType,i),u=K("output_k",f[0].dataType,i),s=K("output_v",f[0].dataType,i),m=U("input",f[0].dataType,f[0].dims),g=U("weight",f[1].dataType,f[1].dims),b=U("bias",f[2].dataType,f[2].dims),y=m.type.storage,w=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${a}u;
  var<workgroup> tileInput: array<${y}, ${a*a}>;
  var<workgroup> tileWeightQ: array<${y}, ${a*a}>;
  var<workgroup> tileWeightK: array<${y}, ${a*a}>;
  var<workgroup> tileWeightV: array<${y}, ${a*a}>;
  ${r.registerUniforms(w).declareVariables(m,g,b,t,u,s)}
  ${r.mainStart([a,a,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${y}(0);
    var valueK = ${y}(0);
    var valueV = ${y}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return n.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:n.inputs[0].dataType,gpuDataType:0},{dims:i,dataType:n.inputs[0].dataType,gpuDataType:0},{dims:i,dataType:n.inputs[0].dataType,gpuDataType:0}],dispatchGroup:h,programUniforms:p}),getShaderSource:d},{inputs:f,outputs:[-1,-1,-1]})},Ms=(n,e)=>{let i=rp(n.inputs,e),[o,l,c]=op(n,i);return Xn(n,o,l,c,n.inputs[4],void 0,void 0,void 0,n.inputs[5],i,e)}}),sp,up,lp,Us,Ws=j(()=>{_t(),ye(),xe(),Ze(),_e(),sp=(n,e)=>{if(!n||n.length!==5)throw new Error("BatchNormalization requires 5 inputs");let i=(o,l,c)=>{let a=l.length;if(a!==o.length)throw new Error(`${c}: num dimensions != ${a}`);l.forEach((h,f)=>{if(h!==o[f])throw new Error(`${c}: dim[${f}] do not match`)})};if(n[0].dims.length>1){let o=e.format==="NHWC"?e.spatial?n[0].dims.slice(-1):n[0].dims.slice(-1).concat(n[0].dims.slice(1,n[0].dims.length-1)):n[0].dims.slice(1,e.spatial?2:void 0);i(n[1].dims,o,"Invalid input scale"),i(n[2].dims,o,"Invalid input B"),i(n[3].dims,o,"Invalid input mean"),i(n[4].dims,o,"Invalid input var")}else i(n[1].dims,[1],"Invalid input scale"),i(n[2].dims,[1],"Invalid input B"),i(n[3].dims,[1],"Invalid input mean"),i(n[4].dims,[1],"Invalid input var")},up=(n,e)=>{let{epsilon:i,spatial:o,format:l}=e,c=n[0].dims,a=o?Ue(c[c.length-1]):1,h=l==="NHWC"&&c.length>1?a:1,f=M.size(c)/a,p=o,d=p?c.length:c,r=U("x",n[0].dataType,n[0].dims,a),t=U("scale",n[1].dataType,n[1].dims,h),u=U("bias",n[2].dataType,n[2].dims,h),s=U("inputMean",n[3].dataType,n[3].dims,h),m=U("inputVar",n[4].dataType,n[4].dims,h),g=K("y",n[0].dataType,d,a),b=()=>{let w="";if(o)w=`let cOffset = ${c.length===1?"0u":l==="NHWC"?`outputIndices[${c.length-1}] / ${a}`:"outputIndices[1]"};`;else if(l==="NCHW")w=`
            ${g.indicesSet("outputIndices","0","0")}
            let cOffset = ${g.indicesToOffset("outputIndices")};`;else{w=`var cIndices = ${t.type.indices}(0);
                       cIndices[0] = outputIndices[${c.length-1}];`;for(let x=1;x<t.rank;x++)w+=`cIndices[${x}] = outputIndices[${x}];`;w+=`let cOffset = ${t.indicesToOffset("cIndices")};`}return w},y=w=>`
  const epsilon = ${i};
  ${w.registerUniform("outputSize","u32").declareVariables(r,t,u,s,m,g)}
  ${w.mainStart()}
  ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${g.offsetToIndices(`global_idx * ${a}`)};
    ${b()}
    let scale = ${t.getByOffset("cOffset")};
    let bias = ${u.getByOffset("cOffset")};
    let inputMean = ${s.getByOffset("cOffset")};
    let inputVar = ${m.getByOffset("cOffset")};
    let x = ${r.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${g.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${o}_${a}`,inputDependencies:p?["rank","type","type","type","type"]:void 0},getShaderSource:y,getRunData:()=>({outputs:[{dims:n[0].dims,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:p?[{type:12,data:f},...X(c)]:[{type:12,data:f}]})}},lp=n=>we(n),Us=(n,e)=>{let{inputs:i,outputCount:o}=n,l=lp({...e,outputCount:o});if(ke.webgpu.validateInputContent&&sp(i,l),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");n.compute(up(i,l))}}),dp,cp,Ns,Vs=j(()=>{xe(),_e(),dp=n=>{if(n[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(n[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(n[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(n[0].dims[2]!==n[1].dims[0])throw new Error("last dimension of input and bias are not the same")},cp=n=>{let e=n[0].dims,i=n[0].dims[2],o=M.size(e)/4,l=n[0].dataType,c=U("input",l,e,4),a=U("bias",l,[i],4),h=U("residual",l,e,4),f=K("output",l,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:p=>`
  const channels = ${i}u / 4;
  ${p.declareVariables(c,a,h,f)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let value = ${c.getByOffset("global_idx")}
      + ${a.getByOffset("global_idx % channels")} + ${h.getByOffset("global_idx")};
    ${f.setByOffset("global_idx","value")}
  }`}},Ns=n=>{dp(n.inputs),n.compute(cp(n.inputs))}}),pp,Pe,Hs,Gs,Ls,Fs,qs,js,Ks,Ys,Xs,mp,Zs,Qs,Js,eu,Zn,tu,Qn,ru,nu,iu,au,ou,su,uu,lu,du,cu,pu,mu,fu,hu,gu,yu,bu,vu,oa,sa,wu,$u,_u,Jn=j(()=>{ye(),xe(),Ze(),_e(),pp=(n,e,i,o,l,c)=>{let a=Math.ceil(e/4),h="";typeof l=="string"?h=`${l}(a)`:h=l("a");let f=U("inputData",i,[a],4),p=K("outputData",o,[a],4);return`
      ${n.registerUniform("vec_size","u32").declareVariables(f,p)}

  ${c??""}

  ${n.mainStart()}
    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${f.getByOffset("global_idx")};
    ${p.setByOffset("global_idx",h)}
  }`},Pe=(n,e,i,o,l,c=n.dataType)=>({name:e,shaderCache:{hint:l,inputDependencies:["type"]},getShaderSource:a=>pp(a,M.size(n.dims),n.dataType,c,i,o),getRunData:a=>({outputs:[{dims:n.dims,dataType:c}],dispatchGroup:{x:Math.ceil(M.size(a[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(n.dims)/4)}]})}),Hs=n=>{n.compute(Pe(n.inputs[0],"Abs","abs"))},Gs=n=>{n.compute(Pe(n.inputs[0],"Acos","acos"))},Ls=n=>{n.compute(Pe(n.inputs[0],"Acosh","acosh"))},Fs=n=>{n.compute(Pe(n.inputs[0],"Asin","asin"))},qs=n=>{n.compute(Pe(n.inputs[0],"Asinh","asinh"))},js=n=>{n.compute(Pe(n.inputs[0],"Atan","atan"))},Ks=n=>{n.compute(Pe(n.inputs[0],"Atanh","atanh"))},Ys=n=>we(n),Xs=(n,e)=>{let i;switch(e.to){case 10:i="vec4<f16>";break;case 1:i="vec4<f32>";break;case 12:i="vec4<u32>";break;case 6:i="vec4<i32>";break;case 9:i="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}n.compute(Pe(n.inputs[0],"Cast",i,void 0,e.cacheKey,e.to))},mp=n=>{let e=n.length>=2&&n[1].data!==0?n[1].getFloat32Array()[0]:Ln,i=n.length>=3&&n[2].data!==0?n[2].getFloat32Array()[0]:Fn;return we({min:e,max:i})},Zs=(n,e)=>{let i=n.inputs.length===1?e:mp(n.inputs),o=rt(n.inputs[0].dataType);n.compute(Pe(n.inputs[0],"Clip",l=>`clamp(${l}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${o}> = vec4(${o}(${i.min}));
    const clip_max_: vec4<${o}> = vec4(${o}(${i.max}));
`,i.cacheKey),{inputs:[0]})},Qs=n=>{n.compute(Pe(n.inputs[0],"Ceil","ceil"))},Js=n=>{n.compute(Pe(n.inputs[0],"Cos","cos"))},eu=n=>{n.compute(Pe(n.inputs[0],"Cosh","cosh"))},Zn=n=>we(n),tu=(n,e)=>{let i=rt(n.inputs[0].dataType);n.compute(Pe(n.inputs[0],"Elu",o=>`elu_vf32(${o})`,`
  const elu_alpha_ = ${i}(${e.alpha});

  fn elu_f32(a: ${i}) -> ${i} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${i}>) -> vec4<${i}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},Qn=(n="f32")=>`
const r0: ${n} = 0.3275911;
const r1: ${n} = 0.254829592;
const r2: ${n} = -0.284496736;
const r3: ${n} = 1.421413741;
const r4: ${n} = -1.453152027;
const r5: ${n} = 1.061405429;

fn erf_vf32(v: vec4<${n}>) -> vec4<${n}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,ru=n=>{let e=rt(n.inputs[0].dataType);n.compute(Pe(n.inputs[0],"Erf",i=>`erf_vf32(${i})`,Qn(e)))},nu=n=>{n.compute(Pe(n.inputs[0],"Exp","exp"))},iu=n=>{n.compute(Pe(n.inputs[0],"Floor","floor"))},au=n=>{let e=rt(n.inputs[0].dataType);n.compute(Pe(n.inputs[0],"Gelu",i=>`0.5 * ${i} * (1.0 + erf_vf32(${i} * 0.7071067811865475))`,Qn(e)))},ou=(n,e)=>{let i=rt(n.inputs[0].dataType);n.compute(Pe(n.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${i}>(0.0))`,`const leaky_relu_alpha_ = ${i}(${e.alpha});`,e.cacheKey))},su=n=>{n.compute(Pe(n.inputs[0],"Not",e=>`!${e}`))},uu=n=>{n.compute(Pe(n.inputs[0],"Neg",e=>`-${e}`))},lu=n=>{n.compute(Pe(n.inputs[0],"Reciprocal",e=>`1.0/${e}`))},du=n=>{let e=rt(n.inputs[0].dataType);n.compute(Pe(n.inputs[0],"Relu",i=>`select(vec4<${e}>(0.0), ${i}, ${i} > vec4<${e}>(0.0))`))},cu=n=>{n.compute(Pe(n.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},pu=n=>we(n),mu=(n,e)=>{let i=rt(n.inputs[0].dataType);n.compute(Pe(n.inputs[0],"HardSigmoid",o=>`max(vec4<${i}>(0.0), min(vec4<${i}>(1.0), ${e.alpha} * ${o} + vec4<${i}>(${e.beta})))`,void 0,e.cacheKey))},fu=n=>{n.compute(Pe(n.inputs[0],"Sin","sin"))},hu=n=>{n.compute(Pe(n.inputs[0],"Sinh","sinh"))},gu=n=>{n.compute(Pe(n.inputs[0],"Sqrt","sqrt"))},yu=n=>{n.compute(Pe(n.inputs[0],"Tan","tan"))},bu=n=>`sign(${n}) * (1 - exp(-2 * abs(${n}))) / (1 + exp(-2 * abs(${n})))`,vu=n=>{n.compute(Pe(n.inputs[0],"Tanh",bu))},oa=(n="f32")=>`
const fast_gelu_a: ${n} = 0.5;
const fast_gelu_b: ${n} = 0.7978845608028654;
const fast_gelu_c: ${n} = 0.035677408136300125;

fn tanh_v(v: vec4<${n}>) -> vec4<${n}> {
  return ${bu("v")};
}
`,sa=n=>`(fast_gelu_a + fast_gelu_a * tanh_v(${n} * (fast_gelu_c * ${n} * ${n} + fast_gelu_b))) * ${n}`,wu=n=>{let e=rt(n.inputs[0].dataType);n.compute(Pe(n.inputs[0],"FastGelu",sa,oa(e),void 0,n.inputs[0].dataType))},$u=(n,e)=>{let i=rt(n.inputs[0].dataType);return n.compute(Pe(n.inputs[0],"ThresholdedRelu",o=>`select(vec4<${i}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${i}>(${e.alpha});`,e.cacheKey)),0},_u=n=>{n.compute(Pe(n.inputs[0],"Log","log"))}}),fp,hp,Su,Cu=j(()=>{xe(),_e(),Jn(),fp=n=>{if(n[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(n[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(n[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(n[0].dims[2]!==n[1].dims[0])throw new Error("last dimension of input and bias are not the same")},hp=n=>{let e=n[0].dims.slice();e[2]=e[2]/2;let i=U("input",n[0].dataType,n[0].dims,4),o=U("bias",n[0].dataType,[n[0].dims[2]],4),l=K("output",n[0].dataType,e,4),c=M.size(e)/4,a=Be(n[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)}}),getShaderSource:h=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${n[0].dims[2]/4/2}u;

  ${h.declareVariables(i,o,l)}

  ${Qn(a)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes(c)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${l.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Su=n=>{fp(n.inputs),n.compute(hp(n.inputs))}}),gp,yp,Ut,Iu,Tu,Au,Eu,ku,Ou,Pu,Ru,zu,Bu,Du=j(()=>{ye(),xe(),_e(),gp=(n,e,i,o,l,c,a,h,f,p,d,r)=>{let t,u;typeof h=="string"?t=u=(y,w)=>`${h}((${y}),(${w}))`:typeof h=="function"?t=u=h:(t=h.scalar,u=h.vector);let s=K("outputData",d,o.length,4),m=U("aData",f,e.length,4),g=U("bData",p,i.length,4),b;if(l)if(c){let y=M.size(e)===1,w=M.size(i)===1,x=e.length>0&&e[e.length-1]%4===0,v=i.length>0&&i[i.length-1]%4===0;y||w?b=s.setByOffset("global_idx",u(y?`${m.type.value}(${m.getByOffset("0")}.x)`:m.getByOffset("global_idx"),w?`${g.type.value}(${g.getByOffset("0")}.x)`:g.getByOffset("global_idx"))):b=`
            let outputIndices = ${s.offsetToIndices("global_idx * 4u")};
            let offsetA = ${m.broadcastedIndicesToOffset("outputIndices",s)};
            let offsetB = ${g.broadcastedIndicesToOffset("outputIndices",s)};
            ${s.setByOffset("global_idx",u(a||x?m.getByOffset("offsetA / 4u"):`${m.type.value}(${m.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||v?g.getByOffset("offsetB / 4u"):`${g.type.value}(${g.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else b=s.setByOffset("global_idx",u(m.getByOffset("global_idx"),g.getByOffset("global_idx")));else{if(!c)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let y=(w,x,v="")=>{let E=`aData[indexA${x}][componentA${x}]`,O=`bData[indexB${x}][componentB${x}]`;return`
            let outputIndices${x} = ${s.offsetToIndices(`global_idx * 4u + ${x}u`)};
            let offsetA${x} = ${m.broadcastedIndicesToOffset(`outputIndices${x}`,s)};
            let offsetB${x} = ${g.broadcastedIndicesToOffset(`outputIndices${x}`,s)};
            let indexA${x} = offsetA${x} / 4u;
            let indexB${x} = offsetB${x} / 4u;
            let componentA${x} = offsetA${x} % 4u;
            let componentB${x} = offsetB${x} % 4u;
            ${w}[${x}] = ${v}(${t(E,O)});
          `};d===9?b=`
            var data = vec4<u32>(0);
            ${y("data",0,"u32")}
            ${y("data",1,"u32")}
            ${y("data",2,"u32")}
            ${y("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:b=`
            ${y("outputData[global_idx]",0)}
            ${y("outputData[global_idx]",1)}
            ${y("outputData[global_idx]",2)}
            ${y("outputData[global_idx]",3)}
          `}return`
        ${n.registerUniform("vec_size","u32").declareVariables(m,g,s)}

        ${r??""}

        ${n.mainStart()}
        ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${b}
      }`},yp=(n,e,i,o,l,c,a=i.dataType)=>{let h=!M.areEqual(i.dims,o.dims),f=i.dims,p=M.size(i.dims),d=!1,r=!1,t=[h];if(h){let u=Rt.calcShape(i.dims,o.dims,!1);if(!u)throw new Error("Can't perform binary op on the given tensors");f=u,p=M.size(f);let s=M.size(i.dims)===1,m=M.size(o.dims)===1,g=i.dims.length>0&&i.dims[i.dims.length-1]%4===0,b=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;t.push(s),t.push(m),t.push(g),t.push(b);let y=1;for(let w=1;w<f.length;w++){let x=i.dims[i.dims.length-w]??1,v=o.dims[o.dims.length-w]??1;if(x===v)y*=x;else break}y%4===0?(r=!0,d=!0):(s||m||g||b)&&(d=!0)}else d=!0;return t.push(d),{name:n,shaderCache:{hint:e+t.map(u=>u.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:u=>gp(u,i.dims,o.dims,f,d,h,r,l,i.dataType,o.dataType,a,c),getRunData:()=>({outputs:[{dims:f,dataType:a}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(f)/4)},...X(i.dims,o.dims,f)]})}},Ut=(n,e,i,o,l,c)=>{n.compute(yp(e,l??"",n.inputs[0],n.inputs[1],i,o,c))},Iu=n=>{Ut(n,"Add",(e,i)=>`${e}+${i}`)},Tu=n=>{Ut(n,"Div",(e,i)=>`${e}/${i}`)},Au=n=>{Ut(n,"Equal",{scalar:(e,i)=>`u32(${e}==${i})`,vector:(e,i)=>`vec4<u32>(${e}==${i})`},void 0,void 0,9)},Eu=n=>{Ut(n,"Mul",(e,i)=>`${e}*${i}`)},ku=n=>{let e=U("input",n.inputs[0].dataType,n.inputs[0].dims).type.value;Ut(n,"Pow",{scalar:(i,o)=>`pow_custom(${i},${o})`,vector:(i,o)=>`pow_vector_custom(${i},${o})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Ou=n=>{Ut(n,"Sub",(e,i)=>`${e}-${i}`)},Pu=n=>{Ut(n,"Greater",{scalar:(e,i)=>`u32(${e}>${i})`,vector:(e,i)=>`vec4<u32>(${e}>${i})`},void 0,void 0,9)},Ru=n=>{Ut(n,"Less",{scalar:(e,i)=>`u32(${e}<${i})`,vector:(e,i)=>`vec4<u32>(${e}<${i})`},void 0,void 0,9)},zu=n=>{Ut(n,"GreaterOrEqual",{scalar:(e,i)=>`u32(${e}>=${i})`,vector:(e,i)=>`vec4<u32>(${e}>=${i})`},void 0,void 0,9)},Bu=n=>{Ut(n,"LessOrEqual",{scalar:(e,i)=>`u32(${e}<=${i})`,vector:(e,i)=>`vec4<u32>(${e}<=${i})`},void 0,void 0,9)}}),Et,kt,Ot,ei,Zt=j(()=>{ye(),xe(),Et=(n,e,i="f32")=>{switch(n.activation){case"Relu":return`value = max(value, ${e}(0.0));`;case"Sigmoid":return`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${e}(${i}(uniforms.clip_min)), ${e}(${i}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${e}(0.0), min(${e}(1.0), ${i}(uniforms.alpha) * value + ${i}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${i}(uniforms.alpha) * value, value, value >= ${e}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${n.activation}`)}},kt=(n,e)=>{n.activation==="Clip"?e.push({type:1,data:n.clipMax},{type:1,data:n.clipMin}):n.activation==="HardSigmoid"?e.push({type:1,data:n.alpha},{type:1,data:n.beta}):n.activation==="LeakyRelu"&&e.push({type:1,data:n.alpha})},Ot=(n,e)=>{n.activation==="Clip"?e.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):n.activation==="HardSigmoid"?e.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):n.activation==="LeakyRelu"&&e.push({name:"alpha",type:"f32"})},ei=n=>{let e=(n==null?void 0:n.activation)||"";if(e==="HardSigmoid"){let[i,o]=(n==null?void 0:n.activation_params)||[.2,.5];return{activation:e,alpha:i,beta:o}}else if(e==="Clip"){let[i,o]=(n==null?void 0:n.activation_params)||[Ln,Fn];return{activation:e,clipMax:o,clipMin:i}}else if(e==="LeakyRelu"){let[i]=(n==null?void 0:n.activation_params)||[.01];return{activation:e,alpha:i}}return{activation:e}}}),nt,ti,ri=j(()=>{nt=(n,e)=>{switch(n){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${n}-component is not supported.`)}},ti=n=>`
      ${n?"value = value + getBiasByOutputCoords(coords);":""}
      `}),ni,ua=j(()=>{ni=n=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${n}.x), i32(${n}.y), i32(${n}.z), 1));
}
`}),vp,wp,rn,Mu,$p,nn,_p,ii,an=j(()=>{ye(),xe(),_e(),Zt(),ri(),vp=(n,e)=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,wp=(n,e)=>n?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,rn=(n,e,i="f32",o,l=!1,c=32,a=!1,h=32)=>{let f=e[1]*n[1],p=e[0]*n[0],d=l?f:c,r=l?c:f,t=d/e[0],u=c/e[1];if(!((l&&t===4&&n[1]===4||!l&&(t===3||t===4))&&d%e[0]===0&&c%e[1]===0&&n[0]===4))throw new Error(`If transposeA ${l} is true, innerElementSize ${t} and workPerThread[1] ${n[1]} must be 4.
      Otherwise, innerElementSize ${t} must be 3 or 4.
  tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}. tileInner ${c} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${n[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${t}<${i}>, ${d/t}>, ${r}>;
var<workgroup> mm_Bsub: array<array<vec4<${i}>, ${p/n[0]}>, ${c}>;

const rowPerThread = ${n[1]};
const colPerThread = ${n[0]};
const innerElementSize = ${t};
const tileInner = ${c};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${a?"0":"i32(globalId.z)"};
  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${f};

  let num_tiles = ${a?`${Math.ceil(h/c)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${a?`i32(globalId.z) * ${h}`:"0"};

  var acc: array<vec4<${i}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${u};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${vp(l,o)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${u}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${t===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${wp(l,t)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Mu=(n,e)=>n?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,$p=n=>n?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",nn=(n,e,i="f32",o,l=!1,c=32,a=!1,h=32,f=!1)=>{let p=n[1]*e[1],d=n[0]*e[0],r=l?p:c,t=l?c:p;if(!(t%e[1]===0&&r%e[0]===0&&c%e[1]===0))throw new Error(`tileAHight ${t} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${r} must be divisible by workgroupSize[0]${e[0]}, tileInner ${c} must be divisible by workgroupSize[1]${e[1]}`);let u=t/e[1],s=r/e[0],m=c/e[1],g=f?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${p};
    let globalColStart = i32(workgroupId.x) * ${d};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${t}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${r}; inputCol = inputCol + ${e[0]}) {
          ${Mu(l,o)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${c}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${o?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${i}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${l?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${p};

let tileRowA = i32(localId.y) * ${u};
let tileColA = i32(localId.x) * ${s};
let tileRowB = i32(localId.y) * ${m};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${u}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${s}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Mu(l,o)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${m}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${o?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${i}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${$p(l)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${i}, ${r}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<${i}, ${d}>, ${c}>;
  const rowPerThread = ${n[1]};
  const colPerThread = ${n[0]};
  const tileInner = ${c};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${a?"0":"i32(globalId.z)"};
    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${a?`${Math.ceil(h/c)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${a?`i32(globalId.z) * ${h}`:"0"};

    var acc : array<array<${i}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${g}
  }
`},_p=(n,e,i,o,l,c=!1)=>{let[a,h,f]=l,[p,d,r,t]=o,u=Pr(a,f),s=Pr(h,f),m=Be(o[0].type.tensor),g=()=>{let y=d.rank,w=p.rank,x=`var aIndices: ${d.type.indices};`;for(let v=y-2-1,E=w-1;v>=0;v--,E--)x+=`
aIndices[${v}] = ${w>1?`batchIndices[${E}]`:"batchIndices"};`;return u.forEach(v=>{x+=`
aIndices[${v}] = 0;`}),x+=`
aIndices[${y-2}] = u32(row);
                   aIndices[${y-1}] = u32(colIn);`,x},b=()=>{let y=r.rank,w=p.rank,x=`var bIndices: ${r.type.indices};`;for(let v=y-2-1,E=w-1;v>=0;v--,E--)x+=`
bIndices[${v}] = ${w>1?`batchIndices[${E}]`:"batchIndices"};`;return s.forEach(v=>{x+=`
bIndices[${v}] = 0;`}),x+=`
bIndices[${y-2}] = u32(row);
                   bIndices[${y-1}] = u32(colIn);`,x};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${p.type.indices}) -> ${nt(n,m)} {
      var value = ${nt(n,m)}(0.0);
      let col = colIn * ${n};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${g()}
        value = ${d.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${p.type.indices}) -> ${nt(n,m)} {
      var value = ${nt(n,m)}(0.0);
      let col = colIn * ${n};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${b()}
        value = ${r.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${nt(n,m)}) {
      let col = colIn * ${n};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${c?"bias[colIn]":`${nt(n,m)}(bias[row])`};`:""}
        ${i}
        ${t.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},ii=(n,e,i,o,l=!1)=>{let c=n[0].dims,a=n[1].dims,h=c.slice(0,-2),f=a.slice(0,-2),p=o?o.slice(0,-2):i.slice(0,-2),d=M.size(p),r=c[c.length-2],t=c[c.length-1],u=a[a.length-1],s=t%4===0&&u%4===0,m=r<=8?[4,1,1]:[4,4,1],g=[8,8,1],b=[Math.ceil(u/g[0]/m[0]),Math.ceil(r/g[1]/m[1]),Math.ceil(d/g[2]/m[2])],y=s?4:1,w=[...h,r,t/y],x=w.length,v=[...f,t,u/y],E=v.length,O=[d,r,u/y],C=[{type:6,data:r},{type:6,data:u},{type:6,data:t}];kt(e,C),C.push(...X(p,w,v));let S=["rank","rank"],N=n.length>2;N&&(C.push(...X(n[2].dims)),S.push("rank")),C.push(...X(O));let Q=te=>{let Z=p.length,Y=qn("batchDims",n[0].dataType,Z,1),G=Be(n[0].dataType),R=U("a",n[0].dataType,x,y),V=U("b",n[1].dataType,E,y),ce=K("result",n[0].dataType,O.length,y),se=[R,V];if(N){let Ge=l?y:1;se.push(U("bias",n[2].dataType,n[2].dims.length,Ge))}let be=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ot(e,be);let ee=Be(ce.type.tensor),ve=Et(e,ce.type.value,ee),Ce=_p(y,N,ve,[Y,R,V,ce],[h,f,p],l);return`
  ${te.registerUniforms(be).registerInternalVariables(Y).declareVariables(...se,ce)}
  ${Ce}
  ${s?rn(m,g,G,Y):nn(m,g,G,Y)}
                   `};return{name:"MatMul",shaderCache:{hint:`${m};${e.activation};${s};${l}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:i,dataType:n[0].dataType}],dispatchGroup:{x:b[0],y:b[1],z:b[2]},programUniforms:C}),getShaderSource:Q}}}),xp,Uu,Wu=j(()=>{ye(),Yt(),_e(),Zt(),ri(),ua(),an(),xp=(n,e,i,o,l=!1,c,a=4,h=4,f=4,p="f32")=>{let d=S=>{switch(S){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${p}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${S} is not supported.`)}},r=S=>{switch(S){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${S} is not supported.`)}},t=n?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,u=n?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,s=n?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",m=n?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",g=n?"row":"col",b=n?"col":"row",y=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${n?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${g} / outWidth;
    let outCol = ${g} % outWidth;

    let WRow = ${b} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${b} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${b} % inChannels;
    var resData = ${nt(a,p)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${s} && xCol >= 0 && xCol < ${m}) {
      ${t}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${d(a)}
    }
    return resData;`,w=n?e&&o?`
    let col = colIn * ${a};
    ${y}`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${y}
    }
    return ${nt(a,p)}(0.0);`:o&&i?`
    let col = colIn * ${a};
    ${y}`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${y}
    }
    return ${nt(a,p)}(0.0);`,x=`${r(h)}`,v=nt(f,p),E=nt(n?a:h,p),O=nt(n?h:a,p),C=Et(c,v,p);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${E} {
      ${n?w:x}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${O} {
      ${n?x:w}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${v}) {
      let col = colIn * ${f};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${n?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${u}
      ${ti(l)}
      ${C}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Uu=(n,e,i,o,l,c,a,h)=>{let f=e.format==="NHWC",p=f?n[0].dims[3]:n[0].dims[1],d=i[0],r=f?i[2]:i[3],t=f?i[1]:i[2],u=f?i[3]:i[1],s=f&&(p%4===0||p%3===0)&&u%4===0,m=f?u:r*t,g=f?r*t:u,b=[8,8,1],y=o<=8?[4,1,1]:[4,4,1],w=[Math.ceil(m/b[0]/y[0]),Math.ceil(g/b[1]/y[1]),Math.ceil(d/b[2]/y[2])];Ne("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${w}`);let x=s?f&&p%4!==0?3:4:1,v=b[1]*y[1],E=b[0]*y[0],O=Math.max(b[0]*x,b[1]),C=o%v===0,S=l%E===0,N=c%O===0,Q=s?[x,4,4]:[1,1,1],te=[{type:6,data:o},{type:6,data:l},{type:6,data:c},{type:6,data:[e.pads[0],e.pads[1]]},{type:6,data:e.strides},{type:6,data:e.dilations}];kt(e,te),te.push(...X(n[0].dims,n[1].dims));let Z=["rank","rank"];a&&(te.push(...X(n[2].dims)),Z.push("rank")),te.push(...X(i));let Y=G=>{let R=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ot(e,R);let V=s?4:1,ce=Be(n[0].dataType),se=`
      fn setOutputAtIndex(flatIndex : i32, value : ${s?`vec4<${ce}>`:ce}) {
        result[flatIndex] = ${s?`vec4<${ce}>`:ce}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${s?`vec4<${ce}>`:ce}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${s?"/ 4":""}, value);
      }`,be=U("x",n[0].dataType,n[0].dims.length,x===3?1:x),ee=U("w",n[1].dataType,n[1].dims.length,V),ve=[be,ee],Ce=K("result",n[0].dataType,i.length,V);if(a){let Ge=U("bias",n[2].dataType,n[2].dims.length,V);ve.push(Ge),se+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${s?`vec4<${ce}>`:ce} {
          return bias[coords.${f?"w":"y"}${s?"/ 4":""}];
        }`}return`
        ${ni("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${G.registerUniforms(R).declareVariables(...ve,Ce)}
        ${se}
        ${xp(f,C,S,N,a,e,Q[0],Q[1],Q[2],ce)}
        ${s?rn(y,b,ce,void 0,!f,O):nn(y,b,ce,void 0,!f,O,!1,void 0,h)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${e.cacheKey};${x};${s};${C};${S};${N};${v};${E};${O}`,inputDependencies:Z},getRunData:()=>({outputs:[{dims:i,dataType:n[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:te}),getShaderSource:Y}}}),la,Nu,Vu=j(()=>{ye(),xe(),_e(),da(),Zt(),la=(n,e,i)=>{let o=n.length>2,l=o?"value += b[output_channel];":"",c=n[0].dims,a=n[1].dims,h=a[0]/e.group,f=e.format==="NHWC",p=ai(c,a,e.dilations,e.pads,e.strides,f),d=M.size(p),r=[{type:12,data:d},{type:12,data:e.dilations},{type:12,data:[e.strides[0],e.strides[1]]},{type:12,data:[e.pads[0],e.pads[1]]},{type:12,data:h}];kt(e,r),r.push(...X(c,a));let t=["rank","rank"];o&&(r.push(...X(n[2].dims)),t.push("rank")),r.push(...X(p));let u=s=>{let m=K("output",n[0].dataType,p.length),g=Be(m.type.tensor),b=Et(e,m.type.value,g),y=U("x",n[0].dataType,c.length),w=U("w",n[1].dataType,a.length),x=[y,w];o&&x.push(U("b",n[2].dataType,n[2].dims.length));let v=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:e.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Ot(e,v),`
  ${s.registerUniforms(v).declareVariables(...x,m)}

  ${s.mainStart()}
    ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${m.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${f?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${f?1:2}], outputIndices[${f?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${m.type.value} = ${m.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${f?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${f?2:3}]) {
            continue;
          }

          let xVal = ${f?y.get("batch","xHeight","xWidth","input_channel"):y.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${w.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${l}
    ${b}
    ${m.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:e.cacheKey,inputDependencies:t},getRunData:()=>({outputs:[{dims:i?i(p):p,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:r}),getShaderSource:u}},Nu=(n,e,i)=>{let o=n.length>2,l=Ue(i[3]),c=Ue(i[2]),a=M.size(i)/l/c,h=[n[0].dims[0],n[0].dims[1],n[0].dims[2],n[0].dims[3]/l],f=[n[1].dims[0],n[1].dims[1],n[1].dims[2],n[1].dims[3]/l],p=[i[0],i[1],i[2],i[3]/l],d=[{type:12,data:a},{type:6,data:[e.strides[0],e.strides[1]]},{type:6,data:[e.pads[0],e.pads[1]]}];kt(e,d),d.push(...X(h,f,p));let r=(c-1)*e.strides[1]+f[1],t=u=>{let s=K("output",n[0].dataType,p.length,l),m=Be(s.type.tensor),g=Et(e,s.type.value,m),b=U("x",n[0].dataType,h.length,l),y=U("w",n[1].dataType,f.length,l),w=[b,y];o&&w.push(U("b",n[2].dataType,n[2].dims,l));let x=o?"value += b[output_channel];":"",v=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Ot(e,v),`
  ${u.registerUniforms(v).declareVariables(...w,s)}
  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${c}u;
    let col = (index1 % width1) * ${c}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${b.type.value}, ${r}>;
    var values: array<${s.type.value}, ${c}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${f[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${r}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${b.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${b.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${f[1]}; w_width++) {
          let w_val = ${y.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${c}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${c}u; i++) {
      var value = values[i];
      ${x}
      ${g}
      ${s.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${e.cacheKey};${l};${c};${r};${f[0]};${f[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:t}}}),ca,Sp,Hu,pa=j(()=>{ye(),xe(),an(),_e(),Zt(),ca=(n,e,i,o,l=!1)=>{let c=n[0].dims,a=n[1].dims,h=c[c.length-2],f=a[a.length-1],p=c[c.length-1],d=Ue(f),r=Ue(p),t=Ue(h),u=M.size(i)/d/t,s=n.length>2,m=o?o.slice(0,-2):i.slice(0,-2),g=[M.size(m),h,f],b=[{type:12,data:u},{type:12,data:h},{type:12,data:f},{type:12,data:p}];kt(e,b),b.push(...X(m,c,a)),s&&b.push(...X(n[2].dims)),b.push(...X(g));let y=w=>{let x=qn("batch_dims",n[0].dataType,m.length),v=U("a",n[0].dataType,c.length,r),E=U("b",n[1].dataType,a.length,d),O=K("output",n[0].dataType,g.length,d),C=Be(O.type.tensor),S=Et(e,O.type.value,C),N=[v,E],Q="";if(s){let se=l?d:1;N.push(U("bias",n[2].dataType,n[2].dims.length,se)),Q=`${l?`value += bias[col / ${se}];`:`value += ${O.type.value}(bias[row + i]);`}`}let te=c.slice(0,-2),Z=a.slice(0,-2),Y=Pr(te,m),G=Pr(Z,m),R=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ot(e,R);let V=(se,be)=>{let ee=se.rank,ve=se.name;if(ee===2)return`var ${ve}_indices = ${se.type.indices}(0u, 0u);`;let Ce=x.rank,Ge=`var ${ve}_indices: ${se.type.indices};`;for(let De=ee-2-1,ct=Ce-1;De>=0;De--,ct--)Ge+=`
${ve}_indices[${De}] = ${Ce>1?`batch_indices[${ct}]`:"batch_indices"};`;return be.forEach(De=>{Ge+=`
${ve}_indices[${De}] = 0;`}),Ge+=`${ve}_indices[${ee-2}] = 0u;
                     ${ve}_indices[${ee-1}] = 0u;`,Ge},ce=()=>{let se=`var a_data: ${v.type.value};`;for(let be=0;be<r;be++)se+=`
              let b_data${be} = b[(b_offset + (k + ${be}) * uniforms.N + col) / ${d}];`;for(let be=0;be<t;be++){se+=`a_data = a[(a_offset + (row + ${be}) * uniforms.K + k) / ${r}];`;for(let ee=0;ee<r;ee++)se+=`
            values[${be}] = fma(${E.type.value}(a_data${r===1?"":`[${ee}]`}), b_data${ee}, values[${be}]);
`}return se};return`
  ${w.registerUniforms(R).registerInternalVariables(x).declareVariables(...N,O)}
  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${t};
    let row = (index1 % stride1) * ${t};
    let batch = index1 / stride1;

    ${i.length===2?"":`let batch_indices = ${x.offsetToIndices("batch")};`}
    ${V(v,Y)}
    let a_offset = ${v.indicesToOffset("a_indices")};
    ${V(E,G)}
    let b_offset = ${E.indicesToOffset("b_indices")};
    var values: array<${O.type.value}, ${t}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${r}) {
      ${ce()}
    }
    for (var i = 0u; i < ${t}u; i++) {
      var value = values[i];
      ${Q}
      ${S}
      let cur_indices = ${O.type.indices}(batch, row + i, col);
      let offset = ${O.indicesToOffset("cur_indices")};
      ${O.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${e.activation};${d};${r};${t};${l}`,inputDependencies:s?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:b}),getShaderSource:y}},Sp=n=>{if(!n||n.length!==2)throw new Error("MatMul requires 2 inputs.");if(n[0].dims[n[0].dims.length-1]!==n[1].dims[n[1].dims.length-2])throw new Error("shared dimension does not match.")},Hu=n=>{Sp(n.inputs);let e=Rt.calcShape(n.inputs[0].dims,n.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");let i=e[e.length-1],o=n.inputs[0].dims[n.inputs[0].dims.length-1];i<8&&o<8?n.compute(ca(n.inputs,{activation:""},e)):n.compute(ii(n.inputs,{activation:""},e))}}),ai,ma,Cp,Gu,fa,Ip,Tp,ha,da=j(()=>{xe(),Wu(),an(),Vu(),Zt(),pa(),Rr(),ai=(n,e,i,o,l,c)=>{let a=n[0],h=n.slice(c?1:2,c?3:4),f=h.length,p=e[0],d=e.slice(2).map((t,u)=>t+(t-1)*(i[u]-1)),r=h.map((t,u)=>t+o[u]+o[u+f]).map((t,u)=>Math.floor((t-d[u]+l[u])/l[u]));return r.splice(0,0,a),r.splice(c?3:1,0,p),r},ma=[2,3,1,0],Cp=(n,e)=>{if(!n||n.length!==2&&n.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(n[0].dims.length!==4&&n[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(n[0].dims.length!==n[1].dims.length)throw new Error("filter does not have same dimension as input");let i=n[0].dims[e.format==="NHWC"?n[0].dims.length-1:1],o=n[1].dims[1]*e.group;if(i!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(n.length===3&&(n[2].dims.length!==1||n[1].dims[0]!==n[2].dims[0]))throw new Error("invalid bias");let l=n[0].dims.length-2;if(e.dilations.length!==l)throw new Error(`dilations should be ${l}D`);if(e.strides.length!==l)throw new Error(`strides should be ${l}D`);if(e.pads.length!==l*2)throw new Error(`pads should be ${l*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==n[1].dims.length-2)throw new Error("invalid kernel shape")},Gu=(n,e)=>{let i=n.kernelShape.slice();for(let c=2;c<e[1].dims.length;++c)i[c-2]===0&&(i[c-2]=e[1].dims[c]);let o=n.pads.slice();pr.adjustPadsBasedOnAutoPad(e[0].dims,n.strides,n.dilations,i,o,n.format==="NHWC",n.autoPad);let l=Object.assign({},n);return Object.assign(l,{kernelShape:i,pads:o}),l},fa=n=>{let e=ei(n),i=n.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][n.auto_pad],l=n.dilations,c=n.group,a=n.kernel_shape,h=n.pads,f=n.strides,p=n.w_is_const();return{autoPad:o,format:i,dilations:l,group:c,kernelShape:a,pads:h,strides:f,wIsConst:p,...e,cacheKey:`${n.format};${e.activation};`}},Ip=(n,e,i)=>{let o=Gu(i,e),l=i.format==="NHWC";if(i.group!==1){if(!n.adapterInfo.isArchitecture("ampere")&&l&&e[1].dims[0]===i.group&&e[1].dims[1]===1&&i.dilations[0]===1&&i.dilations[1]===1){let E=ai(e[0].dims,e[1].dims,i.dilations,o.pads,i.strides,l),O=n.kernelCustomData.wT??n.compute(xt(e[1],ma),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!n.kernelCustomData.wT&&(n.kernelCustomData.wT=O);let C=[e[0],O];e.length===3&&C.push(e[2]),n.compute(Nu(C,o,E),{inputs:C})}else n.compute(la(e,o));return}let c=e.length===3,a=e[0].dims[l?1:2],h=e[0].dims[l?2:3],f=e[0].dims[l?3:1],p=e[1].dims[2],d=e[1].dims[3],r=ai(e[0].dims,e[1].dims,i.dilations,o.pads,i.strides,l),t=r[l?1:2],u=r[l?2:3],s=r[l?3:1],m=l&&p===a&&d===h&&i.pads[0]===0&&i.pads[1]===0;if(m||p===1&&d===1&&i.dilations[0]===1&&i.dilations[1]===1&&i.strides[0]===1&&i.strides[1]===1&&i.pads[0]===0&&i.pads[1]===0){let E=r[0],O,C,S,N=[];if(l){let Z=n.kernelCustomData.wT??n.compute(xt(e[1],ma),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];if(i.wIsConst&&!n.kernelCustomData.wT&&(n.kernelCustomData.wT=Z),m){let Y=a*h*f;O=e[0].reshape([1,E,Y]),C=Z.reshape([1,Y,s]),S=[1,E,s]}else O=e[0].reshape([E,a*h,f]),C=Z.reshape([1,f,s]),S=[E,t*u,s];N.push(O),N.push(C)}else O=e[0].reshape([E,f,a*h]),C=e[1].reshape([1,s,f]),S=[E,s,t*u],N.push(C),N.push(O);c&&N.push(e[2]);let Q=S[2],te=N[0].dims[N[0].dims.length-1];Q<8&&te<8?n.compute(ca(N,o,r,S,l),{inputs:N}):n.compute(ii(N,o,r,S,l),{inputs:N});return}let g=!0,b=n.kernelCustomData.wT??n.compute(xt(e[1],ma),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!n.kernelCustomData.wT&&(n.kernelCustomData.wT=b);let y=[e[0],b];c&&y.push(e[2]);let w=l?t*u:s,x=l?s:t*u,v=p*d*f;n.compute(Uu(y,o,r,w,x,v,c,g),{inputs:y})},Tp=(n,e)=>{let i=e.format==="NHWC",o=[n.inputs[0].reshape(i?[n.inputs[0].dims[0],1,n.inputs[0].dims[1],n.inputs[0].dims[2]]:[n.inputs[0].dims[0],n.inputs[0].dims[1],1,n.inputs[0].dims[2]]),n.inputs[1].reshape([n.inputs[1].dims[0],n.inputs[1].dims[1],1,n.inputs[1].dims[2]])];n.inputs.length===3&&o.push(n.inputs[2]);let l=[0,e.pads[0],0,e.pads[1]],c=[1].concat(e.strides),a=[1].concat(e.dilations),h=[1].concat(e.kernelShape),f=Gu({...e,pads:l,strides:c,dilations:a,kernelShape:h},o);n.compute(la(o,f,p=>i?[p[0],p[2],p[3]]:[]))},ha=(n,e)=>{Cp(n.inputs,e),n.inputs[0].dims.length===3?Tp(n,e):Ip(n,n.inputs,e)}}),Ap,Lu,Fu=j(()=>{ye(),Yt(),_e(),Zt(),ri(),ua(),an(),Ap=(n,e=!1,i,o,l=4)=>{let c=g=>{switch(g){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${o}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${g} is not supported.`)}},a=n?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,h=n?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,f=n?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",p=n?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=n?"row":"col",r=n?"col":"row",t=`
      let inChannels = ${n?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${n?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${d} / outWidth;
      let outCol = ${d} % outWidth;

      let WRow = ${r} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${r} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${f}) || fract(xR) > 0.0) {
        return ${o}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${p}) || fract(xC) > 0.0) {
        return ${o}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${r} % inChannels;
      ${a}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${l}];`,u=n?`
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${t}
      }
      return ${o}(0.0);`:`
      let col = colIn * ${l};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${t}
      }
      return ${o}(0.0);`,s=`
      let col = colIn * ${l};
      let inChannels = ${n?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${n?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${c(l)}
      }
      return ${o}(0.0);
      `,m=Et(i,o);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${n?u:s}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${n?s:u}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {
    let col = colIn * ${l};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${n?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${h}
      ${ti(e)}
      ${m}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${l}] = value;
    }
  }`},Lu=(n,e,i,o,l,c,a,h)=>{let f=e.format==="NHWC",p=f?n[0].dims[3]:n[0].dims[1],d=i[0],r=f?i[2]:i[3],t=f?i[1]:i[2],u=f?i[3]:i[1],s=f&&p%4===0&&p%3&&u%4===0,m=f?u:r*t,g=f?r*t:u,b=[8,8,1],y=o<=8?[4,1,1]:[4,4,1],w=[Math.ceil(m/b[0]/y[0]),Math.ceil(g/b[1]/y[1]),Math.ceil(d/b[2]/y[2])];Ne("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${w}`);let x=s?4:1,v=Math.max(b[0]*x,b[1]),E=s?4:1,O=[e.kernelShape[f?1:2],e.kernelShape[f?2:3]],C=[O[0]+(e.dilations[0]<=1?0:(O[0]-1)*(e.dilations[0]-1)),O[1]+(e.dilations[1]<=1?0:(O[1]-1)*(e.dilations[1]-1))],S=[C[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),C[1]-1-Math.floor((e.pads[1]+e.pads[3])/2)],N=[{type:6,data:o},{type:6,data:l},{type:6,data:c},{type:6,data:e.strides},{type:6,data:e.dilations},{type:6,data:O},{type:6,data:S}];kt(e,N),N.push(...X(n[0].dims,n[1].dims));let Q=["rank","rank"];a&&(N.push(...X(n[2].dims)),Q.push("rank")),N.push(...X(i));let te=Z=>{let Y=U("x",n[0].dataType,n[0].dims.length,E),G=U("w",n[1].dataType,n[1].dims.length,1),R=K("result",n[0].dataType,i.length,E),V=[Y,G],ce="";if(a){let ee=U("bias",n[2].dataType,n[2].dims.length,E);V.push(ee),ce+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${ee.type.value} {
            return bias[coords.${f?"w":"y"}${s?"/ 4":""}];
          }`}let se=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:O.length},{name:"pads",type:"i32",length:S.length}];Ot(e,se);let be=Be(n[0].dataType,1);if(be!=="f16"&&be!=="f32")throw new Error(`elemType ${be} is not supported.`);return`
        ${ni("uniforms.result_strides")}
        ${Z.registerUniforms(se).declareVariables(...V,R)};
        ${ce}
        ${Ap(f,a,e,Y.type.value,x)}
        ${s?rn(y,b,be,void 0,!f,v):nn(y,b,be,void 0,!f,v,!1,void 0,h)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${e.cacheKey};${y};${b};${s}`,inputDependencies:Q},getRunData:()=>({outputs:[{dims:i,dataType:n[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:N}),getShaderSource:te}}}),Ep,ga,qu=j(()=>{ye(),Yt(),xe(),_e(),Ep=(n,e,i,o,l,c=!1,a,h,f=!1)=>{let p=f?1:2,d=f?2:3,r=f?3:1,t=c?2:1,u=`
  fn setOutputAtIndex(flatIndex : u32, value : ${c?`vec4<${a}>`:a}) {
    result[flatIndex] = ${c?`vec4<${a}>`:a}(value);
  }`;o&&(u+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${c?`vec4<${a}>`:a} {
      return bias[coords.${f?"w":"y"}${c?"/ 4":""}];
    }`);let s=c?4:1,m=U("W",e[1].dataType,e[1].dims.length,s),g=U("Dy",e[0].dataType,e[0].dims.length,s),b=[g,m];o&&b.push(U("bias",e[2].dataType,[i[r]].length,s));let y=K("result",e[0].dataType,i.length,s),w=`{
        let batch: u32 = ${l?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${l?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${l?"global_id.y":"workgroup_id.y"} * ${t};
        let d1: u32 = ${l?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${a}>, ${t}>;
        for (var i = 0; i < ${t}; i++) {
          dotProd[i] = vec4<${a}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(uniforms.strides.y);
            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${a}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${g.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${g.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${r}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${g.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${g.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${t}; i = i + 1) {
          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};
          ${y.set("batch","r","c + i","d1","value")};
        }
      }`,x=`
          let outputIndices = ${y.offsetToIndices("global_idx")};
          let batch = ${y.indicesGet("outputIndices",0)};
          let d1 = ${y.indicesGet("outputIndices",r)};
          let r = ${y.indicesGet("outputIndices",p)};
          let c = ${y.indicesGet("outputIndices",d)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${a}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${p}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${d}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${f?g.get("batch","idyR","idyC","inputChannel"):g.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${m.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};
          ${y.setByOffset("global_idx","value")};
        `;return`
  ${n.registerUniforms(h).declareVariables(...b,y)}
  ${u}

    ${n.mainStart()}
    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${c?w:x}}`},ga=(n,e,i)=>{let o=n.length>2,l=e.outputShape,c=M.size(l),a=[Math.ceil(c/64),1,1];Ne("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${a}`);let h=e.format==="NHWC",f=["rank","rank"],p=[e.strides[0],e.strides[1]],d=[e.kernelShape[h?1:2],e.kernelShape[h?2:3]],r=[e.dilations[0],e.dilations[1]],t=[d[0]+(e.dilations[0]<=1?0:(e.kernelShape[h?1:2]-1)*(e.dilations[0]-1)),d[1]+(e.dilations[1]<=1?0:(e.kernelShape[h?2:3]-1)*(e.dilations[1]-1))],u=[t[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),t[1]-1-Math.floor(e.pads[1]+e.pads[3])/2],s=!1,m=e.group,g=n[1].dims,b=g[0]/m,y=g[1],w=[{type:12,data:c},{type:12,data:p},{type:12,data:d},{type:12,data:r},{type:12,data:t},{type:6,data:u},{type:12,data:b},{type:12,data:y},...X(n[0].dims,n[1].dims)];o&&(w.push(...X(n[2].dims)),f.push("rank")),w.push(...X(l));let x=a[1]===1&&a[2]===1,v=E=>{let O=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:p.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:t.length},{name:"pads",type:"i32",length:u.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],C=Be(n[0].dataType);return`${Ep(E,n,l,o,x,s,C,O,h)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${e.cacheKey};`,inputDependencies:f},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:i?i(l):l,dataType:n[0].dataType}],programUniforms:w}),getShaderSource:v}}}),kp,Op,Pp,ju,Ku,Rp,zp,Bp,Dp,Yu,Xu=j(()=>{Fu(),qu(),Zt(),Rr(),kp=(n,e,i,o,l,c)=>(n-1)*e+i+(o-1)*l+1-c,Op=(n,e,i,o,l)=>{let c=Math.floor(n/2);e==="SAME_UPPER"?(i[o]=c,i[l]=n-c):e==="SAME_LOWER"&&(i[o]=n-c,i[l]=c)},Pp=(n,e,i,o,l,c,a,h,f,p)=>{let d=n.length-2,r=p.length===0;if(f.length===0)for(let s=0;s<d;++s)f.push(0);let t=n[0],u=e[h?3:1]*l;for(let s=0,m=n.length-d-(h?1:0);s<d;++s,++m){let g=n[m],b=r?g*a[s]:p[s],y=kp(g,a[s],c[s],e[m],i[s],b);Op(y,o,c,s,s+d),r&&p.push(a[s]*(g-1)+f[s]+(e[m]-1)*i[s]+1-c[s]-c[s+d])}p.splice(0,0,t),p.splice(h?3:1,0,u)},ju=(n,e)=>{let i=n.kernelShape.slice();if(n.kernelShape.length===0||n.kernelShape.reduce((r,t)=>r*t,1)===0){i.length=0;for(let r=2;r<e[1].dims.length;++r)i.push(e[1].dims[r])}let o=n.format==="NHWC";i.splice(0,0,e[1].dims[0]),i.splice(o?3:1,0,e[1].dims[1]);let l=n.pads.slice(),c=n.outputShape.slice(),a=n.outputPadding.slice(),h=e[0].dims,f=n.dilations.slice();if(f.reduce((r,t)=>r+t,0)===0){let r=e[0].dims.length-2;f=new Array(r).fill(1)}let p=n.strides.slice();if(p.reduce((r,t)=>r+t,0)===0){let r=e[0].dims.length-2;p=new Array(r).fill(1)}Pp(h,i,f,n.autoPad,n.group,l,p,o,a,c);let d=Object.assign({},n);return Object.assign(d,{kernelShape:i,pads:l,outputPadding:a,outputShape:c,dilations:f,strides:p}),d},Ku=n=>{let e=ei(n),i=n.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof n.autoPad>"u"?0:n.autoPad],l=n.dilations,c=n.group,a=n.kernelShape,h=n.pads,f=n.strides,p=n.wIsConst(),d=n.outputPadding,r=n.outputShape;return{autoPad:o,format:i,dilations:l,group:c,kernelShape:a,outputPadding:d,outputShape:r,pads:h,strides:f,wIsConst:p,...e,cacheKey:`${n.format};${e.activation};`}},Rp=(n,e)=>{if(!n||n.length!==2&&n.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(n[0].dims.length!==4&&n[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(n[0].dims.length!==n[1].dims.length)throw new Error("filter does not have same dimension as input");let i=n[0].dims[e.format==="NHWC"?n[0].dims.length-1:1],o=n[1].dims[0];if(i!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let l=n[1].dims[1]*e.group;if(n.length===3&&(n[2].dims.length!==1||n[2].dims[0]!==l))throw new Error("invalid bias");let c=n[0].dims.length-2;if(e.dilations.reduce((a,h)=>a+h,0)>0&&e.dilations.length!==c)throw new Error(`dilations should be ${c}D`);if(e.strides.reduce((a,h)=>a+h,0)>0&&e.strides.length!==c)throw new Error(`strides should be ${c}D`);if(e.pads.reduce((a,h)=>a+h,0)>0&&e.pads.length!==c*2)throw new Error(`pads should be ${c*2}D`);if(e.outputPadding.length!==c&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${c}D`);if(e.kernelShape.reduce((a,h)=>a+h,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==n[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==n[0].dims.length-2)throw new Error("invalid output shape")},zp=[2,3,1,0],Bp=(n,e,i)=>{let o=ju(i,e),l=i.format==="NHWC",c=o.outputShape,a=c[l?3:1],h=e[0].dims[l?3:1];if(o.group!==1||a===1&&h===1){n.compute(ga(e,o));return}let f=c[l?1:2],p=c[l?2:3],d=e[1].dims[2],r=e[1].dims[3],t=l?f*p:a,u=l?a:f*p,s=d*r*h,m=!0,g=n.kernelCustomData.wT??n.compute(xt(e[1],zp),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!n.kernelCustomData.wT&&(n.kernelCustomData.wT=g);let b=[e[0],g],y=e.length===3;y&&(!l&&e[2].dims.length===1?b.push(e[2].reshape([e[2].dims[0],1,1])):b.push(e[2])),n.compute(Lu(b,o,c,t,u,s,y,m),{inputs:b})},Dp=(n,e)=>{let i=e.format==="NHWC",o=[n.inputs[0].reshape(i?[n.inputs[0].dims[0],1,n.inputs[0].dims[1],n.inputs[0].dims[2]]:[n.inputs[0].dims[0],n.inputs[0].dims[1],1,n.inputs[0].dims[2]]),n.inputs[1].reshape([n.inputs[1].dims[0],n.inputs[1].dims[1],1,n.inputs[1].dims[2]])];n.inputs.length===3&&o.push(n.inputs[2]);let l=e.kernelShape;(l.length===0||l[0]===0)&&(l=[n.inputs[1].dims[2]]);let c=e.dilations;(c.length===0||c[0]===0)&&(c=[1]);let a=e.strides;(a.length===0||a[0]===0)&&(a=[1]);let h=e.pads;h.length===0&&(h=[0,0]),h=[0,h[0],0,h[1]],a=[1].concat(a),c=[1].concat(c),l=[1].concat(l);let f=ju({...e,pads:h,strides:a,dilations:c,kernelShape:l},o);n.compute(ga(o,f,p=>i?[p[0],p[2],p[3]]:[p[0],p[1],p[3]]))},Yu=(n,e)=>{Rp(n.inputs,e),n.inputs[0].dims.length===3?Dp(n,e):Bp(n,n.inputs,e)}}),Mp,Zu,Qu,Ju=j(()=>{ye(),xe(),Ze(),_e(),Mp=(n,e,i,o)=>{let l=M.size(e),c=e.length,a=U("input",n,c),h=K("output",n,c),f=i.dataType===6?i.getInt32Array()[0]:Number(i.getBigInt64Array()[0]),p=M.normalizeAxis(f,c),d=r=>{let t=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,u=fe("uniforms.input_shape","uniforms.axis",c),s=o.reverse?t+(o.exclusive?" + 1":""):"0",m=o.reverse?u:t+(o.exclusive?"":" + 1");return`
                ${r.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,h)}
                ${r.mainStart()}
                  ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${h.offsetToIndices("global_idx")};
                  var sum = ${h.type.value}(0);
                  let first : i32 = ${s};
                  let last : i32 = ${m};
                  for (var i : i32 = first; i < last; i++) {
                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${a.getByIndices("inputIndices")};
                  }
                  ${h.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:n}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},{type:12,data:p},...X(e,e)]}),getShaderSource:d}},Zu=(n,e)=>{let i=n.inputs[0].dims,o=n.inputs[0].dataType,l=n.inputs[1];n.compute(Mp(o,i,l,e),{inputs:[0]})},Qu=n=>{let e=n.exclusive===1,i=n.reverse===1;return we({exclusive:e,reverse:i})}}),Up,Wp,Np,el,tl,rl=j(()=>{ye(),xe(),Ze(),_e(),Up=n=>{if(!n||n.length!==1)throw new Error("DepthToSpace requires 1 input.");if(n[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Wp=(n,e,i,o)=>{let l=[];l.push(`fn perm(i: ${o.type.indices}) -> ${i.type.indices} {
    var a: ${i.type.indices};`);for(let c=0;c<e;++c)l.push(i.indicesSet("a",n[c],`i[${c}]`));return l.push("return a;}"),l.join(`
`)},Np=(n,e)=>{let i,o,l,c,a,h,f=e.format==="NHWC",p=e.blocksize,d=e.mode==="DCR";f?([i,o,l,c]=n.dims,a=d?[i,o,l,p,p,c/p**2]:[i,o,l,c/p**2,p,p],h=d?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([i,o,l,c]=[n.dims[0],n.dims[2],n.dims[3],n.dims[1]],a=d?[i,p,p,c/p**2,o,l]:[i,c/p**2,p,p,o,l],h=d?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let r=n.reshape(a),t=r.dims.length,u=n.dataType,s=U("a",u,t),m=K("output",u,t),g=b=>`
  ${b.registerUniform("output_size","u32").declareVariables(s,m)}

  ${Wp(h,t,s,m)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${m.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${m.setByOffset("global_idx",s.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${n.dims};${e.blocksize};${e.mode}`,inputDependencies:["rank"]},getRunData:b=>{let y=f?[i,o*p,l*p,c/p**2]:[i,c/p**2,o*p,l*p],w=M.size(y),x=r.dims,v=M.sortBasedOnPerm(x,h);return{outputs:[{dims:y,dataType:b[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:12,data:w},...X(x,v)]}},getShaderSource:g}},el=(n,e)=>{Up(n.inputs),n.compute(Np(n.inputs[0],e))},tl=n=>we({blocksize:n.blocksize,mode:n.mode,format:n.format})}),ya,oi,nl,Vp,Hp,ba,va,il,Gp,al,ol,sl=j(()=>{ye(),xe(),Ze(),_e(),ya="[a-zA-Z]|\\.\\.\\.",oi="("+ya+")+",nl="^"+oi+"$",Vp="("+oi+",)*"+oi,Hp="^"+Vp+"$",ba=class{constructor(n=-1){this.symbolToIndices=new Map,this.inputIndex=n}addSymbol(n,e){let i=this.symbolToIndices.get(n);i===void 0?i=[e]:i.push(e),this.symbolToIndices.set(n,i)}},va=class{constructor(n,e){var l;this.equation=e,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[i,o]=e.includes("->")?e.split("->",2):[e,""];if(!i.match(RegExp(Hp)))throw new Error("Invalid LHS term");if(i.split(",").forEach((c,a)=>{let h=n[a].dims.slice();if(!c.match(RegExp(nl)))throw new Error("Invalid LHS term");let f=this.processTerm(c,!0,h,a);this.lhs.push(f)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([c,a])=>a.count===1||c==="...").map(([c])=>c).join("");else if(!o.match(RegExp(oi)))throw new Error("Invalid RHS");(l=o.match(RegExp(ya,"g")))==null||l.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let a=this.symbolToInfo.get(c);if(a===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(a.dimValue)}}),this.rhs=this.processTerm(o,!1,this.outputDims)}addSymbol(n,e,i){let o=this.symbolToInfo.get(n);if(o!==void 0){if(o.dimValue!==e&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(i)}else o={count:1,dimValue:e,inputIndices:[i]};this.symbolToInfo.set(n,o)}processTerm(n,e,i,o=-1){let l=i.length,c=!1,a=[],h=0;if(!n.match(RegExp(nl))&&!e&&n!=="")throw new Error("Invalid LHS term");let f=n.match(RegExp(ya,"g")),p=new ba(o);return f==null||f.forEach((d,r)=>{if(d==="..."){if(c)throw new Error("Only one ellipsis is allowed per input term");c=!0;let t=l-f.length+1;if(t<0)throw new Error("Ellipsis out of bounds");if(a=i.slice(h,h+t),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(e)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let u=0;u<a.length;u++){let s=String.fromCharCode(48+u);p.addSymbol(s,r+u),this.addSymbol(s,i[h++],o)}}else p.addSymbol(d,r+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(d,i[h++],o)}),p}},il=n=>n+"_max",Gp=(n,e,i,o)=>{let l=n.map(p=>p.length).map((p,d)=>U(`input${d}`,e,p)),c=M.size(o),a=K("output",e,o.length),h=[...i.symbolToInfo.keys()].filter(p=>!i.rhs.symbolToIndices.has(p)),f=p=>{let d=[],r="var prod = 1.0;",t="var sum = 0.0;",u="sum += prod;",s=[],m=[],g=[],b=[],y=i.symbolToInfo.size===i.rhs.symbolToIndices.size;i.symbolToInfo.forEach((x,v)=>{var E;if(i.rhs.symbolToIndices.has(v)){let O=(E=i.rhs.symbolToIndices.get(v))==null?void 0:E[0];O!==void 0&&i.lhs.forEach((C,S)=>{if(x.inputIndices.includes(S)){let N=C.symbolToIndices.get(v);if(N===void 0)throw new Error("Invalid symbol error");N.forEach(Q=>{d.push(`${l[S].indicesSet(`input${S}Indices`,Q,a.indicesGet("outputIndices",O))}`)})}})}else i.lhs.forEach((O,C)=>{if(x.inputIndices.includes(C)){let S=O.symbolToIndices.get(v);if(S===void 0)throw new Error("Invalid symbol error");S.forEach(N=>{s.push(`${l[C].indicesSet(`input${C}Indices`,N,`${v}`)}`)}),b.push(`prod *= ${l[C].getByIndices(`input${C}Indices`)};`)}}),m.push(`for(var ${v}: u32 = 0; ${v} < uniforms.${il(v)}; ${v}++) {`),g.push("}")});let w=y?[...d,`let sum = ${l.map((x,v)=>x.getByIndices(`input${v}Indices`)).join(" * ")};`]:[...d,t,...m,...s,r,...b,u,...g];return`
            ${p.registerUniforms(h.map(x=>({name:`${il(x)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...l,a)}

            ${p.mainStart()}
            ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${a.offsetToIndices("global_idx")};
            ${l.map((x,v)=>`var input${v}Indices: ${l[v].type.indices};`).join(`
`)}
            ${w.join(`
`)};
            ${a.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:i.equation,inputDependencies:n.map(()=>"rank")},getRunData:()=>{let p=h.filter(r=>i.symbolToInfo.has(r)).map(r=>{var t;return{type:12,data:((t=i.symbolToInfo.get(r))==null?void 0:t.dimValue)||0}});p.push({type:12,data:c});let d=n.map((r,t)=>[...X(r)]).reduce((r,t)=>r.concat(t),p);return d.push(...X(o)),{outputs:[{dims:o,dataType:e}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:d}},getShaderSource:f}},al=(n,e)=>{let i=new va(n.inputs,e.equation),o=i.outputDims,l=n.inputs.map((c,a)=>c.dims);n.compute(Gp(l,n.inputs[0].dataType,i,o))},ol=n=>{let e=n.equation.replace(/\s+/g,"");return we({equation:e})}}),Lp,ul,Fp,qp,ll,dl=j(()=>{ye(),xe(),_e(),Lp=n=>{if(!n||n.length!==2)throw new Error("Expand requires 2 input.");let e=n[0].dims,i=Array.from(n[1].getBigInt64Array(),Number),o=i.length<e.length?0:i.length-e.length,l=e.length<i.length?0:e.length-i.length;for(;o<i.length&&l<e.length;++o,++l)if(i[o]!==e[l]&&i[o]!==1&&e[l]!==1)throw new Error("Expand requires shape to be broadcastable to input")},ul=(n,e)=>{let i=n.length-e.length,o=[];for(let l=0;l<i;++l)o.push(n[l]);for(let l=0;l<e.length;++l)o.push(e[l]===1?n[l+i]:e[l]);return o},Fp=(n,e)=>n.length>e.length?ul(n,e):ul(e,n),qp=n=>{let e=n[0].dims,i=Array.from(n[1].getBigInt64Array(),Number),o=Fp(e,i),l=n[0].dataType,c=l===9?4:1,a=Math.ceil(M.size(o)/c),h=p=>{let d=U("input",l,e.length,c),r=K("output",l,o.length,c),t;if(l===9){let u=(s,m,g="")=>`
          let outputIndices${m} = ${r.offsetToIndices(`outputOffset + ${m}u`)};
          let offset${m} = ${d.broadcastedIndicesToOffset(`outputIndices${m}`,r)};
          let index${m} = offset${m} / 4u;
          let component${m} = offset${m} % 4u;
          ${s}[${m}] = ${g}(${d.getByOffset(`index${m}`)}[component${m}]);
        `;t=`
        let outputOffset = global_idx * ${c};
        var data = vec4<u32>(0);
        ${u("data",0,"u32")}
        ${u("data",1,"u32")}
        ${u("data",2,"u32")}
        ${u("data",3,"u32")}
        ${r.setByOffset("global_idx","data")}
      }`}else t=`
        let outputIndices = ${r.offsetToIndices("global_idx")};
        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",r)};
        ${r.setByOffset("global_idx",d.getByOffset("inputOffset"))}
      }`;return`
    ${p.registerUniform("vec_size","u32").declareVariables(d,r)}
    ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${t}`},f=[{type:12,data:a},...X(e,o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:h,getRunData:()=>({outputs:[{dims:o,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:f})}},ll=n=>{Lp(n.inputs),n.compute(qp(n.inputs),{inputs:[0]})}}),jp,cl,pl=j(()=>{ye(),xe(),_e(),Jn(),jp=n=>{let e=n[0].dataType,i=M.size(n[0].dims),o=M.size(n[1].dims),l=o%4===0,c=a=>{let h=U("x",e,[1],4),f=U("bias",e,[1],4),p=K("y",e,[1],4),d=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],r=u=>`
      let bias${u}_offset: u32 = (global_idx * 4 + ${u}) % uniforms.bias_size;
      let bias${u} = ${f.getByOffset(`bias${u}_offset / 4`)}[bias${u}_offset % 4];`,t=l?`
      let bias = ${f.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${r(0)}${r(1)}${r(2)}${r(3)}
      let bias = ${h.type.value}(bias0, bias1, bias2, bias3);`;return`${a.registerUniforms(d).declareVariables(h,f,p)}

    ${oa(rt(e))}

    ${a.mainStart(mr)}
      ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${h.getByOffset("global_idx")};
      ${t}
      let x_in = x + bias;
      ${p.setByOffset("global_idx",sa("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getShaderSource:c,getRunData:a=>({outputs:[{dims:a[0].dims,dataType:a[0].dataType}],programUniforms:[{type:12,data:Math.ceil(i/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(i/mr/4)}})}},cl=n=>{n.inputs.length<2||M.size(n.inputs[1].dims)===0?wu(n):n.compute(jp(n.inputs))}}),Kp,Yp,ml,fl,hl=j(()=>{ye(),xe(),Ze(),_e(),Kp=n=>{if(!n||n.length!==2)throw new Error("Gather requires 2 inputs.")},Yp=(n,e)=>{let i=n[0].dims,o=n[1].dims,l=i.length,c=M.normalizeAxis(e.axis,l),a=i.slice(0);a.splice(c,1,...o);let h=i[c],f=n[0].dataType===9?4:1,p=Math.ceil(M.size(a)/f),d=[{type:12,data:p},{type:6,data:h},{type:12,data:c},...X(n[0].dims,n[1].dims,a)],r=t=>{let u=U("data",n[0].dataType,n[0].dims.length,f),s=U("inputIndices",n[1].dataType,n[1].dims.length),m=K("output",n[0].dataType,a.length,f),g=y=>{let w=o.length,x=`var indicesIndices${y}  = ${s.type.indices}(0);`;for(let v=0;v<w;v++)x+=`${w>1?`indicesIndices${y}[${v}]`:`indicesIndices${y}`} = ${a.length>1?`outputIndices${y}[uniforms.axis + ${v}]`:`outputIndices${y}`};`;x+=`
          var idx${y} = ${s.getByIndices(`indicesIndices${y}`)};
          if (idx${y} < 0) {
            idx${y} = idx${y} + uniforms.axisDimLimit;
          }
          var dataIndices${y} : ${u.type.indices};
        `;for(let v=0,E=0;v<l;v++)v===c?(x+=`${l>1?`dataIndices${y}[${v}]`:`dataIndices${y}`} = u32(idx${y});`,E+=w):(x+=`${l>1?`dataIndices${y}[${v}]`:`dataIndices${y}`} = ${a.length>1?`outputIndices${y}[${E}]`:`outputIndices${y}`};`,E++);return x},b;if(n[0].dataType===9){let y=(w,x,v="")=>`
          let outputIndices${x} = ${m.offsetToIndices(`outputOffset + ${x}u`)};
          ${g(x)};
          let offset${x} = ${u.indicesToOffset(`dataIndices${x}`)};
          let index${x} = offset${x} / 4u;
          let component${x} = offset${x} % 4u;
          ${w}[${x}] = ${v}(${u.getByOffset(`index${x}`)}[component${x}]);
        `;b=`
        let outputOffset = global_idx * ${f};
        var value = vec4<u32>(0);
        ${y("value",0,"u32")}
        ${y("value",1,"u32")}
        ${y("value",2,"u32")}
        ${y("value",3,"u32")}
        ${m.setByOffset("global_idx","value")}
      `}else b=`
      let outputIndices = ${m.offsetToIndices("global_idx")};
      ${g("")};
      let value = ${u.getByIndices("dataIndices")};
      ${m.setByOffset("global_idx","value")};
      `;return`
      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(u,s,m)}
      ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${b}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:d}),getShaderSource:r}},ml=n=>we({axis:n.axis}),fl=(n,e)=>{let i=n.inputs;Kp(i),n.compute(Yp(n.inputs,e))}}),Xp,Zp,gl,yl,bl=j(()=>{ye(),xe(),Ze(),_e(),Xp=n=>{if(!n||n.length!==2)throw new Error("GatherElements requires 2 inputs.");if(n[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(n[0].dims.length!==n[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Zp=(n,e)=>{let i=n[0].dims,o=n[0].dataType,l=i.length,c=n[1].dims,a=n[1].dataType,h=M.normalizeAxis(e.axis,l),f=i[h],p=c.slice(0),d=M.size(p),r=U("input",o,l),t=U("indicesInput",a,c.length),u=K("output",o,p.length),s=[{type:12,data:d},{type:6,data:f},{type:12,data:h}];return s.push(...X(i,c,p)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:p,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:s}),getShaderSource:m=>`
      ${m.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(r,t,u)}
      ${m.mainStart()}
      ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${u.offsetToIndices("global_idx")};

      var idx = ${t.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${r.type.indices}(outputIndices);
      ${r.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${r.getByIndices("inputIndices")};

      ${u.setByOffset("global_idx","value")};
  }`}},gl=n=>we({axis:n.axis}),yl=(n,e)=>{let i=n.inputs;Xp(i),n.compute(Zp(n.inputs,e))}}),Qp,Jp,vl,wl,$l=j(()=>{ye(),xe(),_e(),Qp=n=>{if(!n)throw new Error("Input is missing");if(n.length<2||n.length>3)throw new Error("Invaid input number.");if(n.length===3&&n[2].dims.length>2)throw new Error("Invalid input shape of C");if(n[0].dataType!==n[1].dataType||n.length===3&&n[0].dataType!==n[2].dataType)throw new Error("Input types are mismatched")},Jp=(n,e)=>{let i=n[0].dims.slice(),o=n[1].dims.slice(),[l,c,a]=Gn.getShapeOfGemmResult(i,e.transA,o,e.transB,n.length===3?n[2].dims:void 0),h=[l,c];if(!h)throw new Error("Can't use gemm on the given tensors");let f=M.size(h),p=[{type:12,data:f},{type:12,data:l},{type:12,data:c},{type:12,data:a},{type:1,data:e.alpha},{type:1,data:e.beta}],d=["type","type"];n.length===3&&(p.push(...X(n[2].dims)),d.push("rank")),p.push(...X(h));let r=t=>{let u="";e.transA&&e.transB?u="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":e.transA&&!e.transB?u="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!e.transA&&e.transB?u="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!e.transA&&!e.transB&&(u="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let s=e.alpha===1?"":"value *= uniforms.alpha;",m=U("a",n[0].dataType,n[0].dims),g=U("b",n[1].dataType,n[1].dims),b=m.type.value,y=null,w=[m,g];n.length===3&&(y=U("c",n[2].dataType,n[2].dims.length),w.push(y));let x=K("output",n[0].dataType,h.length);w.push(x);let v=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${t.registerUniforms(v).declareVariables(...w)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${b}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${u}
    }

    ${s}
    ${y!=null?`let cOffset = ${y.broadcastedIndicesToOffset("vec2(m, n)",x)}; value += ${b}(uniforms.beta) * ${y.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:h,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:p}),getShaderSource:r}},vl=n=>{let e=n.transA,i=n.transB,o=n.alpha,l=n.beta;return{transA:e,transB:i,alpha:o,beta:l,cacheKey:`${n.transA};${n.transB};${n.alpha===1}`}},wl=(n,e)=>{Qp(n.inputs),n.compute(Jp(n.inputs,e))}}),em,tm,rm,_l,xl=j(()=>{ye(),xe(),_e(),em=(n,e)=>{let i=n[0].dims,o=i,l=2,c=M.sizeToDimension(i,l),a=M.sizeFromDimension(i,l),h=Ue(a),f=a/h,p=[i[0],i[1],f],d=["rank","type","type"],r=[{type:12,data:a},{type:12,data:f}];r.push(...X(p,p));let t=u=>{let s=U("x",n[0].dataType,p.length,h),m=U("scale",n[1].dataType,n[1].dims),g=U("bias",n[2].dataType,n[2].dims),b=K("output",n[0].dataType,p.length,h),y=[s,m,g,b],w=s.type.value,x=h===1?"f32":`vec${h}<f32>`,v=64,E=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${x}, ${v}>;
  const workgroupSize = ${v}u;
  ${u.registerUniforms(E).declareVariables(...y)}
  ${u.mainStart(v)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${x}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${x}(${s.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${At("workgroupShared[0]",h)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${x}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${x}(${s.get("batch","channel","h")}) - ${x}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${At("workgroupShared[0]",h)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${e.epsilon}));
    let channelScale = invStdDev * f32(${m.getByOffset("channel")});
    let channelShift = f32(${g.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${s.get("batch","channel","h")} * ${w}(${x}(channelScale)) + ${w}(${x}(channelShift));
      ${b.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${e.epsilon};${h}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:n[0].dataType}],dispatchGroup:{x:c},programUniforms:r}),getShaderSource:t}},tm=(n,e,i,o,l,c,a,h)=>{let f=Ue(a),p=64,d=f===1?"vec2f":`mat2x${f}f`,r=f===1?"f32":`vec${f}f`,t=(E,O)=>`${d}(${E}, ${O})`,u=l*a/f,s=Math.ceil(c/p),m=["type"],g=[{type:12,data:s},{type:12,data:c},{type:12,data:Math.floor(a/f)},{type:12,data:Math.floor(c*a/f)}],b=E=>{let O=U("input",e.dataType,e.dims,f);return`
  ${E.declareVariables(O)}
  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${E.mainStart(p)}
    let currentImageNumber = global_idx / ${p} / uniforms.C;
    let currentChannelNumber = (global_idx / ${p}) % uniforms.C;
    let wgOffset = local_id.x * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${Xt("f32",f)};
    var squaredSum = ${Xt("f32",f)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${r}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${t("sum","squaredSum")};
  }`},y=n.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${f}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:[l,a,p,2],dataType:1}],dispatchGroup:{x:l*a/f},programUniforms:g}),getShaderSource:b},{inputs:[e],outputs:[-1]})[0],w=[{type:12,data:u},{type:12,data:c},{type:12,data:Math.floor(a/f)},{type:12,data:Math.floor(p*a/f)}],x=["type","type","type"],v=E=>{let O=U("scale",i.dataType,i.dims,f),C=U("bias",o.dataType,o.dims,f);return`
  @group(0) @binding(0) var<storage, read> input : array<${d}>;
  @group(0) @binding(1) var<storage, read> scale : array<${O.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${C.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${Xt("f32",f)};
    var squaredSum = ${Xt("f32",f)};
    for (var i: u32 = 0; i < min(${p}, uniforms.H); i++) {
        let value = input[offset + i + currentChannelNumber * ${p}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${h}));
    let channelScale = invStdDev * ${r}(scale[currentChannelNumber]);
    let channelShift = ${r}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${t("channelScale","channelShift")};
  }`};return n.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${f};${h}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:[l,a,2],dataType:1}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:w}),getShaderSource:v},{inputs:[y,i,o],outputs:[-1]})[0]},rm=(n,e,i)=>{let o=e[0].dims,l=o,c=o[0],a=o[o.length-1],h=M.sizeFromDimension(o,1)/a,f=Ue(a),p=M.size(l)/f,d=[{type:12,data:h},{type:12,data:Math.floor(a/f)}],r=["type","type"],t=tm(n,e[0],e[1],e[2],c,h,a,i.epsilon),u=s=>{let m=Be(e[0].dataType),g=f===1?"vec2f":`mat2x${f}f`,b=f===1?m:`vec${f}<${m}>`,y=U("input",e[0].dataType,e[0].dims,f),w=K("output",e[0].dataType,l,f);return`
  @group(0) @binding(0) var<storage, read> input : array<${y.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${g}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${w.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${s.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${b}(scale[0]), ${b}(scale[1]));
  }`};n.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${f}`,inputDependencies:r},getRunData:()=>({outputs:[{dims:l,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:d}),getShaderSource:u},{inputs:[e[0],t]})},_l=(n,e)=>{e.format==="NHWC"?rm(n,n.inputs,e):n.compute(em(n.inputs,e))}}),nm,im,Sl,Cl=j(()=>{ye(),xe(),_e(),nm=n=>{if(!n||n.length<2)throw new Error("layerNorm requires at least 2 inputs.")},im=(n,e,i)=>{let o=e.simplified,l=n[0].dims,c=n[1],a=!o&&n[2],h=l,f=M.normalizeAxis(e.axis,l.length),p=M.sizeToDimension(l,f),d=M.sizeFromDimension(l,f),r=M.size(c.dims),t=a?M.size(a.dims):0;if(r!==d||a&&t!==d)throw new Error(`Size of X.shape()[axis:] == ${d}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${r} and bias size of ${t}`);let u=[];for(let v=0;v<l.length;++v)v<f?u.push(l[v]):u.push(1);let s=Ue(d),m=["type","type"],g=[{type:12,data:p},{type:1,data:d},{type:12,data:Math.floor(d/s)},{type:1,data:e.epsilon}];a&&m.push("type");let b=i>1,y=i>2,w=v=>{let E=Be(n[0].dataType),O=[U("x",n[0].dataType,n[0].dims,s),U("scale",c.dataType,c.dims,s)];a&&O.push(U("bias",a.dataType,a.dims,s)),O.push(K("output",n[0].dataType,h,s)),b&&O.push(K("mean_data_output",1,u)),y&&O.push(K("inv_std_output",1,u));let C=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${v.registerUniforms(C).declareVariables(...O)}
  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Xt("f32",s)};
    var mean_square_vector = ${Xt("f32",s)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${fr(E,s,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${At("mean_vector",s)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${At("mean_square_vector",s)} / uniforms.norm_size ${o?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${fr(E,s,"x[j + offset]")};
      let f32scale = ${fr(E,s,"scale[j]")};
      output[j + offset] = ${O[0].type.value}((f32input ${o?"":"- mean"}) * inv_std_dev * f32scale
        ${a?`+ ${fr(E,s,"bias[j]")}`:""}
      );
    }

    ${b?"mean_data_output[global_idx] = mean":""};
    ${y?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},x=[{dims:h,dataType:n[0].dataType}];return b&&x.push({dims:u,dataType:1}),y&&x.push({dims:u,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${s};${i};${o}`,inputDependencies:m},getRunData:()=>({outputs:x,dispatchGroup:{x:Math.ceil(p/64)},programUniforms:g}),getShaderSource:w}},Sl=(n,e)=>{nm(n.inputs),n.compute(im(n.inputs,e,n.outputCount))}}),am,om,Il,Tl,Al=j(()=>{ye(),xe(),Ze(),_e(),am=(n,e)=>{if(n.length<3||n.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let i=n[0],o=i.dims.length;if(i.dims[o-1]!==e.k)throw new Error("The last dim of input shape does not match the k value");let l=Math.floor((e.k+e.blockSize-1)/e.blockSize),c=e.blockSize/8*e.bits,a=n[1];if(!M.areEqual(a.dims,[e.n,l,c]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let h=n[2].dims;if(M.size(h)!==e.n*l)throw new Error("scales input size error.");if(n.length===4){let f=n[3].dims,p=e.bits>4?e.n*l:e.n*Math.floor((l+1)/2);if(M.size(f)!==p)throw new Error("zeroPoints input size error.")}},om=(n,e,i,o)=>{let l=n[0].dims,c=l.length,a=Math.floor((e.k+e.blockSize-1)/e.blockSize),h=l[c-2],f=e.k,p=e.n,d=l.slice(0,c-2),r=M.size(d),t=e.blockSize/8*e.bits/4,u=n[0].dataType,s=Ue(h),m=Ue(e.k),g=Ue(t),b=cr(u),y=h*a*b,w=Math.floor(o/y),x=a<=i[0]&&w>0,v=!x||w>=4?Ue(p):w>=2&&Ue(p)>=2?2:1,E=d.concat([h,p]),O=M.size(E)/v/s,C=x?[]:[{type:12,data:O},{type:12,data:e.blockSize}],S=[r,h,f/m],N=M.convertShape(n[1].dims).slice();N.splice(-1,1,t/g),C.push(...X(S)),C.push(...X(N)),C.push(...X(n[2].dims)),n.length===4&&C.push(...X(M.convertShape(n[3].dims)));let Q=[r,h,p/v];C.push(...X(Q));let te=Z=>{let Y=S.length,G=U("a",n[0].dataType,Y,m),R=U("b",12,N.length,g),V=U("scales",n[2].dataType,n[2].dims.length),ce=[G,R,V],se=n.length===4?U("zero_points",12,n[3].dims.length):void 0;se&&ce.push(se);let be=Q.length,ee=K("output",n[0].dataType,be,v),ve=[{name:"output_size",type:"u32"},{name:"block_size",type:"u32"}],Ce=Be(n[0].dataType),Ge=(()=>{switch(m){case 1:return`array<${Ce}, 8>`;case 2:return`mat4x2<${Ce}>`;case 4:return`mat2x4<${Ce}>`;default:throw new Error(`${m}-component is not supported.`)}})(),De=`
        for (var word: u32 = 0; word < ${t}; word += ${g}) {
          ${R.indicesSet("b_indices","2","word")};
          let b_data = ${R.getByIndices("b_indices")};
          for (var i: u32 = 0; i < ${g}; i++) {
            let b_value: u32 = ${g===1?"b_data":"b_data[word + i]"};
            let b_mask: u32 = 0x0F0F0F0Fu;
            let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);
            let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);
            let b_quantized_values = ${Ge}(${Array.from({length:4},(ht,Wt)=>`${Ce}(b_value_lower[${Wt}]), ${Ce}(b_value_upper[${Wt}])`).join(", ")});
            let b_dequantized_values = ${m===1?`${Ge}(${Array.from({length:8},(ht,Wt)=>`(b_quantized_values[${Wt}] - zero_point) * scale`).join(", ")});`:`(b_quantized_values - ${Ge}(${Array(8).fill("zero_point").join(",")})) * scale;`};
            // Number of B elements per 32-bit word is 32/bits = 32/4 = 8
            for (var m: u32 = 0; m < ${x?h:s}u; m++) {
              ${G.indicesSet("a_indices",Y-2,x?"m":`row * ${s} + m`)};
              ${G.indicesSet("a_indices",Y-1,"word_offset")};
              var input_offset = ${G.indicesToOffset("a_indices")};
              var a_data: ${Ge};
              for (var j: u32 = 0; j < ${8/m}; j++) {
                a_data[j] = ${G.getByOffset("input_offset")};
                input_offset++;
              }
              ${x?"workgroup_shared[workgroup_shared_offset + m]":"output_values[m]"}${v>1?"[c]":""} += ${Array.from({length:8/m},(ht,Wt)=>`${m===1?`a_data[${Wt}] * b_dequantized_values[${Wt}]`:`dot(a_data[${Wt}], b_dequantized_values[${Wt}])`}`).join(" + ")};
            }
            word_offset += ${8/m};
          }
        }`,ct=se?`
          zero_point_offset += 4;
          if (zero_point_offset == 32) {
            zero_point_offset = 0;
            zero_point_index++;
            zero_point_word = ${se.getByOffset("zero_point_index")};
          }`:"";return x?`
        var<workgroup> workgroup_shared: array<${ee.type.value}, ${h*a}>;
        ${Z.declareVariables(...ce,ee)}
        ${Z.mainStart([a,1,1])}
          var a_indices: ${G.type.indices};
          var block = local_id.x;
          var col = workgroup_id.y;
          var batch = workgroup_id.z;
          ${G.indicesSet("a_indices","0","batch")};
          // Two zero points are packed into one byte when uniforms.bits is 4.
          for (var c: u32 = 0; c < ${v}; c++) {
            let col_times_components_plus_c = col * ${v} + c;
              ${se?`
            var zero_point_bytes_per_col: u32 = (${a} + 1) / 2;
            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);
            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;
            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;
            var zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            var zero_point_word: u32 = ${se.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}
            var b_indices: ${R.type.indices};
            ${R.indicesSet("b_indices","0","col_times_components_plus_c")};
            // The scale and zero points are computed per block.
            var scales_index = col_times_components_plus_c * ${a} + block;
            let scale = ${V.getByOffset("scales_index")};
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Ce}(${se?"(zero_point_word) & 0xFu":8});
            ${R.indicesSet("b_indices","1","block")};
            var word_offset: u32 = block * ${e.blockSize/m};
            var workgroup_shared_offset: u32 = block * ${h};
            ${De}
          }
          workgroupBarrier();
          var output_indices: ${ee.type.indices};
          var elements_per_thread: u32 = ${Math.ceil(h/a)};
          ${ee.indicesSet("output_indices","0","batch")};
          ${ee.indicesSet("output_indices",be-1,"col")};
          ${ee.indicesSet("output_indices",be-2,"local_id.x * elements_per_thread")};
          var output_offset = ${ee.indicesToOffset("output_indices")};
          for (var m: u32 = 0u; m < elements_per_thread; m++) {
            var row = m + local_id.x * elements_per_thread;
            if (row < ${h}) {
              var output_value: ${ee.type.value} = ${ee.type.value}(0);
              var workgroup_shared_offset: u32 = row;
              for (var b: u32 = 0u; b < ${a}u; b++) {
                output_value += workgroup_shared[workgroup_shared_offset];
                workgroup_shared_offset += ${h};
              }
              ${ee.setByOffset("output_offset","output_value")};
              output_offset += ${p/v};
            }
          }
        }`:`
        ${Z.registerUniforms(ve).declareVariables(...ce,ee)}
        ${Z.mainStart()}
          ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var output_values: array<${ee.type.value}, ${s}>;
          var output_indices = ${ee.offsetToIndices("global_idx")};
          var col = ${ee.indicesGet("output_indices",be-1)};
          var row = ${ee.indicesGet("output_indices",be-2)};
          var a_indices: ${G.type.indices} = output_indices;
          // Two zero points are packed into one byte because uniforms.bits <= 4.
          // zero_point_offset is either 0 or 4. It is bit offset within one byte.
          // TODO support zero_point_offset for bits > 4
          ${se?`
          var zero_point_abs_offset = col * ${v} * ((${a} + 1) / 2);
          var zero_point_index: u32 = zero_point_abs_offset / 4;
          var zero_point_word: u32 = ${se.getByOffset("zero_point_index")};
          var zero_point_offset: u32 = (zero_point_abs_offset % 4) * 8;`:""}
          var scale_index = col * ${a*v};
          var b_indices: ${R.type.indices};
          for (var c: u32 = 0; c < ${v}; c++) {
            ${R.indicesSet("b_indices","0",`col * ${v} + c`)};
            var block_offset: u32 = 0;
            for (var block: u32 = 0; block < ${a}; block++) {
              // The scale and zero points are computed per block.
              let scale = ${V.getByOffset("scale_index")};
              // The default zero point is 8 for unsigned 4-bit quantization.
              let zero_point = ${Ce}(${se?"extractBits(zero_point_word, zero_point_offset, 4)":8});
              ${R.indicesSet("b_indices","1","block")};
              var word_offset: u32 = block_offset;
              ${De}
              scale_index++;
              ${ct}
              block_offset += uniforms.block_size / ${m};
            }
            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.
            ${se?`if (zero_point_offset % 8 > 0) {
                ${ct}
              }`:""}
            }
            for (var k: u32 = 0u; k < ${s}u; k++) {
              ${ee.indicesSet("output_indices",be-2,`${s} * row + k`)};
              ${ee.setByIndices("output_indices","output_values[k]")}
            }
        }`};return{name:x?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:`${e.cacheKey};${h};${u};${n.length}`,inputDependencies:Array(n.length).fill("rank")},getRunData:()=>({outputs:[{dims:E,dataType:u}],name:x?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:x?{x:1,y:Math.ceil(p/v),z:r}:{x:Math.ceil(O/64)},programUniforms:C}),getShaderSource:te}},Il=(n,e)=>{am(n.inputs,e);let i=n.getMaxComputeWorkgroupSizes(),o=n.getMaxComputeWorkgroupStoragesize();n.compute(om(n.inputs,e,i,o))},Tl=n=>we(n)}),lt,sm,kl,El,um,wa,Ol,Pl=j(()=>{ye(),xe(),Ze(),Hn(),aa(),_e(),Rr(),lt=(n,e)=>n.length>e&&n[e].dims.length>0&&M.size(n[e].dims)>0?n[e]:void 0,sm=(n,e)=>{let i=n[0],o=lt(n,1),l=lt(n,2),c=lt(n,3),a=lt(n,4),h=lt(n,5),f=lt(n,6),p=lt(n,7);if(i.dims.length!==3&&i.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,r=i.dims[0],t=i.dims[1],u=i.dims.length===3?d?i.dims[2]/3:i.dims[2]:e.numHeads*i.dims[4],s=t,m=0,g=0,b=Math.floor(u/e.numHeads);if(f&&p){if(f.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(f.dims[0]!==r||f.dims[1]!==e.numHeads||f.dims[3]!==b)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(p.dims[0]!==r||p.dims[1]!==e.numHeads||p.dims[3]!==b)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(f.dims[2]!==p.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(p.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');m=f.dims[2],g=f.dims[2]}else if(f||p)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let y;if(o){if(i.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(o.dims.length<3||o.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(i.dims[0]!==o.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(o.dims.length===3){if(o.dims[2]!==i.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');y=2,s=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==e.numHeads||o.dims[3]!==2||o.dims[4]!==b)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(l)throw new Error('Expect "value" be none when "key" has packed kv format.');y=5,s=o.dims[1]}else{if(o.dims[1]!==e.numHeads||o.dims[3]!==b)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');y=0,s=o.dims[2]}}else{if(i.dims.length!==3&&i.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(i.dims.length===5&&(i.dims[2]!==e.numHeads||i.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');y=3}if(c){if(c.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(l&&i.dims.length===5&&i.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let w=0;if(a){w=8;let C=a.dims;throw C.length===1?C[0]===r?w=1:C[0]===3*r+2&&(w=3):C.length===2&&C[0]===r&&C[1]===s&&(w=5),w===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let x=!1,v=u;if(l){if(l.dims.length!==3&&l.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(i.dims[0]!==l.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(l.dims.length===3){if(s!==l.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=l.dims[2]}else{if(s!==l.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');v=l.dims[1]*l.dims[3],x=!0}}let E=m+s,O=!1;if(a)throw new Error("Key padding mask is not supported");if(h){if(h.dims.length!==4)throw new Error('Input "relative_position_bias" is expected to have 4 dimensions');if(h.dims[0]!==r&&h.dims[0]!==1||h.dims[1]!==e.numHeads||h.dims[2]!==t||h.dims[3]!==E)throw new Error('Input "relative_position_bias" shape (batch_size, 1, sequence_length, kv_sequence_length)')}return{batchSize:r,sequenceLength:t,pastSequenceLength:m,kvSequenceLength:s,totalSequenceLength:E,maxSequenceLength:g,inputHiddenSize:0,hiddenSize:u,vHiddenSize:v,headSize:b,vHeadSize:Math.floor(v/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:w,scale:e.scale,broadcastResPosBias:O,passPastInKv:x,qkvFormat:y}},kl=n=>we({...n}),El=we({perm:[0,2,1,3]}),um=(n,e,i,o,l,c,a)=>{let h=[o,l,c],f=M.size(h),p=[{type:12,data:f},{type:12,data:a},{type:12,data:c}],d=r=>{let t=K("qkv_with_bias",e.dataType,h),u=U("qkv",e.dataType,h),s=U("bias",i.dataType,h),m=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${r.registerUniforms(m).declareVariables(u,s,t)}
  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return n.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:h,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:p}),getShaderSource:d},{inputs:[e,i],outputs:[-1]})[0]},wa=(n,e,i,o,l,c,a,h)=>{let f=c;if(a){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return f=um(n,c,a,e,o,i*l,h),f=f.reshape([e,o,i,l]),n.compute(xt(f,El.perm),{inputs:[f],outputs:[-1]})[0]}else return c.dims.length===3&&(f=c.reshape([e,o,i,l])),n.compute(xt(f,El.perm),{inputs:[f],outputs:[-1]})[0]},Ol=(n,e)=>{let i=sm(n.inputs,e),o=n.inputs[0],l=lt(n.inputs,1),c=lt(n.inputs,2),a=lt(n.inputs,3),h=lt(n.inputs,4),f=lt(n.inputs,5),p=lt(n.inputs,6),d=lt(n.inputs,7);if(o.dims.length===5)throw new Error("Packed QKV is not implemented");if((l==null?void 0:l.dims.length)===5)throw new Error("Packed KV is not implemented");let r=l&&c&&l.dims.length===4&&c.dims.length===4,t=wa(n,i.batchSize,i.numHeads,i.sequenceLength,i.headSize,o,a,0);if(r)return Xn(n,t,l,c,h,void 0,p,d,f,i,e);if(!l||!c)throw new Error("key and value must be provided");let u=wa(n,i.batchSize,i.numHeads,i.kvSequenceLength,i.headSize,l,a,i.hiddenSize),s=wa(n,i.batchSize,i.numHeads,i.kvSequenceLength,i.vHeadSize,c,a,2*i.hiddenSize);Xn(n,t,u,s,h,void 0,p,d,f,i,e)}}),lm,dm,cm,pm,mm,fm,hm,gm,Rl,zl=j(()=>{ye(),xe(),_e(),lm=n=>{if(!n||n.length<1)throw new Error("Too few inputs");if(n[0].dataType!==1&&n[0].dataType!==10)throw new Error("Input type must be float or float16.");if(n.length>=2){let e=n[0].dims.length*2===n[1].dims[0];if(n.length===4&&(e=n[3].dims[0]*2===n[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},dm=(n,e,i)=>{let o="";for(let l=e-1;l>=0;--l)o+=`
            k = i32(${n.indicesGet("indices",l)}) - ${fe("uniforms.pads",l,i)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${fe("uniforms.x_shape",l,e)})) {
              break;
            }
            offset += k * i32(${fe("uniforms.x_strides",l,e)});
        `;return`
          value = ${n.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${o}
            value = x[offset];
          }
      `},cm=(n,e,i)=>{let o="";for(let l=e-1;l>=0;--l)o+=`
                k = i32(${n.indicesGet("indices",l)}) - ${fe("uniforms.pads",l,i)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${fe("uniforms.x_shape",l,e)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${fe("uniforms.x_shape",l,e)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${fe("uniforms.x_strides",l,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},pm=(n,e,i)=>{let o="";for(let l=e-1;l>=0;--l)o+=`
                k = i32(${n.indicesGet("indices",l)}) - ${fe("uniforms.pads",l,i)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${fe("uniforms.x_shape",l,e)})) {
                  k = i32(${fe("uniforms.x_shape",l,e)}) - 1;
                }
                offset += k * i32(${fe("uniforms.x_strides",l,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},mm=(n,e,i)=>{let o="";for(let l=e-1;l>=0;--l)o+=`
                k = i32(${n.indicesGet("indices",l)}) - ${fe("uniforms.pads",l,i)};
                if (k < 0)  {
                  k += i32(${fe("uniforms.x_shape",l,e)}]);
                }
                if (k >= i32(${fe("uniforms.x_shape",l,e)})) {
                  k -= i32(${fe("uniforms.x_shape",l,e)});
                }
                offset += k * i32(${fe("uniforms.x_strides",l,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},fm=(n,e,i)=>{switch(i.mode){case 0:return dm(n,e,i.pads.length);case 1:return cm(n,e,i.pads.length);case 2:return pm(n,e,i.pads.length);case 3:return mm(n,e,i.pads.length);default:throw new Error("Invalid mode")}},hm=(n,e)=>{let i=M.padShape(n[0].dims.slice(),e.pads),o=n[0].dims,l=M.size(i),c=[{type:12,data:l},{type:6,data:e.pads}];e.mode===0&&c.push({type:n[0].dataType,data:e.value}),c.push(...X(n[0].dims,i));let a=["rank"],h=f=>{let p=K("output",n[0].dataType,i.length),d=U("x",n[0].dataType,o.length),r=d.type.value,t=fm(p,o.length,e),u=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:e.pads.length}];return e.mode===0&&u.push({name:"constant_value",type:r}),`
            ${f.registerUniforms(u).declareVariables(d,p)}
            ${f.mainStart()}
            ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${p.offsetToIndices("global_idx")};

            var value = ${r}(0);
            ${t}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${e.mode}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:i,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(i)/64)},programUniforms:c}),getShaderSource:h}},gm=(n,e)=>{if(n.length>1){let i=n[1].getBigInt64Array(),o=n.length>=3&&n[2].data?n[2].getFloat32Array()[0]:0,l=n[0].dims.length,c=new Int32Array(2*l).fill(0);if(n.length>=4){let h=n[3].getBigInt64Array();for(let f=0;f<h.length;f++)c[Number(h[f])]=Number(i[f]),c[Number(h[f])+l]=Number(i[f+h.length])}else i.forEach((h,f)=>c[Number(f)]=Number(h));let a=[];return c.forEach(h=>a.push(h)),{mode:e.mode,value:o,pads:a}}else return e},Rl=(n,e)=>{lm(n.inputs);let i=gm(n.inputs,e);n.compute(hm(n.inputs,i),{inputs:[0]})}}),si,Bl,Dl,Ml,Ul,ym,bm,Wl,Nl,Vl,Hl,Gl,Ll,Fl,ql,jl,Kl,Yl,Xl,Zl=j(()=>{_t(),ye(),xe(),_e(),si=n=>{if(ke.webgpu.validateInputContent&&(!n||n.length!==1))throw new Error("Pool ops requires 1 input.")},Bl=(n,e,i)=>{let o=e.format==="NHWC",l=n.dims.slice();o&&l.splice(1,0,l.pop());let c=Object.hasOwnProperty.call(e,"dilations"),a=e.kernelShape.slice(),h=e.strides.slice(),f=c?e.dilations.slice():[],p=e.pads.slice();pr.adjustPoolAttributes(i,l,a,h,f,p);let d=pr.computePoolOutputShape(i,l,h,f,a,p,e.autoPad),r=Object.assign({},e);c?Object.assign(r,{kernelShape:a,strides:h,pads:p,dilations:f,cacheKey:e.cacheKey}):Object.assign(r,{kernelShape:a,strides:h,pads:p,cacheKey:e.cacheKey});let t=d.slice();return t.push(t.splice(1,1)[0]),[r,o?t:d]},Dl=(n,e)=>{let i=e.format==="NHWC",o=M.size(n),l=M.size(e.kernelShape),c=[{type:12,data:o},{type:12,data:l}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let h=e.kernelShape[e.kernelShape.length-1],f=e.strides[e.strides.length-1],p=e.pads[e.pads.length/2-1],d=e.pads[e.pads.length-1],r=!!(p+d);c.push({type:12,data:h},{type:12,data:f},{type:12,data:p},{type:12,data:d}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let t=!1;if(e.kernelShape.length===2){let u=e.kernelShape[e.kernelShape.length-2],s=e.strides[e.strides.length-2],m=e.pads[e.pads.length/2-2],g=e.pads[e.pads.length-2];t=!!(m+g),c.push({type:12,data:u},{type:12,data:s},{type:12,data:m},{type:12,data:g}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[c,a,!0,r,t]}else{if(i)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let h=M.computeStrides(e.kernelShape);c.push({type:12,data:h},{type:12,data:e.pads},{type:12,data:e.strides}),a.push({name:"kernelStrides",type:"u32",length:h.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let f=e.pads.reduce((p,d)=>p+d);return[c,a,!!f,!1,!1]}},Ml=(n,e,i,o,l,c,a,h,f,p,d,r)=>{let t=l.format==="NHWC",u=e.type.value,s=K("output",e.type.tensor,o);if(l.kernelShape.length<=2){let m="",g="",b="",y=i-(t?2:1);if(d?m=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${y}] = indices[${y}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${y}] < 0 || xIndices[${y}]
                      >= uniforms.x_shape[${y}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${c}
                }`:m=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${y}] = indices[${y}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${c}
                }`,l.kernelShape.length===2){let w=i-(t?3:2);r?g=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${w}] = indices[${w}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${w}] < 0 || xIndices[${w}] >= uniforms.x_shape[${w}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:g=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${w}] = indices[${w}] * uniforms.sh - uniforms.phStart + j;
                `,b=`
              }
            `}return`
            ${n.registerUniforms(f).declareVariables(e,s)}

            ${n.mainStart()}
              ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${s.offsetToIndices("global_idx")};
              var xIndices = ${s.offsetToIndices("global_idx")};

              var value = ${u}(${h});
              var pad = 0;
              ${g}
              ${m}
              ${b}
              ${a}

              output[global_idx] = value;
            }`}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let m=l.kernelShape.length,g=l.pads.length,b="";return p?b=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${c}
              }`:b=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${c}
            `,`
            ${n.registerUniforms(f).declareVariables(e,s)}

            ${n.mainStart()}
              ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${s.offsetToIndices("global_idx")};
              var xIndices = ${s.offsetToIndices("global_idx")};

              var offsets: array<u32, ${m}>;

              var value = ${u}(${h});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${m-1}u; j++) {
                  offsets[j] = offset / ${fe("uniforms.kernelStrides","j",m)};
                  offset -= offsets[j] * ${fe("uniforms.kernelStrides","j",m)};
                }
                offsets[${m-1}] = offset;

                isPad = false;
                for (var j = ${i-m}u; j < ${i}u; j++) {
                  xIndices[j] = indices[j] * ${fe("uniforms.strides",`j - ${i-m}u`,m)}
                    + offsets[j - ${i-m}u] - ${fe("uniforms.pads","j - 2u",g)};
                  ${b}
              }
              ${a}

              output[global_idx] = value;
            }`}},Ul=n=>`${n.format};${n.ceilMode};${n.autoPad};${n.kernelShape.length}`,ym=n=>`${Ul(n)};${n.countIncludePad}`,bm=n=>`${Ul(n)};${n.storageOrder};${n.dilations}`,Wl=n=>({format:n.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][n.auto_pad],ceilMode:n.ceil_mode,kernelShape:n.kernel_shape,strides:n.strides,pads:n.pads}),Nl=(n,e,i,o)=>{let[l,c]=Bl(e,o,i),a=U("x",e.dataType,e.dims.length),h=a.type.value,f="value += x_val;",p="";l.countIncludePad?p+=`value /= ${h}(uniforms.kernelSize);`:p+=`value /= ${h}(i32(uniforms.kernelSize) - pad);`;let[d,r,t,u,s]=Dl(c,l);d.push(...X(e.dims,c));let m=["rank"];return{name:n,shaderCache:{hint:`${o.cacheKey};${t};${u};${s}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:c,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(M.size(c)/64)},programUniforms:d}),getShaderSource:g=>Ml(g,a,e.dims.length,c.length,l,f,p,0,r,t,u,s)}},Vl=n=>{let e=n.count_include_pad!==0,i=Wl(n);if(i.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:e,...i,cacheKey:""};return{...o,cacheKey:ym(o)}},Hl=(n,e)=>{si(n.inputs),n.compute(Nl("AveragePool",n.inputs[0],!1,e))},Gl={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Ll=n=>{let e=n.format;return{format:e,...Gl,cacheKey:e}},Fl=(n,e)=>{si(n.inputs),n.compute(Nl("GlobalAveragePool",n.inputs[0],!0,e))},ql=(n,e,i,o)=>{let[l,c]=Bl(e,o,i),a=`
      value = max(x_val, value);
    `,h="",f=U("x",e.dataType,e.dims.length),p=["rank"],[d,r,t,u,s]=Dl(c,l);return d.push(...X(e.dims,c)),{name:n,shaderCache:{hint:`${o.cacheKey};${t};${u};${s}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:c,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(M.size(c)/64)},programUniforms:d}),getShaderSource:m=>Ml(m,f,e.dims.length,c.length,l,a,h,e.dataType===10?-65504:-1e5,r,t,u,s)}},jl=(n,e)=>{si(n.inputs),n.compute(ql("MaxPool",n.inputs[0],!1,e))},Kl=n=>{let e=n.storage_order,i=n.dilations,o=Wl(n);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let l={storageOrder:e,dilations:i,...o,cacheKey:""};return{...l,cacheKey:bm(l)}},Yl=n=>{let e=n.format;return{format:e,...Gl,cacheKey:e}},Xl=(n,e)=>{si(n.inputs),n.compute(ql("GlobalMaxPool",n.inputs[0],!0,e))}}),wm,$m,Ql,Jl=j(()=>{_t(),ye(),_e(),wm=(n,e,i)=>{let o=n===e,l=n<e&&i<0,c=n>e&&i>0;if(o||l||c)throw new Error("Range these inputs' contents are invalid.")},$m=(n,e,i,o)=>{let l=Math.abs(Math.ceil((e-n)/i)),c=[l],a=l,h=[{type:12,data:a},{type:o,data:n},{type:o,data:i},...X(c)],f=p=>{let d=K("output",o,c.length),r=d.type.value,t=[{name:"outputSize",type:"u32"},{name:"start",type:r},{name:"delta",type:r}];return`
        ${p.registerUniforms(t).declareVariables(d)}
        ${p.mainStart()}
        ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${r}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:f,getRunData:()=>({outputs:[{dims:c,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:h})}},Ql=n=>{let e=0,i=0,o=0;n.inputs[0].dataType===6?(e=n.inputs[0].getInt32Array()[0],i=n.inputs[1].getInt32Array()[0],o=n.inputs[2].getInt32Array()[0]):n.inputs[0].dataType===1&&(e=n.inputs[0].getFloat32Array()[0],i=n.inputs[1].getFloat32Array()[0],o=n.inputs[2].getFloat32Array()[0]),ke.webgpu.validateInputContent&&wm(e,i,o),n.compute($m(e,i,o,n.inputs[0].dataType),{inputs:[]})}}),_m,xm,Sm,Cm,Im,Tm,Am,Em,km,Om,Pm,ed,Rm,zm,Bm,Dm,Mm,td,rd,nd=j(()=>{ye(),xe(),Ze(),_e(),_m=(n,e)=>{if(n.every(i=>i>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),n.length>0){if(e.mode==="linear"){if(!(n.length===2||n.length===3||n.length===4&&n[0]===1&&n[1]===1||n.length===4&&n[0]===1&&n[3]===1||n.length===5&&n[0]===1&&n[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(e.mode==="cubic"&&!(n.length===2||n.length===4&&n[0]===1&&n[1]===1||n.length===4&&n[0]===1&&n[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},xm=(n,e,i)=>{e.every(l=>l>=0&&l<i||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(i).fill(1);return e.forEach((l,c)=>o[l]=n[c]),o},Sm=(n,e,i,o,l,c)=>{let[a,h,f]=i>10?[1,2,3]:[-1,n.length>1?1:-1,-1],p=n[0].dims.length;if(a>0&&n.length>a&&n[a].dims.length>0)n[a].getFloat32Array().forEach(d=>c.push(d));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(h>0&&n.length>h&&n[h].dims.length>0){if(n[h].getFloat32Array().forEach(d=>o.push(d)),o.length!==0&&o.length!==p&&i>=18&&o.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");_m(o,e),e.axes.length>0&&xm(o,e.axes,p).forEach((d,r)=>o[r]=d)}if(f>0&&n.length>f&&(n[f].getBigInt64Array().forEach(d=>l.push(Number(d))),l.length!==p||i>=18&&l.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(o.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(l.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof o<"u"&&typeof l<"u"&&o.length>0&&l.length>p)throw new Error("Resize requires only of scales or sizes to be specified")},Cm=(n,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${e} { `+(()=>{switch(n){case"asymmetric":return`return ${e}(xResized) / ${e}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${e}(xResized) + 0.5) / ${e}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${e}(xResized) + 0.5) / ${e}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${e}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${e}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${e}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${e}(roiStart) * ${e}(lengthOriginal - 1) +
                        (${e}(xResized) * ${e}(roiEnd - roiStart) * ${e}(lengthOriginal - 1)) /
                        ${e}(lengthResized - 1);
                  } else {
                    return 0.5 * ${e}(roiStart + roiEnd) * ${e}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${e}xScale * ${e}(lengthResized);
                  const adjustment = ${e}(lengthResized) / outputWidth;
                  const center = ${e}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;case"half_pixel":return`return ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${n} is not supported`)}})()+"}",Im=(n,e,i)=>`fn getNearestPixelFromOriginal(xOriginal: ${i}, isDownSample: bool) -> ${i} {`+(()=>{switch(n){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${n} is not supported`)}})()+"}",Tm=(n,e,i)=>{let o=new Array(i).fill(0).concat(new Array(i).fill(1)),l=n.length===0?o:n.slice();return e.length>0?(e.forEach((c,a)=>{o[c]=l[a],o[a+i]=l[e.length+a]}),o):l},Am=(n,e,i,o)=>{let l=[];if(i.length>0)if(o.length>0){if(n.forEach(c=>l.push(c)),Math.max(...o)>n.length)throw new Error("axes is out of bound");o.forEach((c,a)=>l[c]=i[a])}else i.forEach(c=>l.push(c));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");l=n.map((c,a)=>Math.round(c*e[a]))}return l},Em=(n,e,i)=>{let o=(()=>{switch(i.keepAspectRatioPolicy){case"not_larger":return i.axes.length>0?Math.min(...i.axes.map(c=>e[c]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return i.axes.length>0?Math.max(...i.axes.map(c=>e[c]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${i.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let l=n.slice();return i.axes.length>0?(i.axes.forEach(c=>e[c]=o),i.axes.forEach(c=>l[c]=Math.round(n[c]*e[c]))):(e.fill(o,0,e.length),l.forEach((c,a)=>l[a]=Math.round(c*e[a]))),l},km=(n,e,i,o,l)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${n.type.indices}) -> array<${n.type.value}, ${i.length}> {
      var original_indices: array<${n.type.value}, ${i.length}>;
      for (var i:u32 = 0; i < ${i.length}; i++) {
        var output_index = ${n.indicesGet("output_indices","i")};
        var scale = ${fe("uniforms.scales","i",o)};
        var roi_low = ${fe("uniforms.roi","i",l)};
        var roi_hi = ${fe("uniforms.roi",`i + ${e.length}`,l)};
        if (scale == 1.0) {
          original_indices[i] = ${n.type.value}(output_index);
        } else {
          var input_shape_i = ${fe("uniforms.input_shape","i",e.length)};
          var output_shape_i = ${fe("uniforms.output_shape","i",i.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Om=(n,e,i,o,l,c,a)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> ${n.type.indices} {
      var input_indices: ${n.type.indices};
      for (var i:u32 = 0; i < ${o.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${fe("uniforms.scales","i",l)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${fe("uniforms.roi","i",c)};
          var roi_hi = ${fe("uniforms.roi",`i + ${i.length}`,c)};
          var input_shape_i = ${fe("uniforms.input_shape","i",i.length)};
          var output_shape_i = ${fe("uniforms.output_shape","i",o.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${a} || (original_idx >= 0 && original_idx < ${e.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${e.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${n.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,Pm=(n,e)=>`
    fn checkInputIndices(input_indices: ${n.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var input_index = ${n.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${fe("uniforms.input_shape","i",e.length)}) {
          return false;
        }
      }
      return true;
    }`,ed=(n,e,i,o)=>n.rank>o?`
    ${n.indicesSet("input_indices",e,"channel")};
    ${n.indicesSet("input_indices",i,"batch")};
`:"",Rm=(n,e,i,o,l)=>{let[c,a,h,f]=i.length===2?[-1,0,1,-1]:[0,2,3,1],p=n.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${p} {
      var input_indices: ${n.type.indices};
      ${n.indicesSet("input_indices",a,`max(0, min(row, ${i[a]} - 1))`)};
      ${n.indicesSet("input_indices",h,`max(0, min(col, ${i[h]} - 1))`)};
      ${ed(n,f,c,2)}
      return ${n.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${e.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${p} = originalIndices[${a}];
      var col:${p} = originalIndices[${h}];
      ${o?`if (row < 0 || row > (${i[a]} - 1) || col < 0 || col > (${i[h]} - 1)) {
        return ${l};
      }`:""};
      row = max(0, min(row, ${i[a]} - 1));
      col = max(0, min(col, ${i[h]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${i.length>2?`u32(originalIndices[${f}])`:"0"};
      var batch: u32 =  ${i.length>2?`u32(originalIndices[${c}])`:"0"};
      var x11: ${p} = getInputValue(batch, channel, row1, col1);
      var x12: ${p} = getInputValue(batch, channel, row1, col2);
      var x21: ${p} = getInputValue(batch, channel, row2, col1);
      var x22: ${p} = getInputValue(batch, channel, row2, col2);
      var dx1: ${p} = abs(row - ${p}(row1));
      var dx2: ${p} = abs(${p}(row2) - row);
      var dy1: ${p} = abs(col - ${p}(col1));
      var dy2: ${p} = abs(${p}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},zm=(n,e,i,o,l,c,a,h,f,p)=>{let d=i.length===2,[r,t]=d?[0,1]:[2,3],u=n.type.value,s=m=>{let g=m===r?"row":"col";return`
      fn ${g}CubicInterpolation(input_indices: ${n.type.indices}, output_indices: ${e.type.indices}) -> ${u} {
        var output_index = ${e.indicesGet("output_indices",m)};
        var originalIdx: ${u} = getOriginalCoordinateFromResizedCoordinate(output_index, ${l[m]},
        ${o[m]}, ${i[m]}, ${c[m]}, ${c[m]} + ${i.length});
        var fractOriginalIdx: ${u} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${h} && (originalIdx < 0 || originalIdx > (${i[m]} - 1))) {
          return ${f};
        }
        var data: array<${u}, 4> = array<${u}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${g}: ${u} = originalIdx + ${u}(i);
          if (${g} < 0 || ${g} >= ${i[m]}) {
            ${p?`coefs[i + 1] = 0.0;
                        continue;`:h?`return ${f};`:`${g} = max(0, min(${g}, ${i[m]} - 1));`};
          }
        var input_indices_copy: ${n.type.indices} = input_indices;
          ${n.indicesSet("input_indices_copy",m,`u32(${g})`)};
          data[i + 1] = ${m===r?n.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${s(r)};
    ${s(t)};
  fn getCubicInterpolationCoefs(s: ${u}) -> array<${u}, 4> {
    var absS = abs(s);
    var coeffs: array<${u}, 4> = array<${u}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${u} = 1.0 - absS;
    var twoMinusAbsS: ${u} = 2.0 - absS;
    var onePlusAbsS: ${u} = 1.0 + absS;
    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};
    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;
    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${u}, 4>, coefs: array<${u}, 4>) -> ${u} {
    var coefsSum: ${u} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${e.type.indices}) -> ${u} {
    var input_indices: ${n.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Bm=(n,e,i,o,l)=>{let[c,a,h,f,p]=i.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],d=n.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${d} {
      var input_indices: ${n.type.indices};
      ${n.indicesSet("input_indices",a,`max(0, min(depth, ${i[a]} - 1))`)};
      ${n.indicesSet("input_indices",h,`max(0, min(height, ${i[h]} - 1))`)};
      ${n.indicesSet("input_indices",f,`max(0, min(width, ${i[f]} - 1))`)};
      ${ed(n,p,c,3)}
      return ${n.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${e.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${d} = originalIndices[${a}];
      var height:${d} = originalIndices[${h}];
      var width:${d} = originalIndices[${f}];
      ${o?`if (depth < 0 || depth > (${i[a]} - 1) || height < 0 || height > (${i[h]} - 1) || width < 0 || (width > ${i[f]} - 1)) {
      return ${l};
        }`:""};

    depth = max(0, min(depth, ${i[a]} - 1));
      height = max(0, min(height, ${i[h]} - 1));
      width = max(0, min(width, ${i[f]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${i.length>3?`u32(originalIndices[${p}])`:"0"};
      var batch: u32 =  ${i.length>3?`u32(originalIndices[${c}])`:"0"};

      var x111: ${d} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${d} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${d} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${d} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${d} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${d} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${d} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${d} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${d} = abs(depth - ${d}(depth1));
      var dx2: ${d} = abs(${d}(depth2) - depth);
      var dy1: ${d} = abs(height - ${d}(height1));
      var dy2: ${d} = abs(${d}(height2) - height);
      var dz1: ${d} = abs(width - ${d}(width1));
      var dz2: ${d} = abs(${d}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},Dm=(n,e,i,o,l,c)=>{let a=n.dims,h=Tm(c,e.axes,a.length),f=Am(a,o,l,e.axes),p=o.slice();o.length===0&&(p=a.map((y,w)=>y===0?1:f[w]/y),e.keepAspectRatioPolicy!=="stretch"&&(f=Em(a,p,e)));let d=K("output",n.dataType,f.length),r=U("input",n.dataType,a.length),t=M.size(f),u=a.length===f.length&&a.every((y,w)=>y===f[w]),s=e.coordinateTransformMode==="tf_crop_and_resize",m=e.extrapolationValue,g=r.type.value,b=y=>`
      ${u?"":`
      ${Cm(e.coordinateTransformMode,g)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${Pm(r,a)};
              ${Im(e.nearestMode,i,g)};
              ${Om(r,d,a,f,p.length,h.length,s)};
              `;case"linear":return`
              ${km(d,a,f,p.length,h.length)};
              ${(()=>{if(a.length===2||a.length===4)return`${Rm(r,d,a,s,m)}`;if(a.length===3||a.length===5)return`${Bm(r,d,a,s,m)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(a.length===2||a.length===4)return`${zm(r,d,a,f,p,h,e.cubicCoeffA,s,e.extrapolationValue,e.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${y.registerUniform("output_size","u32").registerUniform("scales","f32",p.length).registerUniform("roi","f32",h.length).declareVariables(r,d)}
      ${y.mainStart()}
        ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${u?"output[global_idx] = input[global_idx];":`
        let output_indices = ${d.offsetToIndices("global_idx")};
        var input_indices: ${r.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${r.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${i}|${p.length>0?p:""}|${l.length>0?l:""}|${h.length>0?h:""}|${u}|${a}`,inputDependencies:["rank"]},getShaderSource:b,getRunData:()=>({outputs:[{dims:f,dataType:n.dataType}],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:[{type:12,data:t},{type:1,data:p},{type:1,data:h},...X(a,f)]})}},Mm=n=>{let e=n.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},td=(n,e)=>{let i=[],o=[],l=[],c=Mm(n);if(e.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Sm(n.inputs,e,c,i,o,l),n.compute(Dm(n.inputs[0],e,c,i,o,l),{inputs:[0]})},rd=n=>{let e=n.antialias,i=n.axes,o=n.coordinateTransformMode,l=n.cubicCoeffA,c=n.excludeOutside!==0,a=n.extrapolationValue,h=n.keepAspectRatioPolicy,f=n.mode,p=n.nearestMode===""?"simple":n.nearestMode;return we({antialias:e,axes:i,coordinateTransformMode:o,cubicCoeffA:l,excludeOutside:c,extrapolationValue:a,keepAspectRatioPolicy:h,mode:f,nearestMode:p})}}),Um,Wm,id,ad=j(()=>{ye(),xe(),Ze(),_e(),Um=(n,e)=>{let[i,o,l,c]=n,{numHeads:a,rotaryEmbeddingDim:h}=e;if(i.dims.length!==3&&i.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${i.dims.length}`);if(!M.areEqual(o.dims,[])&&!M.areEqual(o.dims,[1])&&o.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${o.dims.length}`);if(l.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${l.dims.length}`);if(c.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${c.dims.length}`);if(!M.areEqual(l.dims,c.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(h>0&&a===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let f=i.dims[0],p=i.dims[i.dims.length-2],d=l.dims[0],r=M.sizeFromDimension(i.dims,1)/p,t=h===0?l.dims[1]*2:r/a;if(h>t)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(o.dims.length===2){if(f!==o.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${o.dims[0]}`);if(p!==o.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${o.dims[1]}`)}if(t/2!==l.dims[1]&&h/2!==l.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${l.dims[1]}`);if(p>d)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Wm=(n,e)=>{let{interleaved:i,numHeads:o,rotaryEmbeddingDim:l,scale:c}=e,a=n[0].dims[0],h=M.sizeFromDimension(n[0].dims,1),f=n[0].dims[n[0].dims.length-2],p=h/f,d=n[2].dims[1],r=l===0?d*2:p/o,t=new Array(a,f,p/r,r-d),u=M.computeStrides(t),s=[{type:1,data:c},{type:12,data:t},{type:12,data:u},...n[0].dims.length===3?new Array({type:12,data:[h,p,r,1]}):[],...n[0].dims.length===4?new Array({type:12,data:[h,r,f*r,1]}):[],...X(n[0].dims,n[1].dims,n[2].dims,n[3].dims,n[0].dims)],m=g=>{let b=U("input",n[0].dataType,n[0].dims.length),y=U("position_ids",n[1].dataType,n[1].dims.length),w=U("cos_cache",n[2].dataType,n[2].dims.length),x=U("sin_cache",n[3].dataType,n[3].dims.length),v=K("output",n[0].dataType,n[0].dims.length);return g.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:t.length},{name:"global_strides",type:"u32",length:u.length},{name:"input_output_strides",type:"u32",length:u.length}]),`
        ${g.declareVariables(b,y,w,x,v)}

        ${g.mainStart(mr)}
          let half_rotary_emb_dim = uniforms.${w.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${g.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${y.broadcastedIndicesToOffset("bsnh.xy",K("",y.type.tensor,2))};
            let position_id =
                u32(${y.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${i});
            let j = i + select(half_rotary_emb_dim, 1, ${i});
            let re = ${b.getByOffset("i")} * ${w.get("position_id","bsnh[3]")} -
                ${b.getByOffset("j")} * ${x.get("position_id","bsnh[3]")};
            ${v.setByOffset("i","re")}
            let im = ${b.getByOffset("i")} * ${x.get("position_id","bsnh[3]")} +
                ${b.getByOffset("j")} * ${w.get("position_id","bsnh[3]")};
            ${v.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${v.setByOffset("k",b.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:we({interleaved:i}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:m,getRunData:()=>({outputs:[{dims:n[0].dims,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(t)/mr)},programUniforms:s})}},id=(n,e)=>{Um(n.inputs,e),n.compute(Wm(n.inputs,e))}}),Nm,Vm,od,sd=j(()=>{ye(),xe(),_e(),Nm=n=>{if(!n||n.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=n[0],i=n[1],o=n[2];if(e.dataType!==i.dataType||e.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(i.dims.length!==3&&i.dims.length!==2)throw new Error("Skip must be 2D or 3D");let l=e.dims[e.dims.length-1],c=e.dims[e.dims.length-2];if(i.dims[i.dims.length-1]!==l)throw new Error("Skip must have the same hidden size as input");if(i.dims[i.dims.length-2]!==c)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==l)throw new Error("Gamma must have the same hidden size as input");if(n.length>3){let a=n[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==l)throw new Error("Beta must have the same hidden size as input")}if(n.length>4){let a=n[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==l)throw new Error("Bias must have the same hidden size as input")}},Vm=(n,e,i,o)=>{let l=e.simplified,c=n[0].dims,a=M.size(c),h=c,f=a,p=c.slice(-1)[0],d=o?c.slice(0,-1).concat(1):[],r=!l&&n.length>3,t=n.length>4,u=o&&i>1,s=o&&i>2,m=i>3,g=64,b=Ue(p),y=[{type:12,data:f},{type:12,data:b},{type:12,data:p},{type:1,data:e.epsilon}],w=v=>{let E=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],O=[U("x",n[0].dataType,n[0].dims,b),U("skip",n[1].dataType,n[1].dims,b),U("gamma",n[2].dataType,n[2].dims,b)];r&&O.push(U("beta",n[3].dataType,n[3].dims,b)),t&&O.push(U("bias",n[4].dataType,n[4].dims,b)),O.push(K("output",n[0].dataType,h,b)),u&&O.push(K("mean_output",1,d)),s&&O.push(K("inv_std_output",1,d)),m&&O.push(K("input_skip_bias_sum",n[0].dataType,h,b));let C=Be(n[0].dataType),S=Be(1,b);return`

      ${v.registerUniforms(E).declareVariables(...O)}
      var<workgroup> sum_shared : array<${S}, ${g}>;
      var<workgroup> sum_squared_shared : array<${S}, ${g}>;

      ${v.mainStart([g,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${g};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${g};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${g-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${t?"bias[offset1d + i]":C+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${m?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${fr(C,b,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${g};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${At("sum",b)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${At("square_sum",b)} / f32(uniforms.hidden_size) ${l?"":"- mean * mean"} + uniforms.epsilon);
        ${u?"mean_output[global_idx] = mean;":""}
        ${s?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${l?"":`- ${C}(mean)`}) *
            ${C}(inv_std_dev) * gamma[offset1d + i]
            ${r?"+ beta[offset1d + i]":""};
        }
      }`},x=[{dims:h,dataType:n[0].dataType}];return i>1&&x.push({dims:d,dataType:1}),i>2&&x.push({dims:d,dataType:1}),i>3&&x.push({dims:c,dataType:n[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${b};${u};${s};${m}`,inputDependencies:n.map((v,E)=>"type")},getShaderSource:w,getRunData:()=>({outputs:x,dispatchGroup:{x:Math.ceil(f/p)},programUniforms:y})}},od=(n,e)=>{Nm(n.inputs);let i=[0];n.outputCount>1&&i.push(-3),n.outputCount>2&&i.push(-3),n.outputCount>3&&i.push(3),n.compute(Vm(n.inputs,e,n.outputCount,!1),{outputs:i})}}),Hm,ui,Gm,ud,Lm,Fm,ld,dd,cd=j(()=>{ye(),xe(),Ze(),_e(),Hm=(n,e)=>{if(!n||n.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");n.slice(1).forEach((i,o)=>{if(n[o+1].dataType!==6&&n[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},ui=(n,e)=>{let i=[];if(n.length>e)if(n[e].dataType===7)n[e].getBigInt64Array().forEach(o=>i.push(Number(o)));else if(n[e].dataType===6)n[e].getInt32Array().forEach(o=>i.push(Number(o)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return i},Gm=(n,e)=>{if(n.length>1){let i=ui(n,1),o=ui(n,2),l=ui(n,3);return l.length===0&&(l=[...Array(n[0].dims.length).keys()]),we({starts:i,ends:o,axes:l})}else return e},ud=(n,e,i,o,l)=>{let c=n;return n<0&&(c+=i[o[e]]),l[e]<0?Math.max(0,Math.min(c,i[o[e]]-1)):Math.max(0,Math.min(c,i[o[e]]))},Lm=(n,e,i)=>`fn calculateInputIndices(output_indices: ${e.type.indices}) -> ${n.type.indices} {
          var input_indices: ${n.type.indices};
          var carry = 0u;
          for (var i = ${i.length}; i >= 0; i--) {
            let input_shape_i = ${fe("uniforms.input_shape","i",i.length)};
            let steps_i = ${fe("uniforms.steps","i",i.length)};
            let signs_i = ${fe("uniforms.signs","i",i.length)};
            let starts_i = ${fe("uniforms.starts","i",i.length)};
            var output_index = ${e.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${n.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,Fm=(n,e)=>{let i=n[0].dims,o=M.size(i),l=e.axes.length>0?M.normalizeAxes(e.axes,i.length):[...Array(i.length).keys()],c=ui(n,4);c.forEach(b=>b!==0||(()=>{throw new Error("step cannot be 0")})),c.length===0&&(c=Array(l.length).fill(1));let a=e.starts.map((b,y)=>ud(b,y,i,l,c)),h=e.ends.map((b,y)=>ud(b,y,i,l,c));if(l.length!==a.length||l.length!==h.length)throw new Error("start, ends and axes should have the same number of elements");if(l.length!==i.length)for(let b=0;b<i.length;++b)l.includes(b)||(a.splice(b,0,0),h.splice(b,0,i[b]),c.splice(b,0,1));let f=c.map(b=>Math.sign(b));c.forEach((b,y,w)=>{if(b<0){let x=(h[y]-a[y])/b,v=a[y],E=v+x*c[y];a[y]=E,h[y]=v,w[y]=-b}});let p=i.slice(0);l.forEach((b,y)=>{p[b]=Math.ceil((h[b]-a[b])/c[b])});let d={dims:p,dataType:n[0].dataType},r=K("output",n[0].dataType,p.length),t=U("input",n[0].dataType,n[0].dims.length),u=M.size(p),s=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:f.length},{name:"steps",type:"u32",length:c.length}],m=[{type:12,data:u},{type:12,data:a},{type:6,data:f},{type:12,data:c},...X(n[0].dims,p)],g=b=>`
      ${b.registerUniforms(s).declareVariables(t,r)}
        ${Lm(t,r,i)}
        ${b.mainStart()}
          ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${r.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${r.setByOffset("global_idx",t.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${f.length}_${a.length}_${c.length}`,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:m})}},ld=(n,e)=>{Hm(n.inputs,e);let i=Gm(n.inputs,e);n.compute(Fm(n.inputs,i),{inputs:[0]})},dd=n=>{let e=n.starts,i=n.ends,o=n.axes;return we({starts:e,ends:i,axes:o})}}),qm,jm,pd,md,fd=j(()=>{ye(),xe(),Ze(),_e(),qm=n=>{if(!n||n.length!==1)throw new Error("Softmax op requires 1 input.")},jm=(n,e)=>{let i=n.dims,o=M.size(i),l=64,c=e.axis;if(c<0&&(c=i.length+c),c<i.length-1)throw new Error("softmax only supports last axis for now.");let a=i[c],h=o/a,f=Ue(a),p=a/f,d=(g,b)=>b===4?`max(max(${g}.x, ${g}.y), max(${g}.z, ${g}.w))`:b===2?`max(${g}.x, ${g}.y)`:b===3?`max(max(${g}.x, ${g}.y), ${g}.z)`:g,r=U("x",n.dataType,n.dims,f),t=K("result",n.dataType,n.dims,f),u=r.type.value,s=Be(n.dataType)==="f32"?`var threadMax = ${u}(-3.402823e+38f);`:`var threadMax = ${u}(-65504.0h);`,m=g=>`
      var<workgroup> rowMaxShared : ${u};
      var<workgroup> rowSumShared : ${u};
      var<workgroup> threadShared : array<${u}, ${l}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${u} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${u}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${g.registerUniform("packedCols","i32").declareVariables(r,t)}
      ${g.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${l};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${s}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${u}(${d("threadShared[0]",f)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${u}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${u}(${At("threadShared[0]",f)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${f}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:i,dataType:n.dataType}],dispatchGroup:{x:h},programUniforms:[{type:6,data:p}]}),getShaderSource:m}},pd=(n,e)=>{qm(n.inputs),n.compute(jm(n.inputs[0],e))},md=n=>we({axis:n.axis})}),Km,Ym,Xm,Zm,Qm,hd,gd,yd=j(()=>{ye(),xe(),Ze(),_e(),Km=n=>{if(!n||n.length<1)throw new Error("too few inputs")},Ym=(n,e)=>{let i=[],o=e.numOutputs;return n[1].dims[0]>0&&(n[1].getBigInt64Array().forEach(l=>i.push(Number(l))),o=i.length),we({numOutputs:o,axis:e.axis,splitSizes:i})},Xm=n=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${n}u; i += 1u ) {
    if (index < ${fe("uniforms.size_in_split_axis","i",n)}) {
        return i;
    }
    }
    return ${n}u;
}`,Zm=n=>{let e=n.length,i=[];for(let o=0;o<e;++o){let l=n[o].setByIndices("indices","input[global_idx]");e===1?i.push(l):o===0?i.push(`if (output_number == ${o}u) { ${l} }`):o===e-1?i.push(`else { ${l} }`):i.push(`else if (output_number == ${o}) { ${l} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${n[0].type.indices}, global_idx: u32) {
        ${i.join(`
`)}
      }`},Qm=(n,e)=>{let i=n[0].dims,o=M.size(i),l=n[0].dataType,c=M.normalizeAxis(e.axis,i.length),a=new Array(e.numOutputs),h=U("input",l,i.length),f=new Array(e.numOutputs),p=[],d=[],r=0,t=[{type:12,data:o}];for(let s=0;s<e.numOutputs;s++){r+=e.splitSizes[s],f[s]=r;let m=i.slice();m[e.axis]=e.splitSizes[s],d.push(m),a[s]=K(`output${s}`,l,m.length),p.push({dims:d[s],dataType:n[0].dataType})}t.push({type:12,data:f},...X(i,...d));let u=s=>`
  ${s.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",f.length).declareVariables(h,...a)}
  ${Xm(f.length)}
  ${Zm(a)}

  ${s.mainStart()}
    ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${h.offsetToIndices("global_idx")};
    var index = ${h.indicesGet("indices",c)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${fe("uniforms.size_in_split_axis","output_number - 1u",f.length)};
      ${h.indicesSet("indices",c,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey,inputDependencies:["rank"]},getShaderSource:u,getRunData:()=>({outputs:p,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:t})}},hd=(n,e)=>{Km(n.inputs);let i=n.inputs.length===1?e:Ym(n.inputs,e);n.compute(Qm(n.inputs,i),{inputs:[0]})},gd=n=>{let e=n.axis,i=n.splitSizes,o=n.numOutputs<0?i.length:n.numOutputs;if(o!==i.length)throw new Error("numOutputs and splitSizes lengh must be equal");return we({axis:e,numOutputs:o,splitSizes:i})}}),bd,Jm,ef,tf,vd,wd=j(()=>{ye(),xe(),_e(),bd=n=>Array.from(n.getBigInt64Array(),Number),Jm=n=>{if(!n||n.length!==2)throw new Error("Tile requires 2 inputs.");if(n[0].dataType!==1&&n[0].dataType!==6&&n[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(n[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(n[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(bd(n[1]).length!==n[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},ef=(n,e)=>{let i=[];for(let o=0;o<n.length;++o)i.push(n[o]*e[o]);return i},tf=n=>{let e=n[0].dims,i=bd(n[1]),o=ef(e,i),l=M.size(o),c=n[0].dataType,a=U("input",c,e.length),h=K("output",c,o.length),f=p=>`
      const inputShape = ${a.indices(...e)};
      ${p.registerUniform("output_size","u32").declareVariables(a,h)}
      ${p.mainStart()}
      ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${h.offsetToIndices("global_idx")};
      var input_indices: ${a.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${h.indicesGet("output_indices","i")}  % input_dim_i;

        ${a.indicesSet("input_indices","i","input_dim_value")}
      }
      ${h.setByOffset("global_idx",a.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${i}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},...X(n[0].dims,o)]}),getShaderSource:f}},vd=n=>{Jm(n.inputs),n.compute(tf(n.inputs),{inputs:[0]})}}),rf,nf,$d,_d=j(()=>{ye(),xe(),_e(),rf=(n,e,i,o,l)=>{let c=K("output_data",l,i.length,4),a=U("a_data",e[1].dataType,e[1].dims.length,4),h=U("b_data",e[2].dataType,e[2].dims.length,4),f=U("c_data",e[0].dataType,e[0].dims.length,4),p,d=(r,t,u)=>`select(${t}, ${r}, ${u})`;if(!o)p=c.setByOffset("global_idx",d(a.getByOffset("global_idx"),h.getByOffset("global_idx"),f.getByOffset("global_idx")));else{let r=(t,u,s="")=>{let m=`a_data[index_a${u}][component_a${u}]`,g=`b_data[index_b${u}][component_b${u}]`,b=`bool(c_data[index_c${u}] & (0xffu << (component_c${u} * 8)))`;return`
            let output_indices${u} = ${c.offsetToIndices(`global_idx * 4u + ${u}u`)};
            let offset_a${u} = ${a.broadcastedIndicesToOffset(`output_indices${u}`,c)};
            let offset_b${u} = ${h.broadcastedIndicesToOffset(`output_indices${u}`,c)};
            let offset_c${u} = ${f.broadcastedIndicesToOffset(`output_indices${u}`,c)};
            let index_a${u} = offset_a${u} / 4u;
            let index_b${u} = offset_b${u} / 4u;
            let index_c${u} = offset_c${u} / 4u;
            let component_a${u} = offset_a${u} % 4u;
            let component_b${u} = offset_b${u} % 4u;
            let component_c${u} = offset_c${u} % 4u;
            ${t}[${u}] = ${s}(${d(m,g,b)});
          `};l===9?p=`
            var data = vec4<u32>(0);
            ${r("data",0,"u32")}
            ${r("data",1,"u32")}
            ${r("data",2,"u32")}
            ${r("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:p=`
            ${r("output_data[global_idx]",0)}
            ${r("output_data[global_idx]",1)}
            ${r("output_data[global_idx]",2)}
            ${r("output_data[global_idx]",3)}
          `}return`
        ${n.registerUniform("vec_size","u32").declareVariables(f,a,h,c)}
        ${n.mainStart()}
        ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${p}
      }`},nf=n=>{let e=n[1].dims,i=n[2].dims,o=n[0].dims,l=n[1].dataType,c=!(M.areEqual(e,i)&&M.areEqual(i,o)),a=e,h=M.size(e);if(c){let p=Rt.calcShape(Rt.calcShape(e,i,!1),o,!1);if(!p)throw new Error("Can't perform where op on the given tensors");a=p,h=M.size(a)}let f=Math.ceil(h/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:p=>rf(p,n,a,c,l),getRunData:()=>({outputs:[{dims:a,dataType:l}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:f},...X(o,e,i,a)]})}},$d=n=>{n.compute(nf(n.inputs))}}),xd,Sd=j(()=>{zs(),aa(),Ws(),Vs(),Cu(),Du(),ia(),da(),Xu(),Ju(),rl(),sl(),dl(),pl(),hl(),bl(),$l(),xl(),Cl(),pa(),Al(),Pl(),zl(),Zl(),Jl(),jn(),nd(),ad(),sd(),cd(),fd(),yd(),wd(),Rr(),Jn(),_d(),xd=new Map([["Abs",[Hs]],["Acos",[Gs]],["Acosh",[Ls]],["Add",[Iu]],["ArgMax",[Rs,na]],["ArgMin",[Ps,na]],["Asin",[Fs]],["Asinh",[qs]],["Atan",[js]],["Atanh",[Ks]],["Attention",[Ms]],["AveragePool",[Hl,Vl]],["BatchNormalization",[Us]],["BiasAdd",[Ns]],["BiasSplitGelu",[Su]],["Cast",[Xs,Ys]],["Ceil",[Qs]],["Clip",[Zs]],["Concat",[Bs,Ds]],["Conv",[ha,fa]],["ConvTranspose",[Yu,Ku]],["Cos",[Js]],["Cosh",[eu]],["CumSum",[Zu,Qu]],["DepthToSpace",[el,tl]],["Div",[Tu]],["Einsum",[al,ol]],["Elu",[tu,Zn]],["Equal",[Au]],["Erf",[ru]],["Exp",[nu]],["Expand",[ll]],["FastGelu",[cl]],["Floor",[iu]],["FusedConv",[ha,fa]],["Gather",[fl,ml]],["GatherElements",[yl,gl]],["Gelu",[au]],["Gemm",[wl,vl]],["GlobalAveragePool",[Fl,Ll]],["GlobalMaxPool",[Xl,Yl]],["Greater",[Pu]],["GreaterOrEqual",[zu]],["HardSigmoid",[mu,pu]],["InstanceNormalization",[_l]],["LayerNormalization",[Sl]],["LeakyRelu",[ou,Zn]],["Less",[Ru]],["LessOrEqual",[Bu]],["Log",[_u]],["MatMul",[Hu]],["MatMulNBits",[Il,Tl]],["MaxPool",[jl,Kl]],["Mul",[Eu]],["MultiHeadAttention",[Ol,kl]],["Neg",[uu]],["Not",[su]],["Pad",[Rl]],["Pow",[ku]],["Range",[Ql]],["Reciprocal",[lu]],["ReduceMin",[Is]],["ReduceMean",[$s]],["ReduceMax",[Cs]],["ReduceSum",[As]],["ReduceProd",[Ts]],["ReduceL1",[_s]],["ReduceL2",[xs]],["ReduceLogSum",[ks]],["ReduceLogSumExp",[Ss]],["ReduceSumSquare",[Es]],["Relu",[du]],["Resize",[td,rd]],["RotaryEmbedding",[id]],["Sigmoid",[cu]],["Sin",[fu]],["Sinh",[hu]],["Slice",[ld,dd]],["SkipLayerNormalization",[od]],["Split",[hd,gd]],["Sqrt",[gu]],["Softmax",[pd,md]],["Sub",[Ou]],["Tan",[yu]],["Tanh",[vu]],["ThresholdedRelu",[$u,Zn]],["Tile",[vd]],["Transpose",[us,ls]],["Where",[$d]]])}),li,Cd=j(()=>{_t(),Yt(),_e(),li=class{constructor(n){this.backend=n,this.repo=new Map,this.attributesBound=!1}getArtifact(n){return this.repo.get(n)}setArtifact(n,e){this.repo.set(n,e)}run(n,e,i,o,l){yt(n.programInfo.name);let c=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let h=[];for(let p of e)h.push({binding:h.length,resource:{buffer:p.buffer}});for(let p of i)h.push({binding:h.length,resource:{buffer:p.buffer}});l&&h.push({binding:h.length,resource:l});let f=c.createBindGroup({layout:n.computePipeline.getBindGroupLayout(0),entries:h,label:n.programInfo.name});if(this.backend.sessionStatus==="capturing"){let p={kernelId:this.backend.currentKernelId,computePipeline:n.computePipeline,bindGroup:f,dispatchGroup:o};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(p)}a.setPipeline(n.computePipeline),a.setBindGroup(0,f),a.dispatchWorkgroups(...o),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),ut(n.programInfo.name)}dispose(){}build(n,e){yt(n.name);let i=this.backend.device,o=[];i.features.has("shader-f16")&&o.push("enable f16;");let l=os(e,this.backend.device.limits),c=n.getShaderSource(l),a=`${o.join(`
`)}
${l.additionalImplementations}
${c}`,h=i.createShaderModule({code:a,label:n.name});Ne("verbose",()=>`[WebGPU] ${n.name} shader code: ${a}`);let f=i.createComputePipeline({compute:{module:h,entryPoint:"main"},layout:"auto",label:n.name});return ut(n.name),{programInfo:n,computePipeline:f,uniformVariablesInfo:l.variablesInfo}}normalizeDispatchGroupSize(n){let e=typeof n=="number"?n:n.x,i=typeof n=="number"?1:n.y||1,o=typeof n=="number"?1:n.z||1,l=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(e<=l&&i<=l&&o<=l)return[e,i,o];let c=e*i*o,a=Math.ceil(Math.sqrt(c));if(a>l){if(a=Math.ceil(Math.cbrt(c)),a>l)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}}),af,of,$a,di,Id=j(()=>{_t(),ye(),Yt(),es(),as(),Sd(),Cd(),af=(n,e)=>{if(e.length!==n.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${n.length}.`);let i=[];for(let o=0;o<n.length;++o){let l=n[o].dataType;switch(e[o]){case"none":{i.push("");break}case"type":{i.push(`${l}`);break}case"rank":{let c=n[o].dims.length;i.push(`${l};${c}`);break}case"dims":{let c=n[o].dims.join(",");i.push(`${l};${c}`);break}default:throw new Error(`unsupported input dependency: ${e[o]}`)}}return i.join("|")},of=(n,e,i)=>{var l,c;let o=n.name;return(l=n.shaderCache)!=null&&l.hint&&(o+="["+n.shaderCache.hint+"]"),o+=":"+i+`:${af(e,((c=n.shaderCache)==null?void 0:c.inputDependencies)??new Array(e.length).fill("dims"))}`,o},$a=class{constructor(n){n&&(this.architecture=n.architecture,this.vendor=n.vendor)}isArchitecture(n){return this.architecture===n}isVendor(n){return this.vendor===n}},di=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let n=this.kernelCustomData.get(this.currentKernelId);return n||(n={},this.kernelCustomData.set(this.currentKernelId,n)),n}async initialize(n,e){this.env=n;let i=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:e.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:e.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:e.limits.maxStorageBufferBindingSize,maxBufferSize:e.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:e.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:e.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:e.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:e.limits.maxComputeWorkgroupSizeZ},requiredFeatures:i};e.features.has("chromium-experimental-timestamp-query-inside-passes")?i.push("chromium-experimental-timestamp-query-inside-passes"):e.features.has("timestamp-query")&&i.push("timestamp-query"),e.features.has("shader-f16")&&i.push("shader-f16"),this.device=await e.requestDevice(o),this.adapterInfo=new $a(await e.requestAdapterInfo()),this.gpuDataManager=is(this),this.programManager=new li(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Qo(n.logLevel,!!n.debug),this.device.onuncapturederror=l=>{l.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${l.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:e,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let n=this.getCommandEncoder(),e={};this.queryType==="at-passes"&&(e.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=n.beginComputePass(e)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;yt(),this.endComputePass();let n;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),n=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(n,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,n,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&n.mapAsync(GPUMapMode.READ).then(()=>{var o;let e=new BigUint64Array(n.getMappedRange()),i=this.pendingQueries.get(n);for(let l=0;l<e.length/2;l++){let c=i[l],a=c.kernelId,h=this.kernels.get(a),f=h.kernelType,p=h.kernelName,d=c.programName,r=c.inputTensorViews,t=c.outputTensorViews,u=e[l*2],s=e[l*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=u);let m=Number(u-this.queryTimeBase),g=Number(s-this.queryTimeBase);if(!Number.isSafeInteger(m)||!Number.isSafeInteger(g))throw new RangeError("incorrect timestamp range");if((o=this.env.webgpu.profiling)!=null&&o.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:r.map(b=>({dims:b.dims,dataType:Kt(b.dataType)})),outputsMetadata:t.map(b=>({dims:b.dims,dataType:Kt(b.dataType)})),kernelId:a,kernelType:f,kernelName:p,programName:d,startTime:m,endTime:g});else{let b="";r.forEach((w,x)=>{b+=`input[${x}]: [${w.dims}] | ${Kt(w.dataType)}, `});let y="";t.forEach((w,x)=>{y+=`output[${x}]: [${w.dims}] | ${Kt(w.dataType)}, `}),console.log(`[profiling] kernel "${a}|${f}|${p}|${d}" ${b}${y}execution time: ${g-m} ns`)}Bn("GPU",`${d}::${u}::${s}`)}n.unmap(),this.pendingQueries.delete(n)}),ut()}run(n,e,i,o,l,c){yt(n.name);let a=[];for(let y=0;y<e.length;++y){let w=e[y].data;if(w===0)continue;let x=this.gpuDataManager.get(w);if(!x)throw new Error(`no GPU data for input: ${w}`);a.push(x)}let{outputs:h,dispatchGroup:f,programUniforms:p}=n.getRunData(e),d=i.length===0?h.map((y,w)=>w):i;if(d.length!==h.length)throw new Error(`Output size ${d.length} must be equal to ${h.length}.`);let r=[],t=[];for(let y=0;y<h.length;++y){if(!Number.isInteger(d[y])||d[y]<-3||d[y]>=c)throw new Error(`Invalid output index: ${d[y]}`);if(d[y]===-3)continue;let w=d[y]===-1,x=d[y]===-2,v=w||x?l(h[y].dataType,h[y].dims):o(d[y],h[y].dataType,h[y].dims);if(r.push(v),v.data===0)continue;let E=this.gpuDataManager.get(v.data);if(!E)throw new Error(`no GPU data for output: ${v.data}`);if(w&&this.temporaryData.push(E),x){let O=this.kernelPersistentData.get(this.currentKernelId);O||(O=[],this.kernelPersistentData.set(this.currentKernelId,O)),O.push(E)}t.push(E)}if(a.length!==e.length||t.length!==r.length){if(t.length===0)return ut(n.name),r;throw new Error(`Program ${n.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let u;if(p){let y=0,w=[];p.forEach(O=>{let C=typeof O.data=="number"?[O.data]:O.data;if(C.length===0)return;let S=O.type===10?2:4,N,Q;O.type===10?(Q=C.length>4?16:C.length>2?8:C.length*S,N=C.length>4?16:S*C.length):(Q=C.length<=2?C.length*S:16,N=16),y=Math.ceil(y/Q)*Q,w.push(y);let te=O.type===10?8:4;y+=C.length>4?Math.ceil(C.length/te)*N:C.length*S});let x=16;y=Math.ceil(y/x)*x;let v=new ArrayBuffer(y);p.forEach((O,C)=>{let S=w[C],N=typeof O.data=="number"?[O.data]:O.data;if(O.type===6)new Int32Array(v,S,N.length).set(N);else if(O.type===12)new Uint32Array(v,S,N.length).set(N);else if(O.type===10)new Uint16Array(v,S,N.length).set(N);else if(O.type===1)new Float32Array(v,S,N.length).set(N);else throw new Error(`Unsupported uniform type: ${Kt(O.type)}`)});let E=this.gpuDataManager.create(y,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(E.buffer,0,v,0,y),this.gpuDataManager.release(E.id),u={offset:0,size:y,buffer:E.buffer}}let s=this.programManager.normalizeDispatchGroupSize(f),m=s[1]===1&&s[2]===1,g=of(n,e,m),b=this.programManager.getArtifact(g);if(b||(b=this.programManager.build(n,s),this.programManager.setArtifact(g,b),Ne("info",()=>`[artifact] key: ${g}, programName: ${n.name}`)),p&&b.uniformVariablesInfo){if(p.length!==b.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${b.uniformVariablesInfo.length}, got ${p.length} in program "${b.programInfo.name}".`);for(let y=0;y<p.length;y++){let w=p[y],x=w.type,v=typeof w.data=="number"?1:w.data.length,[E,O]=b.uniformVariablesInfo[y];if(x!==E||v!==O)throw new Error(`Uniform variable ${y} mismatch: expect type ${E} with size ${O}, got type ${x} with size ${v} in program "${b.programInfo.name}".`)}}if(Ne("info",()=>`[ProgramManager] run "${n.name}" (key=${g}) with ${s[0]}x${s[1]}x${s[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let y={kernelId:this.currentKernelId,programName:b.programInfo.name,inputTensorViews:e,outputTensorViews:r};this.pendingKernels.push(y),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(y)}return this.programManager.run(b,a,t,s,u),ut(n.name),r}upload(n,e){this.gpuDataManager.upload(n,e)}memcpy(n,e){this.gpuDataManager.memcpy(n,e)}async download(n,e){await this.gpuDataManager.download(n,e)}alloc(n){return this.gpuDataManager.create(n).id}free(n){return this.gpuDataManager.release(n)}createKernel(n,e,i,o){let l=xd.get(n);if(!l)throw new Error(`kernel not implemented: ${n}`);let c={kernelType:n,kernelName:o,kernelEntry:l[0],attributes:[l[1],i]};this.kernels.set(e,c)}releaseKernel(n){let e=this.kernelPersistentData.get(n);if(e){for(let i of e)this.gpuDataManager.release(i.id);this.kernelPersistentData.delete(n)}this.kernelCustomData.delete(n),this.kernels.delete(n)}computeKernel(n,e,i){let o=this.kernels.get(n);if(!o)throw new Error(`kernel not created: ${n}`);let l=o.kernelType,c=o.kernelName,a=o.kernelEntry,h=o.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${l}] ${c}" is not allowed to be called recursively`);this.currentKernelId=n,h[0]&&(h[1]=h[0](h[1]),h[0]=void 0),Ne("info",()=>`[WebGPU] Start to run kernel "[${l}] ${c}"...`);let f=this.env.debug;this.temporaryData=[];try{return f&&this.device.pushErrorScope("validation"),a(e,h[1]),0}catch(p){return i.push(Promise.resolve(`[WebGPU] Kernel "[${l}] ${c}" failed. ${p}`)),1}finally{f&&i.push(this.device.popErrorScope().then(p=>p?`GPU validation error for kernel "[${l}] ${c}": ${p.message}`:null));for(let p of this.temporaryData)this.gpuDataManager.release(p.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(n,e,i,o){let l=this.sessionExternalDataMapping.get(n);l||(l=new Map,this.sessionExternalDataMapping.set(n,l));let c=l.get(e),a=this.gpuDataManager.registerExternalBuffer(i,o,c==null?void 0:c[1]);return l.set(e,[a,i]),a}unregisterBuffers(n){let e=this.sessionExternalDataMapping.get(n);e&&(e.forEach(i=>this.gpuDataManager.unregisterExternalBuffer(i[1])),this.sessionExternalDataMapping.delete(n))}getBuffer(n){let e=this.gpuDataManager.get(n);if(!e)throw new Error(`no GPU data for buffer: ${n}`);return e.buffer}createDownloader(n,e,i){return async()=>{let o=await Xi(this,n,e);return Jo(o.buffer,i)}}writeTimestamp(n){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,n)}setQueryType(){var n;this.queryType="none",(((n=this.env.webgpu.profiling)==null?void 0:n.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ne("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ne("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ne("info","replay"),this.sessionStatus="replaying";let n=this.capturedCommandList.get(this.currentSessionId),e=this.capturedPendingKernels.get(this.currentSessionId),i=n.length;this.pendingKernels=[];for(let o=0;o<i;o++){let l=this.getComputePassEncoder(),c=n[o];this.writeTimestamp(this.pendingDispatchNumber*2),l.setPipeline(c.computePipeline),l.setBindGroup(0,c.bindGroup),l.dispatchWorkgroups(...c.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(e[o]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(n){this.unregisterBuffers(n),this.capturedCommandList.has(n)&&this.capturedCommandList.delete(n),this.capturedPendingKernels.has(n)&&this.capturedPendingKernels.delete(n),this.gpuDataManager.onReleaseSession(n)}onRunStart(n){this.currentSessionId=n,this.setQueryType()}}}),Td={};kr(Td,{init:()=>sf});var on,_a,sf,Ad=j(()=>{ye(),Id(),Yt(),xe(),on=class Zd{constructor(e,i,o,l){this.module=e,this.dataType=i,this.data=o,this.dims=l}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=M.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=M.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=M.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(M.size(e)!==M.size(this.dims))throw new Error("Invalid new shape");return new Zd(this.module,this.dataType,this.data,e)}},_a=class{constructor(n,e,i){this.module=n,this.backend=e,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=e.adapterInfo;let o=n.HEAPU32,l=i>>>2;this.opKernelContext=o[l++];let c=o[l++];this.outputCount=o[l++],this.customDataOffset=o[l++],this.customDataSize=o[l++];let a=[];for(let h=0;h<c;h++){let f=o[l++],p=o[l++],d=o[l++],r=[];for(let t=0;t<d;t++)r.push(o[l++]);a.push(new on(n,f,p,r))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(n,e){var a;let i=((a=e==null?void 0:e.inputs)==null?void 0:a.map(h=>typeof h=="number"?this.inputs[h]:h))??this.inputs,o=(e==null?void 0:e.outputs)??[],l=(h,f,p)=>new on(this.module,f,this.output(h,p),p),c=(h,f)=>{let p=cr(h);if(!p)throw new Error(`Unsupported data type: ${h}`);let d=p*M.size(f),r=d>0?this.backend.gpuDataManager.create(d).id:0;return new on(this.module,h,r,f)};return this.backend.run(n,i,o,l,c,this.outputCount)}output(n,e){let i=this.module.stackSave();try{let o=this.module.stackAlloc((1+e.length)*4),l=o>>2;this.module.HEAPU32[l++]=e.length;for(let c=0;c<e.length;c++)this.module.HEAPU32[l++]=e[c];return this.module._JsepOutput(this.opKernelContext,n,o)}catch(o){throw new Error(`Failed to generate kernel's output[${n}] with dims [${e}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(i)}}},sf=async(n,e,i,o)=>{let l=e.jsepInit;if(!l)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(n==="webgpu"){let c=new di;await c.initialize(i,o),l("webgpu",[c,a=>c.alloc(a),a=>c.free(a),(a,h,f,p=!1)=>{if(p)Ne("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${a}, dst=${h}, size=${f}`),c.memcpy(a,h);else{Ne("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${a}, gpuDataId=${h}, size=${f}`);let d=e.HEAPU8.subarray(a>>>0,(a>>>0)+f);c.upload(h,d)}},async(a,h,f)=>{Ne("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${h}, size=${f}`),await c.download(a,()=>e.HEAPU8.subarray(h>>>0,(h>>>0)+f))},(a,h,f)=>c.createKernel(a,h,f,e.UTF8ToString(e._JsepGetNodeName(h))),a=>c.releaseKernel(a),(a,h,f,p)=>{Ne("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${f}, kernel=${a}, contextDataOffset=${h}`);let d=new _a(e,c,h);return c.computeKernel(a,d,p)},()=>c.captureBegin(),()=>c.captureEnd(),()=>c.replay()])}else l("webnn")}}),uf,kd,Od,hr,lf,xa,Pd,Rd,Ed,zd,Bd,Dd,Md=j(()=>{jo(),Yo(),ye(),Or(),Wn(),qi(),uf=(n,e)=>{Fe()._OrtInit(n,e)!==0&&We("Can't initialize onnxruntime.")},kd=async n=>{uf(n.wasm.numThreads,en(n.logLevel))},Od=async(n,e)=>{{let i=(Ad(),sr(Td)).init;if(e==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let o=n.webgpu.adapter;if(o){if(typeof o.limits!="object"||typeof o.features!="object"||typeof o.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let l=n.webgpu.powerPreference;if(l!==void 0&&l!=="low-power"&&l!=="high-performance")throw new Error(`Invalid powerPreference setting: "${l}"`);let c=n.webgpu.forceFallbackAdapter;if(c!==void 0&&typeof c!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${c}"`);if(o=await navigator.gpu.requestAdapter({powerPreference:l,forceFallbackAdapter:c}),!o)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}if(!n.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await i("webgpu",Fe(),n,o)}if(e==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await i("webnn",Fe(),n)}}},hr=new Map,lf=n=>{let e=Fe(),i=e.stackSave();try{let o=e.stackAlloc(8);return e._OrtGetInputOutputCount(n,o,o+4)!==0&&We("Can't get session input/output count."),[e.HEAP32[o/4],e.HEAP32[o/4+1]]}finally{e.stackRestore(i)}},xa=n=>{let e=Fe(),i=e._malloc(n.byteLength);if(i===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${n.byteLength}.`);return e.HEAPU8.set(n,i),[i,n.byteLength]},Pd=async(n,e)=>{var r,t;let i,o,l=Fe();Array.isArray(n)?[i,o]=n:n.buffer===l.HEAPU8.buffer?[i,o]=[n.byteOffset,n.byteLength]:[i,o]=xa(n);let c=0,a=0,h=0,f=[],p=[],d=[];try{if([a,f]=Ko(e),(e==null?void 0:e.externalData)&&l.mountExternalData){let x=[];for(let v of e.externalData){let E=typeof v=="string"?v:v.path;x.push(tn(typeof v=="string"?v:v.data).then(O=>{l.mountExternalData(E,O)}))}await Promise.all(x)}c=await l._OrtCreateSession(i,o,a),c===0&&We("Can't create a session.");let[u,s]=lf(c),m=!!(e!=null&&e.enableGraphCapture),g=[],b=[],y=[];for(let x=0;x<u;x++){let v=l._OrtGetInputName(c,x);v===0&&We("Can't get an input name."),p.push(v),g.push(l.UTF8ToString(v))}for(let x=0;x<s;x++){let v=l._OrtGetOutputName(c,x);v===0&&We("Can't get an output name."),d.push(v);let E=l.UTF8ToString(v);b.push(E);{if(m&&(e==null?void 0:e.preferredOutputLocation)===void 0){y.push("gpu-buffer");continue}let O=typeof(e==null?void 0:e.preferredOutputLocation)=="string"?e.preferredOutputLocation:((r=e==null?void 0:e.preferredOutputLocation)==null?void 0:r[E])??"cpu";if(O!=="cpu"&&O!=="cpu-pinned"&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}.`);if(m&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);y.push(O)}}let w=null;return y.some(x=>x==="gpu-buffer")&&(h=l._OrtCreateBinding(c),h===0&&We("Can't create IO binding."),w={handle:h,outputPreferredLocations:y,outputPreferredLocationsEncoded:y.map(x=>Fi(x))}),hr.set(c,[c,p,d,w,m,!1]),[c,g,b]}catch(u){throw p.forEach(s=>l._OrtFree(s)),d.forEach(s=>l._OrtFree(s)),h!==0&&l._OrtReleaseBinding(h),c!==0&&l._OrtReleaseSession(c),u}finally{l._free(i),a!==0&&l._OrtReleaseSessionOptions(a),f.forEach(u=>l._free(u)),(t=l.unmountExternalData)==null||t.call(l)}},Rd=n=>{var f;let e=Fe(),i=hr.get(n);if(!i)throw new Error(`cannot release session. invalid session id: ${n}`);let[o,l,c,a,h]=i;a&&(h&&e._OrtClearBoundOutputs(a.handle),e._OrtReleaseBinding(a.handle)),(f=e.jsepOnReleaseSession)==null||f.call(e,n),l.forEach(p=>e._OrtFree(p)),c.forEach(p=>e._OrtFree(p)),e._OrtReleaseSession(o),hr.delete(n)},Ed=(n,e,i,o,l,c=!1)=>{if(!n){e.push(0);return}let a=Fe(),h=n[0],f=n[1],p=n[3],d,r;if(h==="string"&&p==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(c&&p!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${l} when enableGraphCapture is true.`);if(p==="gpu-buffer"){let s=n[2].gpuBuffer,m=cr(Li(h));r=f.reduce((b,y)=>b*y,1)*m;let g=a.jsepRegisterBuffer;if(!g)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');d=g(o,l,s,r)}else{let s=n[2];if(Array.isArray(s)){r=4*s.length,d=a._malloc(r),i.push(d);let m=d/4;for(let g=0;g<s.length;g++){if(typeof s[g]!="string")throw new TypeError(`tensor data at index ${g} is not a string`);a.HEAPU32[m++]=qe(s[g],i)}}else r=s.byteLength,d=a._malloc(r),i.push(d),a.HEAPU8.set(new Uint8Array(s.buffer,s.byteOffset,r),d)}let t=a.stackSave(),u=a.stackAlloc(4*f.length);try{let s=u/4;f.forEach(g=>a.HEAP32[s++]=g);let m=a._OrtCreateTensor(Li(h),d,r,u,f.length,Fi(p));m===0&&We(`Can't create tensor for input/output. session=${o}, index=${l}.`),e.push(m)}finally{a.stackRestore(t)}},zd=async(n,e,i,o,l,c)=>{var N,Q;let a=Fe(),h=hr.get(n);if(!h)throw new Error(`cannot run inference. invalid session id: ${n}`);let f=h[0],p=h[1],d=h[2],r=h[3],t=h[4],u=h[5],s=e.length,m=o.length,g=0,b=[],y=[],w=[],x=[],v=a.stackSave(),E=a.stackAlloc(s*4),O=a.stackAlloc(s*4),C=a.stackAlloc(m*4),S=a.stackAlloc(m*4);try{[g,b]=qo(c);for(let ce=0;ce<s;ce++)Ed(i[ce],y,x,n,e[ce],t);for(let ce=0;ce<m;ce++)Ed(l[ce],w,x,n,s+o[ce],t);let te=E/4,Z=O/4,Y=C/4,G=S/4;for(let ce=0;ce<s;ce++)a.HEAPU32[te++]=y[ce],a.HEAPU32[Z++]=p[e[ce]];for(let ce=0;ce<m;ce++)a.HEAPU32[Y++]=w[ce],a.HEAPU32[G++]=d[o[ce]];if(r&&!u){let{handle:ce,outputPreferredLocations:se,outputPreferredLocationsEncoded:be}=r;if(p.length!==s)throw new Error(`input count from feeds (${s}) is expected to be always equal to model's input count (${p.length}).`);for(let ee=0;ee<s;ee++){let ve=e[ee];await a._OrtBindInput(ce,p[ve],y[ee])!==0&&We(`Can't bind input[${ee}] for session=${n}.`)}for(let ee=0;ee<m;ee++){let ve=o[ee];(N=l[ee])!=null&&N[3]?a._OrtBindOutput(ce,d[ve],w[ee],0)!==0&&We(`Can't bind pre-allocated output[${ee}] for session=${n}.`):a._OrtBindOutput(ce,d[ve],0,be[ve])!==0&&We(`Can't bind output[${ee}] to ${se[ee]} for session=${n}.`)}hr.set(n,[f,p,d,r,t,!0])}(Q=a.jsepOnRunStart)==null||Q.call(a,f);let R;r?R=await a._OrtRunWithBinding(f,r.handle,m,C,g):R=await a._OrtRun(f,O,E,s,S,m,C,g),R!==0&&We("failed to call OrtRun().");let V=[];for(let ce=0;ce<m;ce++){let se=a.HEAPU32[C/4+ce];if(se===w[ce]){V.push(l[ce]);continue}let be=a.stackSave(),ee=a.stackAlloc(4*4),ve=!1,Ce,Ge=0;try{a._OrtGetTensorData(se,ee,ee+4,ee+8,ee+12)!==0&&We(`Can't access output tensor data on index ${ce}.`);let De=ee/4,ct=a.HEAPU32[De++];Ge=a.HEAPU32[De++];let ht=a.HEAPU32[De++],Wt=a.HEAPU32[De++],_n=[];for(let ft=0;ft<Wt;ft++)_n.push(a.HEAPU32[ht/4+ft]);a._OrtFree(ht);let jt=_n.reduce((ft,bt)=>ft*bt,1);Ce=Kt(ct);let ln=r==null?void 0:r.outputPreferredLocations[o[ce]];if(Ce==="string"){if(ln==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let ft=[],bt=Ge/4;for(let Lt=0;Lt<jt;Lt++){let Jt=a.HEAPU32[bt++],En=Lt===jt-1?void 0:a.HEAPU32[bt]-Jt;ft.push(a.UTF8ToString(Jt,En))}V.push([Ce,_n,ft,"cpu"])}else if(ln==="gpu-buffer"&&jt>0){let ft=a.jsepGetBuffer;if(!ft)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let bt=ft(Ge),Lt=cr(ct);if(Lt===void 0||!Vn(Ce))throw new Error(`Unsupported data type: ${Ce}`);ve=!0,V.push([Ce,_n,{gpuBuffer:bt,download:a.jsepCreateDownloader(bt,jt*Lt,Ce),dispose:()=>{a._OrtReleaseTensor(se)}},"gpu-buffer"])}else{let ft=Nn(Ce),bt=new ft(jt);new Uint8Array(bt.buffer,bt.byteOffset,bt.byteLength).set(a.HEAPU8.subarray(Ge,Ge+bt.byteLength)),V.push([Ce,_n,bt,"cpu"])}}finally{a.stackRestore(be),Ce==="string"&&Ge&&a._free(Ge),ve||a._OrtReleaseTensor(se)}}return r&&!t&&(a._OrtClearBoundOutputs(r.handle),hr.set(n,[f,p,d,r,t,!1])),V}finally{a.stackRestore(v),y.forEach(te=>a._OrtReleaseTensor(te)),w.forEach(te=>a._OrtReleaseTensor(te)),x.forEach(te=>a._free(te)),g!==0&&a._OrtReleaseRunOptions(g),b.forEach(te=>a._free(te))}},Bd=n=>{let e=Fe(),i=hr.get(n);if(!i)throw new Error("invalid session id");let o=i[0],l=e._OrtEndProfiling(o);l===0&&We("Can't get an profile file name."),e._OrtFree(l)},Dd=n=>{let e=[];for(let i of n){let o=i[2];!Array.isArray(o)&&"buffer"in o&&e.push(o.buffer)}return e}}),Ud=Er((n,e)=>{e.exports='/*!\n * ONNX Runtime Web v1.19.0-dev.20240509-69cfcba38a\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var ao=Object.defineProperty;var nl=Object.getOwnPropertyDescriptor;var ol=Object.getOwnPropertyNames;var il=Object.prototype.hasOwnProperty;var Y=(e,t)=>()=>(e&&(t=e(e=0)),t);var Wr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),gn=(e,t)=>{for(var r in t)ao(e,r,{get:t[r],enumerable:!0})},al=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of ol(t))!il.call(e,i)&&i!==r&&ao(e,i,{get:()=>t[i],enumerable:!(o=nl(t,i))||o.enumerable});return e};var wr=e=>al(ao({},"__esModule",{value:!0}),e);var so={};gn(so,{createReadStream:()=>Ai,readFile:()=>sl,readFileSync:()=>ul});var sl,ul,Ai,uo=Y(()=>{sl=void 0,ul=void 0,Ai=void 0});var lo={};gn(lo,{join:()=>dl});var dl,co=Y(()=>{dl=void 0});var Ei=Wr((Ti,po)=>{"use strict";var Ii=(()=>{var e=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(e||=__filename),function(t={}){var r=t,o,i,u=new Promise((s,m)=>{o=s,i=m});r.mountExternalData=(s,m)=>{(r.eb||(r.eb=new Map)).set(s,m)},r.unmountExternalData=()=>{delete r.eb};let a=()=>{let s=(g,$,T)=>(...B)=>{let L=dt,q=$?.();B=g(...B);let te=$?.();return q!==te&&(g=te,T(q),$=T=null),dt!=L?tn():B},m=g=>async(...$)=>{try{if(r.cb)throw Error("Session already started");let T=r.cb={xb:$[0],errors:[]},B=await g(...$);if(r.cb!==T)throw Error("Session mismatch");r.kb?.flush();let L=T.errors;if(0<L.length){let q=await Promise.all(L);if(q=q.filter(te=>te),0<q.length)throw Error(q.join(`\n`))}return B}finally{r.cb=null}};r._OrtCreateSession=s(r._OrtCreateSession,()=>r._OrtCreateSession,g=>r._OrtCreateSession=g),r._OrtRun=m(s(r._OrtRun,()=>r._OrtRun,g=>r._OrtRun=g)),r._OrtRunWithBinding=m(s(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,g=>r._OrtRunWithBinding=g)),r._OrtBindInput=s(r._OrtBindInput,()=>r._OrtBindInput,g=>r._OrtBindInput=g),a=void 0};r.jsepInit=(s,m)=>{if(a?.(),s==="webgpu"){[r.kb,r.pb,r.tb,r.lb,r.sb,r.Ra,r.ub,r.wb,r.qb,r.rb,r.vb]=m;let g=r.kb;r.jsepRegisterBuffer=($,T,B,L)=>g.registerBuffer($,T,B,L),r.jsepGetBuffer=$=>g.getBuffer($),r.jsepCreateDownloader=($,T,B)=>g.createDownloader($,T,B),r.jsepOnReleaseSession=$=>{g.onReleaseSession($)},r.jsepOnRunStart=$=>g.onRunStart($)}};var c=Object.assign({},r),p="./this.program",h=(s,m)=>{throw m},d=typeof window=="object",y=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",_="",v,S,I;if(w){var A=(uo(),wr(so)),x=(co(),wr(lo));_=y?x.dirname(_)+"/":__dirname+"/",v=(s,m)=>(s=Ke(s)?new URL(s):x.normalize(s),A.readFileSync(s,m?void 0:"utf8")),I=s=>(s=v(s,!0),s.buffer||(s=new Uint8Array(s)),s),S=(s,m,g,$=!0)=>{s=Ke(s)?new URL(s):x.normalize(s),A.readFile(s,$?void 0:"utf8",(T,B)=>{T?g(T):m($?B.buffer:B)})},!r.thisProgram&&1<process.argv.length&&(p=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),h=(s,m)=>{throw process.exitCode=s,m}}else(d||y)&&(y?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),e&&(_=e),_.startsWith("blob:")?_="":_=_.substr(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1),v=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.send(null),m.responseText},y&&(I=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),S=(s,m,g)=>{var $=new XMLHttpRequest;$.open("GET",s,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?m($.response):g()},$.onerror=g,$.send(null)});var E=console.log.bind(console),P=console.error.bind(console);Object.assign(r,c),c=null;var O,R=!1,H,N,K,Q,he,W,se,Ce,We,ee,ae;function Ae(){var s=O.buffer;r.HEAP8=N=new Int8Array(s),r.HEAP16=Q=new Int16Array(s),r.HEAPU8=K=new Uint8Array(s),r.HEAPU16=he=new Uint16Array(s),r.HEAP32=W=new Int32Array(s),r.HEAPU32=se=new Uint32Array(s),r.HEAPF32=Ce=new Float32Array(s),r.HEAPF64=ae=new Float64Array(s),r.HEAP64=We=new BigInt64Array(s),r.HEAPU64=ee=new BigUint64Array(s)}var me=[],ie=[],ue=[],le=0,qe=null,G=null;function ne(s){throw s="Aborted("+s+")",P(s),R=!0,H=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),i(s),s}var xe=s=>s.startsWith("data:application/octet-stream;base64,"),Ke=s=>s.startsWith("file://"),De;if(De="ort-wasm-simd.wasm",!xe(De)){var Ge=De;De=r.locateFile?r.locateFile(Ge,_):_+Ge}function Mt(s){if(I)return I(s);throw"both async and sync fetching of the wasm failed"}function Ne(s){if(d||y){if(typeof fetch=="function"&&!Ke(s))return fetch(s,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw`failed to load wasm binary file at \'${s}\'`;return m.arrayBuffer()}).catch(()=>Mt(s));if(S)return new Promise((m,g)=>{S(s,$=>m(new Uint8Array($)),g)})}return Promise.resolve().then(()=>Mt(s))}function Ye(s,m,g){return Ne(s).then($=>WebAssembly.instantiate($,m)).then(g,$=>{P(`failed to asynchronously prepare wasm: ${$}`),ne($)})}function mt(s,m){var g=De;return typeof WebAssembly.instantiateStreaming!="function"||xe(g)||Ke(g)||w||typeof fetch!="function"?Ye(g,s,m):fetch(g,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,s).then(m,function(T){return P(`wasm streaming compile failed: ${T}`),P("falling back to ArrayBuffer instantiation"),Ye(g,s,m)}))}var Ot={824936:(s,m,g,$)=>{if(typeof r>"u"||!r.eb)return 1;if(s=je(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=r.eb.get(s),!s)return 2;if(m>>>=0,g>>>=0,m+g>s.byteLength)return 3;try{return K.set(s.subarray(m,m+g),$>>>0>>>0),0}catch{return 4}},825437:()=>{r.qb()},825468:()=>{r.rb()},825497:()=>{r.vb()},825522:s=>r.pb(s),825555:s=>r.tb(s),825587:(s,m,g)=>{r.lb(s,m,g,!0)},825626:(s,m,g)=>{r.lb(s,m,g)},825659:s=>{r.Ra("Abs",s,void 0)},825710:s=>{r.Ra("Neg",s,void 0)},825761:s=>{r.Ra("Floor",s,void 0)},825814:s=>{r.Ra("Ceil",s,void 0)},825866:s=>{r.Ra("Reciprocal",s,void 0)},825924:s=>{r.Ra("Sqrt",s,void 0)},825976:s=>{r.Ra("Exp",s,void 0)},826027:s=>{r.Ra("Erf",s,void 0)},826078:s=>{r.Ra("Sigmoid",s,void 0)},826133:(s,m,g)=>{r.Ra("HardSigmoid",s,{alpha:m,beta:g})},826212:s=>{r.Ra("Log",s,void 0)},826263:s=>{r.Ra("Sin",s,void 0)},826314:s=>{r.Ra("Cos",s,void 0)},826365:s=>{r.Ra("Tan",s,void 0)},826416:s=>{r.Ra("Asin",s,void 0)},826468:s=>{r.Ra("Acos",s,void 0)},826520:s=>{r.Ra("Atan",s,void 0)},826572:s=>{r.Ra("Sinh",s,void 0)},826624:s=>{r.Ra("Cosh",s,void 0)},826676:s=>{r.Ra("Asinh",s,void 0)},826729:s=>{r.Ra("Acosh",s,void 0)},826782:s=>{r.Ra("Atanh",s,void 0)},826835:s=>{r.Ra("Tanh",s,void 0)},826887:s=>{r.Ra("Not",s,void 0)},826938:(s,m,g)=>{r.Ra("Clip",s,{min:m,max:g})},827007:s=>{r.Ra("Clip",s,void 0)},827059:(s,m)=>{r.Ra("Elu",s,{alpha:m})},827117:s=>{r.Ra("Relu",s,void 0)},827169:(s,m)=>{r.Ra("LeakyRelu",s,{alpha:m})},827233:(s,m)=>{r.Ra("ThresholdedRelu",s,{alpha:m})},827303:(s,m)=>{r.Ra("Cast",s,{to:m})},827361:s=>{r.Ra("Add",s,void 0)},827412:s=>{r.Ra("Sub",s,void 0)},827463:s=>{r.Ra("Mul",s,void 0)},827514:s=>{r.Ra("Div",s,void 0)},827565:s=>{r.Ra("Pow",s,void 0)},827616:s=>{r.Ra("Equal",s,void 0)},827669:s=>{r.Ra("Greater",s,void 0)},827724:s=>{r.Ra("GreaterOrEqual",s,void 0)},827786:s=>{r.Ra("Less",s,void 0)},827838:s=>{r.Ra("LessOrEqual",s,void 0)},827897:(s,m,g,$,T)=>{r.Ra("ReduceMean",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828056:(s,m,g,$,T)=>{r.Ra("ReduceMax",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828214:(s,m,g,$,T)=>{r.Ra("ReduceMin",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828372:(s,m,g,$,T)=>{r.Ra("ReduceProd",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828531:(s,m,g,$,T)=>{r.Ra("ReduceSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828689:(s,m,g,$,T)=>{r.Ra("ReduceL1",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828846:(s,m,g,$,T)=>{r.Ra("ReduceL2",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829003:(s,m,g,$,T)=>{r.Ra("ReduceLogSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829164:(s,m,g,$,T)=>{r.Ra("ReduceSumSquare",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829328:(s,m,g,$,T)=>{r.Ra("ReduceLogSumExp",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829492:s=>{r.Ra("Where",s,void 0)},829545:(s,m,g)=>{r.Ra("Transpose",s,{perm:m?Array.from(W.subarray(m>>>0,g>>>0)):[]})},829653:(s,m,g,$)=>{r.Ra("DepthToSpace",s,{blocksize:m,mode:je(g),format:$?"NHWC":"NCHW"})},829786:(s,m,g,$)=>{r.Ra("DepthToSpace",s,{blocksize:m,mode:je(g),format:$?"NHWC":"NCHW"})},829919:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be)=>{r.Ra("ConvTranspose",s,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[T],pads:[B,L],strides:[q],wIsConst:()=>!!N[X>>>0],outputPadding:de?Array.from(W.subarray(de>>>0,Ee>>>0)):[],outputShape:Oe?Array.from(W.subarray(Oe>>>0,D>>>0)):[],activation:je(be)})},830320:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D)=>{r.Ra("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(W.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(W.subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(W.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(W.subarray(L>>>0,(L>>>0)+2>>>0)),wIsConst:()=>!!N[te>>>0],outputPadding:X?Array.from(W.subarray(X>>>0,de>>>0)):[],outputShape:Ee?Array.from(W.subarray(Ee>>>0,Oe>>>0)):[],activation:je(D)})},830885:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be)=>{r.Ra("ConvTranspose",s,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[T],pads:[B,L],strides:[q],wIsConst:()=>!!N[X>>>0],outputPadding:de?Array.from(W.subarray(de>>>0,Ee>>>0)):[],outputShape:Oe?Array.from(W.subarray(Oe>>>0,D>>>0)):[],activation:je(be)})},831286:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D)=>{r.Ra("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(W.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(W.subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(W.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(W.subarray(L>>>0,(L>>>0)+2>>>0)),wIsConst:()=>!!N[te>>>0],outputPadding:X?Array.from(W.subarray(X>>>0,de>>>0)):[],outputShape:Ee?Array.from(W.subarray(Ee>>>0,Oe>>>0)):[],activation:je(D)})},831851:(s,m)=>{r.Ra("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},831942:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,L],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832226:(s,m)=>{r.Ra("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},832317:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,L],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832601:(s,m)=>{r.Ra("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},832688:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,L],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832968:(s,m)=>{r.Ra("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},833055:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,L],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},833335:(s,m,g,$,T)=>{r.Ra("Gemm",s,{alpha:m,beta:g,transA:$,transB:T})},833439:s=>{r.Ra("MatMul",s,void 0)},833493:(s,m,g,$)=>{r.Ra("ArgMax",s,{keepDims:!!m,selectLastIndex:!!g,axis:$})},833601:(s,m,g,$)=>{r.Ra("ArgMin",s,{keepDims:!!m,selectLastIndex:!!g,axis:$})},833709:(s,m)=>{r.Ra("Softmax",s,{axis:m})},833772:(s,m)=>{r.Ra("Concat",s,{axis:m})},833832:(s,m,g,$,T)=>{r.Ra("Split",s,{axis:m,numOutputs:g,splitSizes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},833972:s=>{r.Ra("Expand",s,void 0)},834026:(s,m)=>{r.Ra("Gather",s,{axis:Number(m)})},834097:(s,m)=>{r.Ra("GatherElements",s,{axis:Number(m)})},834176:(s,m,g,$,T,B,L,q,te,X,de)=>{r.Ra("Resize",s,{antialias:m,axes:g?Array.from(W.subarray(g>>>0,$>>>0)):[],coordinateTransformMode:je(T),cubicCoeffA:B,excludeOutside:L,extrapolationValue:q,keepAspectRatioPolicy:je(te),mode:je(X),nearestMode:je(de)})},834522:(s,m,g,$,T,B,L)=>{r.Ra("Slice",s,{starts:m?Array.from(W.subarray(m>>>0,g>>>0)):[],ends:$?Array.from(W.subarray($>>>0,T>>>0)):[],axes:B?Array.from(W.subarray(B>>>0,L>>>0)):[]})},834738:s=>{r.Ra("Tile",s,void 0)},834790:(s,m,g,$)=>{r.Ra("LayerNormalization",s,{axis:m,epsilon:g,simplified:!!$})},834901:(s,m,g)=>{r.Ra("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},835015:(s,m,g)=>{r.Ra("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},835129:s=>{r.Ra("Range",s,void 0)},835182:(s,m)=>{r.Ra("Einsum",s,{equation:je(m)})},835263:(s,m,g,$,T)=>{r.Ra("Pad",s,{mode:m,value:g,pads:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},835390:(s,m,g,$,T,B)=>{r.Ra("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!T,trainingMode:!!$,format:B?"NHWC":"NCHW"})},835559:(s,m,g,$,T,B)=>{r.Ra("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!T,trainingMode:!!$,format:B?"NHWC":"NCHW"})},835728:(s,m,g)=>{r.Ra("CumSum",s,{exclusive:Number(m),reverse:Number(g)})},835825:(s,m,g,$,T,B,L,q,te)=>{r.Ra("Attention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:T,doRotary:B,qkvHiddenSizes:L?Array.from(W.subarray(Number(q)>>>0,Number(q)+L>>>0)):[],pastPresentShareBuffer:!!te})},836097:s=>{r.Ra("BiasAdd",s,void 0)},836152:s=>{r.Ra("BiasSplitGelu",s,void 0)},836213:s=>{r.Ra("FastGelu",s,void 0)},836269:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe)=>{r.Ra("Conv",s,{format:te?"NHWC":"NCHW",auto_pad:m,dilations:[g],group:$,kernel_shape:[T],pads:B?Array.from(W.subarray(B>>>0,L>>>0)):[],strides:[q],w_is_const:()=>!!N[X>>>0],activation:je(de),activation_params:Ee?Array.from(Ce.subarray(Ee>>>0,Oe>>>0)):[]})},836639:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("Conv",s,{format:Ee?"NHWC":"NCHW",auto_pad:m,dilations:[g,$],group:T,kernel_shape:[B,L],pads:q?Array.from(W.subarray(q>>>0,te>>>0)):[],strides:[X,de],w_is_const:()=>!!N[Oe>>>0],activation:je(D),activation_params:be?Array.from(Ce.subarray(be>>>0,Ie>>>0)):[]})},837030:s=>{r.Ra("Gelu",s,void 0)},837082:(s,m,g,$,T,B)=>{r.Ra("MatMulNBits",s,{k:m,n:g,accuracyLevel:$,bits:T,blockSize:B})},837209:(s,m,g,$,T,B)=>{r.Ra("MultiHeadAttention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:T,doRotary:B})},837368:(s,m,g,$,T)=>{r.Ra("RotaryEmbedding",s,{interleaved:!!m,numHeads:g,rotaryEmbeddingDim:$,scale:T})},837507:(s,m,g)=>{r.Ra("SkipLayerNormalization",s,{epsilon:m,simplified:!!g})},837609:(s,m,g)=>{r.Ra("SkipLayerNormalization",s,{epsilon:m,simplified:!!g})},837711:(s,m,g,$)=>{r.Ra("LayerNormalization",s,{axis:m,epsilon:g,simplified:!!$})},837822:s=>{r.ub(s)},837856:(s,m)=>r.wb(s,m,r.cb.xb,r.cb.errors)};function qt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}class Ut{constructor(m){this.hb=m-24}}var sr=0,jt=0,xr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Kt=(s,m,g)=>{m>>>=0;var $=m+g;for(g=m;s[g]&&!(g>=$);)++g;if(16<g-m&&s.buffer&&xr)return xr.decode(s.subarray(m,g));for($="";m<g;){var T=s[m++];if(T&128){var B=s[m++]&63;if((T&224)==192)$+=String.fromCharCode((T&31)<<6|B);else{var L=s[m++]&63;T=(T&240)==224?(T&15)<<12|B<<6|L:(T&7)<<18|B<<12|L<<6|s[m++]&63,65536>T?$+=String.fromCharCode(T):(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023))}}else $+=String.fromCharCode(T)}return $},je=(s,m)=>(s>>>=0)?Kt(K,s,m):"",Vt=s=>{for(var m=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);127>=$?m++:2047>=$?m+=2:55296<=$&&57343>=$?(m+=4,++g):m+=3}return m},at=(s,m,g,$)=>{if(g>>>=0,!(0<$))return 0;var T=g;$=g+$-1;for(var B=0;B<s.length;++B){var L=s.charCodeAt(B);if(55296<=L&&57343>=L){var q=s.charCodeAt(++B);L=65536+((L&1023)<<10)|q&1023}if(127>=L){if(g>=$)break;m[g++>>>0]=L}else{if(2047>=L){if(g+1>=$)break;m[g++>>>0]=192|L>>6}else{if(65535>=L){if(g+2>=$)break;m[g++>>>0]=224|L>>12}else{if(g+3>=$)break;m[g++>>>0]=240|L>>18,m[g++>>>0]=128|L>>12&63}m[g++>>>0]=128|L>>6&63}m[g++>>>0]=128|L&63}}return m[g>>>0]=0,g-T},Cr,ft=s=>{for(var m="";K[s>>>0];)m+=Cr[K[s++>>>0]];return m},ur={},Ar={},Ir={},st;function Tr(s,m,g={}){var $=m.name;if(!s)throw new st(`type "${$}" must have a positive integer typeid pointer`);if(Ar.hasOwnProperty(s)){if(g.nb)return;throw new st(`Cannot register type \'${$}\' twice`)}Ar[s]=m,delete Ir[s],ur.hasOwnProperty(s)&&(m=ur[s],delete ur[s],m.forEach(T=>T()))}function ht(s,m,g={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Tr(s,m,g)}var bt=(s,m,g)=>{switch(m){case 1:return g?$=>N[$>>>0]:$=>K[$>>>0];case 2:return g?$=>Q[$>>>1>>>0]:$=>he[$>>>1>>>0];case 4:return g?$=>W[$>>>2>>>0]:$=>se[$>>>2>>>0];case 8:return g?$=>We[$>>>3]:$=>ee[$>>>3];default:throw new TypeError(`invalid integer width (${m}): ${s}`)}},Er=[],Te=[];function dr(s){s>>>=0,9<s&&--Te[s+1]===0&&(Te[s]=void 0,Er.push(s))}var Xe=s=>{if(!s)throw new st("Cannot use deleted val. handle = "+s);return Te[s]},ut=s=>{switch(s){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=Er.pop()||Te.length;return Te[m]=s,Te[m+1]=1,m}};function lr(s){return this.fromWireType(se[s>>>2>>>0])}var Fn={name:"emscripten::val",fromWireType:s=>{var m=Xe(s);return dr(s),m},toWireType:(s,m)=>ut(m),argPackAdvance:8,readValueFromPointer:lr,bb:null},ge=(s,m)=>{switch(m){case 4:return function(g){return this.fromWireType(Ce[g>>>2>>>0])};case 8:return function(g){return this.fromWireType(ae[g>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${s}`)}},Yt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,jr=(s,m)=>{for(var g=s>>1,$=g+m/2;!(g>=$)&&he[g>>>0];)++g;if(g<<=1,32<g-s&&Yt)return Yt.decode(K.subarray(s>>>0,g>>>0));for(g="",$=0;!($>=m/2);++$){var T=Q[s+2*$>>>1>>>0];if(T==0)break;g+=String.fromCharCode(T)}return g},qn=(s,m,g)=>{if(g??=2147483647,2>g)return 0;g-=2;var $=m;g=g<2*s.length?g/2:s.length;for(var T=0;T<g;++T)Q[m>>>1>>>0]=s.charCodeAt(T),m+=2;return Q[m>>>1>>>0]=0,m-$},Kr=s=>2*s.length,jn=(s,m)=>{for(var g=0,$="";!(g>=m/4);){var T=W[s+4*g>>>2>>>0];if(T==0)break;++g,65536<=T?(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023)):$+=String.fromCharCode(T)}return $},Yr=(s,m,g)=>{if(m>>>=0,g??=2147483647,4>g)return 0;var $=m;g=$+g-4;for(var T=0;T<s.length;++T){var B=s.charCodeAt(T);if(55296<=B&&57343>=B){var L=s.charCodeAt(++T);B=65536+((B&1023)<<10)|L&1023}if(W[m>>>2>>>0]=B,m+=4,m+4>g)break}return W[m>>>2>>>0]=0,m-$},Zr=s=>{for(var m=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);55296<=$&&57343>=$&&++g,m+=4}return m},cr=(s,m)=>{var g=Ar[s];if(g===void 0)throw s=Mr(s),g=ft(s),rt(s),new st(`${m} has unknown type ${g}`);return g},Pr=(s,m,g)=>{var $=[];return s=s.toWireType($,g),$.length&&(se[m>>>2>>>0]=ut($)),s},He=s=>{try{s()}catch(m){ne(m)}},Xr=s=>{if(!R)try{s();try{H=H=s=H,r.onExit?.(s),R=!0,h(s,new qt(s))}catch(m){m instanceof qt||m=="unwind"||h(1,m)}}catch(m){m instanceof qt||m=="unwind"||h(1,m)}};function Qr(){var s=pe,m={};for(let[g,$]of Object.entries(s))m[g]=typeof $=="function"?(...T)=>{Zt.push(g);try{return $(...T)}finally{R||(Zt.pop(),dt&&gt===1&&Zt.length===0&&(gt=0,He(dn),typeof Fibers<"u"&&Fibers.Db()))}}:$;return m}var gt=0,dt=null,Rt=0,Zt=[],kr={},Or={},Jr=0,pr=null,en=[];function tn(){return new Promise((s,m)=>{pr={resolve:s,reject:m}})}function rn(){var s=Wt(65548),m=s+12;se[s>>>2>>>0]=m,se[s+4>>>2>>>0]=m+65536,m=Zt[0];var g=kr[m];return g===void 0&&(g=Jr++,kr[m]=g,Or[g]=m),W[s+8>>>2>>>0]=g,s}function nn(s){if(!R){if(gt===0){var m=!1,g=!1;s(($=0)=>{if(!R&&(Rt=$,m=!0,g)){gt=2,He(()=>vt(dt)),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.resume(),$=!1;try{var T=(0,pe[Or[W[dt+8>>>2>>>0]]])()}catch(q){T=q,$=!0}var B=!1;if(!dt){var L=pr;L&&(pr=null,($?L.reject:L.resolve)(T),B=!0)}if($&&!B)throw T}}),g=!0,m||(gt=1,dt=rn(),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.pause(),He(()=>Jt(dt)))}else gt===2?(gt=0,He(ct),rt(dt),dt=null,en.forEach(Xr)):ne(`invalid state: ${gt}`);return Rt}}function Rr(s){return nn(m=>{s().then(m)})}var Xt=[],on={},nt=s=>{var m=on[s];return m===void 0?ft(s):m},mr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Br=s=>{var m=Xt.length;return Xt.push(s),m},Kn=(s,m)=>{for(var g=Array(s),$=0;$<s;++$)g[$]=cr(se[m+4*$>>>2>>>0],"parameter "+$);return g},wt=(s,m)=>Object.defineProperty(m,"name",{value:s});function Yn(s){var m=Function;if(!(m instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof m} which is not a function`);var g=wt(m.name||"unknownFunctionName",function(){});return g.prototype=m.prototype,g=new g,s=m.apply(g,s),s instanceof Object?s:g}var Je=s=>s%4===0&&(s%100!==0||s%400===0),Dr=[0,31,60,91,121,152,182,213,244,274,305,335],fr=[0,31,59,90,120,151,181,212,243,273,304,334],lt=[],hr=(s,m)=>{lt.length=0;for(var g;g=K[s++>>>0];){var $=g!=105;$&=g!=112,m+=$&&m%8?4:0,lt.push(g==112?se[m>>>2>>>0]:g==106?We[m>>>3]:g==105?W[m>>>2>>>0]:ae[m>>>3>>>0]),m+=$?8:4}return lt},Qe={},ot=()=>{if(!Qt){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:p||"./this.program"},m;for(m in Qe)Qe[m]===void 0?delete s[m]:s[m]=Qe[m];var g=[];for(m in s)g.push(`${m}=${s[m]}`);Qt=g}return Qt},Qt,Zn=[null,[],[]],an=[31,29,31,30,31,30,31,31,30,31,30,31],zr=[31,28,31,30,31,30,31,31,30,31,30,31];function Xn(s){var m=Array(Vt(s)+1);return at(s,m,0,m.length),m}function sn(s,m,g,$){function T(D,be,Ie){for(D=typeof D=="number"?D.toString():D||"";D.length<be;)D=Ie[0]+D;return D}function B(D,be){return T(D,be,"0")}function L(D,be){function Ie(zt){return 0>zt?-1:0<zt?1:0}var Dt;return(Dt=Ie(D.getFullYear()-be.getFullYear()))===0&&(Dt=Ie(D.getMonth()-be.getMonth()))===0&&(Dt=Ie(D.getDate()-be.getDate())),Dt}function q(D){switch(D.getDay()){case 0:return new Date(D.getFullYear()-1,11,29);case 1:return D;case 2:return new Date(D.getFullYear(),0,3);case 3:return new Date(D.getFullYear(),0,2);case 4:return new Date(D.getFullYear(),0,1);case 5:return new Date(D.getFullYear()-1,11,31);case 6:return new Date(D.getFullYear()-1,11,30)}}function te(D){var be=D.$a;for(D=new Date(new Date(D.ab+1900,0,1).getTime());0<be;){var Ie=D.getMonth(),Dt=(Je(D.getFullYear())?an:zr)[Ie];if(be>Dt-D.getDate())be-=Dt-D.getDate()+1,D.setDate(1),11>Ie?D.setMonth(Ie+1):(D.setMonth(0),D.setFullYear(D.getFullYear()+1));else{D.setDate(D.getDate()+be);break}}return Ie=new Date(D.getFullYear()+1,0,4),be=q(new Date(D.getFullYear(),0,4)),Ie=q(Ie),0>=L(be,D)?0>=L(Ie,D)?D.getFullYear()+1:D.getFullYear():D.getFullYear()-1}s>>>=0,m>>>=0,g>>>=0,$>>>=0;var X=se[$+40>>>2>>>0];$={Ab:W[$>>>2>>>0],zb:W[$+4>>>2>>>0],fb:W[$+8>>>2>>>0],jb:W[$+12>>>2>>>0],gb:W[$+16>>>2>>>0],ab:W[$+20>>>2>>>0],Va:W[$+24>>>2>>>0],$a:W[$+28>>>2>>>0],Cb:W[$+32>>>2>>>0],yb:W[$+36>>>2>>>0],Bb:X?je(X):""},g=je(g),X={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var de in X)g=g.replace(new RegExp(de,"g"),X[de]);var Ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Oe="January February March April May June July August September October November December".split(" ");X={"%a":D=>Ee[D.Va].substring(0,3),"%A":D=>Ee[D.Va],"%b":D=>Oe[D.gb].substring(0,3),"%B":D=>Oe[D.gb],"%C":D=>B((D.ab+1900)/100|0,2),"%d":D=>B(D.jb,2),"%e":D=>T(D.jb,2," "),"%g":D=>te(D).toString().substring(2),"%G":te,"%H":D=>B(D.fb,2),"%I":D=>(D=D.fb,D==0?D=12:12<D&&(D-=12),B(D,2)),"%j":D=>{for(var be=0,Ie=0;Ie<=D.gb-1;be+=(Je(D.ab+1900)?an:zr)[Ie++]);return B(D.jb+be,3)},"%m":D=>B(D.gb+1,2),"%M":D=>B(D.zb,2),"%n":()=>`\n`,"%p":D=>0<=D.fb&&12>D.fb?"AM":"PM","%S":D=>B(D.Ab,2),"%t":()=>"	","%u":D=>D.Va||7,"%U":D=>B(Math.floor((D.$a+7-D.Va)/7),2),"%V":D=>{var be=Math.floor((D.$a+7-(D.Va+6)%7)/7);if(2>=(D.Va+371-D.$a-2)%7&&be++,be)be==53&&(Ie=(D.Va+371-D.$a)%7,Ie==4||Ie==3&&Je(D.ab)||(be=1));else{be=52;var Ie=(D.Va+7-D.$a-1)%7;(Ie==4||Ie==5&&Je(D.ab%400-1))&&be++}return B(be,2)},"%w":D=>D.Va,"%W":D=>B(Math.floor((D.$a+7-(D.Va+6)%7)/7),2),"%y":D=>(D.ab+1900).toString().substring(2),"%Y":D=>D.ab+1900,"%z":D=>{D=D.yb;var be=0<=D;return D=Math.abs(D)/60,(be?"+":"-")+("0000"+(D/60*100+D%60)).slice(-4)},"%Z":D=>D.Bb,"%%":()=>"%"},g=g.replace(/%%/g,"\\0\\0");for(de in X)g.includes(de)&&(g=g.replace(new RegExp(de,"g"),X[de]($)));return g=g.replace(/\\0\\0/g,"%"),de=Xn(g),de.length>m?0:(N.set(de,s>>>0),de.length-1)}for(var un=Array(256),gr=0;256>gr;++gr)un[gr]=String.fromCharCode(gr);Cr=un,st=r.BindingError=class extends Error{constructor(s){super(s),this.name="BindingError"}},r.InternalError=class extends Error{constructor(s){super(s),this.name="InternalError"}},Te.push(0,1,void 0,1,null,1,!0,1,!1,1),r.count_emval_handles=()=>Te.length/2-5-Er.length;var Qn={ia:function(s,m,g){return Rr(async()=>{await r.sb(s,m,g)})},a:function(s,m,g){s>>>=0;var $=new Ut(s);throw se[$.hb+16>>>2>>>0]=0,se[$.hb+4>>>2>>>0]=m>>>0,se[$.hb+8>>>2>>>0]=g>>>0,sr=s,jt++,sr},z:function(){return 0},ea:function(){},R:function(){},T:function(){},ga:function(){return 0},ca:function(){},Z:function(){},ba:function(){},G:function(){},S:function(){},P:function(){},da:function(){},Q:function(){},C:function(s,m,g){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:$=>$,toWireType:function($,T){if(typeof T!="bigint"&&typeof T!="number")throw T===null?T="null":($=typeof T,T=$==="object"||$==="array"||$==="function"?T.toString():""+T),new TypeError(`Cannot convert "${T}" to ${this.name}`);return typeof T=="number"&&(T=BigInt(T)),T},argPackAdvance:8,readValueFromPointer:bt(m,g>>>0,m.indexOf("u")==-1),bb:null})},K:function(s,m,g,$){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:function(T){return!!T},toWireType:function(T,B){return B?g:$},argPackAdvance:8,readValueFromPointer:function(T){return this.fromWireType(K[T>>>0])},bb:null})},J:function(s){return ht(s>>>0,Fn)},B:function(s,m,g){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:$=>$,toWireType:($,T)=>T,argPackAdvance:8,readValueFromPointer:ge(m,g>>>0),bb:null})},s:function(s,m,g,$,T){if(s>>>=0,g>>>=0,m=ft(m>>>0),T===-1&&(T=4294967295),T=q=>q,$===0){var B=32-8*g;T=q=>q<<B>>>B}var L=m.includes("unsigned")?function(q,te){return te>>>0}:function(q,te){return te};ht(s,{name:m,fromWireType:T,toWireType:L,argPackAdvance:8,readValueFromPointer:bt(m,g,$!==0),bb:null})},o:function(s,m,g){function $(B){return new T(N.buffer,se[B+4>>>2>>>0],se[B>>>2>>>0])}var T=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];g=ft(g>>>0),ht(s>>>0,{name:g,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{nb:!0})},D:function(s,m){m=ft(m>>>0);var g=m==="std::string";ht(s>>>0,{name:m,fromWireType:function($){var T=se[$>>>2>>>0],B=$+4;if(g)for(var L=B,q=0;q<=T;++q){var te=B+q;if(q==T||K[te>>>0]==0){if(L=je(L,te-L),X===void 0)var X=L;else X+=String.fromCharCode(0),X+=L;L=te+1}}else{for(X=Array(T),q=0;q<T;++q)X[q]=String.fromCharCode(K[B+q>>>0]);X=X.join("")}return rt($),X},toWireType:function($,T){T instanceof ArrayBuffer&&(T=new Uint8Array(T));var B=typeof T=="string";if(!(B||T instanceof Uint8Array||T instanceof Uint8ClampedArray||T instanceof Int8Array))throw new st("Cannot pass non-string to std::string");var L=g&&B?Vt(T):T.length,q=Wt(4+L+1),te=q+4;if(se[q>>>2>>>0]=L,g&&B)at(T,K,te,L+1);else if(B)for(B=0;B<L;++B){var X=T.charCodeAt(B);if(255<X)throw rt(te),new st("String has UTF-16 code units that do not fit in 8 bits");K[te+B>>>0]=X}else for(B=0;B<L;++B)K[te+B>>>0]=T[B];return $!==null&&$.push(rt,q),q},argPackAdvance:8,readValueFromPointer:lr,bb($){rt($)}})},y:function(s,m,g){if(m>>>=0,g>>>=0,g=ft(g),m===2)var $=jr,T=qn,B=Kr,L=q=>he[q>>>1>>>0];else m===4&&($=jn,T=Yr,B=Zr,L=q=>se[q>>>2>>>0]);ht(s>>>0,{name:g,fromWireType:q=>{for(var te=se[q>>>2>>>0],X,de=q+4,Ee=0;Ee<=te;++Ee){var Oe=q+4+Ee*m;(Ee==te||L(Oe)==0)&&(de=$(de,Oe-de),X===void 0?X=de:(X+=String.fromCharCode(0),X+=de),de=Oe+m)}return rt(q),X},toWireType:(q,te)=>{if(typeof te!="string")throw new st(`Cannot pass non-string to C++ string type ${g}`);var X=B(te),de=Wt(4+X+m);return se[de>>>2>>>0]=X/m,T(te,de+4,X+m),q!==null&&q.push(rt,de),de},argPackAdvance:8,readValueFromPointer:lr,bb(q){rt(q)}})},L:function(s,m){m=ft(m>>>0),ht(s>>>0,{ob:!0,name:m,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ha:()=>1,u:function(s,m,g){return m>>>=0,g>>>=0,s=Xe(s>>>0),m=cr(m,"emval::as"),Pr(m,g,s)},x:function(s){return s>>>=0,Rr(()=>(s=Xe(s),s.then(ut)))},n:function(s,m,g,$){return g>>>=0,$>>>=0,s=Xt[s>>>0],m=Xe(m>>>0),s(null,m,g,$)},j:function(s,m,g,$,T){return g>>>=0,$>>>=0,T>>>=0,s=Xt[s>>>0],m=Xe(m>>>0),g=nt(g),s(m,m[g],$,T)},b:dr,w:function(s,m){return m>>>=0,s=Xe(s>>>0),m=Xe(m),s==m},m:function(s){return s>>>=0,s===0?ut(mr()):(s=nt(s),ut(mr()[s]))},i:function(s,m,g){m=Kn(s,m>>>0);var $=m.shift();s--;var T=`return function (obj, func, destructorsRef, args) {\n`,B=0,L=[];g===0&&L.push("obj");for(var q=["retType"],te=[$],X=0;X<s;++X)L.push("arg"+X),q.push("argType"+X),te.push(m[X]),T+=`  var arg${X} = argType${X}.readValueFromPointer(args${B?"+"+B:""});\n`,B+=m[X].argPackAdvance;return T+=`  var rv = ${g===1?"new func":"func.call"}(${L.join(", ")});\n`,$.ob||(q.push("emval_returnValue"),te.push(Pr),T+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),q.push(T+`};\n`),s=Yn(q)(...te),g=`methodCaller<(${m.map(de=>de.name).join(", ")}) => ${$.name}>`,Br(wt(g,s))},r:function(s,m){return m>>>=0,s=Xe(s>>>0),m=Xe(m),ut(s[m])},e:function(s){s>>>=0,9<s&&(Te[s+1]+=1)},t:function(){return ut([])},l:function(s){s=Xe(s>>>0);for(var m=Array(s.length),g=0;g<s.length;g++)m[g]=s[g];return ut(m)},f:function(s){return ut(nt(s>>>0))},k:function(){return ut({})},h:function(s){s>>>=0;for(var m=Xe(s);m.length;){var g=m.pop();m.pop()(g)}dr(s)},g:function(s,m,g){m>>>=0,g>>>=0,s=Xe(s>>>0),m=Xe(m),g=Xe(g),s[m]=g},c:function(s,m){return m>>>=0,s=cr(s>>>0,"_emval_take_value"),s=s.readValueFromPointer(m),ut(s)},W:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),W[m>>>2>>>0]=s.getUTCSeconds(),W[m+4>>>2>>>0]=s.getUTCMinutes(),W[m+8>>>2>>>0]=s.getUTCHours(),W[m+12>>>2>>>0]=s.getUTCDate(),W[m+16>>>2>>>0]=s.getUTCMonth(),W[m+20>>>2>>>0]=s.getUTCFullYear()-1900,W[m+24>>>2>>>0]=s.getUTCDay(),W[m+28>>>2>>>0]=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},X:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),W[m>>>2>>>0]=s.getSeconds(),W[m+4>>>2>>>0]=s.getMinutes(),W[m+8>>>2>>>0]=s.getHours(),W[m+12>>>2>>>0]=s.getDate(),W[m+16>>>2>>>0]=s.getMonth(),W[m+20>>>2>>>0]=s.getFullYear()-1900,W[m+24>>>2>>>0]=s.getDay(),W[m+28>>>2>>>0]=(Je(s.getFullYear())?Dr:fr)[s.getMonth()]+s.getDate()-1|0,W[m+36>>>2>>>0]=-(60*s.getTimezoneOffset());var g=new Date(s.getFullYear(),6,1).getTimezoneOffset(),$=new Date(s.getFullYear(),0,1).getTimezoneOffset();W[m+32>>>2>>>0]=(g!=$&&s.getTimezoneOffset()==Math.min($,g))|0},Y:function(s){s>>>=0;var m=new Date(W[s+20>>>2>>>0]+1900,W[s+16>>>2>>>0],W[s+12>>>2>>>0],W[s+8>>>2>>>0],W[s+4>>>2>>>0],W[s>>>2>>>0],0),g=W[s+32>>>2>>>0],$=m.getTimezoneOffset(),T=new Date(m.getFullYear(),6,1).getTimezoneOffset(),B=new Date(m.getFullYear(),0,1).getTimezoneOffset(),L=Math.min(B,T);return 0>g?W[s+32>>>2>>>0]=+(T!=B&&L==$):0<g!=(L==$)&&(T=Math.max(B,T),m.setTime(m.getTime()+6e4*((0<g?L:T)-$))),W[s+24>>>2>>>0]=m.getDay(),W[s+28>>>2>>>0]=(Je(m.getFullYear())?Dr:fr)[m.getMonth()]+m.getDate()-1|0,W[s>>>2>>>0]=m.getSeconds(),W[s+4>>>2>>>0]=m.getMinutes(),W[s+8>>>2>>>0]=m.getHours(),W[s+12>>>2>>>0]=m.getDate(),W[s+16>>>2>>>0]=m.getMonth(),W[s+20>>>2>>>0]=m.getYear(),s=m.getTime(),BigInt(isNaN(s)?-1:s/1e3)},U:function(){return-52},V:function(){},N:function(s,m,g,$){g>>>=0,$>>>=0;var T=new Date().getFullYear(),B=new Date(T,0,1),L=new Date(T,6,1);T=B.getTimezoneOffset();var q=L.getTimezoneOffset();se[s>>>0>>>2>>>0]=60*Math.max(T,q),W[m>>>0>>>2>>>0]=+(T!=q),s=te=>te.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],B=s(B),L=s(L),q<T?(at(B,K,g,17),at(L,K,$,17)):(at(B,K,$,17),at(L,K,g,17))},v:()=>{ne("")},d:function(s,m,g){return s>>>=0,m=hr(m>>>0,g>>>0),Ot[s](...m)},I:function(s,m,g){return s>>>=0,m=hr(m>>>0,g>>>0),Ot[s](...m)},H:()=>Date.now(),O:function(){return 4294901760},q:()=>performance.now(),M:function(s){s>>>=0;var m=K.length;if(4294901760<s)return!1;for(var g=1;4>=g;g*=2){var $=m*(1+.2/g);$=Math.min($,s+100663296);var T=Math;$=Math.max(s,$);e:{T=(T.min.call(T,4294901760,$+(65536-$%65536)%65536)-O.buffer.byteLength+65535)/65536;try{O.grow(T),Ae();var B=1;break e}catch{}B=void 0}if(B)return!0}return!1},$:function(s,m){s>>>=0,m>>>=0;var g=0;return ot().forEach(($,T)=>{var B=m+g;for(T=se[s+4*T>>>2>>>0]=B,B=0;B<$.length;++B)N[T++>>>0]=$.charCodeAt(B);N[T>>>0]=0,g+=$.length+1}),0},aa:function(s,m){s>>>=0,m>>>=0;var g=ot();se[s>>>2>>>0]=g.length;var $=0;return g.forEach(T=>$+=T.length+1),se[m>>>2>>>0]=$,0},A:()=>52,F:function(){return 52},_:function(){return 70},E:function(s,m,g,$){m>>>=0,g>>>=0,$>>>=0;for(var T=0,B=0;B<g;B++){var L=se[m>>>2>>>0],q=se[m+4>>>2>>>0];m+=8;for(var te=0;te<q;te++){var X=K[L+te>>>0],de=Zn[s];X===0||X===10?((s===1?E:P)(Kt(de,0)),de.length=0):de.push(X)}T+=q}return se[$>>>2>>>0]=T,0},fa:sn,p:function(s,m,g,$){return sn(s>>>0,m>>>0,g>>>0,$>>>0)}},pe=function(){function s(g){return pe=g.exports,pe=Qr(),pe=ln(),O=pe.ja,Ae(),ie.unshift(pe.ka),le--,le==0&&(qe!==null&&(clearInterval(qe),qe=null),G&&(g=G,G=null,g())),pe}var m={a:Qn};if(le++,r.instantiateWasm)try{return r.instantiateWasm(m,s)}catch(g){P(`Module.instantiateWasm callback failed with error: ${g}`),i(g)}return mt(m,function(g){s(g.instance)}).catch(i),{}}(),Mr=s=>(Mr=pe.la)(s);r._OrtInit=(s,m)=>(r._OrtInit=pe.ma)(s,m),r._OrtGetLastError=(s,m)=>(r._OrtGetLastError=pe.na)(s,m),r._OrtCreateSessionOptions=(s,m,g,$,T,B,L,q,te,X)=>(r._OrtCreateSessionOptions=pe.oa)(s,m,g,$,T,B,L,q,te,X),r._OrtAppendExecutionProvider=(s,m)=>(r._OrtAppendExecutionProvider=pe.pa)(s,m),r._OrtAddFreeDimensionOverride=(s,m,g)=>(r._OrtAddFreeDimensionOverride=pe.qa)(s,m,g),r._OrtAddSessionConfigEntry=(s,m,g)=>(r._OrtAddSessionConfigEntry=pe.ra)(s,m,g),r._OrtReleaseSessionOptions=s=>(r._OrtReleaseSessionOptions=pe.sa)(s),r._OrtCreateSession=(s,m,g)=>(r._OrtCreateSession=pe.ta)(s,m,g),r._OrtReleaseSession=s=>(r._OrtReleaseSession=pe.ua)(s),r._OrtGetInputOutputCount=(s,m,g)=>(r._OrtGetInputOutputCount=pe.va)(s,m,g),r._OrtGetInputName=(s,m)=>(r._OrtGetInputName=pe.wa)(s,m),r._OrtGetOutputName=(s,m)=>(r._OrtGetOutputName=pe.xa)(s,m),r._OrtFree=s=>(r._OrtFree=pe.ya)(s),r._OrtCreateTensor=(s,m,g,$,T,B)=>(r._OrtCreateTensor=pe.za)(s,m,g,$,T,B),r._OrtGetTensorData=(s,m,g,$,T)=>(r._OrtGetTensorData=pe.Aa)(s,m,g,$,T),r._OrtReleaseTensor=s=>(r._OrtReleaseTensor=pe.Ba)(s),r._OrtCreateRunOptions=(s,m,g,$)=>(r._OrtCreateRunOptions=pe.Ca)(s,m,g,$),r._OrtAddRunConfigEntry=(s,m,g)=>(r._OrtAddRunConfigEntry=pe.Da)(s,m,g),r._OrtReleaseRunOptions=s=>(r._OrtReleaseRunOptions=pe.Ea)(s),r._OrtCreateBinding=s=>(r._OrtCreateBinding=pe.Fa)(s),r._OrtBindInput=(s,m,g)=>(r._OrtBindInput=pe.Ga)(s,m,g),r._OrtBindOutput=(s,m,g,$)=>(r._OrtBindOutput=pe.Ha)(s,m,g,$),r._OrtClearBoundOutputs=s=>(r._OrtClearBoundOutputs=pe.Ia)(s),r._OrtReleaseBinding=s=>(r._OrtReleaseBinding=pe.Ja)(s),r._OrtRunWithBinding=(s,m,g,$,T)=>(r._OrtRunWithBinding=pe.Ka)(s,m,g,$,T),r._OrtRun=(s,m,g,$,T,B,L,q)=>(r._OrtRun=pe.La)(s,m,g,$,T,B,L,q),r._OrtEndProfiling=s=>(r._OrtEndProfiling=pe.Ma)(s),r._JsepOutput=(s,m,g)=>(r._JsepOutput=pe.Na)(s,m,g),r._JsepGetNodeName=s=>(r._JsepGetNodeName=pe.Oa)(s);var Wt=r._malloc=s=>(Wt=r._malloc=pe.Pa)(s),rt=r._free=s=>(rt=r._free=pe.Qa)(s),yr=s=>(yr=pe.Sa)(s),br=s=>(br=pe.Ta)(s),Ur=()=>(Ur=pe.Ua)(),Jt=s=>(Jt=pe.Wa)(s),dn=()=>(dn=pe.Xa)(),vt=s=>(vt=pe.Ya)(s),ct=()=>(ct=pe.Za)();r.___start_em_js=837968,r.___stop_em_js=838129;function ln(){var s=pe;s=Object.assign({},s);var m=g=>$=>g($)>>>0;return s.la=m(s.la),s.Pa=m(s.Pa),s.Ta=m(s.Ta),s.Ua=(g=>()=>g()>>>0)(s.Ua),s}r.stackSave=()=>Ur(),r.stackRestore=s=>yr(s),r.stackAlloc=s=>br(s),r.UTF8ToString=je,r.stringToUTF8=(s,m,g)=>at(s,K,m,g),r.lengthBytesUTF8=Vt;var Bt;G=function s(){Bt||Vr(),Bt||(G=s)};function Vr(){if(!(0<le)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var s=r.preRun.shift();me.unshift(s)}for(;0<me.length;)me.shift()(r);if(!(0<le||Bt||(Bt=!0,r.calledRun=!0,R))){for(;0<ie.length;)ie.shift()(r);for(o(r);0<ue.length;)ue.shift()(r)}}}return Vr(),u}})();typeof Ti=="object"&&typeof po=="object"?po.exports=Ii:typeof define=="function"&&define.amd&&define([],()=>Ii)});var Pi=Wr(()=>{});var ki=Wr(()=>{});var Oi={};gn(Oi,{cpus:()=>ll});var ll,Ri=Y(()=>{ll=void 0});var zi=Wr((Di,mo)=>{"use strict";var Bi=(()=>{var e=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(e||=__filename),function(t={}){function r(){return ae.buffer!=ue.buffer&&Ne(),ue}function o(){return ae.buffer!=ue.buffer&&Ne(),le}function i(){return ae.buffer!=ue.buffer&&Ne(),qe}function u(){return ae.buffer!=ue.buffer&&Ne(),G}function a(){return ae.buffer!=ue.buffer&&Ne(),ne}function c(){return ae.buffer!=ue.buffer&&Ne(),xe}function p(){return ae.buffer!=ue.buffer&&Ne(),Ke}function h(){return ae.buffer!=ue.buffer&&Ne(),Mt}var d=t,y,w,_=new Promise((n,l)=>{y=n,w=l});d.mountExternalData=(n,l)=>{(d.Db||(d.Db=new Map)).set(n,l)},d.unmountExternalData=()=>{delete d.Db};let v=()=>{let n=(f,b,C)=>(...k)=>{let V=ct,F=b?.();k=f(...k);let re=b?.();return F!==re&&(f=re,C(F),b=C=null),ct!=V?T():k},l=f=>async(...b)=>{try{if(d.Cb)throw Error("Session already started");let C=d.Cb={ec:b[0],errors:[]},k=await f(...b);if(d.Cb!==C)throw Error("Session mismatch");d.Kb?.flush();let V=C.errors;if(0<V.length){let F=await Promise.all(V);if(F=F.filter(re=>re),0<F.length)throw Error(F.join(`\n`))}return k}finally{d.Cb=null}};d._OrtCreateSession=n(d._OrtCreateSession,()=>d._OrtCreateSession,f=>d._OrtCreateSession=f),d._OrtRun=l(n(d._OrtRun,()=>d._OrtRun,f=>d._OrtRun=f)),d._OrtRunWithBinding=l(n(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,f=>d._OrtRunWithBinding=f)),d._OrtBindInput=n(d._OrtBindInput,()=>d._OrtBindInput,f=>d._OrtBindInput=f),v=void 0};d.jsepInit=(n,l)=>{if(v?.(),n==="webgpu"){[d.Kb,d.Wb,d.$b,d.Lb,d.Zb,d.ob,d.ac,d.cc,d.Xb,d.Yb,d.bc]=l;let f=d.Kb;d.jsepRegisterBuffer=(b,C,k,V)=>f.registerBuffer(b,C,k,V),d.jsepGetBuffer=b=>f.getBuffer(b),d.jsepCreateDownloader=(b,C,k)=>f.createDownloader(b,C,k),d.jsepOnReleaseSession=b=>{f.onReleaseSession(b)},d.jsepOnRunStart=b=>f.onRunStart(b)}};var S=Object.assign({},d),I="./this.program",A=(n,l)=>{throw l},x=typeof window=="object",E=typeof importScripts=="function",P=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",O=d.ENVIRONMENT_IS_PTHREAD||!1,R="";function H(n){return d.locateFile?d.locateFile(n,R):R+n}var N,K,Q;if(P){var he=(uo(),wr(so)),W=(co(),wr(lo));R=E?W.dirname(R)+"/":__dirname+"/",N=(n,l)=>(n=Vt(n)?new URL(n):W.normalize(n),he.readFileSync(n,l?void 0:"utf8")),Q=n=>(n=N(n,!0),n.buffer||(n=new Uint8Array(n)),n),K=(n,l,f,b=!0)=>{n=Vt(n)?new URL(n):W.normalize(n),he.readFile(n,b?void 0:"utf8",(C,k)=>{C?f(C):l(b?k.buffer:k)})},!d.thisProgram&&1<process.argv.length&&(I=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),A=(n,l)=>{throw process.exitCode=n,l},global.Worker=Pi().Worker}else(x||E)&&(E?R=self.location.href:typeof document<"u"&&document.currentScript&&(R=document.currentScript.src),typeof e<"u"&&e&&(R=e),R.startsWith("blob:")?R="":R=R.substr(0,R.replace(/[?#].*/,"").lastIndexOf("/")+1),P||(N=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.send(null),l.responseText},E&&(Q=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.responseType="arraybuffer",l.send(null),new Uint8Array(l.response)}),K=(n,l,f)=>{var b=new XMLHttpRequest;b.open("GET",n,!0),b.responseType="arraybuffer",b.onload=()=>{b.status==200||b.status==0&&b.response?l(b.response):f()},b.onerror=f,b.send(null)}));P&&typeof performance>"u"&&(global.performance=ki().performance);var se=console.log.bind(console),Ce=console.error.bind(console);P&&(se=(...n)=>he.writeSync(1,n.join(" ")+`\n`),Ce=(...n)=>he.writeSync(2,n.join(" ")+`\n`));var We=se,ee=Ce;Object.assign(d,S),S=null;var ae,Ae,me=!1,ie,ue,le,qe,G,ne,xe,Ke,De,Ge,Mt;function Ne(){var n=ae.buffer;d.HEAP8=ue=new Int8Array(n),d.HEAP16=qe=new Int16Array(n),d.HEAPU8=le=new Uint8Array(n),d.HEAPU16=G=new Uint16Array(n),d.HEAP32=ne=new Int32Array(n),d.HEAPU32=xe=new Uint32Array(n),d.HEAPF32=Ke=new Float32Array(n),d.HEAPF64=Mt=new Float64Array(n),d.HEAP64=De=new BigInt64Array(n),d.HEAPU64=Ge=new BigUint64Array(n)}var Ye=16777216;if(O)ae=d.wasmMemory;else if(d.wasmMemory)ae=d.wasmMemory;else if(ae=new WebAssembly.Memory({initial:Ye/65536,maximum:65536,shared:!0}),!(ae.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),P&&ee("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Ne(),Ye=ae.buffer.byteLength;var mt=[],Ot=[],qt=[],Ut=0,sr=null,jt=null;function xr(){if(Ut--,Ut==0&&(sr!==null&&(clearInterval(sr),sr=null),jt)){var n=jt;jt=null,n()}}function Kt(n){throw n="Aborted("+n+")",ee(n),me=!0,ie=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),w(n),n}var je=n=>n.startsWith("data:application/octet-stream;base64,"),Vt=n=>n.startsWith("file://"),at;at="ort-wasm-simd-threaded.wasm",je(at)||(at=H(at));function Cr(n){if(Q)return Q(n);throw"both async and sync fetching of the wasm failed"}function ft(n){if(x||E){if(typeof fetch=="function"&&!Vt(n))return fetch(n,{credentials:"same-origin"}).then(l=>{if(!l.ok)throw`failed to load wasm binary file at \'${n}\'`;return l.arrayBuffer()}).catch(()=>Cr(n));if(K)return new Promise((l,f)=>{K(n,b=>l(new Uint8Array(b)),f)})}return Promise.resolve().then(()=>Cr(n))}function ur(n,l,f){return ft(n).then(b=>WebAssembly.instantiate(b,l)).then(f,b=>{ee(`failed to asynchronously prepare wasm: ${b}`),Kt(b)})}function Ar(n,l){var f=at;return typeof WebAssembly.instantiateStreaming!="function"||je(f)||Vt(f)||P||typeof fetch!="function"?ur(f,n,l):fetch(f,{credentials:"same-origin"}).then(b=>WebAssembly.instantiateStreaming(b,n).then(l,function(C){return ee(`wasm streaming compile failed: ${C}`),ee("falling back to ArrayBuffer instantiation"),ur(f,n,l)}))}var Ir={826468:(n,l,f,b)=>{if(typeof d>"u"||!d.Db)return 1;if(n=He(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=d.Db.get(n),!n)return 2;if(l>>>=0,f>>>=0,b>>>=0,l+f>n.byteLength)return 3;try{return o().set(n.subarray(l,l+f),b>>>0),0}catch{return 4}},826969:()=>{d.Xb()},827e3:()=>{d.Yb()},827029:()=>{d.bc()},827054:n=>d.Wb(n),827087:n=>d.$b(n),827119:(n,l,f)=>{d.Lb(n,l,f,!0)},827158:(n,l,f)=>{d.Lb(n,l,f)},827191:n=>{d.ob("Abs",n,void 0)},827242:n=>{d.ob("Neg",n,void 0)},827293:n=>{d.ob("Floor",n,void 0)},827346:n=>{d.ob("Ceil",n,void 0)},827398:n=>{d.ob("Reciprocal",n,void 0)},827456:n=>{d.ob("Sqrt",n,void 0)},827508:n=>{d.ob("Exp",n,void 0)},827559:n=>{d.ob("Erf",n,void 0)},827610:n=>{d.ob("Sigmoid",n,void 0)},827665:(n,l,f)=>{d.ob("HardSigmoid",n,{alpha:l,beta:f})},827744:n=>{d.ob("Log",n,void 0)},827795:n=>{d.ob("Sin",n,void 0)},827846:n=>{d.ob("Cos",n,void 0)},827897:n=>{d.ob("Tan",n,void 0)},827948:n=>{d.ob("Asin",n,void 0)},828e3:n=>{d.ob("Acos",n,void 0)},828052:n=>{d.ob("Atan",n,void 0)},828104:n=>{d.ob("Sinh",n,void 0)},828156:n=>{d.ob("Cosh",n,void 0)},828208:n=>{d.ob("Asinh",n,void 0)},828261:n=>{d.ob("Acosh",n,void 0)},828314:n=>{d.ob("Atanh",n,void 0)},828367:n=>{d.ob("Tanh",n,void 0)},828419:n=>{d.ob("Not",n,void 0)},828470:(n,l,f)=>{d.ob("Clip",n,{min:l,max:f})},828539:n=>{d.ob("Clip",n,void 0)},828591:(n,l)=>{d.ob("Elu",n,{alpha:l})},828649:n=>{d.ob("Relu",n,void 0)},828701:(n,l)=>{d.ob("LeakyRelu",n,{alpha:l})},828765:(n,l)=>{d.ob("ThresholdedRelu",n,{alpha:l})},828835:(n,l)=>{d.ob("Cast",n,{to:l})},828893:n=>{d.ob("Add",n,void 0)},828944:n=>{d.ob("Sub",n,void 0)},828995:n=>{d.ob("Mul",n,void 0)},829046:n=>{d.ob("Div",n,void 0)},829097:n=>{d.ob("Pow",n,void 0)},829148:n=>{d.ob("Equal",n,void 0)},829201:n=>{d.ob("Greater",n,void 0)},829256:n=>{d.ob("GreaterOrEqual",n,void 0)},829318:n=>{d.ob("Less",n,void 0)},829370:n=>{d.ob("LessOrEqual",n,void 0)},829429:(n,l,f,b,C)=>{d.ob("ReduceMean",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829588:(n,l,f,b,C)=>{d.ob("ReduceMax",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829746:(n,l,f,b,C)=>{d.ob("ReduceMin",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829904:(n,l,f,b,C)=>{d.ob("ReduceProd",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830063:(n,l,f,b,C)=>{d.ob("ReduceSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830221:(n,l,f,b,C)=>{d.ob("ReduceL1",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830378:(n,l,f,b,C)=>{d.ob("ReduceL2",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830535:(n,l,f,b,C)=>{d.ob("ReduceLogSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830696:(n,l,f,b,C)=>{d.ob("ReduceSumSquare",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830860:(n,l,f,b,C)=>{d.ob("ReduceLogSumExp",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},831024:n=>{d.ob("Where",n,void 0)},831077:(n,l,f)=>{d.ob("Transpose",n,{perm:l?Array.from(a().subarray(l>>>0,f>>>0)):[]})},831185:(n,l,f,b)=>{d.ob("DepthToSpace",n,{blocksize:l,mode:He(f),format:b?"NHWC":"NCHW"})},831318:(n,l,f,b)=>{d.ob("DepthToSpace",n,{blocksize:l,mode:He(f),format:b?"NHWC":"NCHW"})},831451:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we)=>{d.ob("ConvTranspose",n,{format:re?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernelShape:[C],pads:[k,V],strides:[F],wIsConst:()=>!!r()[J>>>0],outputPadding:ce?Array.from(a().subarray(ce>>>0,Re>>>0)):[],outputShape:ze?Array.from(a().subarray(ze>>>0,z>>>0)):[],activation:He(we)})},831852:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z)=>{d.ob("ConvTranspose",n,{format:F?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,ze>>>0)):[],activation:He(z)})},832417:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we)=>{d.ob("ConvTranspose",n,{format:re?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernelShape:[C],pads:[k,V],strides:[F],wIsConst:()=>!!r()[J>>>0],outputPadding:ce?Array.from(a().subarray(ce>>>0,Re>>>0)):[],outputShape:ze?Array.from(a().subarray(ze>>>0,z>>>0)):[],activation:He(we)})},832818:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z)=>{d.ob("ConvTranspose",n,{format:F?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,ze>>>0)):[],activation:He(z)})},833383:(n,l)=>{d.ob("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},833474:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("AveragePool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},833758:(n,l)=>{d.ob("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},833849:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("AveragePool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834133:(n,l)=>{d.ob("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},834220:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("MaxPool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834500:(n,l)=>{d.ob("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},834587:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("MaxPool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834867:(n,l,f,b,C)=>{d.ob("Gemm",n,{alpha:l,beta:f,transA:b,transB:C})},834971:n=>{d.ob("MatMul",n,void 0)},835025:(n,l,f,b)=>{d.ob("ArgMax",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},835133:(n,l,f,b)=>{d.ob("ArgMin",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},835241:(n,l)=>{d.ob("Softmax",n,{axis:l})},835304:(n,l)=>{d.ob("Concat",n,{axis:l})},835364:(n,l,f,b,C)=>{d.ob("Split",n,{axis:l,numOutputs:f,splitSizes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},835504:n=>{d.ob("Expand",n,void 0)},835558:(n,l)=>{d.ob("Gather",n,{axis:Number(l)})},835629:(n,l)=>{d.ob("GatherElements",n,{axis:Number(l)})},835708:(n,l,f,b,C,k,V,F,re,J,ce)=>{d.ob("Resize",n,{antialias:l,axes:f?Array.from(a().subarray(f>>>0,b>>>0)):[],coordinateTransformMode:He(C),cubicCoeffA:k,excludeOutside:V,extrapolationValue:F,keepAspectRatioPolicy:He(re),mode:He(J),nearestMode:He(ce)})},836054:(n,l,f,b,C,k,V)=>{d.ob("Slice",n,{starts:l?Array.from(a().subarray(l>>>0,f>>>0)):[],ends:b?Array.from(a().subarray(b>>>0,C>>>0)):[],axes:k?Array.from(a().subarray(k>>>0,V>>>0)):[]})},836270:n=>{d.ob("Tile",n,void 0)},836322:(n,l,f,b)=>{d.ob("LayerNormalization",n,{axis:l,epsilon:f,simplified:!!b})},836433:(n,l,f)=>{d.ob("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},836547:(n,l,f)=>{d.ob("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},836661:n=>{d.ob("Range",n,void 0)},836714:(n,l)=>{d.ob("Einsum",n,{equation:He(l)})},836795:(n,l,f,b,C)=>{d.ob("Pad",n,{mode:l,value:f,pads:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},836922:(n,l,f,b,C,k)=>{d.ob("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!C,trainingMode:!!b,format:k?"NHWC":"NCHW"})},837091:(n,l,f,b,C,k)=>{d.ob("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!C,trainingMode:!!b,format:k?"NHWC":"NCHW"})},837260:(n,l,f)=>{d.ob("CumSum",n,{exclusive:Number(l),reverse:Number(f)})},837357:(n,l,f,b,C,k,V,F,re)=>{d.ob("Attention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:k,qkvHiddenSizes:V?Array.from(a().subarray(Number(F)>>>0,Number(F)+V>>>0)):[],pastPresentShareBuffer:!!re})},837629:n=>{d.ob("BiasAdd",n,void 0)},837684:n=>{d.ob("BiasSplitGelu",n,void 0)},837745:n=>{d.ob("FastGelu",n,void 0)},837801:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze)=>{d.ob("Conv",n,{format:re?"NHWC":"NCHW",auto_pad:l,dilations:[f],group:b,kernel_shape:[C],pads:k?Array.from(a().subarray(k>>>0,V>>>0)):[],strides:[F],w_is_const:()=>!!r()[J>>>0],activation:He(ce),activation_params:Re?Array.from(p().subarray(Re>>>0,ze>>>0)):[]})},838171:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("Conv",n,{format:Re?"NHWC":"NCHW",auto_pad:l,dilations:[f,b],group:C,kernel_shape:[k,V],pads:F?Array.from(a().subarray(F>>>0,re>>>0)):[],strides:[J,ce],w_is_const:()=>!!r()[ze>>>0],activation:He(z),activation_params:we?Array.from(p().subarray(we>>>0,Pe>>>0)):[]})},838562:n=>{d.ob("Gelu",n,void 0)},838614:(n,l,f,b,C,k)=>{d.ob("MatMulNBits",n,{k:l,n:f,accuracyLevel:b,bits:C,blockSize:k})},838741:(n,l,f,b,C,k)=>{d.ob("MultiHeadAttention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:k})},838900:(n,l,f,b,C)=>{d.ob("RotaryEmbedding",n,{interleaved:!!l,numHeads:f,rotaryEmbeddingDim:b,scale:C})},839039:(n,l,f)=>{d.ob("SkipLayerNormalization",n,{epsilon:l,simplified:!!f})},839141:(n,l,f)=>{d.ob("SkipLayerNormalization",n,{epsilon:l,simplified:!!f})},839243:(n,l,f,b)=>{d.ob("LayerNormalization",n,{axis:l,epsilon:f,simplified:!!b})},839354:n=>{d.ac(n)},839388:(n,l)=>d.cc(n,l,d.Cb.ec,d.Cb.errors)};function st(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var Tr=n=>{n.terminate(),n.onmessage=()=>{}},ht=n=>{ge.xb.length==0&&(lr(),ge.Mb(ge.xb[0]));var l=ge.xb.pop();if(!l)return 6;ge.yb.push(l),ge.ub[n.wb]=l,l.wb=n.wb;var f={cmd:"run",start_routine:n.fc,arg:n.Rb,pthread_ptr:n.wb};return P&&l.unref(),l.postMessage(f,n.mc),0},bt=0,Er=n=>{var l=io();return n=n(),fn(l),n},Te=(n,l,...f)=>Er(()=>{for(var b=2*f.length,C=oo(8*b),k=C>>>3,V=0;V<f.length;V++){var F=f[V];typeof F=="bigint"?(De[k+2*V]=1n,De[k+2*V+1]=F):(De[k+2*V]=0n,h()[k+2*V+1>>>0]=F)}return gi(n,0,b,C,l)});function dr(n){if(O)return Te(0,1,n);ie=n,0<bt||(ge.hc(),d.onExit?.(n),me=!0),A(n,new st(n))}var Xe=n=>{if(ie=n,O)throw jr(n),"unwind";dr(n)};function ut(){for(var n=d.numThreads;n--;)lr();mt.unshift(()=>{Ut++,Fn(()=>xr())})}function lr(){var n=H("ort-wasm-simd-threaded.worker.js");n=new Worker(n),ge.xb.push(n)}function Fn(n){O?n():Promise.all(ge.xb.map(ge.Mb)).then(n)}var ge={xb:[],yb:[],Qb:[],ub:{},Gb(){O?(ge.receiveObjectTransfer=ge.dc,ge.threadInitTLS=ge.Pb,ge.setExitStatus=ge.Ob):ut()},Ob:n=>ie=n,pc:["$terminateWorker"],hc:()=>{for(var n of ge.yb)Tr(n);for(n of ge.xb)Tr(n);ge.xb=[],ge.yb=[],ge.ub=[]},Nb:n=>{var l=n.wb;delete ge.ub[l],ge.xb.push(n),ge.yb.splice(ge.yb.indexOf(n),1),n.wb=0,ro(l)},dc(){},Pb(){ge.Qb.forEach(n=>n())},Mb:n=>new Promise(l=>{n.onmessage=k=>{k=k.data;var V=k.cmd;if(k.targetThread&&k.targetThread!=pn()){var F=ge.ub[k.targetThread];F?F.postMessage(k,k.transferList):ee(`Internal error! Worker sent a message "${V}" to target pthread ${k.targetThread}, but that thread no longer exists!`)}else V==="checkMailbox"?rt():V==="spawnThread"?ht(k):V==="cleanupThread"?ge.Nb(ge.ub[k.thread]):V==="killThread"?(k=k.thread,V=ge.ub[k],delete ge.ub[k],Tr(V),ro(k),ge.yb.splice(ge.yb.indexOf(V),1),V.wb=0):V==="cancelThread"?ge.ub[k.thread].postMessage({cmd:"cancel"}):V==="loaded"?(n.loaded=!0,P&&!n.wb&&n.unref(),l(n)):V==="alert"?alert(`Thread ${k.threadId}: ${k.text}`):k.target==="setimmediate"?n.postMessage(k):V==="callHandler"?d[k.handler](...k.args):V&&ee(`worker sent an unknown command ${V}`)},n.onerror=k=>{throw ee(`worker sent an error! ${k.filename}:${k.lineno}: ${k.message}`),k},P&&(n.on("message",k=>n.onmessage({data:k})),n.on("error",k=>n.onerror(k)));var f=[],b=["onExit"],C;for(C of b)d.hasOwnProperty(C)&&f.push(C);n.postMessage({cmd:"load",handlers:f,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:ae,wasmModule:Ae})})};d.PThread=ge;var Yt=n=>{for(;0<n.length;)n.shift()(d)};d.establishStackSpace=()=>{var n=pn(),l=c()[n+52>>>2>>>0];n=c()[n+56>>>2>>>0],bi(l,l-n),fn(l)};function jr(n){if(O)return Te(1,0,n);Xe(n)}d.invokeEntryPoint=(n,l)=>{bt=0,n=wi(n,l),0<bt?ge.Ob(n):no(n)};class qn{constructor(l){this.Ib=l-24}Gb(l,f){c()[this.Ib+16>>>2>>>0]=0,c()[this.Ib+4>>>2>>>0]=l,c()[this.Ib+8>>>2>>>0]=f}}var Kr=0,jn=0;function Yr(n,l,f,b){return O?Te(2,1,n,l,f,b):Zr(n,l,f,b)}function Zr(n,l,f,b){if(n>>>=0,l>>>=0,f>>>=0,b>>>=0,typeof SharedArrayBuffer>"u")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var C=[];return O&&C.length===0?Yr(n,l,f,b):(n={fc:f,wb:n,Rb:b,mc:C},O?(n.oc="spawnThread",postMessage(n,C),0):ht(n))}var cr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Pr=(n,l,f)=>{l>>>=0;var b=l+f;for(f=l;n[f]&&!(f>=b);)++f;if(16<f-l&&n.buffer&&cr)return cr.decode(n.buffer instanceof SharedArrayBuffer?n.slice(l,f):n.subarray(l,f));for(b="";l<f;){var C=n[l++];if(C&128){var k=n[l++]&63;if((C&224)==192)b+=String.fromCharCode((C&31)<<6|k);else{var V=n[l++]&63;C=(C&240)==224?(C&15)<<12|k<<6|V:(C&7)<<18|k<<12|V<<6|n[l++]&63,65536>C?b+=String.fromCharCode(C):(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023))}}else b+=String.fromCharCode(C)}return b},He=(n,l)=>(n>>>=0)?Pr(o(),n,l):"";function Xr(n,l,f){return O?Te(3,1,n,l,f):0}function Qr(n,l){if(O)return Te(4,1,n,l)}var gt=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);127>=b?l++:2047>=b?l+=2:55296<=b&&57343>=b?(l+=4,++f):l+=3}return l},dt=(n,l,f,b)=>{if(f>>>=0,!(0<b))return 0;var C=f;b=f+b-1;for(var k=0;k<n.length;++k){var V=n.charCodeAt(k);if(55296<=V&&57343>=V){var F=n.charCodeAt(++k);V=65536+((V&1023)<<10)|F&1023}if(127>=V){if(f>=b)break;l[f++>>>0]=V}else{if(2047>=V){if(f+1>=b)break;l[f++>>>0]=192|V>>6}else{if(65535>=V){if(f+2>=b)break;l[f++>>>0]=224|V>>12}else{if(f+3>=b)break;l[f++>>>0]=240|V>>18,l[f++>>>0]=128|V>>12&63}l[f++>>>0]=128|V>>6&63}l[f++>>>0]=128|V&63}}return l[f>>>0]=0,f-C},Rt=(n,l,f)=>dt(n,o(),l,f);function Zt(n,l){if(O)return Te(5,1,n,l)}function kr(n,l,f){if(O)return Te(6,1,n,l,f)}function Or(n,l,f){return O?Te(7,1,n,l,f):0}function Jr(n,l){if(O)return Te(8,1,n,l)}function pr(n,l,f){if(O)return Te(9,1,n,l,f)}function en(n,l,f,b){if(O)return Te(10,1,n,l,f,b)}function tn(n,l,f,b){if(O)return Te(11,1,n,l,f,b)}function rn(n,l,f,b){if(O)return Te(12,1,n,l,f,b)}function nn(n){if(O)return Te(13,1,n)}function Rr(n,l){if(O)return Te(14,1,n,l)}function Xt(n,l,f){if(O)return Te(15,1,n,l,f)}var on,nt=n=>{for(var l="";o()[n>>>0];)l+=on[o()[n++>>>0]];return l},mr={},Br={},Kn={},wt;function Yn(n,l,f={}){var b=l.name;if(!n)throw new wt(`type "${b}" must have a positive integer typeid pointer`);if(Br.hasOwnProperty(n)){if(f.Ub)return;throw new wt(`Cannot register type \'${b}\' twice`)}Br[n]=l,delete Kn[n],mr.hasOwnProperty(n)&&(l=mr[n],delete mr[n],l.forEach(C=>C()))}function Je(n,l,f={}){if(!("argPackAdvance"in l))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Yn(n,l,f)}var Dr=(n,l,f)=>{switch(l){case 1:return f?b=>r()[b>>>0]:b=>o()[b>>>0];case 2:return f?b=>i()[b>>>1>>>0]:b=>u()[b>>>1>>>0];case 4:return f?b=>a()[b>>>2>>>0]:b=>c()[b>>>2>>>0];case 8:return f?b=>De[b>>>3]:b=>Ge[b>>>3];default:throw new TypeError(`invalid integer width (${l}): ${n}`)}},fr=[],lt=[];function hr(n){n>>>=0,9<n&&--lt[n+1]===0&&(lt[n]=void 0,fr.push(n))}var Qe=n=>{if(!n)throw new wt("Cannot use deleted val. handle = "+n);return lt[n]},ot=n=>{switch(n){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let l=fr.pop()||lt.length;return lt[l]=n,lt[l+1]=1,l}};function Qt(n){return this.fromWireType(c()[n>>>2>>>0])}var Zn={name:"emscripten::val",fromWireType:n=>{var l=Qe(n);return hr(n),l},toWireType:(n,l)=>ot(l),argPackAdvance:8,readValueFromPointer:Qt,Bb:null},an=(n,l)=>{switch(l){case 4:return function(f){return this.fromWireType(p()[f>>>2>>>0])};case 8:return function(f){return this.fromWireType(h()[f>>>3>>>0])};default:throw new TypeError(`invalid float width (${l}): ${n}`)}},zr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Xn=(n,l)=>{for(var f=n>>1,b=f+l/2;!(f>=b)&&u()[f>>>0];)++f;if(f<<=1,32<f-n&&zr)return zr.decode(o().slice(n,f));for(f="",b=0;!(b>=l/2);++b){var C=i()[n+2*b>>>1>>>0];if(C==0)break;f+=String.fromCharCode(C)}return f},sn=(n,l,f)=>{if(f??=2147483647,2>f)return 0;f-=2;var b=l;f=f<2*n.length?f/2:n.length;for(var C=0;C<f;++C){var k=n.charCodeAt(C);i()[l>>>1>>>0]=k,l+=2}return i()[l>>>1>>>0]=0,l-b},un=n=>2*n.length,gr=(n,l)=>{for(var f=0,b="";!(f>=l/4);){var C=a()[n+4*f>>>2>>>0];if(C==0)break;++f,65536<=C?(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023)):b+=String.fromCharCode(C)}return b},Qn=(n,l,f)=>{if(l>>>=0,f??=2147483647,4>f)return 0;var b=l;f=b+f-4;for(var C=0;C<n.length;++C){var k=n.charCodeAt(C);if(55296<=k&&57343>=k){var V=n.charCodeAt(++C);k=65536+((k&1023)<<10)|V&1023}if(a()[l>>>2>>>0]=k,l+=4,l+4>f)break}return a()[l>>>2>>>0]=0,l-b},pe=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);55296<=b&&57343>=b&&++f,l+=4}return l},Mr=n=>{if(!me)try{if(n(),!(0<bt))try{O?no(ie):Xe(ie)}catch(l){l instanceof st||l=="unwind"||A(1,l)}}catch(l){l instanceof st||l=="unwind"||A(1,l)}};function Wt(n){n>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(a(),n>>>2,n).value.then(rt),n+=128,Atomics.store(a(),n>>>2,1))}d.__emscripten_thread_mailbox_await=Wt;var rt=()=>{var n=pn();n&&(Wt(n),Mr(yi))};d.checkMailbox=rt;var yr=[],br=(n,l)=>{var f=Br[n];if(f===void 0)throw n=fi(n),f=nt(n),Ct(n),new wt(`${l} has unknown type ${f}`);return f},Ur=(n,l,f)=>{var b=[];return n=n.toWireType(b,f),b.length&&(c()[l>>>2>>>0]=ot(b)),n},Jt=n=>{try{n()}catch(l){Kt(l)}};function dn(){var n=oe,l={};for(let[f,b]of Object.entries(n))l[f]=typeof b=="function"?(...C)=>{Bt.push(f);try{return b(...C)}finally{me||(Bt.pop(),ct&&vt===1&&Bt.length===0&&(vt=0,bt+=1,Jt($i),typeof Fibers<"u"&&Fibers.rc()))}}:b;return l}var vt=0,ct=null,ln=0,Bt=[],Vr={},s={},m=0,g=null,$=[];function T(){return new Promise((n,l)=>{g={resolve:n,reject:l}})}function B(){var n=mn(65548),l=n+12;c()[n>>>2>>>0]=l,c()[n+4>>>2>>>0]=l+65536,l=Bt[0];var f=Vr[l];return f===void 0&&(f=m++,Vr[l]=f,s[f]=l),l=f,a()[n+8>>>2>>>0]=l,n}function L(){var n=a()[ct+8>>>2>>>0];return n=oe[s[n]],--bt,n()}function q(n){if(!me){if(vt===0){var l=!1,f=!1;n((b=0)=>{if(!me&&(ln=b,l=!0,f)){vt=2,Jt(()=>_i(ct)),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.resume(),b=!1;try{var C=L()}catch(F){C=F,b=!0}var k=!1;if(!ct){var V=g;V&&(g=null,(b?V.reject:V.resolve)(C),k=!0)}if(b&&!k)throw C}}),f=!0,l||(vt=1,ct=B(),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.pause(),Jt(()=>vi(ct)))}else vt===2?(vt=0,Jt(Si),Ct(ct),ct=null,$.forEach(Mr)):Kt(`invalid state: ${vt}`);return ln}}function te(n){return q(l=>{n().then(l)})}var X=[],de={},Ee=n=>{var l=de[n];return l===void 0?nt(n):l},Oe=()=>typeof globalThis=="object"?globalThis:Function("return this")(),D=n=>{var l=X.length;return X.push(n),l},be=(n,l)=>{for(var f=Array(n),b=0;b<n;++b)f[b]=br(c()[l+4*b>>>2>>>0],"parameter "+b);return f},Ie=(n,l)=>Object.defineProperty(l,"name",{value:n});function Dt(n){var l=Function;if(!(l instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof l} which is not a function`);var f=Ie(l.name||"unknownFunctionName",function(){});return f.prototype=l.prototype,f=new f,n=l.apply(f,n),n instanceof Object?n:f}var zt=n=>n%4===0&&(n%100!==0||n%400===0),Qo=[0,31,60,91,121,152,182,213,244,274,305,335],Jo=[0,31,59,90,120,151,181,212,243,273,304,334];function ei(n,l,f,b,C,k,V){return O?Te(16,1,n,l,f,b,C,k,V):-52}function ti(n,l,f,b,C,k){if(O)return Te(17,1,n,l,f,b,C,k)}var Jn=[],ri=(n,l)=>{Jn.length=0;for(var f;f=o()[n++>>>0];){var b=f!=105;b&=f!=112,l+=b&&l%8?4:0,Jn.push(f==112?c()[l>>>2>>>0]:f==106?De[l>>>3]:f==105?a()[l>>>2>>>0]:h()[l>>>3>>>0]),l+=b?8:4}return Jn},eo={},ni=()=>{if(!to){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:I||"./this.program"},l;for(l in eo)eo[l]===void 0?delete n[l]:n[l]=eo[l];var f=[];for(l in n)f.push(`${l}=${n[l]}`);to=f}return to},to;function oi(n,l){if(O)return Te(18,1,n,l);n>>>=0,l>>>=0;var f=0;return ni().forEach((b,C)=>{var k=l+f;for(C=c()[n+4*C>>>2>>>0]=k,k=0;k<b.length;++k)r()[C++>>>0]=b.charCodeAt(k);r()[C>>>0]=0,f+=b.length+1}),0}function ii(n,l){if(O)return Te(19,1,n,l);n>>>=0,l>>>=0;var f=ni();c()[n>>>2>>>0]=f.length;var b=0;return f.forEach(C=>b+=C.length+1),c()[l>>>2>>>0]=b,0}function ai(n){return O?Te(20,1,n):52}function si(n,l,f,b){return O?Te(21,1,n,l,f,b):52}function ui(n,l,f,b){return O?Te(22,1,n,l,f,b):70}var Xd=[null,[],[]];function di(n,l,f,b){if(O)return Te(23,1,n,l,f,b);l>>>=0,f>>>=0,b>>>=0;for(var C=0,k=0;k<f;k++){var V=c()[l>>>2>>>0],F=c()[l+4>>>2>>>0];l+=8;for(var re=0;re<F;re++){var J=o()[V+re>>>0],ce=Xd[n];J===0||J===10?((n===1?We:ee)(Pr(ce,0)),ce.length=0):ce.push(J)}C+=F}return c()[b>>>2>>>0]=C,0}var li=[31,29,31,30,31,30,31,31,30,31,30,31],ci=[31,28,31,30,31,30,31,31,30,31,30,31];function Qd(n){var l=Array(gt(n)+1);return dt(n,l,0,l.length),l}var Jd=(n,l)=>{r().set(n,l>>>0)};function pi(n,l,f,b){function C(z,we,Pe){for(z=typeof z=="number"?z.toString():z||"";z.length<we;)z=Pe[0]+z;return z}function k(z,we){return C(z,we,"0")}function V(z,we){function Pe(Ci){return 0>Ci?-1:0<Ci?1:0}var er;return(er=Pe(z.getFullYear()-we.getFullYear()))===0&&(er=Pe(z.getMonth()-we.getMonth()))===0&&(er=Pe(z.getDate()-we.getDate())),er}function F(z){switch(z.getDay()){case 0:return new Date(z.getFullYear()-1,11,29);case 1:return z;case 2:return new Date(z.getFullYear(),0,3);case 3:return new Date(z.getFullYear(),0,2);case 4:return new Date(z.getFullYear(),0,1);case 5:return new Date(z.getFullYear()-1,11,31);case 6:return new Date(z.getFullYear()-1,11,30)}}function re(z){var we=z.zb;for(z=new Date(new Date(z.Ab+1900,0,1).getTime());0<we;){var Pe=z.getMonth(),er=(zt(z.getFullYear())?li:ci)[Pe];if(we>er-z.getDate())we-=er-z.getDate()+1,z.setDate(1),11>Pe?z.setMonth(Pe+1):(z.setMonth(0),z.setFullYear(z.getFullYear()+1));else{z.setDate(z.getDate()+we);break}}return Pe=new Date(z.getFullYear()+1,0,4),we=F(new Date(z.getFullYear(),0,4)),Pe=F(Pe),0>=V(we,z)?0>=V(Pe,z)?z.getFullYear()+1:z.getFullYear():z.getFullYear()-1}n>>>=0,l>>>=0,f>>>=0,b>>>=0;var J=c()[b+40>>>2>>>0];b={kc:a()[b>>>2>>>0],jc:a()[b+4>>>2>>>0],Eb:a()[b+8>>>2>>>0],Jb:a()[b+12>>>2>>>0],Fb:a()[b+16>>>2>>>0],Ab:a()[b+20>>>2>>>0],vb:a()[b+24>>>2>>>0],zb:a()[b+28>>>2>>>0],qc:a()[b+32>>>2>>>0],ic:a()[b+36>>>2>>>0],lc:J?He(J):""},f=He(f),J={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ce in J)f=f.replace(new RegExp(ce,"g"),J[ce]);var Re="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ze="January February March April May June July August September October November December".split(" ");J={"%a":z=>Re[z.vb].substring(0,3),"%A":z=>Re[z.vb],"%b":z=>ze[z.Fb].substring(0,3),"%B":z=>ze[z.Fb],"%C":z=>k((z.Ab+1900)/100|0,2),"%d":z=>k(z.Jb,2),"%e":z=>C(z.Jb,2," "),"%g":z=>re(z).toString().substring(2),"%G":re,"%H":z=>k(z.Eb,2),"%I":z=>(z=z.Eb,z==0?z=12:12<z&&(z-=12),k(z,2)),"%j":z=>{for(var we=0,Pe=0;Pe<=z.Fb-1;we+=(zt(z.Ab+1900)?li:ci)[Pe++]);return k(z.Jb+we,3)},"%m":z=>k(z.Fb+1,2),"%M":z=>k(z.jc,2),"%n":()=>`\n`,"%p":z=>0<=z.Eb&&12>z.Eb?"AM":"PM","%S":z=>k(z.kc,2),"%t":()=>"	","%u":z=>z.vb||7,"%U":z=>k(Math.floor((z.zb+7-z.vb)/7),2),"%V":z=>{var we=Math.floor((z.zb+7-(z.vb+6)%7)/7);if(2>=(z.vb+371-z.zb-2)%7&&we++,we)we==53&&(Pe=(z.vb+371-z.zb)%7,Pe==4||Pe==3&&zt(z.Ab)||(we=1));else{we=52;var Pe=(z.vb+7-z.zb-1)%7;(Pe==4||Pe==5&&zt(z.Ab%400-1))&&we++}return k(we,2)},"%w":z=>z.vb,"%W":z=>k(Math.floor((z.zb+7-(z.vb+6)%7)/7),2),"%y":z=>(z.Ab+1900).toString().substring(2),"%Y":z=>z.Ab+1900,"%z":z=>{z=z.ic;var we=0<=z;return z=Math.abs(z)/60,(we?"+":"-")+("0000"+(z/60*100+z%60)).slice(-4)},"%Z":z=>z.lc,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(ce in J)f.includes(ce)&&(f=f.replace(new RegExp(ce,"g"),J[ce](b)));return f=f.replace(/\\0\\0/g,"%"),ce=Qd(f),ce.length>l?0:(Jd(ce,n),ce.length-1)}ge.Gb();for(var mi=Array(256),cn=0;256>cn;++cn)mi[cn]=String.fromCharCode(cn);on=mi,wt=d.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},d.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},lt.push(0,1,void 0,1,null,1,!0,1,!1,1),d.count_emval_handles=()=>lt.length/2-5-fr.length;var el=[dr,jr,Yr,Xr,Qr,Zt,kr,Or,Jr,pr,en,tn,rn,nn,Rr,Xt,ei,ti,oi,ii,ai,si,ui,di],tl={ua:function(n,l,f){return te(async()=>{await d.Zb(n,l,f)})},b:function(n,l,f){throw n>>>=0,new qn(n).Gb(l>>>0,f>>>0),Kr=n,jn++,Kr},ia:function(n){hi(n>>>0,!E,1,!x,131072,!1),ge.Pb()},G:function(n){n>>>=0,O?postMessage({cmd:"cleanupThread",thread:n}):ge.Nb(ge.ub[n])},_:Zr,B:Xr,pa:Qr,W:Zt,Y:kr,qa:Or,na:Jr,fa:pr,ma:en,K:tn,X:rn,U:nn,oa:Rr,V:Xt,E:function(n,l,f){n>>>=0,f>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:b=>b,toWireType:function(b,C){if(typeof C!="bigint"&&typeof C!="number")throw C===null?C="null":(b=typeof C,C=b==="object"||b==="array"||b==="function"?C.toString():""+C),new TypeError(`Cannot convert "${C}" to ${this.name}`);return typeof C=="number"&&(C=BigInt(C)),C},argPackAdvance:8,readValueFromPointer:Dr(l,f,l.indexOf("u")==-1),Bb:null})},O:function(n,l,f,b){n>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:function(C){return!!C},toWireType:function(C,k){return k?f:b},argPackAdvance:8,readValueFromPointer:function(C){return this.fromWireType(o()[C>>>0])},Bb:null})},N:function(n){return Je(n>>>0,Zn)},D:function(n,l,f){n>>>=0,f>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:b=>b,toWireType:(b,C)=>C,argPackAdvance:8,readValueFromPointer:an(l,f),Bb:null})},t:function(n,l,f,b,C){if(n>>>=0,f>>>=0,l=nt(l>>>0),C===-1&&(C=4294967295),C=F=>F,b===0){var k=32-8*f;C=F=>F<<k>>>k}var V=l.includes("unsigned")?function(F,re){return re>>>0}:function(F,re){return re};Je(n,{name:l,fromWireType:C,toWireType:V,argPackAdvance:8,readValueFromPointer:Dr(l,f,b!==0),Bb:null})},p:function(n,l,f){function b(k){var V=c()[k>>>2>>>0];return k=c()[k+4>>>2>>>0],new C(r().buffer,k,V)}n>>>=0;var C=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][l];f=nt(f>>>0),Je(n,{name:f,fromWireType:b,argPackAdvance:8,readValueFromPointer:b},{Ub:!0})},F:function(n,l){n>>>=0,l=nt(l>>>0);var f=l==="std::string";Je(n,{name:l,fromWireType:function(b){var C=c()[b>>>2>>>0],k=b+4;if(f)for(var V=k,F=0;F<=C;++F){var re=k+F;if(F==C||o()[re>>>0]==0){if(V=He(V,re-V),J===void 0)var J=V;else J+=String.fromCharCode(0),J+=V;V=re+1}}else{for(J=Array(C),F=0;F<C;++F)J[F]=String.fromCharCode(o()[k+F>>>0]);J=J.join("")}return Ct(b),J},toWireType:function(b,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var k=typeof C=="string";if(!(k||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new wt("Cannot pass non-string to std::string");var V=f&&k?gt(C):C.length,F=mn(4+V+1),re=F+4;if(c()[F>>>2>>>0]=V,f&&k)Rt(C,re,V+1);else if(k)for(k=0;k<V;++k){var J=C.charCodeAt(k);if(255<J)throw Ct(re),new wt("String has UTF-16 code units that do not fit in 8 bits");o()[re+k>>>0]=J}else for(k=0;k<V;++k)o()[re+k>>>0]=C[k];return b!==null&&b.push(Ct,F),F},argPackAdvance:8,readValueFromPointer:Qt,Bb(b){Ct(b)}})},A:function(n,l,f){if(n>>>=0,l>>>=0,f>>>=0,f=nt(f),l===2)var b=Xn,C=sn,k=un,V=F=>u()[F>>>1>>>0];else l===4&&(b=gr,C=Qn,k=pe,V=F=>c()[F>>>2>>>0]);Je(n,{name:f,fromWireType:F=>{for(var re=c()[F>>>2>>>0],J,ce=F+4,Re=0;Re<=re;++Re){var ze=F+4+Re*l;(Re==re||V(ze)==0)&&(ce=b(ce,ze-ce),J===void 0?J=ce:(J+=String.fromCharCode(0),J+=ce),ce=ze+l)}return Ct(F),J},toWireType:(F,re)=>{if(typeof re!="string")throw new wt(`Cannot pass non-string to C++ string type ${f}`);var J=k(re),ce=mn(4+J+l);return c()[ce>>>2>>>0]=J/l,C(re,ce+4,J+l),F!==null&&F.push(Ct,ce),ce},argPackAdvance:8,readValueFromPointer:Qt,Bb(F){Ct(F)}})},P:function(n,l){n>>>=0,l=nt(l>>>0),Je(n,{Vb:!0,name:l,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ta:()=>1,S:function(n,l){n>>>=0,n==l>>>0?setTimeout(rt):O?postMessage({targetThread:n,cmd:"checkMailbox"}):(n=ge.ub[n])&&n.postMessage({cmd:"checkMailbox"})},$:function(n,l,f,b,C){l>>>=0,f>>>=0,b/=2,yr.length=b,C=C>>>0>>>3;for(var k=0;k<b;k++)yr[k]=De[C+2*k]?De[C+2*k+1]:h()[C+2*k+1>>>0];return n=l?Ir[l]:el[n],ge.Sb=f,f=n(...yr),ge.Sb=0,f},ha:Wt,sa:function(n){P&&ge.ub[n>>>0].ref()},w:function(n,l,f){return l>>>=0,f>>>=0,n=Qe(n>>>0),l=br(l,"emval::as"),Ur(l,f,n)},z:function(n){return n>>>=0,te(()=>(n=Qe(n),n.then(ot)))},o:function(n,l,f,b){return f>>>=0,b>>>=0,n=X[n>>>0],l=Qe(l>>>0),n(null,l,f,b)},k:function(n,l,f,b,C){return f>>>=0,b>>>=0,C>>>=0,n=X[n>>>0],l=Qe(l>>>0),f=Ee(f),n(l,l[f],b,C)},c:hr,y:function(n,l){return l>>>=0,n=Qe(n>>>0),l=Qe(l),n==l},n:function(n){return n>>>=0,n===0?ot(Oe()):(n=Ee(n),ot(Oe()[n]))},j:function(n,l,f){l=be(n,l>>>0);var b=l.shift();n--;var C=`return function (obj, func, destructorsRef, args) {\n`,k=0,V=[];f===0&&V.push("obj");for(var F=["retType"],re=[b],J=0;J<n;++J)V.push("arg"+J),F.push("argType"+J),re.push(l[J]),C+=`  var arg${J} = argType${J}.readValueFromPointer(args${k?"+"+k:""});\n`,k+=l[J].argPackAdvance;return C+=`  var rv = ${f===1?"new func":"func.call"}(${V.join(", ")});\n`,b.Vb||(F.push("emval_returnValue"),re.push(Ur),C+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),F.push(C+`};\n`),n=Dt(F)(...re),f=`methodCaller<(${l.map(ce=>ce.name).join(", ")}) => ${b.name}>`,D(Ie(f,n))},s:function(n,l){return l>>>=0,n=Qe(n>>>0),l=Qe(l),ot(n[l])},d:function(n){n>>>=0,9<n&&(lt[n+1]+=1)},v:function(){return ot([])},m:function(n){n=Qe(n>>>0);for(var l=Array(n.length),f=0;f<n.length;f++)l[f]=n[f];return ot(l)},g:function(n){return ot(Ee(n>>>0))},l:function(){return ot({})},i:function(n){n>>>=0;for(var l=Qe(n);l.length;){var f=l.pop();l.pop()(f)}hr(n)},h:function(n,l,f){l>>>=0,f>>>=0,n=Qe(n>>>0),l=Qe(l),f=Qe(f),n[l]=f},e:function(n,l){return l>>>=0,n=br(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(l),ot(n)},ca:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getUTCSeconds(),a()[l+4>>>2>>>0]=n.getUTCMinutes(),a()[l+8>>>2>>>0]=n.getUTCHours(),a()[l+12>>>2>>>0]=n.getUTCDate(),a()[l+16>>>2>>>0]=n.getUTCMonth(),a()[l+20>>>2>>>0]=n.getUTCFullYear()-1900,a()[l+24>>>2>>>0]=n.getUTCDay(),n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[l+28>>>2>>>0]=n},da:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getSeconds(),a()[l+4>>>2>>>0]=n.getMinutes(),a()[l+8>>>2>>>0]=n.getHours(),a()[l+12>>>2>>>0]=n.getDate(),a()[l+16>>>2>>>0]=n.getMonth(),a()[l+20>>>2>>>0]=n.getFullYear()-1900,a()[l+24>>>2>>>0]=n.getDay();var f=(zt(n.getFullYear())?Qo:Jo)[n.getMonth()]+n.getDate()-1|0;a()[l+28>>>2>>>0]=f,a()[l+36>>>2>>>0]=-(60*n.getTimezoneOffset()),f=new Date(n.getFullYear(),6,1).getTimezoneOffset();var b=new Date(n.getFullYear(),0,1).getTimezoneOffset();n=(f!=b&&n.getTimezoneOffset()==Math.min(b,f))|0,a()[l+32>>>2>>>0]=n},ea:function(n){n>>>=0;var l=new Date(a()[n+20>>>2>>>0]+1900,a()[n+16>>>2>>>0],a()[n+12>>>2>>>0],a()[n+8>>>2>>>0],a()[n+4>>>2>>>0],a()[n>>>2>>>0],0),f=a()[n+32>>>2>>>0],b=l.getTimezoneOffset(),C=new Date(l.getFullYear(),6,1).getTimezoneOffset(),k=new Date(l.getFullYear(),0,1).getTimezoneOffset(),V=Math.min(k,C);return 0>f?a()[n+32>>>2>>>0]=+(C!=k&&V==b):0<f!=(V==b)&&(C=Math.max(k,C),l.setTime(l.getTime()+6e4*((0<f?V:C)-b))),a()[n+24>>>2>>>0]=l.getDay(),f=(zt(l.getFullYear())?Qo:Jo)[l.getMonth()]+l.getDate()-1|0,a()[n+28>>>2>>>0]=f,a()[n>>>2>>>0]=l.getSeconds(),a()[n+4>>>2>>>0]=l.getMinutes(),a()[n+8>>>2>>>0]=l.getHours(),a()[n+12>>>2>>>0]=l.getDate(),a()[n+16>>>2>>>0]=l.getMonth(),a()[n+20>>>2>>>0]=l.getYear(),n=l.getTime(),BigInt(isNaN(n)?-1:n/1e3)},aa:ei,ba:ti,R:function(n,l,f,b){n>>>=0,l>>>=0,f>>>=0,b>>>=0;var C=new Date().getFullYear(),k=new Date(C,0,1),V=new Date(C,6,1);C=k.getTimezoneOffset();var F=V.getTimezoneOffset(),re=Math.max(C,F);c()[n>>>2>>>0]=60*re,a()[l>>>2>>>0]=+(C!=F),n=J=>J.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],k=n(k),V=n(V),F<C?(Rt(k,f,17),Rt(V,b,17)):(Rt(k,b,17),Rt(V,f,17))},q:()=>{Kt("")},f:function(n,l,f){return n>>>=0,l=ri(l>>>0,f>>>0),Ir[n](...l)},M:function(n,l,f){return n>>>=0,l=ri(l>>>0,f>>>0),Ir[n](...l)},H:()=>{},L:()=>Date.now(),ra:()=>{throw bt+=1,"unwind"},T:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>P?(Ri(),wr(Oi)).cpus().length:navigator.hardwareConcurrency,Q:function(n){n>>>=0;var l=o().length;if(n<=l||4294901760<n)return!1;for(var f=1;4>=f;f*=2){var b=l*(1+.2/f);b=Math.min(b,n+100663296);var C=Math;b=Math.max(n,b);e:{C=(C.min.call(C,4294901760,b+(65536-b%65536)%65536)-ae.buffer.byteLength+65535)/65536;try{ae.grow(C),Ne();var k=1;break e}catch{}k=void 0}if(k)return!0}return!1},ja:oi,la:ii,Z:Xe,C:ai,J:si,ga:ui,I:di,a:ae||d.wasmMemory,ka:pi,r:function(n,l,f,b){return pi(n>>>0,l>>>0,f>>>0,b>>>0)}},oe=function(){function n(f,b){return oe=f.exports,oe=dn(),oe=rl(),ge.Qb.push(oe.cb),Ot.unshift(oe.va),Ae=b,xr(),oe}var l={a:tl};if(Ut++,d.instantiateWasm)try{return d.instantiateWasm(l,n)}catch(f){ee(`Module.instantiateWasm callback failed with error: ${f}`),w(f)}return Ar(l,function(f){n(f.instance,f.module)}).catch(w),{}}(),fi=n=>(fi=oe.wa)(n);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=oe.xa)(),d._OrtInit=(n,l)=>(d._OrtInit=oe.ya)(n,l),d._OrtGetLastError=(n,l)=>(d._OrtGetLastError=oe.za)(n,l),d._OrtCreateSessionOptions=(n,l,f,b,C,k,V,F,re,J)=>(d._OrtCreateSessionOptions=oe.Aa)(n,l,f,b,C,k,V,F,re,J),d._OrtAppendExecutionProvider=(n,l)=>(d._OrtAppendExecutionProvider=oe.Ba)(n,l),d._OrtAddFreeDimensionOverride=(n,l,f)=>(d._OrtAddFreeDimensionOverride=oe.Ca)(n,l,f),d._OrtAddSessionConfigEntry=(n,l,f)=>(d._OrtAddSessionConfigEntry=oe.Da)(n,l,f),d._OrtReleaseSessionOptions=n=>(d._OrtReleaseSessionOptions=oe.Ea)(n),d._OrtCreateSession=(n,l,f)=>(d._OrtCreateSession=oe.Fa)(n,l,f),d._OrtReleaseSession=n=>(d._OrtReleaseSession=oe.Ga)(n),d._OrtGetInputOutputCount=(n,l,f)=>(d._OrtGetInputOutputCount=oe.Ha)(n,l,f),d._OrtGetInputName=(n,l)=>(d._OrtGetInputName=oe.Ia)(n,l),d._OrtGetOutputName=(n,l)=>(d._OrtGetOutputName=oe.Ja)(n,l),d._OrtFree=n=>(d._OrtFree=oe.Ka)(n),d._OrtCreateTensor=(n,l,f,b,C,k)=>(d._OrtCreateTensor=oe.La)(n,l,f,b,C,k),d._OrtGetTensorData=(n,l,f,b,C)=>(d._OrtGetTensorData=oe.Ma)(n,l,f,b,C),d._OrtReleaseTensor=n=>(d._OrtReleaseTensor=oe.Na)(n),d._OrtCreateRunOptions=(n,l,f,b)=>(d._OrtCreateRunOptions=oe.Oa)(n,l,f,b),d._OrtAddRunConfigEntry=(n,l,f)=>(d._OrtAddRunConfigEntry=oe.Pa)(n,l,f),d._OrtReleaseRunOptions=n=>(d._OrtReleaseRunOptions=oe.Qa)(n),d._OrtCreateBinding=n=>(d._OrtCreateBinding=oe.Ra)(n),d._OrtBindInput=(n,l,f)=>(d._OrtBindInput=oe.Sa)(n,l,f),d._OrtBindOutput=(n,l,f,b)=>(d._OrtBindOutput=oe.Ta)(n,l,f,b),d._OrtClearBoundOutputs=n=>(d._OrtClearBoundOutputs=oe.Ua)(n),d._OrtReleaseBinding=n=>(d._OrtReleaseBinding=oe.Va)(n),d._OrtRunWithBinding=(n,l,f,b,C)=>(d._OrtRunWithBinding=oe.Wa)(n,l,f,b,C),d._OrtRun=(n,l,f,b,C,k,V,F)=>(d._OrtRun=oe.Xa)(n,l,f,b,C,k,V,F),d._OrtEndProfiling=n=>(d._OrtEndProfiling=oe.Ya)(n),d._JsepOutput=(n,l,f)=>(d._JsepOutput=oe.Za)(n,l,f),d._JsepGetNodeName=n=>(d._JsepGetNodeName=oe._a)(n);var pn=d._pthread_self=()=>(pn=d._pthread_self=oe.$a)(),mn=d._malloc=n=>(mn=d._malloc=oe.ab)(n),Ct=d._free=n=>(Ct=d._free=oe.bb)(n);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=oe.cb)();var hi=d.__emscripten_thread_init=(n,l,f,b,C,k)=>(hi=d.__emscripten_thread_init=oe.eb)(n,l,f,b,C,k);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=oe.fb)();var gi=(n,l,f,b,C)=>(gi=oe.gb)(n,l,f,b,C),ro=n=>(ro=oe.hb)(n),no=d.__emscripten_thread_exit=n=>(no=d.__emscripten_thread_exit=oe.ib)(n),yi=()=>(yi=oe.jb)(),bi=(n,l)=>(bi=oe.kb)(n,l),fn=n=>(fn=oe.lb)(n),oo=n=>(oo=oe.mb)(n),io=()=>(io=oe.nb)(),wi=d.dynCall_ii=(n,l)=>(wi=d.dynCall_ii=oe.pb)(n,l),vi=n=>(vi=oe.qb)(n),$i=()=>($i=oe.rb)(),_i=n=>(_i=oe.sb)(n),Si=()=>(Si=oe.tb)();d.___start_em_js=839500,d.___stop_em_js=839661;function rl(){var n=oe;n=Object.assign({},n);var l=b=>C=>b(C)>>>0,f=b=>()=>b()>>>0;return n.wa=l(n.wa),n.$a=f(n.$a),n.ab=l(n.ab),n.emscripten_main_runtime_thread_id=f(n.emscripten_main_runtime_thread_id),n.mb=l(n.mb),n.nb=f(n.nb),n}d.wasmMemory=ae,d.stackSave=()=>io(),d.stackRestore=n=>fn(n),d.stackAlloc=n=>oo(n),d.keepRuntimeAlive=()=>0<bt,d.UTF8ToString=He,d.stringToUTF8=Rt,d.lengthBytesUTF8=gt,d.ExitStatus=st,d.PThread=ge;var hn;jt=function n(){hn||xi(),hn||(jt=n)};function xi(){if(!(0<Ut))if(O)y(d),O||Yt(Ot),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)mt.unshift(d.preRun.shift());Yt(mt),0<Ut||hn||(hn=!0,d.calledRun=!0,me||(O||Yt(Ot),y(d),O||Yt(qt)))}}return xi(),_}})();typeof Di=="object"&&typeof mo=="object"?mo.exports=Bi:typeof define=="function"&&define.amd&&define([],()=>Bi)});var Mi=Wr((gm,cl)=>{cl.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(...e){var a=e.join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,a+`\\n`);return}console.error(a)}function threadAlert(...e){var a=e.join(" ");postMessage({cmd:"alert",text:a,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,a)=>{var r=Module.wasmModule;Module.wasmModule=null;var t=new WebAssembly.Instance(r,e);return a(t)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let r=[];self.onmessage=t=>r.push(t),self.startWorker=t=>{Module=t,postMessage({cmd:"loaded"});for(let s of r)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const t of e.data.handlers)Module[t]=(...s)=>{postMessage({cmd:"callHandler",handler:t,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var a=URL.createObjectURL(e.data.urlOrBlob);importScripts(a),URL.revokeObjectURL(a)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(r){if(r!="unwind")throw r}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(r){throw Module.__emscripten_thread_crashed?.(),r}}self.onmessage=handleMessage;\\n\'});var go,Nt,tr,bn,Gr,Hi,yo,ye=Y(()=>{"use strict";go=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Nt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},tr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],bn=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Gr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Hi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",yo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var wn=Y(()=>{"use strict"});var Fi=Y(()=>{"use strict";wn()});var qi,ji=Y(()=>{"use strict";qi="1.18.0-dev.20240424-218b6b0a73"});var Ki,pt,bo=Y(()=>{"use strict";ji();Ki="warning",pt={wasm:{},webgl:{},webgpu:{},versions:{common:qi},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ki=e}},get logLevel(){return Ki}};Object.defineProperty(pt,"logLevel",{enumerable:!0})});var vr,Yi=Y(()=>{"use strict";bo();vr=pt});var Zi=Y(()=>{"use strict"});var Xi=Y(()=>{"use strict";vn()});var Ji=Y(()=>{"use strict"});var ea=Y(()=>{"use strict";vn()});var vn=Y(()=>{"use strict";Zi();Xi();Ji();ea()});var $n=Y(()=>{"use strict";vn()});var wo,ta,rr,Gt,vo=Y(()=>{"use strict";bo();wo=(e,t)=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||console.timeStamp(`${e}::ORT::${t}`)},ta=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let i=0;i<r.length;i++){if(o&&!r[i].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(u+=`::${t}`),wo("CPU",u);return}r[i].includes("TRACE_FUNC")&&(o=!0)}},rr=e=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||ta("BEGIN",e)},Gt=e=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||ta("END",e)}});var ra=Y(()=>{"use strict";wn();$n();vo()});var na=Y(()=>{"use strict";ra()});var oa=Y(()=>{"use strict"});var ia=Y(()=>{"use strict"});var aa=Y(()=>{"use strict"});var sa=Y(()=>{"use strict"});var ua=Y(()=>{"use strict";wn();$n()});var da=Y(()=>{"use strict";ua()});var $r=Y(()=>{"use strict";Fi();Yi();na();$n();oa();ia();vo();aa();sa();da()});var _l,Sl,la,ca,pa,xl,Ve,Ht=Y(()=>{"use strict";ye();_l=["V","I","W","E","F"],Sl=(e,t)=>{console.log(`[${_l[e]},${new Date().toISOString()}]${t}`)},pa=(e,t)=>{la=e,ca=t},xl=(e,t)=>{let r=Gr(e),o=Gr(la);r>=o&&Sl(r,typeof t=="function"?t():t)},Ve=(...e)=>{ca&&xl(...e)}});var ma,fa=Y(()=>{"use strict";ye();ma=(e,t)=>new(bn(t))(e)});var _n=Y(()=>{"use strict"});var ha,$o,_o,Cl,Al,ga,xo,So,ba,wa=Y(()=>{"use strict";Ht();_n();ha=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),$o=[],_o=e=>Math.ceil(e/16)*16,Cl=e=>{for(let t=0;t<$o.length;t++){let r=$o[t];if(e<=r)return r}return Math.ceil(e/16)*16},Al=1,ga=()=>Al++,xo=async(e,t,r,o)=>{let i=_o(r),u=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,u,0,i),e.flush(),await u.mapAsync(GPUMapMode.READ);let c=u.getMappedRange();if(o){let p=o();return p.set(new Uint8Array(c,0,r)),p}else return new Uint8Array(c.slice(0,r))}finally{u.destroy()}},So=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map;for(let[r]of ha)$o.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[])}upload(t,r){let o=r.buffer,i=r.byteOffset,u=r.byteLength,a=_o(u),c=this.storageCache.get(t);if(!c)throw new Error("gpu data for uploading does not exist");if(c.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${u}`);let p=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),h=p.getMappedRange();new Uint8Array(h).set(new Uint8Array(o,i,u)),p.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(p,0,c.gpuData.buffer,0,a),Ve("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(p)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=_o(o.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(o.gpuData.buffer,0,i.gpuData.buffer,0,u)}registerExternalBuffer(t,r,o){let i;if(o){if(i=this.externalBuffers.get(o),i===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else i=ga();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ve("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=Cl(t),i,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||a){let h=(u?this.freeBuffers:this.freeUniformBuffers).get(o);h?h.length>0?i=h.pop():i=this.backend.device.createBuffer({size:o,usage:r}):i=this.backend.device.createBuffer({size:o,usage:r})}else i=this.backend.device.createBuffer({size:o,usage:r});let c={id:ga(),type:0,buffer:i};return this.storageCache.set(c.id,{gpuData:c,originalSize:t}),Ve("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${c.id}`),c}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ve("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await xo(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending){let r=ha.get(t.size);if((t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let o=this.freeBuffers.get(t.size)||[];r===void 0||o.length>=r?t.destroy():o.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let o=this.freeUniformBuffers.get(t.size)||[];r===void 0||o.length>=r?t.destroy():o.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},ba=(...e)=>new So(...e)});var Co,ve,Ze=Y(()=>{"use strict";Co=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},ve=e=>new Co(e)});var Ao,At,M,nr,Sn,xn,Cn,Se=Y(()=>{"use strict";Ao=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},At=class{static calcShape(t,r,o=!1){let i=t.length,u=r.length;if(i===0)return r;if(u===0)return t;let a=Math.max(t.length,r.length),c=new Array(a);if(o){if(i<2||u<2)return;let p=Ao.calcMatMulShape([t[i-2],t[i-1]],[r[u-2],r[u-1]]);if(p===void 0)return;[c[a-2],c[a-1]]=p}for(let p=o?3:1;p<=a;p++){let h=i-p<0?1:t[i-p],d=u-p<0?1:r[u-p];if(h!==d&&h>1&&d>1)return;let y=Math.max(h,d);if(h&&d)c[a-p]=Math.max(h,d);else{if(y>1)return;c[a-p]=0}}return c}static isValidBroadcast(t,r){let o=t.length,i=r.length;if(o>i)return!1;for(let u=1;u<=o;u++)if(t[o-u]!==1&&t[o-u]!==r[i-u])return!1;return!0}},M=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let o=t.length;if(o===0)return[];let i=new Array(o),u=o-1;for(;u>=0;){if(t[u]%r===0){i[u]=t[u]/r;break}if(r%t[u]!==0)throw new Error("cannot convert shape");i[u]=1,r/=t[u],u--}for(u--;u>=0;u--)i[u]=t[u];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let i=1;for(let u=r;u<o;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[u]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let i=r-3;i>=0;--i)o[i]=o[i+1]*t[i+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((i,u)=>i+r[u]+r[u+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,i)=>o===r[i])}},nr=class e{static adjustPoolAttributes(t,r,o,i,u,a){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=o.length?o.push(r[c+2]):o[c]=r[c+2];for(let c=0;c<o.length;c++)if(c<i.length){if(i[c]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let c=0;c<o.length;c++)if(c<u.length){if(u[c]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let c=0;c<o.length*2;c++)if(c<a.length){if(a[c]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let c=0;c<o.length;c++){if(o[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[c]>=o[c]||a[c+o.length]>=o[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,i,u,a,c){if(c){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let p=0;p<t.length-2;p++)e.adjustPadAndReturnShape(t[p+(a?1:2)],r[p],o[p],i[p],u,p,p+t.length-2,c)}}static computePoolOutputShape(t,r,o,i,u,a,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let p=[r[0],r[1]];return e.computeShapeHelper(t,r,p,o,i,u,a,c),p}static computeConvOutputShape(t,r,o,i,u,a,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let p=[t[0],r[0]];return e.computeShapeHelper(!1,t,p,o,i,u,a,c),p}static computeShapeHelper(t,r,o,i,u,a,c,p){if(t)for(let h=0;h<r.length-2;h++)o.push(1);else for(let h=0;h<r.length-2;h++)o.push(e.adjustPadAndReturnShape(r[h+2],i[h],u[h],a[h],c,h,h+r.length-2,p))}static adjustPadAndReturnShape(t,r,o,i,u,a,c,p){let h=o*(i-1)+1;if(p&&p!=="NOTSET")switch(p){case"VALID":return u[a]=0,u[c]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return u[a]=Math.floor(p==="SAME_LOWER"?(y+1)/2:y/2),u[c]=y-u[a],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[a]+u[c]-h)/r+1)}},Sn=class{static getShapeOfGemmResult(t,r,o,i,u){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let a,c,p;r?(a=t[1],c=t[0]):(a=t[0],c=t[1]);let h=-1;if(i?(p=o[0],h=1):(p=o[1],h=0),o[h]!==c)throw new Error("dimension mismatch");if(a<=0||p<=0||c<=0)throw new Error("invalid shape specified");if(u&&!At.isValidBroadcast(u,[a,p]))throw new Error("gemm: invalid bias shape for broadcast");return[a,p,c]}},xn=-34028234663852886e22,Cn=34028234663852886e22});var or,To,Be,et,Z,Me,Lt,ir,$t,fe,Eo,U,j,An,Io,va,_r,_e=Y(()=>{"use strict";ye();Se();or=64,To=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Be=(e,t=1)=>{let r=To(e,t);return typeof r=="string"?r:r[0]},et=(e,t=1)=>{let r=To(e,t);return typeof r=="string"?r:r[1]},Z=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:M.computeStrides(r)})}),t},Me=e=>e%4===0?4:e%2===0?2:1,Lt=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,ir=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,$t=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,fe=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Eo=(e,t,r,o,i)=>{let u=typeof r=="number",a=u?r:r.length,c=[...new Array(a).keys()],p=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,h=To(t,i),d=typeof h=="string"?h:h[1],y=typeof h=="string"?h:h[0],w={indices:p,value:d,storage:y,tensor:t},_=G=>typeof G=="string"?G:`${G}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},S=u?"uniforms.":"",I=`${S}${e}_shape`,A=`${S}${e}_strides`,x="";for(let G=0;G<a-1;G++)x+=`\n    let dim${G} = current / ${fe(A,G,a)};\n    let rest${G} = current % ${fe(A,G,a)};\n    indices[${G}] = dim${G};\n    current = rest${G};\n    `;x+=`indices[${a-1}] = current;`;let E=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${w.indices} {\n    var indices: ${w.indices};\n    var current = offset;\n    ${x}\n    return indices;\n  }`,P=G=>(v.offsetToIndices=!0,a<2?G:`o2i_${e}(${G})`),O=[];if(a>=2)for(let G=a-1;G>=0;G--)O.push(`${fe(A,G,a)} * (indices[${G}])`);let R=a<2?"":`\n  fn i2o_${e}(indices: ${w.indices}) -> u32 {\n    return ${O.join("+")};\n  }`,H=G=>(v.indicesToOffset=!0,a<2?G:`i2o_${e}(${G})`),N=(...G)=>a===0?"0u":`${w.indices}(${G.map(_).join(",")})`,K=(G,ne)=>a<2?`${G}`:`${fe(G,ne,a)}`,Q=(G,ne,xe)=>a<2?`${G}=${xe};`:`${fe(G,ne,a)}=${xe};`,he={},W=(G,ne)=>{v.broadcastedIndicesToOffset=!0;let xe=`${ne.name}broadcastedIndicesTo${e}Offset`;if(xe in he)return`${xe}(${G})`;let Ke=[];for(let De=a-1;De>=0;De--){let Ge=ne.indicesGet("outputIndices",De+ne.rank-a);Ke.push(`${K(A,De)} * (${Ge} % ${K(I,De)})`)}return he[xe]=`fn ${xe}(outputIndices: ${ne.type.indices}) -> u32 {\n             return ${Ke.length>0?Ke.join("+"):"0u"};\n           }`,`${xe}(${G})`},se=(G,ne)=>(()=>{if(w.storage===w.value)return`${e}[${G}]=${ne};`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`${e}[${G}]=vec2<u32>(u32(${ne}), select(0u, 0xFFFFFFFFu, ${ne} < 0));`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`${e}[${G}]=vec2<u32>(u32(${ne}), 0u);`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`${e}[${G}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ne}));`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),Ce=G=>(()=>{if(w.storage===w.value)return`${e}[${G}]`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`i32(${e}[${G}].x)`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`u32(${e}[${G}].x)`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${G}] & 0xFFu), bool(${e}[${G}] & 0xFF00u), bool(${e}[${G}] & 0xFF0000u), bool(${e}[${G}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),We=a<2?"":`\n  fn get_${e}ByIndices(indices: ${w.indices}) -> ${d} {\n    return ${Ce(`i2o_${e}(indices)`)};\n  }`,ee=a<2?"":(()=>{let G=c.map(xe=>`d${xe}: u32`).join(", "),ne=c.map(xe=>`d${xe}`).join(", ");return`\n  fn get_${e}(${G}) -> ${d} {\n    return get_${e}ByIndices(${N(ne)});\n  }`})(),ae=(...G)=>{if(G.length!==a)throw new Error(`indices length must be ${a}`);let ne=G.map(_).join(",");return a===0?Ce("0u"):a===1?Ce(ne[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}(${ne})`)},Ae=G=>a<2?Ce(G):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}ByIndices(${G})`),me=a<2?"":`\n  fn set_${e}ByIndices(indices: ${w.indices}, value: ${d}) {\n    ${se(`i2o_${e}(indices)`,"value")}\n  }`,ie=a<2?"":(()=>{let G=c.map(xe=>`d${xe}: u32`).join(", "),ne=c.map(xe=>`d${xe}`).join(", ");return`\n  fn set_${e}(${G}, value: ${d}) {\n    set_${e}ByIndices(${N(ne)}, value);\n  }`})();return{impl:()=>{let G=[],ne=!1;return v.offsetToIndices&&(G.push(E),ne=!0),v.indicesToOffset&&(G.push(R),ne=!0),v.broadcastedIndicesToOffset&&(Object.values(he).forEach(xe=>G.push(xe)),ne=!0),v.set&&(G.push(ie),ne=!0),v.setByIndices&&(G.push(me),ne=!0),v.get&&(G.push(ee),ne=!0),v.getByIndices&&(G.push(We),ne=!0),!u&&ne&&G.unshift(`const ${I} = ${w.indices}(${r.join(",")});`,`const ${A} = ${w.indices}(${M.computeStrides(r).join(",")});`),G.join(`\n`)},type:w,offsetToIndices:P,indicesToOffset:H,broadcastedIndicesToOffset:W,indices:N,indicesGet:K,indicesSet:Q,set:(...G)=>{if(G.length!==a+1)throw new Error(`indices length must be ${a}`);let ne=G[a];if(typeof ne!="string")throw new Error("value must be string");let xe=G.slice(0,a).map(_).join(",");return a===0?se("0u",ne):a===1?se(xe[0],ne):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}(${xe}, ${ne})`)},setByOffset:se,setByIndices:(G,ne)=>a<2?se(G,ne):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}ByIndices(${G}, ${ne});`),get:ae,getByOffset:Ce,getByIndices:Ae,usage:o,name:e,strides:A,shape:I,rank:a}},U=(e,t,r,o=1)=>Eo(e,t,r,"input",o),j=(e,t,r,o=1)=>Eo(e,t,r,"output",o),An=(e,t,r,o=1)=>Eo(e,t,r,"internal",o),Io=class{constructor(t,r){this.normalizedDispatchGroup=t;this.limits=r;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=or){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2];if(r>this.limits.maxComputeWorkgroupSizeX||o>this.limits.maxComputeWorkgroupSizeY||i>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*o*i>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=u?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,c=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${i})\n  fn main(${a}) {\n    ${c}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:i}of this.uniforms)if(i&&i>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(i/4)}>`);else{let u=i==null||i===1?o:`vec${i}<${o}>`;t.push(`${r}:${u}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}get variablesInfo(){if(this.uniforms.length===0)return;let t=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[t(r.type),r.length??1])}},va=(e,t)=>new Io(e,t),_r=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;i++){let u=r-1-i,a=e[u]||1;(t[t.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}});var Il,$a,Tl,El,yt,_a,Sa,Sr=Y(()=>{"use strict";ye();Se();Ze();_e();Il=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},$a=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Tl=(e,t)=>M.sortBasedOnPerm(e,$a(e.length,t)),El=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},yt=(e,t)=>{let r=e.dataType,o=e.dims.length,i=$a(o,t),u=Tl(e.dims,i),a=j("output",r,u.length),c=U("a",r,o),p=h=>`\n  ${h.registerUniform("output_size","u32").declareVariables(c,a)}\n\n  ${El(i,o,c,a)}\n\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${a.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${a.setByOffset("global_idx",c.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:h=>{let d=M.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...Z(h[0].dims,u)]}},getShaderSource:p}},_a=(e,t)=>{Il(e.inputs),e.compute(yt(e.inputs[0],t.perm))},Sa=e=>ve({perm:e.perm})});var Pl,kl,Ol,Rl,Bl,Dl,zl,Ml,Ul,Vl,It,xa,Ca,Aa,Ia,Ta,Ea,Pa,ka,Oa,Ra,Ba=Y(()=>{"use strict";ye();Se();_e();In();Sr();Pl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},kl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ol={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Rl={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Bl=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Dl=(e,t)=>{let r=[],o=e.length;for(let u=0;u<o;u++)t.indexOf(u)===-1&&r.push(e[u]);let i=t.map(u=>e[u]);return[r,i]},zl=(e,t)=>{let r=e.length+t.length,o=[],i=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?o.push(e[i++]):o.push(1);return o},Ml=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},Ul=(e,t)=>{let r=[];if(!Ml(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},Vl=(e,t,r,o,i,u,a)=>{let c=r[0].dims,p=M.size(u),h=M.size(a),d=U("_A",r[0].dataType,c),y=j("output",i,u),w=32,_=`\n          var<workgroup> aBestValues : array<f32, ${w}>;\n       `;return{name:e,shaderCache:t,getShaderSource:S=>`\n        ${S.registerUniform("reduceSize","u32").declareVariables(d,y)}\n        ${_}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${S.mainStart(w)}\n\n          let outputIndex = global_idx / ${w};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${Ol[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${w}) {\n           let candidate = f32(${d.getByOffset("offset + k")});\n           bestValue = ${Pl[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${w}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${kl[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${y.setByOffset("outputIndex",`${o==="mean"?`${y.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${y.type.storage}(${Rl[o]})`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:p},programUniforms:[{type:12,data:h}]})}},It=(e,t,r,o)=>{let i=e.inputs.length===1?r:Po(e.inputs,r),u=i.axes;u.length===0&&!i.noopWithEmptyAxes&&(u=e.inputs[0].dims.map((_,v)=>v));let a=M.normalizeAxes(u,e.inputs[0].dims.length),c=a,p=e.inputs[0],h=Ul(c,e.inputs[0].dims.length);h.length>0&&(p=e.compute(yt(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],c=Bl(c.length,p.dims.length));let[d,y]=Dl(p.dims,c),w=d;i.keepDims&&(w=zl(d,a)),e.compute(Vl(t,{hint:i.cacheKey,inputDependencies:["type"]},[p],o,e.inputs[0].dataType,w,y),{inputs:[p]})},xa=(e,t)=>{It(e,"ReduceMeanShared",t,"mean")},Ca=(e,t)=>{It(e,"ReduceL1Shared",t,"l1")},Aa=(e,t)=>{It(e,"ReduceL2Shared",t,"l2")},Ia=(e,t)=>{It(e,"ReduceLogSumExpShared",t,"logSumExp")},Ta=(e,t)=>{It(e,"ReduceMaxShared",t,"max")},Ea=(e,t)=>{It(e,"ReduceMinShared",t,"min")},Pa=(e,t)=>{It(e,"ReduceProdShared",t,"prod")},ka=(e,t)=>{It(e,"ReduceSumShared",t,"sum")},Oa=(e,t)=>{It(e,"ReduceSumSquareShared",t,"sumSquare")},Ra=(e,t)=>{It(e,"ReduceLogSumShared",t,"logSum")}});var Tt,Wl,Tn,Po,Et,Nl,Gl,Hl,Ll,Fl,ql,jl,Kl,Yl,Zl,Pt,Da,za,Ma,Ua,Va,Wa,Na,Ga,Ha,La,In=Y(()=>{"use strict";ye();Se();Ze();_e();Ba();Tt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Wl=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Tn=(e,t,r,o,i,u,a=!1,c=!1)=>{let p=[],h=r[0].dims,d=h.length,y=M.normalizeAxes(i,d),w=!c&&y.length===0;h.forEach((I,A)=>{w||y.indexOf(A)>=0?a&&p.push(1):p.push(I)});let _=p.length,v=M.size(p);return{name:e,shaderCache:t,getShaderSource:I=>{let A=[],x=U("_A",r[0].dataType,d),E=j("output",u,_),P=o(x,E,y),O=P[2];for(let R=0,H=0;R<d;R++)w||y.indexOf(R)>=0?(a&&H++,O=`for(var j${R}: u32 = 0; j${R} < ${h[R]}; j${R}++) {\n                  ${P[2].includes("last_index")?`let last_index = j${R};`:""}\n                  ${x.indicesSet("input_indices",R,`j${R}`)}\n                  ${O}\n                }`):(A.push(`${x.indicesSet("input_indices",R,E.indicesGet("output_indices",H))};`),H++);return`\n\n        ${I.registerUniform("output_size","u32").declareVariables(x,E)}\n\n        ${I.mainStart()}\n          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${x.type.indices};\n          let output_indices = ${E.offsetToIndices("global_idx")};\n\n          ${A.join(`\n`)}\n          ${P[0]}       // init ops for reduce max/min\n          ${P[1]}\n          ${O}\n          ${P[3]}\n          ${P.length===4?E.setByOffset("global_idx","value"):P.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:p,dataType:u}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:12,data:v},...Z(h,p)]})}},Po=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),ve({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Et=(e,t,r,o)=>{let i=e.inputs,u=i.length===1?r:Po(i,r);e.compute(Tn(t,{hint:u.cacheKey,inputDependencies:["rank"]},[i[0]],u.noopWithEmptyAxes&&u.axes.length===0?Wl:o,u.axes,i[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},Nl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceLogSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},Gl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceL1",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},Hl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceL2",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ll=(e,t)=>{Tt(e.inputs),Et(e,"ReduceLogSumExp",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},Fl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceMax",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(o.indicesSet("input_indices",c,0));return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},ql=(e,t)=>{Tt(e.inputs),Et(e,"ReduceMean",t,(o,i,u)=>{let a=1;for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&(a*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${a});`]})},jl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceMin",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Kl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceProd",t,(o,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},Yl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Zl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceSumSquare",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},Pt=(e,t,r)=>{if(t.length===0)return r;let o=1,i=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?o*=e[u]:i*=e[u];return i<32&&o>1024},Da=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ql(e,t):xa(e,t)},za=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Gl(e,t):Ca(e,t)},Ma=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Hl(e,t):Aa(e,t)},Ua=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ll(e,t):Ia(e,t)},Va=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Fl(e,t):Ta(e,t)},Wa=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?jl(e,t):Ea(e,t)},Na=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Kl(e,t):Pa(e,t)},Ga=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Yl(e,t):ka(e,t)},Ha=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Zl(e,t):Oa(e,t)},La=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Nl(e,t):Ra(e,t)}});var Fa,qa,ja,ko,Ka=Y(()=>{"use strict";ye();Ze();In();Fa=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},qa=(e,t)=>{Fa(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ja=(e,t)=>{Fa(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ko=e=>ve(e)});var Xl,Ql,Jl,En,Ya,Za,Oo=Y(()=>{"use strict";ye();Se();Ze();_e();Xl=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,o=e[r],i=o.dataType,u=o.dims.length;e.forEach((a,c)=>{if(c!==r){if(a.dataType!==i)throw new Error("input tensors should be one type");if(a.dims.length!==u)throw new Error("input tensors should have the same shape");a.dims.forEach((p,h)=>{if(h!==t&&p!==o.dims[h])throw new Error("non concat dimensions must match")})}})},Ql=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Jl=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;++i){let u=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?o.push(u):i===0?o.push(`if (inputIndex == ${i}u) { ${u} }`):i===r-1?o.push(`else { ${u} }`):o.push(`else if (inputIndex == ${i}) { ${u} }`)}return o.join(`\n`)},En=(e,t,r,o)=>{let i=M.size(r),u=new Array(e.length),a=new Array(e.length),c=0,p=[],h=[],d=[{type:12,data:i}];for(let S=0;S<e.length;++S)c+=e[S].dims[t],u[S]=c,h.push(e[S].dims.length),a[S]=U(`input${S}`,o,h[S]),p.push("rank"),d.push({type:12,data:u[S]});for(let S=0;S<e.length;++S)d.push(...Z(e[S].dims));d.push(...Z(r));let y=j("output",o,r.length),w=y.indicesGet("indices",t),_=Array.from(Array(u.length).keys()).map(S=>`uniforms.sizeInConcatAxis${S}`).join(","),v=S=>`\n\n  ${(()=>{S.registerUniform("outputSize","u32");for(let I=0;I<e.length;I++)S.registerUniform(`sizeInConcatAxis${I}`,"u32");return S.declareVariables(...a,y)})()}\n\n  ${Ql(u.length,_)}\n\n  ${S.mainStart()}\n    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${y.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${w});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${u.length}u>(${_});\n      ${w} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Jl(a,y)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:r,dataType:o}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:d}),getShaderSource:v}},Ya=(e,t)=>{let r=e.inputs,o=r[0].dims,i=M.normalizeAxis(t.axis,o.length);Xl(r,i);let u=o.slice();u[i]=r.reduce((c,p)=>c+(p.dims.length>i?p.dims[i]:0),0);let a=r.filter(c=>M.size(c.dims)>0);e.compute(En(a,i,u,r[0].dataType),{inputs:a})},Za=e=>ve({axis:e.axis})});var ec,tc,rc,nc,Pn,oc,Xa,Ro=Y(()=>{"use strict";ye();_n();_e();Oo();ec=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],c=e[5];if(a&&c)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let p=r.dims[0],h=r.dims[1],d=r.dims[2];if(i.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let y=i.dims[0]/3,w=y,_=w;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let E of t.qkvHiddenSizes)if(E%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=t.qkvHiddenSizes[0],w=t.qkvHiddenSizes[1],_=t.qkvHiddenSizes[2]}let v=h;if(y!==w)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==y+w+_)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let S=0;if(a){if(w!==_)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(a.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(a.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(a.dims[1]!==p)throw new Error(\'Input "past" second dimension must be batch_size\');if(a.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(a.dims[4]!==w/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(S=a.dims[3])}let I=v+S,A=-1,x=0;if(u)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");return{batchSize:p,sequenceLength:h,pastSequenceLength:S,kvSequenceLength:v,totalSequenceLength:I,maxSequenceLength:A,inputHiddenSize:d,hiddenSize:y,vHiddenSize:_,headSize:Math.floor(y/t.numHeads),vHeadSize:Math.floor(_/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:x,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},tc=(e,t,r,o)=>{let i=Me(o),u=64,a=o/i;a<u?u=1:a/8<64&&(u=Math.ceil(a/8));let c=Math.ceil(o/i/u),p=[{type:t.dataType,data:1/o},{type:12,data:a},{type:12,data:c}],h=Be(t.dataType,i),d=et(1,i),y=w=>{let _=j("x",t.dataType,t.dims,i),S=[{name:"d_inv",type:et(t.dataType)},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`\n  var<workgroup> thread_max: array<f32, ${u}>;\n  var<workgroup> thread_sum: array<f32, ${u}>;\n  ${w.registerUniforms(S).declareVariables(_)}\n  ${w.mainStart([u,1,1])}\n    let local_offset = local_idx * uniforms.elements_per_thread;\n    let offset = workgroup_id.x * uniforms.d_comp + local_offset;\n\n    var thread_max_vector = ${d}(-3.402823e+38f);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${d}(x[offset + i]), thread_max_vector);\n    }\n    thread_max[local_idx] = ${(()=>{switch(i){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${i}`)}})()};\n    workgroupBarrier();\n\n    var max_value =  f32(-3.402823e+38f);\n    for (var i = 0u; i < ${u}; i++) {\n      max_value = max(thread_max[i], max_value);\n    }\n\n    var sum_vector = ${d}(0);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      sum_vector += exp(${d}(x[offset + i]) - max_value);\n    }\n    thread_sum[local_idx] = ${(()=>{switch(i){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${i}`)}})()};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += thread_sum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        x[offset + i] = ${_.type.value}(uniforms.d_inv);\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        var f32input = ${d}(x[offset + i]);\n        x[offset + i] = ${_.type.value}(exp(f32input - max_value) / sum);\n      }\n    }\n  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${h};${i}`},getShaderSource:y,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:p})}},rc=(e,t,r,o,i,u,a)=>{let c=a+i.kvSequenceLength,p=[i.batchSize,i.numHeads,i.sequenceLength,c],h=u.scale===0?1/Math.sqrt(i.headSize):u.scale,d=Me(i.headSize),y=i.headSize/d,w=12,_={x:Math.ceil(c/w),y:Math.ceil(i.sequenceLength/w),z:i.batchSize*i.numHeads},v=[{type:12,data:i.sequenceLength},{type:12,data:y},{type:12,data:c},{type:12,data:i.numHeads},{type:1,data:h}],S=o?["type","type","type"]:["type","type"],I=A=>{let x=U("q",t.dataType,t.dims,d),E=U("key",r.dataType,r.dims,d),P=[x,E];o&&P.push(U("relative_position_bias",o.dataType,o.dims));let O=j("output",t.dataType,p),R=et(1,d),H=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"}];return`\n  const TILE_SIZE = ${w}u;\n\n  var<workgroup> tileQ: array<${x.type.storage}, ${w*w}>;\n  var<workgroup> tileK: array<${x.type.storage}, ${w*w}>;\n  ${A.registerUniforms(H).declareVariables(...P,O)}\n  ${A.mainStart([w,w,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${R}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n        value += ${R}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      var sum: f32 = ${(()=>{switch(d){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${d}`)}})()};\n        output[outputIdx] = ${O.type.value} (sum * uniforms.alpha) + ${o?"relative_position_bias[outputIdx]":"0.0"};\n    }\n  }`};return{name:"AttentionProbs",shaderCache:{hint:`${d}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType,gpuDataType:0}],dispatchGroup:_,programUniforms:v}),getShaderSource:I}},nc=(e,t,r,o,i)=>{let u=i+o.kvSequenceLength,a=[o.batchSize,o.sequenceLength,o.vHiddenSize],c=12,p={x:Math.ceil(o.vHeadSize/c),y:Math.ceil(o.sequenceLength/c),z:o.batchSize*o.numHeads},h=[{type:12,data:o.sequenceLength},{type:12,data:u},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}];return{name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:h}),getShaderSource:w=>{let _=U("probs",t.dataType,t.dims),v=U("v",r.dataType,r.dims),S=j("output",t.dataType,a),I=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${c}u;\n  var<workgroup> tileQ: array<${_.type.value}, ${c*c}>;\n  var<workgroup> tileK: array<${_.type.value}, ${c*c}>;\n  ${w.registerUniforms(I).declareVariables(_,v,S)}\n  ${w.mainStart([c,c,1])}\n   let headIdx = workgroup_id.z;\n   let m = global_id.y;\n   let n = global_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${_.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}}},Pn=(e,t,r,o,i,u,a,c,p,h,d)=>{let y=e.outputCount>1,w=e.outputCount>2,_=y&&w?h.pastSequenceLength:0,v=_+h.kvSequenceLength,S=[h.batchSize,h.numHeads,v,h.headSize],I=a?[a,r]:[r],A=y?e.compute(En(I,2,S,r.dataType),{inputs:I,outputs:[1]})[0]:r,x=[h.batchSize,h.numHeads,v,h.headSize],E=c?[c,o]:[o],P=w?e.compute(En(E,2,x,o.dataType),{inputs:E,outputs:[2]})[0]:o,O=[t,A];p&&O.push(p);let R=e.compute(rc(e,t,A,p,h,d,_),{inputs:O,outputs:[-1]})[0];e.compute(tc(e,R,h.batchSize*h.numHeads*h.sequenceLength,v),{inputs:[R],outputs:[]});let H=[R,P];e.compute(nc(e,R,P,h,_),{inputs:H,outputs:[0]})},oc=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,i=t.inputHiddenSize,u=t.headSize,a=12,c={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},p=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:o},{type:12,data:i},{type:12,data:u},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],d=y=>{let w=j("output_q",p[0].dataType,r),_=j("output_k",p[0].dataType,r),v=j("output_v",p[0].dataType,r),S=U("input",p[0].dataType,p[0].dims),I=U("weight",p[1].dataType,p[1].dims),A=U("bias",p[2].dataType,p[2].dims),x=S.type.storage,E=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${a}u;\n  var<workgroup> tileInput: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightQ: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightK: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightV: array<${x}, ${a*a}>;\n  ${y.registerUniforms(E).declareVariables(S,I,A,w,_,v)}\n  ${y.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${x}(0);\n    var valueK = ${x}(0);\n    var valueV = ${x}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:h}),getShaderSource:d},{inputs:p,outputs:[-1,-1,-1]})},Xa=(e,t)=>{let r=ec(e.inputs,t),[o,i,u]=oc(e,r);return Pn(e,o,i,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var ic,ac,sc,Qa,Ja=Y(()=>{"use strict";$r();ye();Se();Ze();_e();ic=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,i,u)=>{let a=i.length;if(a!==o.length)throw new Error(`${u}: num dimensions != ${a}`);i.forEach((c,p)=>{if(c!==o[p])throw new Error(`${u}: dim[${p}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},ac=(e,t)=>{let{epsilon:r,spatial:o,format:i}=t,u=e[0].dims,a=o?Me(u[u.length-1]):1,c=i==="NHWC"&&u.length>1?a:1,p=M.size(u)/a,h=o,d=h?u.length:u,y=U("x",e[0].dataType,e[0].dims,a),w=U("scale",e[1].dataType,e[1].dims,c),_=U("bias",e[2].dataType,e[2].dims,c),v=U("inputMean",e[3].dataType,e[3].dims,c),S=U("inputVar",e[4].dataType,e[4].dims,c),I=j("y",e[0].dataType,d,a),A=()=>{let E="";if(o)E=`let cOffset = ${u.length===1?"0u":i==="NHWC"?`outputIndices[${u.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")E=`\n            ${I.indicesSet("outputIndices","0","0")}\n            let cOffset = ${I.indicesToOffset("outputIndices")};`;else{E=`var cIndices = ${w.type.indices}(0);\n                       cIndices[0] = outputIndices[${u.length-1}];`;for(let P=1;P<w.rank;P++)E+=`cIndices[${P}] = outputIndices[${P}];`;E+=`let cOffset = ${w.indicesToOffset("cIndices")};`}return E},x=E=>`\n  const epsilon = ${r};\n  ${E.registerUniform("outputSize","u32").declareVariables(y,w,_,v,S,I)}\n  ${E.mainStart()}\n  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${I.offsetToIndices(`global_idx * ${a}`)};\n    ${A()}\n    let scale = ${w.getByOffset("cOffset")};\n    let bias = ${_.getByOffset("cOffset")};\n    let inputMean = ${v.getByOffset("cOffset")};\n    let inputVar = ${S.getByOffset("cOffset")};\n    let x = ${y.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${I.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${a}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:x,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h?[{type:12,data:p},...Z(u)]:[{type:12,data:p}]})}},sc=e=>ve(e),Qa=(e,t)=>{let{inputs:r,outputCount:o}=e,i=sc({...t,outputCount:o});if(vr.webgpu.validateInputContent&&ic(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(ac(r,i))}});var uc,dc,es,ts=Y(()=>{"use strict";Se();_e();uc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},dc=e=>{let t=e[0].dims,r=e[0].dims[2],o=M.size(t)/4,i=e[0].dataType,u=U("input",i,t,4),a=U("bias",i,[r],4),c=U("residual",i,t,4),p=j("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:d=>`\n  const channels = ${r}u / 4;\n  ${d.declareVariables(u,a,c,p)}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${u.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};\n    ${p.setByOffset("global_idx","value")}\n  }`}},es=e=>{uc(e.inputs),e.compute(dc(e.inputs))}});var lc,ke,rs,ns,os,is,as,ss,us,ds,ls,cc,cs,ps,ms,fs,kn,hs,On,gs,ys,bs,ws,vs,$s,_s,Ss,xs,Cs,As,Is,Ts,Es,Ps,ks,Os,Rs,Bo,Do,Bs,Ds,zs,Rn=Y(()=>{"use strict";ye();Se();Ze();_e();lc=(e,t,r,o,i,u)=>{let a=Math.ceil(t/4),c="";typeof i=="string"?c=`${i}(a)`:c=i("a");let p=U("inputData",r,[a],4),h=j("outputData",o,[a],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(p,h)}\n\n  ${u??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${p.getByOffset("global_idx")};\n    ${h.setByOffset("global_idx",c)}\n  }`},ke=(e,t,r,o,i,u=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:a=>lc(a,M.size(e.dims),e.dataType,u,r,o),getRunData:a=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(M.size(a[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(e.dims)/4)}]})}),rs=e=>{e.compute(ke(e.inputs[0],"Abs","abs"))},ns=e=>{e.compute(ke(e.inputs[0],"Acos","acos"))},os=e=>{e.compute(ke(e.inputs[0],"Acosh","acosh"))},is=e=>{e.compute(ke(e.inputs[0],"Asin","asin"))},as=e=>{e.compute(ke(e.inputs[0],"Asinh","asinh"))},ss=e=>{e.compute(ke(e.inputs[0],"Atan","atan"))},us=e=>{e.compute(ke(e.inputs[0],"Atanh","atanh"))},ds=e=>ve(e),ls=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(ke(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},cc=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:xn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Cn;return ve({min:t,max:r})},cs=(e,t)=>{let r=e.inputs.length===1?t:cc(e.inputs),o=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},ps=e=>{e.compute(ke(e.inputs[0],"Ceil","ceil"))},ms=e=>{e.compute(ke(e.inputs[0],"Cos","cos"))},fs=e=>{e.compute(ke(e.inputs[0],"Cosh","cosh"))},kn=e=>ve(e),hs=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},On=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,gs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,On(t)))},ys=e=>{e.compute(ke(e.inputs[0],"Exp","exp"))},bs=e=>{e.compute(ke(e.inputs[0],"Floor","floor"))},ws=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,On(t)))},vs=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},$s=e=>{e.compute(ke(e.inputs[0],"Not",t=>`!${t}`))},_s=e=>{e.compute(ke(e.inputs[0],"Neg",t=>`-${t}`))},Ss=e=>{e.compute(ke(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},xs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Cs=e=>{e.compute(ke(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},As=e=>ve(e),Is=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Ts=e=>{e.compute(ke(e.inputs[0],"Sin","sin"))},Es=e=>{e.compute(ke(e.inputs[0],"Sinh","sinh"))},Ps=e=>{e.compute(ke(e.inputs[0],"Sqrt","sqrt"))},ks=e=>{e.compute(ke(e.inputs[0],"Tan","tan"))},Os=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Rs=e=>{e.compute(ke(e.inputs[0],"Tanh",Os))},Bo=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Os("v")};\n}\n`,Do=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Bs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"FastGelu",Do,Bo(t),void 0,e.inputs[0].dataType))},Ds=(e,t)=>{let r=et(e.inputs[0].dataType);return e.compute(ke(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},zs=e=>{e.compute(ke(e.inputs[0],"Log","log"))}});var pc,mc,Us,Vs=Y(()=>{"use strict";Se();_e();Rn();pc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},mc=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=U("input",e[0].dataType,e[0].dims,4),o=U("bias",e[0].dataType,[e[0].dims[2]],4),i=j("output",e[0].dataType,t,4),u=M.size(t)/4,a=Be(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:p=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${p.declareVariables(r,o,i)}\n\n  ${On(a)}\n\n  ${p.mainStart()}\n    ${p.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Us=e=>{pc(e.inputs),e.compute(mc(e.inputs))}});var fc,hc,kt,Ws,Ns,Gs,Hs,Ls,Fs,qs,js,Ks,Ys,Zs=Y(()=>{"use strict";ye();Se();_e();fc=(e,t,r,o,i,u,a,c,p,h,d,y)=>{let w,_;typeof c=="string"?w=_=(x,E)=>`${c}((${x}),(${E}))`:typeof c=="function"?w=_=c:(w=c.scalar,_=c.vector);let v=j("outputData",d,o.length,4),S=U("aData",p,t.length,4),I=U("bData",h,r.length,4),A;if(i)if(u){let x=M.size(t)===1,E=M.size(r)===1,P=t.length>0&&t[t.length-1]%4===0,O=r.length>0&&r[r.length-1]%4===0;x||E?A=v.setByOffset("global_idx",_(x?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"),E?`${I.type.value}(${I.getByOffset("0")}.x)`:I.getByOffset("global_idx"))):A=`\n            let outputIndices = ${v.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${S.broadcastedIndicesToOffset("outputIndices",v)};\n            let offsetB = ${I.broadcastedIndicesToOffset("outputIndices",v)};\n            ${v.setByOffset("global_idx",_(a||P?S.getByOffset("offsetA / 4u"):`${S.type.value}(${S.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||O?I.getByOffset("offsetB / 4u"):`${I.type.value}(${I.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else A=v.setByOffset("global_idx",_(S.getByOffset("global_idx"),I.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let x=(E,P,O="")=>{let R=`aData[indexA${P}][componentA${P}]`,H=`bData[indexB${P}][componentB${P}]`;return`\n            let outputIndices${P} = ${v.offsetToIndices(`global_idx * 4u + ${P}u`)};\n            let offsetA${P} = ${S.broadcastedIndicesToOffset(`outputIndices${P}`,v)};\n            let offsetB${P} = ${I.broadcastedIndicesToOffset(`outputIndices${P}`,v)};\n            let indexA${P} = offsetA${P} / 4u;\n            let indexB${P} = offsetB${P} / 4u;\n            let componentA${P} = offsetA${P} % 4u;\n            let componentB${P} = offsetB${P} % 4u;\n            ${E}[${P}] = ${O}(${w(R,H)});\n          `};d===9?A=`\n            var data = vec4<u32>(0);\n            ${x("data",0,"u32")}\n            ${x("data",1,"u32")}\n            ${x("data",2,"u32")}\n            ${x("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:A=`\n            ${x("outputData[global_idx]",0)}\n            ${x("outputData[global_idx]",1)}\n            ${x("outputData[global_idx]",2)}\n            ${x("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(S,I,v)}\n\n        ${y??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${A}\n      }`},hc=(e,t,r,o,i,u,a=r.dataType)=>{let c=!M.areEqual(r.dims,o.dims),p=r.dims,h=M.size(r.dims),d=!1,y=!1,w=[c];if(c){let _=At.calcShape(r.dims,o.dims,!1);if(!_)throw new Error("Can\'t perform binary op on the given tensors");p=_,h=M.size(p);let v=M.size(r.dims)===1,S=M.size(o.dims)===1,I=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,A=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;w.push(v),w.push(S),w.push(I),w.push(A);let x=1;for(let E=1;E<p.length;E++){let P=r.dims[r.dims.length-E]??1,O=o.dims[o.dims.length-E]??1;if(P===O)x*=P;else break}x%4===0?(y=!0,d=!0):(v||S||I||A)&&(d=!0)}else d=!0;return w.push(d),{name:e,shaderCache:{hint:t+w.map(_=>_.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:_=>fc(_,r.dims,o.dims,p,d,c,y,i,r.dataType,o.dataType,a,u),getRunData:()=>({outputs:[{dims:p,dataType:a}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(p)/4)},...Z(r.dims,o.dims,p)]})}},kt=(e,t,r,o,i,u)=>{e.compute(hc(t,i??"",e.inputs[0],e.inputs[1],r,o,u))},Ws=e=>{kt(e,"Add",(t,r)=>`${t}+${r}`)},Ns=e=>{kt(e,"Div",(t,r)=>`${t}/${r}`)},Gs=e=>{kt(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Hs=e=>{kt(e,"Mul",(t,r)=>`${t}*${r}`)},Ls=e=>{let t=U("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;kt(e,"Pow",{scalar:(o,i)=>`pow_custom(${o},${i})`,vector:(o,i)=>`pow_vector_custom(${o},${i})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Fs=e=>{kt(e,"Sub",(t,r)=>`${t}-${r}`)},qs=e=>{kt(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},js=e=>{kt(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},Ks=e=>{kt(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Ys=e=>{kt(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var _t,St,xt,Bn,Ft=Y(()=>{"use strict";ye();Se();_t=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},St=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},xt=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Bn=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[xn,Cn];return{activation:t,clipMax:o,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}});var tt,Dn,zn=Y(()=>{"use strict";tt=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Dn=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Mn,zo=Y(()=>{"use strict";Mn=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var yc,bc,Hr,Xs,wc,Lr,vc,Un,Fr=Y(()=>{"use strict";ye();Se();_e();Ft();zn();yc=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,bc=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Hr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32)=>{let p=t[1]*e[1],h=t[0]*e[0],d=i?p:u,y=i?u:p,w=d/t[0],_=u/t[1];if(!((i&&w===4&&e[1]===4||!i&&(w===3||w===4))&&d%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${w} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${w} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${w}<${r}>, ${d/w}>, ${y}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${u}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${w};\nconst tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${p};\n\n  let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${_};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${yc(i,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${w===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${bc(i,w)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Xs=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,wc=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Lr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32,p=!1)=>{let h=e[1]*t[1],d=e[0]*t[0],y=i?h:u,w=i?u:h;if(!(w%t[1]===0&&y%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${w} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let _=w/t[1],v=y/t[0],S=u/t[1],I=p?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${h};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${w}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {\n          ${Xs(i,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${h};\n\nlet tileRowA = i32(localId.y) * ${_};\nlet tileColA = i32(localId.x) * ${v};\nlet tileRowB = i32(localId.y) * ${S};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Xs(i,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${wc(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${y}>, ${w}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${d}>, ${u}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${I}\n  }\n`},vc=(e,t,r,o,i,u=!1)=>{let[a,c,p]=i,[h,d,y,w]=o,_=_r(a,p),v=_r(c,p),S=Be(o[0].type.tensor),I=()=>{let E=d.rank,P=h.rank,O=`var aIndices: ${d.type.indices};`;for(let R=E-2-1,H=P-1;R>=0;R--,H--)O+=`\naIndices[${R}] = ${P>1?`batchIndices[${H}]`:"batchIndices"};`;return _.forEach(R=>{O+=`\naIndices[${R}] = 0;`}),O+=`\naIndices[${E-2}] = u32(row);\n                   aIndices[${E-1}] = u32(colIn);`,O},A=()=>{let E=y.rank,P=h.rank,O=`var bIndices: ${y.type.indices};`;for(let R=E-2-1,H=P-1;R>=0;R--,H--)O+=`\nbIndices[${R}] = ${P>1?`batchIndices[${H}]`:"batchIndices"};`;return v.forEach(R=>{O+=`\nbIndices[${R}] = 0;`}),O+=`\nbIndices[${E-2}] = u32(row);\n                   bIndices[${E-1}] = u32(colIn);`,O};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${tt(e,S)} {\n      var value = ${tt(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${I()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${tt(e,S)} {\n      var value = ${tt(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${A()}\n        value = ${y.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${tt(e,S)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${u?"bias[colIn]":`${tt(e,S)}(bias[row])`};`:""}\n        ${r}\n        ${w.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Un=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u.slice(0,-2),p=a.slice(0,-2),h=o?o.slice(0,-2):r.slice(0,-2),d=M.size(h),y=u[u.length-2],w=u[u.length-1],_=a[a.length-1],v=w%4===0&&_%4===0,S=y<=8?[4,1,1]:[4,4,1],I=[8,8,1],A=[Math.ceil(_/I[0]/S[0]),Math.ceil(y/I[1]/S[1]),Math.ceil(d/I[2]/S[2])],x=v?4:1,E=[...c,y,w/x],P=E.length,O=[...p,w,_/x],R=O.length,H=[d,y,_/x],N=[{type:6,data:y},{type:6,data:_},{type:6,data:w}];St(t,N),N.push(...Z(h,E,O));let K=["rank","rank"],Q=e.length>2;Q&&(N.push(...Z(e[2].dims)),K.push("rank")),N.push(...Z(H));let he=W=>{let se=h.length,Ce=An("batchDims",e[0].dataType,se,1),We=Be(e[0].dataType),ee=U("a",e[0].dataType,P,x),ae=U("b",e[1].dataType,R,x),Ae=j("result",e[0].dataType,H.length,x),me=[ee,ae];if(Q){let G=i?x:1;me.push(U("bias",e[2].dataType,e[2].dims.length,G))}let ie=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];xt(t,ie);let ue=Be(Ae.type.tensor),le=_t(t,Ae.type.value,ue),qe=vc(x,Q,le,[Ce,ee,ae,Ae],[c,p,h],i);return`\n  ${W.registerUniforms(ie).registerInternalVariables(Ce).declareVariables(...me,Ae)}\n  ${qe}\n  ${v?Hr(S,I,We,Ce):Lr(S,I,We,Ce)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${S};${t.activation};${v};${i}`,inputDependencies:K},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]},programUniforms:N}),getShaderSource:he}}});var $c,Qs,Js=Y(()=>{"use strict";ye();Ht();_e();Ft();zn();zo();Fr();$c=(e,t,r,o,i=!1,u,a=4,c=4,p=4,h="f32")=>{let d=Q=>{switch(Q){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},y=Q=>{switch(Q){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,_=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,v=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",S=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",I=e?"row":"col",A=e?"col":"row",x=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${I} / outWidth;\n    let outCol = ${I} % outWidth;\n\n    let WRow = ${A} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${A} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${A} % inChannels;\n    var resData = ${tt(a,h)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${v} && xCol >= 0 && xCol < ${S}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${d(a)}\n    }\n    return resData;`,E=e?t&&o?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${x}\n    }\n    return ${tt(a,h)}(0.0);`:o&&r?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${x}\n    }\n    return ${tt(a,h)}(0.0);`,P=`${y(c)}`,O=tt(p,h),R=e?tt(a,h):tt(c,h),H=e?tt(c,h):tt(a,h),N=_t(u,O,h);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${R} {\n      ${e?E:P}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${H} {\n      ${e?P:E}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${O}) {\n      let col = colIn * ${p};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${_}\n      ${Dn(i)}\n      ${N}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Qs=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],d=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],v=p&&(h%4===0||h%3===0)&&_%4===0,S=p?_:y*w,I=p?y*w:_,A=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(S/A[0]/x[0]),Math.ceil(I/A[1]/x[1]),Math.ceil(d/A[2]/x[2])];Ve("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let P=v?p&&h%4!==0?3:4:1,O=A[1]*x[1],R=A[0]*x[0],H=Math.max(A[0]*P,A[1]),N=o%O===0,K=i%R===0,Q=u%H===0,he=v?[P,4,4]:[1,1,1],W=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];St(t,W),W.push(...Z(e[0].dims,e[1].dims));let se=["rank","rank"];a&&(W.push(...Z(e[2].dims)),se.push("rank")),W.push(...Z(r));let Ce=We=>{let ee=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];xt(t,ee);let ae=v?4:1,Ae=Be(e[0].dataType),me=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${Ae}>`:Ae}) {\n        result[flatIndex] = ${v?`vec4<${Ae}>`:Ae}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${Ae}>`:Ae}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);\n      }`,ie=U("x",e[0].dataType,e[0].dims.length,P===3?1:P),ue=U("w",e[1].dataType,e[1].dims.length,ae),le=[ie,ue],qe=j("result",e[0].dataType,r.length,ae);if(a){let G=U("bias",e[2].dataType,e[2].dims.length,ae);le.push(G),me+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${Ae}>`:Ae} {\n          return bias[coords.${p?"w":"y"}${v?"/ 4":""}];\n        }`}return`\n        ${Mn("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${We.registerUniforms(ee).declareVariables(...le,qe)}\n        ${me}\n        ${$c(p,N,K,Q,a,t,he[0],he[1],he[2],Ae)}\n        ${v?Hr(x,A,Ae,void 0,!p,H):Lr(x,A,Ae,void 0,!p,H,!1,void 0,c)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${P};${v};${N};${K};${Q};${O};${R};${H}`,inputDependencies:se},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:W}),getShaderSource:Ce}}});var Mo,eu,tu=Y(()=>{"use strict";ye();Se();_e();Uo();Ft();Mo=(e,t,r)=>{let o=e.length>2,i=o?"value += b[output_channel];":"",u=e[0].dims,a=e[1].dims,c=a[0]/t.group,p=t.format==="NHWC",h=Vn(u,a,t.dilations,t.pads,t.strides,p),d=M.size(h),y=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:c}];St(t,y),y.push(...Z(u,a));let w=["rank","rank"];o&&(y.push(...Z(e[2].dims)),w.push("rank")),y.push(...Z(h));let _=v=>{let S=j("output",e[0].dataType,h.length),I=Be(S.type.tensor),A=_t(t,S.type.value,I),x=U("x",e[0].dataType,u.length),E=U("w",e[1].dataType,a.length),P=[x,E];o&&P.push(U("b",e[2].dataType,e[2].dims.length));let O=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return xt(t,O),`\n  ${v.registerUniforms(O).declareVariables(...P,S)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${S.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${p?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${p?1:2}], outputIndices[${p?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${S.type.value} = ${S.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${p?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${p?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${p?x.get("batch","xHeight","xWidth","input_channel"):x.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${E.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${A}\n    ${S.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:w},getRunData:()=>({outputs:[{dims:r?r(h):h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y}),getShaderSource:_}},eu=(e,t,r)=>{let o=e.length>2,i=Me(r[3]),u=Me(r[2]),a=M.size(r)/i/u,c=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],p=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],h=[r[0],r[1],r[2],r[3]/i],d=[{type:12,data:a},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];St(t,d),d.push(...Z(c,p,h));let y=(u-1)*t.strides[1]+p[1],w=_=>{let v=j("output",e[0].dataType,h.length,i),S=Be(v.type.tensor),I=_t(t,v.type.value,S),A=U("x",e[0].dataType,c.length,i),x=U("w",e[1].dataType,p.length,i),E=[A,x];o&&E.push(U("b",e[2].dataType,e[2].dims,i));let P=o?"value += b[output_channel];":"",O=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return xt(t,O),`\n  ${_.registerUniforms(O).declareVariables(...E,v)}\n  ${_.mainStart()}\n    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${u}u;\n    let col = (index1 % width1) * ${u}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${A.type.value}, ${y}>;\n    var values: array<${v.type.value}, ${u}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w\'s height/width.\n    for (var w_height: u32 = 0u; w_height < ${p[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${y}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${A.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${A.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${p[1]}; w_width++) {\n          let w_val = ${x.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${u}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${u}u; i++) {\n      var value = values[i];\n      ${P}\n      ${I}\n      ${v.set("batch","row","col + i","output_channel","value")};\n    }\n  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${i};${u};${y};${p[0]};${p[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:w}}});var Vo,_c,ru,Wo=Y(()=>{"use strict";ye();Se();Fr();_e();Ft();Vo=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u[u.length-2],p=a[a.length-1],h=u[u.length-1],d=Me(p),y=Me(h),w=Me(c),_=M.size(r)/d/w,v=e.length>2,S=o?o.slice(0,-2):r.slice(0,-2),A=[M.size(S),c,p],x=[{type:12,data:_},{type:12,data:c},{type:12,data:p},{type:12,data:h}];St(t,x),x.push(...Z(S,u,a)),v&&x.push(...Z(e[2].dims)),x.push(...Z(A));let E=P=>{let O=An("batch_dims",e[0].dataType,S.length),R=U("a",e[0].dataType,u.length,y),H=U("b",e[1].dataType,a.length,d),N=j("output",e[0].dataType,A.length,d),K=Be(N.type.tensor),Q=_t(t,N.type.value,K),he=[R,H],W="";if(v){let ie=i?d:1;he.push(U("bias",e[2].dataType,e[2].dims.length,ie)),W=`${i?`value += bias[col / ${ie}];`:`value += ${N.type.value}(bias[row + i]);`}`}let se=u.slice(0,-2),Ce=a.slice(0,-2),We=_r(se,S),ee=_r(Ce,S),ae=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];xt(t,ae);let Ae=(ie,ue)=>{let le=ie.rank,qe=ie.name;if(le===2)return`var ${qe}_indices = ${ie.type.indices}(0u, 0u);`;let G=O.rank,ne=`var ${qe}_indices: ${ie.type.indices};`;for(let xe=le-2-1,Ke=G-1;xe>=0;xe--,Ke--)ne+=`\n${qe}_indices[${xe}] = ${G>1?`batch_indices[${Ke}]`:"batch_indices"};`;return ue.forEach(xe=>{ne+=`\n${qe}_indices[${xe}] = 0;`}),ne+=`${qe}_indices[${le-2}] = 0u;\n                     ${qe}_indices[${le-1}] = 0u;`,ne},me=()=>{let ie=`var a_data: ${R.type.value};`;for(let ue=0;ue<y;ue++)ie+=`\n              let b_data${ue} = b[(b_offset + (k + ${ue}) * uniforms.N + col) / ${d}];`;for(let ue=0;ue<w;ue++){ie+=`a_data = a[(a_offset + (row + ${ue}) * uniforms.K + k) / ${y}];`;for(let le=0;le<y;le++)ie+=`\n            values[${ue}] = fma(${H.type.value}(a_data${y===1?"":`[${le}]`}), b_data${le}, values[${ue}]);\n`}return ie};return`\n  ${P.registerUniforms(ae).registerInternalVariables(O).declareVariables(...he,N)}\n  ${P.mainStart()}\n    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${w};\n    let row = (index1 % stride1) * ${w};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${O.offsetToIndices("batch")};`}\n    ${Ae(R,We)}\n    let a_offset = ${R.indicesToOffset("a_indices")};\n    ${Ae(H,ee)}\n    let b_offset = ${H.indicesToOffset("b_indices")};\n    var values: array<${N.type.value}, ${w}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${y}) {\n      ${me()}\n    }\n    for (var i = 0u; i < ${w}u; i++) {\n      var value = values[i];\n      ${W}\n      ${Q}\n      let cur_indices = ${N.type.indices}(batch, row + i, col);\n      let offset = ${N.indicesToOffset("cur_indices")};\n      ${N.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${y};${w};${i}`,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:x}),getShaderSource:E}},_c=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},ru=e=>{_c(e.inputs);let t=At.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Vo(e.inputs,{activation:""},t)):e.compute(Un(e.inputs,{activation:""},t))}});var Vn,No,Sc,nu,Go,xc,Cc,Ho,Uo=Y(()=>{"use strict";Se();Js();Fr();tu();Ft();Wo();Sr();Vn=(e,t,r,o,i,u)=>{let a=e[0],c=e.slice(u?1:2,u?3:4),p=c.length,h=t[0],y=t.slice(2).map((v,S)=>v+(v-1)*(r[S]-1)),_=c.map((v,S)=>v+o[S]+o[S+p]).map((v,S)=>Math.floor((v-y[S]+i[S])/i[S]));return _.splice(0,0,a),_.splice(u?3:1,0,h),_},No=[2,3,1,0],Sc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},nu=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let o=e.pads.slice();nr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:o}),i},Go=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,u=e.group,a=e.kernel_shape,c=e.pads,p=e.strides,h=e.w_is_const();return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},xc=(e,t,r)=>{let o=nu(r,t),i=r.format==="NHWC";if(r.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let H=Vn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),N=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=N);let K=[t[0],N];t.length===3&&K.push(t[2]),e.compute(eu(K,o,H),{inputs:K})}else e.compute(Mo(t,o));return}let u=t.length===3,a=t[0].dims[i?1:2],c=t[0].dims[i?2:3],p=t[0].dims[i?3:1],h=t[1].dims[2],d=t[1].dims[3],y=Vn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),w=y[i?1:2],_=y[i?2:3],v=y[i?3:1],S=i&&h===a&&d===c&&r.pads[0]===0&&r.pads[1]===0;if(S||h===1&&d===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let R=y[0],H,N,K,Q=[];if(i){let se=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=se),S){let Ce=a*c*p;H=t[0].reshape([1,R,Ce]),N=se.reshape([1,Ce,v]),K=[1,R,v]}else H=t[0].reshape([R,a*c,p]),N=se.reshape([1,p,v]),K=[R,w*_,v];Q.push(H),Q.push(N)}else H=t[0].reshape([R,p,a*c]),N=t[1].reshape([1,v,p]),K=[R,v,w*_],Q.push(N),Q.push(H);u&&Q.push(t[2]);let he=K[2],W=Q[0].dims[Q[0].dims.length-1];he<8&&W<8?e.compute(Vo(Q,o,y,K,i),{inputs:Q}):e.compute(Un(Q,o,y,K,i),{inputs:Q});return}let I=!0,A=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let x=[t[0],A];u&&x.push(t[2]);let E=i?w*_:v,P=i?v:w*_,O=h*d*p;e.compute(Qs(x,o,y,E,P,O,u,I),{inputs:x})},Cc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),a=[1].concat(t.dilations),c=[1].concat(t.kernelShape),p=nu({...t,pads:i,strides:u,dilations:a,kernelShape:c},o);e.compute(Mo(o,p,h=>r?[h[0],h[2],h[3]]:[]))},Ho=(e,t)=>{Sc(e.inputs,t),e.inputs[0].dims.length===3?Cc(e,t):xc(e,e.inputs,t)}});var Ac,ou,iu=Y(()=>{"use strict";ye();Ht();_e();Ft();zn();zo();Fr();Ac=(e,t=!1,r,o,i=4)=>{let u=A=>{switch(A){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${o}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${A} is not supported.`)}},a=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,c=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=e?"row":"col",y=e?"col":"row",w=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${d} / outWidth;\n      let outCol = ${d} % outWidth;\n\n      let WRow = ${y} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${y} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${p}) || fract(xR) > 0.0) {\n        return ${o}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {\n        return ${o}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${y} % inChannels;\n      ${a}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${i}];`,_=e?`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${w}\n      }\n      return ${o}(0.0);`:`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${w}\n      }\n      return ${o}(0.0);`,v=`\n      let col = colIn * ${i};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(i)}\n      }\n      return ${o}(0.0);\n      `,S=_t(r,o);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?_:v}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?v:_}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {\n    let col = colIn * ${i};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${Dn(t)}\n      ${S}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${i}] = value;\n    }\n  }`},ou=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],d=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],v=p&&h%4===0&&h%3&&_%4===0,S=p?_:y*w,I=p?y*w:_,A=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(S/A[0]/x[0]),Math.ceil(I/A[1]/x[1]),Math.ceil(d/A[2]/x[2])];Ve("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let P=v?4:1,O=Math.max(A[0]*P,A[1]),R=v?4:1,H=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],N=[H[0]+(t.dilations[0]<=1?0:(H[0]-1)*(t.dilations[0]-1)),H[1]+(t.dilations[1]<=1?0:(H[1]-1)*(t.dilations[1]-1))],K=[N[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),N[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],Q=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:H},{type:6,data:K}];St(t,Q),Q.push(...Z(e[0].dims,e[1].dims));let he=["rank","rank"];a&&(Q.push(...Z(e[2].dims)),he.push("rank")),Q.push(...Z(r));let W=se=>{let Ce=U("x",e[0].dataType,e[0].dims.length,R),We=U("w",e[1].dataType,e[1].dims.length,1),ee=j("result",e[0].dataType,r.length,R),ae=[Ce,We],Ae="";if(a){let ue=U("bias",e[2].dataType,e[2].dims.length,R);ae.push(ue),Ae+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${ue.type.value} {\n            return bias[coords.${p?"w":"y"}${v?"/ 4":""}];\n          }`}let me=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:H.length},{name:"pads",type:"i32",length:K.length}];xt(t,me);let ie=Be(e[0].dataType,1);if(ie!=="f16"&&ie!=="f32")throw new Error(`elemType ${ie} is not supported.`);return`\n        ${Mn("uniforms.result_strides")}\n        ${se.registerUniforms(me).declareVariables(...ae,ee)};\n        ${Ae}\n        ${Ac(p,a,t,Ce.type.value,P)}\n        ${v?Hr(x,A,ie,void 0,!p,O):Lr(x,A,ie,void 0,!p,O,!1,void 0,c)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${x};${A};${v}`,inputDependencies:he},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:Q}),getShaderSource:W}}});var Ic,Lo,au=Y(()=>{"use strict";ye();Ht();Se();_e();Ic=(e,t,r,o,i,u=!1,a,c,p=!1)=>{let h=p?1:2,d=p?2:3,y=p?3:1,w=u?2:1,_=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {\n    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);\n  }`;o&&(_+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {\n      return bias[coords.${p?"w":"y"}${u?"/ 4":""}];\n    }`);let v=u?4:1,S=U("W",t[1].dataType,t[1].dims.length,v),I=U("Dy",t[0].dataType,t[0].dims.length,v),A=[I,S];o&&A.push(U("bias",t[2].dataType,[r[y]].length,v));let x=j("result",t[0].dataType,r.length,v),E=`{\n        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${i?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${a}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${a}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${I.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${I.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${y}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${I.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${I.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};\n          ${x.set("batch","r","c + i","d1","value")};\n        }\n      }`,P=`\n          let outputIndices = ${x.offsetToIndices("global_idx")};\n          let batch = ${x.indicesGet("outputIndices",0)};\n          let d1 = ${x.indicesGet("outputIndices",y)};\n          let r = ${x.indicesGet("outputIndices",h)};\n          let c = ${x.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${a}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${p?I.get("batch","idyR","idyC","inputChannel"):I.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${S.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};\n          ${x.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(c).declareVariables(...A,x)}\n  ${_}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${u?E:P}}`},Lo=(e,t,r)=>{let o=e.length>2,i=t.outputShape,u=M.size(i),a=[Math.ceil(u/64),1,1];Ve("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${a}`);let c=t.format==="NHWC",p=["rank","rank"],h=[t.strides[0],t.strides[1]],d=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],y=[t.dilations[0],t.dilations[1]],w=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[c?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[c?2:3]-1)*(t.dilations[1]-1))],_=[w[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),w[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],v=!1,S=t.group,I=e[1].dims,A=I[0]/S,x=I[1],E=[{type:12,data:u},{type:12,data:h},{type:12,data:d},{type:12,data:y},{type:12,data:w},{type:6,data:_},{type:12,data:A},{type:12,data:x},...Z(e[0].dims,e[1].dims)];o&&(E.push(...Z(e[2].dims)),p.push("rank")),E.push(...Z(i));let P=a[1]===1&&a[2]===1,O=R=>{let H=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:_.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],N=Be(e[0].dataType);return`${Ic(R,e,i,o,P,v,N,H,c)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:p},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:E}),getShaderSource:O}}});var Tc,Ec,Pc,su,uu,kc,Oc,Rc,Bc,du,lu=Y(()=>{"use strict";iu();au();Ft();Sr();Tc=(e,t,r,o,i,u)=>(e-1)*t+r+(o-1)*i+1-u,Ec=(e,t,r,o,i)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=u,r[i]=e-u):t==="SAME_LOWER"&&(r[o]=e-u,r[i]=u)},Pc=(e,t,r,o,i,u,a,c,p,h)=>{let d=e.length-2,y=h.length===0;if(p.length===0)for(let v=0;v<d;++v)p.push(0);let w=e[0],_=t[c?3:1]*i;for(let v=0,S=e.length-d-(c?1:0);v<d;++v,++S){let I=e[S],A=y?I*a[v]:h[v],x=Tc(I,a[v],u[v],t[S],r[v],A);Ec(x,o,u,v,v+d),y&&h.push(a[v]*(I-1)+p[v]+(t[S]-1)*r[v]+1-u[v]-u[v+d])}h.splice(0,0,w),h.splice(c?3:1,0,_)},su=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((y,w)=>y*w,1)===0){r.length=0;for(let y=2;y<t[1].dims.length;++y)r.push(t[1].dims[y])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let i=e.pads.slice(),u=e.outputShape.slice(),a=e.outputPadding.slice(),c=t[0].dims,p=e.dilations.slice();if(p.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;p=new Array(y).fill(1)}let h=e.strides.slice();if(h.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;h=new Array(y).fill(1)}Pc(c,r,p,e.autoPad,e.group,i,h,o,a,u);let d=Object.assign({},e);return Object.assign(d,{kernelShape:r,pads:i,outputPadding:a,outputShape:u,dilations:p,strides:h}),d},uu=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,u=e.group,a=e.kernelShape,c=e.pads,p=e.strides,h=e.wIsConst(),d=e.outputPadding,y=e.outputShape;return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,outputPadding:d,outputShape:y,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},kc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((d,y)=>d+y,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((d,y)=>d+y,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((d,y)=>d+y,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((d,y)=>d+y,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Oc=[2,3,1,0],Rc=(e,t,r)=>{let o=su(r,t),i=r.format==="NHWC",u=o.outputShape,a=u[i?3:1],c=t[0].dims[i?3:1];if(o.group!==1||a===1&&c===1){e.compute(Lo(t,o));return}let p=u[i?1:2],h=u[i?2:3],d=t[1].dims[2],y=t[1].dims[3],w=i?p*h:a,_=i?a:p*h,v=d*y*c,S=!0,I=e.kernelCustomData.wT??e.compute(yt(t[1],Oc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=I);let A=[t[0],I],x=t.length===3;x&&(!i&&t[2].dims.length===1?A.push(t[2].reshape([t[2].dims[0],1,1])):A.push(t[2])),e.compute(ou(A,o,u,w,_,v,x,S),{inputs:A})},Bc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],a=[1].concat(a),u=[1].concat(u),i=[1].concat(i);let p=su({...t,pads:c,strides:a,dilations:u,kernelShape:i},o);e.compute(Lo(o,p,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},du=(e,t)=>{kc(e.inputs,t),e.inputs[0].dims.length===3?Bc(e,t):Rc(e,e.inputs,t)}});var Dc,cu,pu,mu=Y(()=>{"use strict";ye();Se();Ze();_e();Dc=(e,t,r,o)=>{let i=M.size(t),u=t.length,a=U("input",e,u),c=j("output",e,u),p=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=M.normalizeAxis(p,u),d=y=>{let w=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,_=fe("uniforms.input_shape","uniforms.axis",u),v=o.reverse?w+(o.exclusive?" + 1":""):"0",S=o.reverse?_:w+(o.exclusive?"":" + 1");return`\n                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,c)}\n                ${y.mainStart()}\n                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${c.offsetToIndices("global_idx")};\n                  var sum = ${c.type.value}(0);\n                  let first : i32 = ${v};\n                  let last : i32 = ${S};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${c.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:h},...Z(t,t)]}),getShaderSource:d}},cu=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,i=e.inputs[1];e.compute(Dc(o,r,i,t),{inputs:[0]})},pu=e=>{let t=e.exclusive===1,r=e.reverse===1;return ve({exclusive:t,reverse:r})}});var zc,Mc,Uc,fu,hu,gu=Y(()=>{"use strict";ye();Se();Ze();_e();zc=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Mc=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},Uc=(e,t)=>{let r,o,i,u,a,c,p=t.format==="NHWC",h=t.blocksize,d=t.mode==="DCR";p?([r,o,i,u]=e.dims,a=d?[r,o,i,h,h,u/h**2]:[r,o,i,u/h**2,h,h],c=d?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,o,i,u]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],a=d?[r,h,h,u/h**2,o,i]:[r,u/h**2,h,h,o,i],c=d?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let y=e.reshape(a),w=y.dims.length,_=e.dataType,v=U("a",_,w),S=j("output",_,w),I=A=>`\n  ${A.registerUniform("output_size","u32").declareVariables(v,S)}\n\n  ${Mc(c,w,v,S)}\n\n  ${A.mainStart()}\n    ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${S.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${S.setByOffset("global_idx",v.getByIndices("aIndices"))}\n  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:A=>{let x=p?[r,o*h,i*h,u/h**2]:[r,u/h**2,o*h,i*h],E=M.size(x),P=y.dims,O=M.sortBasedOnPerm(P,c);return{outputs:[{dims:x,dataType:A[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},...Z(P,O)]}},getShaderSource:I}},fu=(e,t)=>{zc(e.inputs),e.compute(Uc(e.inputs[0],t))},hu=e=>ve({blocksize:e.blocksize,mode:e.mode,format:e.format})});var Fo,Wn,yu,Vc,Wc,qo,jo,bu,Nc,wu,vu,$u=Y(()=>{"use strict";ye();Se();Ze();_e();Fo="[a-zA-Z]|\\\\.\\\\.\\\\.",Wn="("+Fo+")+",yu="^"+Wn+"$",Vc="("+Wn+",)*"+Wn,Wc="^"+Vc+"$",qo=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},jo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,i]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(Wc)))throw new Error("Invalid LHS term");if(o.split(",").forEach((c,p)=>{let h=t[p].dims.slice();if(!c.match(RegExp(yu)))throw new Error("Invalid LHS term");let d=this.processTerm(c,!0,h,p);this.lhs.push(d)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([c,p])=>p.count===1||c==="...").map(([c])=>c).join("");else if(!i.match(RegExp(Wn)))throw new Error("Invalid RHS");i.match(RegExp(Fo,"g"))?.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let p=this.symbolToInfo.get(c);if(p===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(p.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,o){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(o)}else i={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,i)}processTerm(t,r,o,i=-1){let u=o.length,a=!1,c=[],p=0;if(!t.match(RegExp(yu))&&!r&&t!=="")throw new Error("Invalid LHS term");let h=t.match(RegExp(Fo,"g")),d=new qo(i);return h?.forEach((y,w)=>{if(y==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let _=u-h.length+1;if(_<0)throw new Error("Ellipsis out of bounds");if(c=o.slice(p,p+_),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<c.length;v++){let S=String.fromCharCode("0".charCodeAt(0)+v);d.addSymbol(S,w+v),this.addSymbol(S,o[p++],i)}}else d.addSymbol(y,w+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,o[p++],i)}),d}},bu=e=>e+"_max",Nc=(e,t,r,o)=>{let u=e.map(d=>d.length).map((d,y)=>U(`input${y}`,t,d)),a=M.size(o),c=j("output",t,o.length),p=[...r.symbolToInfo.keys()].filter(d=>!r.rhs.symbolToIndices.has(d)),h=d=>{let y=[],w="var prod = 1.0;",_="var sum = 0.0;",v="sum += prod;",S=[],I=[],A=[],x=[],E=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((O,R)=>{if(r.rhs.symbolToIndices.has(R)){let H=r.rhs.symbolToIndices.get(R)?.[0];H!==void 0&&r.lhs.forEach((N,K)=>{if(O.inputIndices.includes(K)){let Q=N.symbolToIndices.get(R);if(Q===void 0)throw new Error("Invalid symbol error");Q.forEach(he=>{y.push(`${u[K].indicesSet(`input${K}Indices`,he,c.indicesGet("outputIndices",H))}`)})}})}else r.lhs.forEach((H,N)=>{if(O.inputIndices.includes(N)){let K=H.symbolToIndices.get(R);if(K===void 0)throw new Error("Invalid symbol error");K.forEach(Q=>{S.push(`${u[N].indicesSet(`input${N}Indices`,Q,`${R}`)}`)}),x.push(`prod *= ${u[N].getByIndices(`input${N}Indices`)};`)}}),I.push(`for(var ${R}: u32 = 0; ${R} < uniforms.${bu(R)}; ${R}++) {`),A.push("}")});let P=E?[...y,`let sum = ${u.map((O,R)=>O.getByIndices(`input${R}Indices`)).join(" * ")};`]:[...y,_,...I,...S,w,...x,v,...A];return`\n            ${d.registerUniforms(p.map(O=>({name:`${bu(O)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,c)}\n\n            ${d.mainStart()}\n            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${c.offsetToIndices("global_idx")};\n            ${u.map((O,R)=>`var input${R}Indices: ${u[R].type.indices};`).join(`\n`)}\n            ${P.join(`\n`)};\n            ${c.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let d=p.filter(w=>r.symbolToInfo.has(w)).map(w=>({type:12,data:r.symbolToInfo.get(w)?.dimValue||0}));d.push({type:12,data:a});let y=e.map((w,_)=>[...Z(w)]).reduce((w,_)=>w.concat(_),d);return y.push(...Z(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:y}},getShaderSource:h}},wu=(e,t)=>{let r=new jo(e.inputs,t.equation),o=r.outputDims,i=e.inputs.map((u,a)=>u.dims);e.compute(Nc(i,e.inputs[0].dataType,r,o))},vu=e=>{let t=e.equation.replace(/\\s+/g,"");return ve({equation:t})}});var Gc,_u,Hc,Lc,Su,xu=Y(()=>{"use strict";ye();Se();_e();Gc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;o<r.length&&i<t.length;++o,++i)if(r[o]!==t[i]&&r[o]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},_u=(e,t)=>{let r=e.length-t.length,o=[];for(let i=0;i<r;++i)o.push(e[i]);for(let i=0;i<t.length;++i)o.push(t[i]===1?e[i+r]:t[i]);return o},Hc=(e,t)=>e.length>t.length?_u(e,t):_u(t,e),Lc=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Hc(t,r),i=e[0].dataType,u=i===9?4:1,a=Math.ceil(M.size(o)/u),c=h=>{let d=U("input",i,t.length,u),y=j("output",i,o.length,u),w;if(i===9){let _=(v,S,I="")=>`\n          let outputIndices${S} = ${y.offsetToIndices(`outputOffset + ${S}u`)};\n          let offset${S} = ${d.broadcastedIndicesToOffset(`outputIndices${S}`,y)};\n          let index${S} = offset${S} / 4u;\n          let component${S} = offset${S} % 4u;\n          ${v}[${S}] = ${I}(${d.getByOffset(`index${S}`)}[component${S}]);\n        `;w=`\n        let outputOffset = global_idx * ${u};\n        var data = vec4<u32>(0);\n        ${_("data",0,"u32")}\n        ${_("data",1,"u32")}\n        ${_("data",2,"u32")}\n        ${_("data",3,"u32")}\n        ${y.setByOffset("global_idx","data")}\n      }`}else w=`\n        let outputIndices = ${y.offsetToIndices("global_idx")};\n        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",y)};\n        ${y.setByOffset("global_idx",d.getByOffset("inputOffset"))}\n      }`;return`\n    ${h.registerUniform("vec_size","u32").declareVariables(d,y)}\n    ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${w}`},p=[{type:12,data:a},...Z(t,o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p})}},Su=e=>{Gc(e.inputs),e.compute(Lc(e.inputs),{inputs:[0]})}});var Fc,Cu,Au=Y(()=>{"use strict";ye();Se();_e();Rn();Fc=e=>{let t=e[0].dataType,r=M.size(e[0].dims),o=M.size(e[1].dims),i=o%4===0,u=a=>{let c=U("x",t,[1],4),p=U("bias",t,[1],4),h=j("y",t,[1],4),d=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],y=_=>`\n      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;\n      let bias${_} = ${p.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,w=i?`\n      let bias = ${p.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${y(0)}${y(1)}${y(2)}${y(3)}\n      let bias = ${c.type.value}(bias0, bias1, bias2, bias3);`;return`${a.registerUniforms(d).declareVariables(c,p,h)}\n\n    ${Bo(et(t))}\n\n    ${a.mainStart(or)}\n      ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${c.getByOffset("global_idx")};\n      ${w}\n      let x_in = x + bias;\n      ${h.setByOffset("global_idx",Do("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:u,getRunData:a=>({outputs:[{dims:a[0].dims,dataType:a[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(r/or/4)}})}},Cu=e=>{e.inputs.length<2||M.size(e.inputs[1].dims)===0?Bs(e):e.compute(Fc(e.inputs))}});var qc,jc,Iu,Tu,Eu=Y(()=>{"use strict";ye();Se();Ze();_e();qc=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},jc=(e,t)=>{let r=e[0].dims,o=e[1].dims,i=r.length,u=M.normalizeAxis(t.axis,i),a=r.slice(0);a.splice(u,1,...o);let c=r[u],p=e[0].dataType===9?4:1,h=Math.ceil(M.size(a)/p),d=[{type:12,data:h},{type:6,data:c},{type:12,data:u},...Z(e[0].dims,e[1].dims,a)],y=w=>{let _=U("data",e[0].dataType,e[0].dims.length,p),v=U("inputIndices",e[1].dataType,e[1].dims.length),S=j("output",e[0].dataType,a.length,p),I=x=>{let E=o.length,P=`var indicesIndices${x}  = ${v.type.indices}(0);`;for(let O=0;O<E;O++)P+=`${E>1?`indicesIndices${x}[${O}]`:`indicesIndices${x}`} = ${a.length>1?`outputIndices${x}[uniforms.axis + ${O}]`:`outputIndices${x}`};`;P+=`\n          var idx${x} = ${v.getByIndices(`indicesIndices${x}`)};\n          if (idx${x} < 0) {\n            idx${x} = idx${x} + uniforms.axisDimLimit;\n          }\n          var dataIndices${x} : ${_.type.indices};\n        `;for(let O=0,R=0;O<i;O++)O===u?(P+=`${i>1?`dataIndices${x}[${O}]`:`dataIndices${x}`} = u32(idx${x});`,R+=E):(P+=`${i>1?`dataIndices${x}[${O}]`:`dataIndices${x}`} = ${a.length>1?`outputIndices${x}[${R}]`:`outputIndices${x}`};`,R++);return P},A;if(e[0].dataType===9){let x=(E,P,O="")=>`\n          let outputIndices${P} = ${S.offsetToIndices(`outputOffset + ${P}u`)};\n          ${I(P)};\n          let offset${P} = ${_.indicesToOffset(`dataIndices${P}`)};\n          let index${P} = offset${P} / 4u;\n          let component${P} = offset${P} % 4u;\n          ${E}[${P}] = ${O}(${_.getByOffset(`index${P}`)}[component${P}]);\n        `;A=`\n        let outputOffset = global_idx * ${p};\n        var value = vec4<u32>(0);\n        ${x("value",0,"u32")}\n        ${x("value",1,"u32")}\n        ${x("value",2,"u32")}\n        ${x("value",3,"u32")}\n        ${S.setByOffset("global_idx","value")}\n      `}else A=`\n      let outputIndices = ${S.offsetToIndices("global_idx")};\n      ${I("")};\n      let value = ${_.getByIndices("dataIndices")};\n      ${S.setByOffset("global_idx","value")};\n      `;return`\n      ${w.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,v,S)}\n      ${w.mainStart()}\n        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${A}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:y}},Iu=e=>ve({axis:e.axis}),Tu=(e,t)=>{let r=e.inputs;qc(r),e.compute(jc(e.inputs,t))}});var Kc,Yc,Pu,ku,Ou=Y(()=>{"use strict";ye();Se();Ze();_e();Kc=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Yc=(e,t)=>{let r=e[0].dims,o=e[0].dataType,i=r.length,u=e[1].dims,a=e[1].dataType,c=M.normalizeAxis(t.axis,i),p=r[c],h=u.slice(0),d=M.size(h),y=U("input",o,i),w=U("indicesInput",a,u.length),_=j("output",o,h.length),v=[{type:12,data:d},{type:6,data:p},{type:12,data:c}];return v.push(...Z(r,u,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:v}),getShaderSource:A=>`\n      ${A.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,w,_)}\n      ${A.mainStart()}\n      ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${_.offsetToIndices("global_idx")};\n\n      var idx = ${w.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${y.type.indices}(outputIndices);\n      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${y.getByIndices("inputIndices")};\n\n      ${_.setByOffset("global_idx","value")};\n  }`}},Pu=e=>ve({axis:e.axis}),ku=(e,t)=>{let r=e.inputs;Kc(r),e.compute(Yc(e.inputs,t))}});var Zc,Xc,Ru,Bu,Du=Y(()=>{"use strict";ye();Se();_e();Zc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Xc=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[i,u,a]=Sn.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),c=[i,u];if(!c)throw new Error("Can\'t use gemm on the given tensors");let p=M.size(c),h=[{type:12,data:p},{type:12,data:i},{type:12,data:u},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}],d=["type","type"];e.length===3&&(h.push(...Z(e[2].dims)),d.push("rank")),h.push(...Z(c));let y=w=>{let _="";t.transA&&t.transB?_="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?_="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?_="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(_="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let v=t.alpha===1?"":"value *= uniforms.alpha;",S=U("a",e[0].dataType,e[0].dims),I=U("b",e[1].dataType,e[1].dims),A=S.type.value,x=null,E=[S,I];e.length===3&&(x=U("c",e[2].dataType,e[2].dims.length),E.push(x));let P=j("output",e[0].dataType,c.length);E.push(P);let O=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${w.registerUniforms(O).declareVariables(...E)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${A}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${_}\n    }\n\n    ${v}\n    ${(()=>x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",P)}; value += ${A}(uniforms.beta) * ${x.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:y}},Ru=e=>{let t=e.transA,r=e.transB,o=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:o,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Bu=(e,t)=>{Zc(e.inputs),e.compute(Xc(e.inputs,t))}});var Qc,Jc,ep,zu,Mu=Y(()=>{"use strict";ye();Se();_e();Qc=(e,t)=>{let r=e[0].dims,o=r,i=2,u=M.sizeToDimension(r,i),a=M.sizeFromDimension(r,i),c=Me(a),p=a/c,h=[r[0],r[1],p],d=["rank","type","type"],y=[{type:12,data:a},{type:12,data:p}];y.push(...Z(h,h));let w=_=>{let v=U("x",e[0].dataType,h.length,c),S=U("scale",e[1].dataType,e[1].dims),I=U("bias",e[2].dataType,e[2].dims),A=j("output",e[0].dataType,h.length,c),x=[v,S,I,A],E=v.type.value,P=c===1?"f32":`vec${c}<f32>`,O=64,R=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${P}, ${O}>;\n  const workgroupSize = ${O}u;\n  ${_.registerUniforms(R).declareVariables(...x)}\n  ${_.mainStart(O)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${P}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${P}(${v.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${$t("workgroupShared[0]",c)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${P}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${P}(${v.get("batch","channel","h")}) - ${P}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${$t("workgroupShared[0]",c)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${S.getByOffset("channel")});\n    let channelShift = f32(${I.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${v.get("batch","channel","h")} * ${E}(${P}(channelScale)) + ${E}(${P}(channelShift));\n      ${A.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:y}),getShaderSource:w}},Jc=(e,t,r,o,i,u,a,c)=>{let p=Me(a),h=64,d=p===1?"vec2f":`mat2x${p}f`,y=p===1?"f32":`vec${p}f`,w=(R,H)=>`${d}(${R}, ${H})`,_=i*a/p,v=Math.ceil(u/h),S=["type"],I=[{type:12,data:v},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(u*a/p)}],A=R=>{let H=U("input",t.dataType,t.dims,p);return`\n  ${R.declareVariables(H)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${R.mainStart(h)}\n    let currentImageNumber = global_idx / ${h} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${h}) % uniforms.C;\n    let wgOffset = local_id.x * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${Lt("f32",p)};\n    var squaredSum = ${Lt("f32",p)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${y}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${w("sum","squaredSum")};\n  }`},x=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${p}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:[i,a,h,2],dataType:1}],dispatchGroup:{x:i*a/p},programUniforms:I}),getShaderSource:A},{inputs:[t],outputs:[-1]})[0],E=[{type:12,data:_},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(h*a/p)}],P=["type","type","type"],O=R=>{let H=U("scale",r.dataType,r.dims,p),N=U("bias",o.dataType,o.dims,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${H.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${N.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${R.mainStart()}\n    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${Lt("f32",p)};\n    var squaredSum = ${Lt("f32",p)};\n    for (var i: u32 = 0; i < min(${h}, uniforms.H); i++) {\n        let value = input[offset + i + currentChannelNumber * ${h}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${c}));\n    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);\n    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${w("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${p};${c}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:[i,a,2],dataType:1}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:E}),getShaderSource:O},{inputs:[x,r,o],outputs:[-1]})[0]},ep=(e,t,r)=>{let o=t[0].dims,i=o,u=o[0],a=o[o.length-1],c=M.sizeFromDimension(o,1)/a,p=Me(a),h=M.size(i)/p,d=[{type:12,data:c},{type:12,data:Math.floor(a/p)}],y=["type","type"],w=Jc(e,t[0],t[1],t[2],u,c,a,r.epsilon),_=v=>{let S=Be(t[0].dataType),I=p===1?"vec2f":`mat2x${p}f`,A=p===1?S:`vec${p}<${S}>`,x=U("input",t[0].dataType,t[0].dims,p),E=j("output",t[0].dataType,i,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${x.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${I}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${v.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${A}(scale[0]), ${A}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${p}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:_},{inputs:[t[0],w]})},zu=(e,t)=>{t.format==="NHWC"?ep(e,e.inputs,t):e.compute(Qc(e.inputs,t))}});var tp,rp,Uu,Vu=Y(()=>{"use strict";ye();Se();_e();tp=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},rp=(e,t,r)=>{let o=t.simplified,i=e[0].dims,u=e[1],a=!o&&e[2],c=i,p=M.normalizeAxis(t.axis,i.length),h=M.sizeToDimension(i,p),d=M.sizeFromDimension(i,p),y=M.size(u.dims),w=a?M.size(a.dims):0;if(y!==d||a&&w!==d)throw new Error(`Size of X.shape()[axis:] == ${d}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${y} and bias size of ${w}`);let _=[];for(let O=0;O<i.length;++O)O<p?_.push(i[O]):_.push(1);let v=Me(d),S=["type","type"],I=[{type:12,data:h},{type:1,data:d},{type:12,data:Math.floor(d/v)},{type:1,data:t.epsilon}];a&&S.push("type");let A=r>1,x=r>2,E=O=>{let R=Be(e[0].dataType),H=[U("x",e[0].dataType,e[0].dims,v),U("scale",u.dataType,u.dims,v)];a&&H.push(U("bias",a.dataType,a.dims,v)),H.push(j("output",e[0].dataType,c,v)),A&&H.push(j("mean_data_output",1,_)),x&&H.push(j("inv_std_output",1,_));let N=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${O.registerUniforms(N).declareVariables(...H)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${Lt("f32",v)};\n    var mean_square_vector = ${Lt("f32",v)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${ir(R,v,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${$t("mean_vector",v)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${$t("mean_square_vector",v)} / uniforms.norm_size ${o?"":"- mean * mean"} + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${ir(R,v,"x[j + offset]")};\n      let f32scale = ${ir(R,v,"scale[j]")};\n      output[j + offset] = ${H[0].type.value}((f32input ${o?"":"- mean"}) * inv_std_dev * f32scale\n        ${a?`+ ${ir(R,v,"bias[j]")}`:""}\n      );\n    }\n\n    ${A?"mean_data_output[global_idx] = mean":""};\n    ${x?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`},P=[{dims:c,dataType:e[0].dataType}];return A&&P.push({dims:_,dataType:1}),x&&P.push({dims:_,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${v};${r};${o}`,inputDependencies:S},getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(h/64)},programUniforms:I}),getShaderSource:E}},Uu=(e,t)=>{tp(e.inputs),e.compute(rp(e.inputs,t,e.outputCount))}});var np,op,Wu,Nu,Gu=Y(()=>{"use strict";ye();Se();Ze();_e();np=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],o=r.dims.length;if(r.dims[o-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),u=t.blockSize/8*t.bits,a=e[1];if(!M.areEqual(a.dims,[t.n,i,u]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let p=e[2].dims;if(M.size(p)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let d=e[3].dims,y=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(M.size(d)!==y)throw new Error("zeroPoints input size error.")}},op=(e,t,r,o)=>{let i=e[0].dims,u=i.length,a=Math.floor((t.k+t.blockSize-1)/t.blockSize),c=i[u-2],p=t.k,h=t.n,d=i.slice(0,u-2),y=M.size(d),_=t.blockSize/8*t.bits/4,v=e[0].dataType,S=Me(c),I=Me(t.k),A=Me(_),x=tr(v),E=c*a*x,P=Math.floor(o/E),O=a<=r[0]&&P>0,R=!O||P>=4?Me(h):P>=2&&Me(h)>=2?2:1,H=d.concat([c,h]),N=M.size(H)/R/S,K=O?[]:[{type:12,data:N},{type:12,data:t.blockSize}],Q=[y,c,p/I],he=M.convertShape(e[1].dims).slice();he.splice(-1,1,_/A),K.push(...Z(Q)),K.push(...Z(he)),K.push(...Z(e[2].dims)),e.length===4&&K.push(...Z(M.convertShape(e[3].dims)));let W=[y,c,h/R];K.push(...Z(W));let se=Ce=>{let We=Q.length,ee=U("a",e[0].dataType,We,I),ae=U("b",12,he.length,A),Ae=U("scales",e[2].dataType,e[2].dims.length),me=[ee,ae,Ae],ie=e.length===4?U("zero_points",12,e[3].dims.length):void 0;ie&&me.push(ie);let ue=W.length,le=j("output",e[0].dataType,ue,R),qe=[{name:"output_size",type:"u32"},{name:"block_size",type:"u32"}],G=Be(e[0].dataType),ne=(()=>{switch(I){case 1:return`array<${G}, 8>`;case 2:return`mat4x2<${G}>`;case 4:return`mat2x4<${G}>`;default:throw new Error(`${I}-component is not supported.`)}})(),xe=`\n        for (var word: u32 = 0; word < ${_}; word += ${A}) {\n          ${ae.indicesSet("b_indices","2","word")};\n          let b_data = ${ae.getByIndices("b_indices")};\n          for (var i: u32 = 0; i < ${A}; i++) {\n            let b_value: u32 = ${A===1?"b_data":"b_data[word + i]"};\n            let b_mask: u32 = 0x0F0F0F0Fu;\n            let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);\n            let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);\n            let b_quantized_values = ${ne}(${Array.from({length:4},(De,Ge)=>`${G}(b_value_lower[${Ge}]), ${G}(b_value_upper[${Ge}])`).join(", ")});\n            let b_dequantized_values = ${(()=>I===1?`${ne}(${Array.from({length:8},(De,Ge)=>`(b_quantized_values[${Ge}] - zero_point) * scale`).join(", ")});`:`(b_quantized_values - ${ne}(${Array(8).fill("zero_point").join(",")})) * scale;`)()};\n            // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n            for (var m: u32 = 0; m < ${O?c:S}u; m++) {\n              ${ee.indicesSet("a_indices",We-2,O?"m":`row * ${S} + m`)};\n              ${ee.indicesSet("a_indices",We-1,"word_offset")};\n              var input_offset = ${ee.indicesToOffset("a_indices")};\n              var a_data: ${ne};\n              for (var j: u32 = 0; j < ${8/I}; j++) {\n                a_data[j] = ${ee.getByOffset("input_offset")};\n                input_offset++;\n              }\n              ${O?"workgroup_shared[workgroup_shared_offset + m]":"output_values[m]"}${R>1?"[c]":""} += ${Array.from({length:8/I},(De,Ge)=>`${I===1?`a_data[${Ge}] * b_dequantized_values[${Ge}]`:`dot(a_data[${Ge}], b_dequantized_values[${Ge}])`}`).join(" + ")};\n            }\n            word_offset += ${8/I};\n          }\n        }`,Ke=ie?`\n          zero_point_offset += 4;\n          if (zero_point_offset == 32) {\n            zero_point_offset = 0;\n            zero_point_index++;\n            zero_point_word = ${ie.getByOffset("zero_point_index")};\n          }`:"";return O?`\n        var<workgroup> workgroup_shared: array<${le.type.value}, ${c*a}>;\n        ${Ce.declareVariables(...me,le)}\n        ${Ce.mainStart([a,1,1])}\n          var a_indices: ${ee.type.indices};\n          var block = local_id.x;\n          var col = workgroup_id.y;\n          var batch = workgroup_id.z;\n          ${ee.indicesSet("a_indices","0","batch")};\n          // Two zero points are packed into one byte when uniforms.bits is 4.\n          for (var c: u32 = 0; c < ${R}; c++) {\n            let col_times_components_plus_c = col * ${R} + c;\n              ${ie?`\n            var zero_point_bytes_per_col: u32 = (${a} + 1) / 2;\n            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);\n            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;\n            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;\n            var zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            var zero_point_word: u32 = ${ie.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}\n            var b_indices: ${ae.type.indices};\n            ${ae.indicesSet("b_indices","0","col_times_components_plus_c")};\n            // The scale and zero points are computed per block.\n            var scales_index = col_times_components_plus_c * ${a} + block;\n            let scale = ${Ae.getByOffset("scales_index")};\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${G}(${ie?"(zero_point_word) & 0xFu":8});\n            ${ae.indicesSet("b_indices","1","block")};\n            var word_offset: u32 = block * ${t.blockSize/I};\n            var workgroup_shared_offset: u32 = block * ${c};\n            ${xe}\n          }\n          workgroupBarrier();\n          var output_indices: ${le.type.indices};\n          var elements_per_thread: u32 = ${Math.ceil(c/a)};\n          ${le.indicesSet("output_indices","0","batch")};\n          ${le.indicesSet("output_indices",ue-1,"col")};\n          ${le.indicesSet("output_indices",ue-2,"local_id.x * elements_per_thread")};\n          var output_offset = ${le.indicesToOffset("output_indices")};\n          for (var m: u32 = 0u; m < elements_per_thread; m++) {\n            var row = m + local_id.x * elements_per_thread;\n            if (row < ${c}) {\n              var output_value: ${le.type.value} = ${le.type.value}(0);\n              var workgroup_shared_offset: u32 = row;\n              for (var b: u32 = 0u; b < ${a}u; b++) {\n                output_value += workgroup_shared[workgroup_shared_offset];\n                workgroup_shared_offset += ${c};\n              }\n              ${le.setByOffset("output_offset","output_value")};\n              output_offset += ${h/R};\n            }\n          }\n        }`:`\n        ${Ce.registerUniforms(qe).declareVariables(...me,le)}\n        ${Ce.mainStart()}\n          ${Ce.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var output_values: array<${le.type.value}, ${S}>;\n          var output_indices = ${le.offsetToIndices("global_idx")};\n          var col = ${le.indicesGet("output_indices",ue-1)};\n          var row = ${le.indicesGet("output_indices",ue-2)};\n          var a_indices: ${ee.type.indices} = output_indices;\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${ie?`\n          var zero_point_abs_offset = col * ${R} * ((${a} + 1) / 2);\n          var zero_point_index: u32 = zero_point_abs_offset / 4;\n          var zero_point_word: u32 = ${ie.getByOffset("zero_point_index")};\n          var zero_point_offset: u32 = (zero_point_abs_offset % 4) * 8;`:""}\n          var scale_index = col * ${a*R};\n          var b_indices: ${ae.type.indices};\n          for (var c: u32 = 0; c < ${R}; c++) {\n            ${ae.indicesSet("b_indices","0",`col * ${R} + c`)};\n            var block_offset: u32 = 0;\n            for (var block: u32 = 0; block < ${a}; block++) {\n              // The scale and zero points are computed per block.\n              let scale = ${Ae.getByOffset("scale_index")};\n              // The default zero point is 8 for unsigned 4-bit quantization.\n              let zero_point = ${G}(${ie?"extractBits(zero_point_word, zero_point_offset, 4)":8});\n              ${ae.indicesSet("b_indices","1","block")};\n              var word_offset: u32 = block_offset;\n              ${xe}\n              scale_index++;\n              ${Ke}\n              block_offset += uniforms.block_size / ${I};\n            }\n            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.\n            ${ie?`if (zero_point_offset % 8 > 0) {\n                ${Ke}\n              }`:""}\n            }\n            for (var k: u32 = 0u; k < ${S}u; k++) {\n              ${le.indicesSet("output_indices",ue-2,`${S} * row + k`)};\n              ${le.setByIndices("output_indices","output_values[k]")}\n            }\n        }`};return{name:O?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${c};${v};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:H,dataType:v}],name:O?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:O?{x:1,y:Math.ceil(h/R),z:y}:{x:Math.ceil(N/64)},programUniforms:K}),getShaderSource:se}},Wu=(e,t)=>{np(e.inputs,t);let r=e.getMaxComputeWorkgroupSizes(),o=e.getMaxComputeWorkgroupStoragesize();e.compute(op(e.inputs,t,r,o))},Nu=e=>ve(e)});var it,ip,Lu,Hu,ap,Ko,Fu,qu=Y(()=>{"use strict";ye();Se();Ze();_n();Ro();_e();Sr();it=(e,t)=>e.length>t&&e[t].dims.length>0&&M.size(e[t].dims)>0?e[t]:void 0,ip=(e,t)=>{let r=e[0],o=it(e,1),i=it(e,2),u=it(e,3),a=it(e,4),c=it(e,5),p=it(e,6),h=it(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,y=r.dims[0],w=r.dims[1],_=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],v=w,S=0,I=0,A=Math.floor(_/t.numHeads);if(p&&h){if(p.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(p.dims[0]!==y||p.dims[1]!==t.numHeads||p.dims[3]!==A)throw new Error(\'Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)\');if(h.dims[0]!==y||h.dims[1]!==t.numHeads||h.dims[3]!==A)throw new Error(\'Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)\');if(p.dims[2]!==h.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)\');if(h.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');S=p.dims[2],I=p.dims[2]}else if(p||h)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let x;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');x=2,v=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==A)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(i)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');x=5,v=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==A)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');x=0,v=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');x=3}if(u){if(u.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let E=0;if(a){E=8;let N=a.dims;throw N.length===1?N[0]===y?E=1:N[0]===3*y+2&&(E=3):N.length===2&&N[0]===y&&N[1]===v&&(E=5),E===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let P=!1,O=_;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==i.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(i.dims.length===3){if(v!==i.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');O=i.dims[2]}else{if(v!==i.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');O=i.dims[1]*i.dims[3],P=!0}}let R=S+v,H=!1;if(a)throw new Error("Key padding mask is not supported");if(c){if(c.dims.length!==4)throw new Error(\'Input "relative_position_bias" is expected to have 4 dimensions\');if(c.dims[0]!==y&&c.dims[0]!==1||c.dims[1]!==t.numHeads||c.dims[2]!==w||c.dims[3]!==R)throw new Error(\'Input "relative_position_bias" shape (batch_size, 1, sequence_length, kv_sequence_length)\')}return{batchSize:y,sequenceLength:w,pastSequenceLength:S,kvSequenceLength:v,totalSequenceLength:R,maxSequenceLength:I,inputHiddenSize:0,hiddenSize:_,vHiddenSize:O,headSize:A,vHeadSize:Math.floor(O/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:E,scale:t.scale,broadcastResPosBias:H,passPastInKv:P,qkvFormat:x}},Lu=e=>ve({...e}),Hu=ve({perm:[0,2,1,3]}),ap=(e,t,r,o,i,u,a)=>{let c=[o,i,u],p=M.size(c),h=[{type:12,data:p},{type:12,data:a},{type:12,data:u}],d=y=>{let w=j("qkv_with_bias",t.dataType,c),_=U("qkv",t.dataType,c),v=U("bias",r.dataType,c),S=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${y.registerUniforms(S).declareVariables(_,v,w)}\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:d},{inputs:[t,r],outputs:[-1]})[0]},Ko=(e,t,r,o,i,u,a,c)=>{let p=u;if(a){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return p=ap(e,u,a,t,o,r*i,c),p=p.reshape([t,o,r,i]),e.compute(yt(p,Hu.perm),{inputs:[p],outputs:[-1]})[0]}else return u.dims.length===3&&(p=u.reshape([t,o,r,i])),e.compute(yt(p,Hu.perm),{inputs:[p],outputs:[-1]})[0]},Fu=(e,t)=>{let r=ip(e.inputs,t),o=e.inputs[0],i=it(e.inputs,1),u=it(e.inputs,2),a=it(e.inputs,3),c=it(e.inputs,4),p=it(e.inputs,5),h=it(e.inputs,6),d=it(e.inputs,7);if(o.dims.length===5)throw new Error("Packed QKV is not implemented");if(i?.dims.length===5)throw new Error("Packed KV is not implemented");let y=i&&u&&i.dims.length===4&&u.dims.length===4,w=Ko(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,o,a,0);if(y)return Pn(e,w,i,u,c,void 0,h,d,p,r,t);if(!i||!u)throw new Error("key and value must be provided");let _=Ko(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,a,r.hiddenSize),v=Ko(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,u,a,2*r.hiddenSize);Pn(e,w,_,v,c,void 0,h,d,p,r,t)}});var sp,up,dp,lp,cp,pp,mp,fp,ju,Ku=Y(()=>{"use strict";ye();Se();_e();sp=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},up=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n            k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n              break;\n            }\n            offset += k * i32(${fe("uniforms.x_strides",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},dp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${fe("uniforms.x_shape",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},lp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                  k = i32(${fe("uniforms.x_shape",i,t)}) - 1;\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},cp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0)  {\n                  k += i32(${fe("uniforms.x_shape",i,t)}]);\n                }\n                if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                  k -= i32(${fe("uniforms.x_shape",i,t)});\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},pp=(e,t,r)=>{switch(r.mode){case 0:return up(e,t,r.pads.length);case 1:return dp(e,t,r.pads.length);case 2:return lp(e,t,r.pads.length);case 3:return cp(e,t,r.pads.length);default:throw new Error("Invalid mode")}},mp=(e,t)=>{let r=M.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,i=M.size(r),u=[{type:12,data:i},{type:6,data:t.pads}];t.mode===0&&u.push({type:e[0].dataType,data:t.value}),u.push(...Z(e[0].dims,r));let a=["rank"],c=p=>{let h=j("output",e[0].dataType,r.length),d=U("x",e[0].dataType,o.length),y=d.type.value,w=pp(h,o.length,t),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&_.push({name:"constant_value",type:y}),`\n            ${p.registerUniforms(_).declareVariables(d,h)}\n            ${p.mainStart()}\n            ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${h.offsetToIndices("global_idx")};\n\n            var value = ${y}(0);\n            ${w}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(r)/64)},programUniforms:u}),getShaderSource:c}},fp=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,u=new Int32Array(2*i).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let p=0;p<c.length;p++)u[Number(c[p])]=Number(r[p]),u[Number(c[p])+i]=Number(r[p+c.length])}else r.forEach((c,p)=>u[Number(p)]=Number(c));let a=[];return u.forEach(c=>a.push(c)),{mode:t.mode,value:o,pads:a}}else return t},ju=(e,t)=>{sp(e.inputs);let r=fp(e.inputs,t);e.compute(mp(e.inputs,r),{inputs:[0]})}});var Nn,Yu,Zu,Xu,Qu,hp,gp,Ju,ed,td,rd,nd,od,id,ad,sd,ud,dd,ld,cd=Y(()=>{"use strict";$r();ye();Se();_e();Nn=e=>{if(vr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Yu=(e,t,r)=>{let o=t.format==="NHWC",i=e.dims.slice();o&&i.splice(1,0,i.pop());let u=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),c=t.strides.slice(),p=u?t.dilations.slice():[],h=t.pads.slice();nr.adjustPoolAttributes(r,i,a,c,p,h);let d=nr.computePoolOutputShape(r,i,c,p,a,h,t.autoPad),y=Object.assign({},t);u?Object.assign(y,{kernelShape:a,strides:c,pads:h,dilations:p,cacheKey:t.cacheKey}):Object.assign(y,{kernelShape:a,strides:c,pads:h,cacheKey:t.cacheKey});let w=d.slice();return w.push(w.splice(1,1)[0]),[y,o?w:d]},Zu=(e,t)=>{let r=t.format==="NHWC",o=M.size(e),i=M.size(t.kernelShape),u=[{type:12,data:o},{type:12,data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let c=t.kernelShape[t.kernelShape.length-1],p=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],d=t.pads[t.pads.length-1],y=!!(h+d);u.push({type:12,data:c},{type:12,data:p},{type:12,data:h},{type:12,data:d}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let w=!1;if(t.kernelShape.length===2){let _=t.kernelShape[t.kernelShape.length-2],v=t.strides[t.strides.length-2],S=t.pads[t.pads.length/2-2],I=t.pads[t.pads.length-2];w=!!(S+I),u.push({type:12,data:_},{type:12,data:v},{type:12,data:S},{type:12,data:I}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,a,!0,y,w]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let c=M.computeStrides(t.kernelShape);u.push({type:12,data:c},{type:12,data:t.pads},{type:12,data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:c.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let p=t.pads.reduce((h,d)=>h+d);return[u,a,!!p,!1,!1]}},Xu=(e,t,r,o,i,u,a,c,p,h,d,y)=>{let w=i.format==="NHWC",_=t.type.value,v=j("output",t.type.tensor,o);if(i.kernelShape.length<=2){let S="",I="",A="",x=r-(w?2:1);if(d?S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${x}] < 0 || xIndices[${x}]\n                      >= uniforms.x_shape[${x}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`:S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`,i.kernelShape.length===2){let P=r-(w?3:2);y?I=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${P}] < 0 || xIndices[${P}] >= uniforms.x_shape[${P}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:I=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;\n                `,A=`\n              }\n            `}return`\n            ${e.registerUniforms(p).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var value = ${_}(${c});\n              var pad = 0;\n              ${I}\n              ${S}\n              ${A}\n              ${a}\n\n              output[global_idx] = value;\n            }`}else{if(w)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let S=i.kernelShape.length,I=i.pads.length,A="";return h?A=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${u}\n              }`:A=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${u}\n            `,`\n            ${e.registerUniforms(p).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${S}>;\n\n              var value = ${_}(${c});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${S-1}u; j++) {\n                  offsets[j] = offset / ${fe("uniforms.kernelStrides","j",S)};\n                  offset -= offsets[j] * ${fe("uniforms.kernelStrides","j",S)};\n                }\n                offsets[${S-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-S}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${fe("uniforms.strides",`j - ${r-S}u`,S)}\n                    + offsets[j - ${r-S}u] - ${fe("uniforms.pads","j - 2u",I)};\n                  ${A}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Qu=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,hp=e=>`${Qu(e)};${e.countIncludePad}`,gp=e=>`${Qu(e)};${e.storageOrder};${e.dilations}`,Ju=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),ed=(e,t,r,o)=>{let[i,u]=Yu(t,o,r),a=U("x",t.dataType,t.dims.length),c=a.type.value,p="value += x_val;",h="";i.countIncludePad?h+=`value /= ${c}(uniforms.kernelSize);`:h+=`value /= ${c}(i32(uniforms.kernelSize) - pad);`;let[d,y,w,_,v]=Zu(u,i);d.push(...Z(t.dims,u));let S=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:d}),getShaderSource:I=>Xu(I,a,t.dims.length,u.length,i,p,h,0,y,w,_,v)}},td=e=>{let t=e.count_include_pad!==0,r=Ju(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:hp(o)}},rd=(e,t)=>{Nn(e.inputs),e.compute(ed("AveragePool",e.inputs[0],!1,t))},nd={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},od=e=>{let t=e.format;return{format:t,...nd,cacheKey:t}},id=(e,t)=>{Nn(e.inputs),e.compute(ed("GlobalAveragePool",e.inputs[0],!0,t))},ad=(e,t,r,o)=>{let[i,u]=Yu(t,o,r),a=`\n      value = max(x_val, value);\n    `,c="",p=U("x",t.dataType,t.dims.length),h=["rank"],[d,y,w,_,v]=Zu(u,i);return d.push(...Z(t.dims,u)),{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:d}),getShaderSource:S=>Xu(S,p,t.dims.length,u.length,i,a,c,t.dataType===10?-65504:-1e5,y,w,_,v)}},sd=(e,t)=>{Nn(e.inputs),e.compute(ad("MaxPool",e.inputs[0],!1,t))},ud=e=>{let t=e.storage_order,r=e.dilations,o=Ju(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...o,cacheKey:""};return{...i,cacheKey:gp(i)}},dd=e=>{let t=e.format;return{format:t,...nd,cacheKey:t}},ld=(e,t)=>{Nn(e.inputs),e.compute(ad("GlobalMaxPool",e.inputs[0],!0,t))}});var bp,wp,pd,md=Y(()=>{"use strict";$r();ye();_e();bp=(e,t,r)=>{let o=e===t,i=e<t&&r<0,u=e>t&&r>0;if(o||i||u)throw new Error("Range these inputs\' contents are invalid.")},wp=(e,t,r,o)=>{let i=Math.abs(Math.ceil((t-e)/r)),u=[i],a=i,c=[{type:12,data:a},{type:o,data:e},{type:o,data:r},...Z(u)],p=h=>{let d=j("output",o,u.length),y=d.type.value,w=[{name:"outputSize",type:"u32"},{name:"start",type:y},{name:"delta",type:y}];return`\n        ${h.registerUniforms(w).declareVariables(d)}\n        ${h.mainStart()}\n        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${y}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:p,getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:c})}},pd=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),vr.webgpu.validateInputContent&&bp(t,r,o),e.compute(wp(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var vp,$p,_p,Sp,xp,Cp,Ap,Ip,Tp,Ep,Pp,fd,kp,Op,Rp,Bp,Dp,hd,gd,yd=Y(()=>{"use strict";ye();Se();Ze();_e();vp=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},$p=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((i,u)=>o[i]=e[u]),o},_p=(e,t,r,o,i,u)=>{let[a,c,p]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(d=>u.push(d));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length>0){if(e[c].getFloat32Array().forEach(d=>o.push(d)),o.length!==0&&o.length!==h&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");vp(o,t),t.axes.length>0&&$p(o,t.axes,h).forEach((d,y)=>o[y]=d)}if(p>0&&e.length>p&&(e[p].getBigInt64Array().forEach(d=>i.push(Number(d))),i.length!==h||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(i.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof i<"u"&&o.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Sp=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",xp=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Cp=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?o:e.slice();return t.length>0?(t.forEach((u,a)=>{o[u]=i[a],o[a+r]=i[t.length+a]}),o):i},Ap=(e,t,r,o)=>{let i=[];if(r.length>0)if(o.length>0){if(e.forEach(u=>i.push(u)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((u,a)=>i[u]=r[a])}else r.forEach(u=>i.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((u,a)=>Math.round(u*t[a]))}return i},Ip=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=o),r.axes.forEach(u=>i[u]=Math.round(e[u]*t[u]))):(t.fill(o,0,t.length),i.forEach((u,a)=>i[a]=Math.round(u*t[a]))),i},Tp=(e,t,r,o,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${fe("uniforms.scales","i",o)};\n        var roi_low = ${fe("uniforms.roi","i",i)};\n        var roi_hi = ${fe("uniforms.roi",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${fe("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Ep=(e,t,r,o,i,u,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${fe("uniforms.scales","i",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${fe("uniforms.roi","i",u)};\n          var roi_hi = ${fe("uniforms.roi",`i + ${r.length}`,u)};\n          var input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Pp=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${fe("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,fd=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",kp=(e,t,r,o,i)=>{let[a,c,p,h]=r.length===2?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(row, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(col, ${r[p]} - 1))`)};\n      ${fd(e,h,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${d} = originalIndices[${c}];\n      var col:${d} = originalIndices[${p}];\n      ${o?`if (row < 0 || row > (${r[c]} - 1) || col < 0 || col > (${r[p]} - 1)) {\n        return ${i};\n      }`:""};\n      row = max(0, min(row, ${r[c]} - 1));\n      col = max(0, min(col, ${r[p]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${h}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${d} = getInputValue(batch, channel, row1, col1);\n      var x12: ${d} = getInputValue(batch, channel, row1, col2);\n      var x21: ${d} = getInputValue(batch, channel, row2, col1);\n      var x22: ${d} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${d} = abs(row - ${d}(row1));\n      var dx2: ${d} = abs(${d}(row2) - row);\n      var dy1: ${d} = abs(col - ${d}(col1));\n      var dy2: ${d} = abs(${d}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Op=(e,t,r,o,i,u,a,c,p,h)=>{let d=r.length===2,y=!0,[w,_]=d?[0,1]:y?[2,3]:[1,2],v=e.type.value,S=I=>{let A=I===w?"row":"col";return`\n      fn ${A}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${v} {\n        var output_index = ${t.indicesGet("output_indices",I)};\n        var originalIdx: ${v} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[I]},\n        ${o[I]}, ${r[I]}, ${u[I]}, ${u[I]} + ${r.length});\n        var fractOriginalIdx: ${v} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${c} && (originalIdx < 0 || originalIdx > (${r[I]} - 1))) {\n          return ${p};\n        }\n        var data: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${A}: ${v} = originalIdx + ${v}(i);\n          if (${A} < 0 || ${A} >= ${r[I]}) {\n            ${(()=>h?`coefs[i + 1] = 0.0;\n                        continue;`:c?`return ${p};`:`${A} = max(0, min(${A}, ${r[I]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",I,`u32(${A})`)};\n          data[i + 1] = ${I===w?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${S(w)};\n    ${S(_)};\n  fn getCubicInterpolationCoefs(s: ${v}) -> array<${v}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${v} = 1.0 - absS;\n    var twoMinusAbsS: ${v} = 2.0 - absS;\n    var onePlusAbsS: ${v} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${v}, 4>, coefs: array<${v}, 4>) -> ${v} {\n    var coefsSum: ${v} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${v} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Rp=(e,t,r,o,i)=>{let[a,c,p,h,d]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(depth, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(height, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",h,`max(0, min(width, ${r[h]} - 1))`)};\n      ${fd(e,d,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${y} = originalIndices[${c}];\n      var height:${y} = originalIndices[${p}];\n      var width:${y} = originalIndices[${h}];\n      ${o?`if (depth < 0 || depth > (${r[c]} - 1) || height < 0 || height > (${r[p]} - 1) || width < 0 || (width > ${r[h]} - 1)) {\n      return ${i};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[c]} - 1));\n      height = max(0, min(height, ${r[p]} - 1));\n      width = max(0, min(width, ${r[h]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${d}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${y} = abs(depth - ${y}(depth1));\n      var dx2: ${y} = abs(${y}(depth2) - depth);\n      var dy1: ${y} = abs(height - ${y}(height1));\n      var dy2: ${y} = abs(${y}(height2) - height);\n      var dz1: ${y} = abs(width - ${y}(width1));\n      var dz2: ${y} = abs(${y}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Bp=(e,t,r,o,i,u)=>{let a=e.dims,c=Cp(u,t.axes,a.length),p=Ap(a,o,i,t.axes),h=o.slice();o.length===0&&(h=a.map((x,E)=>x===0?1:p[E]/x),t.keepAspectRatioPolicy!=="stretch"&&(p=Ip(a,h,t)));let d=j("output",e.dataType,p.length),y=U("input",e.dataType,a.length),w=M.size(p),_=a.length===p.length&&a.every((x,E)=>x===p[E]),v=t.coordinateTransformMode==="tf_crop_and_resize",S=t.extrapolationValue,I=y.type.value,A=x=>`\n      ${_?"":`\n      ${Sp(t.coordinateTransformMode,I)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Pp(y,a)};\n              ${xp(t.nearestMode,r,I)};\n              ${Ep(y,d,a,p,h.length,c.length,v)};\n              `;case"linear":return`\n              ${Tp(d,a,p,h.length,c.length)};\n              ${(()=>{if(a.length===2||a.length===4)return`${kp(y,d,a,v,S)}`;if(a.length===3||a.length===5)return`${Rp(y,d,a,v,S)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(a.length===2||a.length===4)return`${Op(y,d,a,p,h,c,t.cubicCoeffA,v,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${x.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",c.length).declareVariables(y,d)}\n      ${x.mainStart()}\n        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${_?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${y.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${y.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${c.length>0?c:""}|${_}|${a}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[{dims:p,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:12,data:w},{type:1,data:h},{type:1,data:c},...Z(a,p)]})}},Dp=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},hd=(e,t)=>{let r=[],o=[],i=[],u=Dp(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");_p(e.inputs,t,u,r,o,i),e.compute(Bp(e.inputs[0],t,u,r,o,i),{inputs:[0]})},gd=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,i=e.cubicCoeffA,u=e.excludeOutside!==0,a=e.extrapolationValue,c=e.keepAspectRatioPolicy,p=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return ve({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:i,excludeOutside:u,extrapolationValue:a,keepAspectRatioPolicy:c,mode:p,nearestMode:h})}});var zp,Mp,bd,wd=Y(()=>{"use strict";ye();Se();Ze();_e();zp=(e,t)=>{let[r,o,i,u]=e,{numHeads:a,rotaryEmbeddingDim:c}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input \'x\' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!M.areEqual(o.dims,[])&&!M.areEqual(o.dims,[1])&&o.dims.length!==2)throw new Error(`Input \'position_ids\' is expected to have 0, 1, or 2 dimensions, got ${o.dims.length}`);if(i.dims.length!==2)throw new Error(`Input \'cos_cache\' is expected to have 2 dimensions, got ${i.dims.length}`);if(u.dims.length!==2)throw new Error(`Input \'sin_cache\' is expected to have 2 dimensions, got ${u.dims.length}`);if(!M.areEqual(i.dims,u.dims))throw new Error("Inputs \'cos_cache\' and \'sin_cache\' are expected to have the same shape");if(c>0&&a===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let p=r.dims[0],h=r.dims[r.dims.length-2],d=i.dims[0],y=M.sizeFromDimension(r.dims,1)/h,w=c===0?i.dims[1]*2:y/a;if(c>w)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(o.dims.length===2){if(p!==o.dims[0])throw new Error(`Input \'position_ids\' dimension 0 should be of size batch_size, got ${o.dims[0]}`);if(h!==o.dims[1])throw new Error(`Input \'position_ids\' dimension 1 should be of size sequence_length, got ${o.dims[1]}`)}if(w/2!==i.dims[1]&&c/2!==i.dims[1])throw new Error(`Input \'cos_cache\' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(h>d)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Mp=(e,t)=>{let{interleaved:r,numHeads:o,rotaryEmbeddingDim:i,scale:u}=t,a=e[0].dims[0],c=M.sizeFromDimension(e[0].dims,1),p=e[0].dims[e[0].dims.length-2],h=c/p,d=e[2].dims[1],y=i===0?d*2:h/o,w=new Array(a,p,h/y,y-d),_=M.computeStrides(w),v=[{type:1,data:u},{type:12,data:w},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[c,h,y,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[c,y,p*y,1]}):[],...Z(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],S=I=>{let A=U("input",e[0].dataType,e[0].dims.length),x=U("position_ids",e[1].dataType,e[1].dims.length),E=U("cos_cache",e[2].dataType,e[2].dims.length),P=U("sin_cache",e[3].dataType,e[3].dims.length),O=j("output",e[0].dataType,e[0].dims.length);return I.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:w.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`\n        ${I.declareVariables(A,x,E,P,O)}\n\n        ${I.mainStart(or)}\n          let half_rotary_emb_dim = uniforms.${E.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${I.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${x.broadcastedIndicesToOffset("bsnh.xy",j("",x.type.tensor,2))};\n            let position_id =\n                u32(${x.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});\n            let j = i + select(half_rotary_emb_dim, 1, ${r});\n            let re = ${A.getByOffset("i")} * ${E.get("position_id","bsnh[3]")} -\n                ${A.getByOffset("j")} * ${P.get("position_id","bsnh[3]")};\n            ${O.setByOffset("i","re")}\n            let im = ${A.getByOffset("i")} * ${P.get("position_id","bsnh[3]")} +\n                ${A.getByOffset("j")} * ${E.get("position_id","bsnh[3]")};\n            ${O.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${O.setByOffset("k",A.getByOffset("k"))}\n          }\n        }`};return{name:"RotaryEmbedding",shaderCache:{hint:ve({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(w)/or)},programUniforms:v})}},bd=(e,t)=>{zp(e.inputs,t),e.compute(Mp(e.inputs,t))}});var Up,Vp,vd,$d=Y(()=>{"use strict";ye();Se();_e();Up=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},Vp=(e,t,r,o)=>{let i=t.simplified,u=e[0].dims,a=M.size(u),c=u,p=a,h=u.slice(-1)[0],d=o?u.slice(0,-1).concat(1):[],y=!i&&e.length>3,w=e.length>4,_=o&&r>1,v=o&&r>2,S=r>3,I=64,A=Me(h),x=[{type:12,data:p},{type:12,data:A},{type:12,data:h},{type:1,data:t.epsilon}],E=O=>{let R=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],H=[U("x",e[0].dataType,e[0].dims,A),U("skip",e[1].dataType,e[1].dims,A),U("gamma",e[2].dataType,e[2].dims,A)];y&&H.push(U("beta",e[3].dataType,e[3].dims,A)),w&&H.push(U("bias",e[4].dataType,e[4].dims,A)),H.push(j("output",e[0].dataType,c,A)),_&&H.push(j("mean_output",1,d)),v&&H.push(j("inv_std_output",1,d)),S&&H.push(j("input_skip_bias_sum",e[0].dataType,c,A));let N=Be(e[0].dataType),K=Be(1,A);return`\n\n      ${O.registerUniforms(R).declareVariables(...H)}\n      var<workgroup> sum_shared : array<${K}, ${I}>;\n      var<workgroup> sum_squared_shared : array<${K}, ${I}>;\n\n      ${O.mainStart([I,1,1])}\n        let ix = local_id.x;\n        let iy = global_id.x / ${I};\n\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        var stride = hidden_size_vectorized / ${I};\n        let offset = ix * stride + iy * hidden_size_vectorized;\n        let offset1d = stride * ix;\n        if (ix == ${I-1}) {\n          stride = hidden_size_vectorized - stride * ix;\n        }\n        for (var i: u32 = 0; i < stride; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${w?"bias[offset1d + i]":N+"(0.0)"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${S?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${ir(N,A,"value")};\n          sum_shared[ix] += f32_value;\n          sum_squared_shared[ix] += f32_value * f32_value;\n        }\n        workgroupBarrier();\n\n        var reduce_size : u32 = ${I};\n        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {\n          reduce_size = curr_size + (reduce_size & 1);\n          if (ix < curr_size) {\n            sum_shared[ix] += sum_shared[ix + reduce_size];\n            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];\n          }\n          workgroupBarrier();\n        }\n\n        let sum = sum_shared[0];\n        let square_sum = sum_squared_shared[0];\n        let mean = ${$t("sum",A)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${$t("square_sum",A)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);\n        ${_?"mean_output[global_idx] = mean;":""}\n        ${v?"inv_std_output[global_idx] = inv_std_dev;":""}\n\n        for (var i: u32 = 0; i < stride; i++) {\n          output[offset + i] = (output[offset + i] ${i?"":`- ${N}(mean)`}) *\n            ${N}(inv_std_dev) * gamma[offset1d + i]\n            ${y?"+ beta[offset1d + i]":""};\n        }\n      }`},P=[{dims:c,dataType:e[0].dataType}];return r>1&&P.push({dims:d,dataType:1}),r>2&&P.push({dims:d,dataType:1}),r>3&&P.push({dims:u,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${A};${_};${v};${S}`,inputDependencies:e.map((O,R)=>"type")},getShaderSource:E,getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(p/h)},programUniforms:x})}},vd=(e,t)=>{Up(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(Vp(e.inputs,t,e.outputCount,!1),{outputs:o})}});var Wp,Gn,Np,_d,Gp,Hp,Sd,xd,Cd=Y(()=>{"use strict";ye();Se();Ze();_e();Wp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Gn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Np=(e,t)=>{if(e.length>1){let r=Gn(e,1),o=Gn(e,2),i=Gn(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),ve({starts:r,ends:o,axes:i})}else return t},_d=(e,t,r,o,i)=>{let u=e;return e<0&&(u+=r[o[t]]),i[t]<0?Math.max(0,Math.min(u,r[o[t]]-1)):Math.max(0,Math.min(u,r[o[t]]))},Gp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n            let steps_i = ${fe("uniforms.steps","i",r.length)};\n            let signs_i = ${fe("uniforms.signs","i",r.length)};\n            let starts_i = ${fe("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Hp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=t.axes.length>0?M.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=Gn(e,4);u.forEach(A=>A!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(i.length).fill(1));let a=t.starts.map((A,x)=>_d(A,x,r,i,u)),c=t.ends.map((A,x)=>_d(A,x,r,i,u));if(i.length!==a.length||i.length!==c.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let A=0;A<r.length;++A)i.includes(A)||(a.splice(A,0,0),c.splice(A,0,r[A]),u.splice(A,0,1));let p=u.map(A=>Math.sign(A));u.forEach((A,x,E)=>{if(A<0){let P=(c[x]-a[x])/A,O=a[x],R=O+P*u[x];a[x]=R,c[x]=O,E[x]=-A}});let h=r.slice(0);i.forEach((A,x)=>{h[A]=Math.ceil((c[A]-a[A])/u[A])});let d={dims:h,dataType:e[0].dataType},y=j("output",e[0].dataType,h.length),w=U("input",e[0].dataType,e[0].dims.length),_=M.size(h),v=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:p.length},{name:"steps",type:"u32",length:u.length}],S=[{type:12,data:_},{type:12,data:a},{type:6,data:p},{type:12,data:u},...Z(e[0].dims,h)],I=A=>`\n      ${A.registerUniforms(v).declareVariables(w,y)}\n        ${Gp(w,y,r)}\n        ${A.mainStart()}\n          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${y.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${y.setByOffset("global_idx",w.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${p.length}_${a.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:S})}},Sd=(e,t)=>{Wp(e.inputs,t);let r=Np(e.inputs,t);e.compute(Hp(e.inputs,r),{inputs:[0]})},xd=e=>{let t=e.starts,r=e.ends,o=e.axes;return ve({starts:t,ends:r,axes:o})}});var Lp,Fp,Ad,Id,Td=Y(()=>{"use strict";ye();Se();Ze();_e();Lp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Fp=(e,t)=>{let r=e.dims,o=M.size(r),i=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let a=r[u],c=o/a,p=Me(a),h=a/p,d=(I,A)=>A===4?`max(max(${I}.x, ${I}.y), max(${I}.z, ${I}.w))`:A===2?`max(${I}.x, ${I}.y)`:A===3?`max(max(${I}.x, ${I}.y), ${I}.z)`:I,y=U("x",e.dataType,e.dims,p),w=j("result",e.dataType,e.dims,p),_=y.type.value,v=Be(e.dataType)==="f32"?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,S=I=>`\n      var<workgroup> rowMaxShared : ${_};\n      var<workgroup> rowSumShared : ${_};\n      var<workgroup> threadShared : array<${_}, ${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${I.registerUniform("packedCols","i32").declareVariables(y,w)}\n      ${I.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${i};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${v}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${_}(${d("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${_}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${_}(${$t("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${p}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:c},programUniforms:[{type:6,data:h}]}),getShaderSource:S}},Ad=(e,t)=>{Lp(e.inputs),e.compute(Fp(e.inputs[0],t))},Id=e=>ve({axis:e.axis})});var qp,jp,Kp,Yp,Zp,Ed,Pd,kd=Y(()=>{"use strict";ye();Se();Ze();_e();qp=e=>{if(!e||e.length<1)throw new Error("too few inputs")},jp=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),o=r.length),ve({numOutputs:o,axis:t.axis,splitSizes:r})},Kp=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${fe("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Yp=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let i=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(i):o===0?r.push(`if (output_number == ${o}u) { ${i} }`):o===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${o}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Zp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=e[0].dataType,u=M.normalizeAxis(t.axis,r.length),a=new Array(t.numOutputs),c=U("input",i,r.length),p=new Array(t.numOutputs),h=[],d=[],y=0,w=[{type:12,data:o}];for(let v=0;v<t.numOutputs;v++){y+=t.splitSizes[v],p[v]=y;let S=r.slice();S[t.axis]=t.splitSizes[v],d.push(S),a[v]=j(`output${v}`,i,S.length),h.push({dims:d[v],dataType:e[0].dataType})}w.push({type:12,data:p},...Z(r,...d));let _=v=>`\n  ${v.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",p.length).declareVariables(c,...a)}\n  ${Kp(p.length)}\n  ${Yp(a)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n    var index = ${c.indicesGet("indices",u)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${fe("uniforms.size_in_split_axis","output_number - 1u",p.length)};\n      ${c.indicesSet("indices",u,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:w})}},Ed=(e,t)=>{qp(e.inputs);let r=e.inputs.length===1?t:jp(e.inputs,t);e.compute(Zp(e.inputs,r),{inputs:[0]})},Pd=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ve({axis:t,numOutputs:o,splitSizes:r})}});var Od,Xp,Qp,Jp,Rd,Bd=Y(()=>{"use strict";ye();Se();_e();Od=e=>Array.from(e.getBigInt64Array(),Number),Xp=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Od(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Qp=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},Jp=e=>{let t=e[0].dims,r=Od(e[1]),o=Qp(t,r),i=M.size(o),u=e[0].dataType,a=U("input",u,t.length),c=j("output",u,o.length),p=h=>`\n      const inputShape = ${a.indices(...t)};\n      ${h.registerUniform("output_size","u32").declareVariables(a,c)}\n      ${h.mainStart()}\n      ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${c.offsetToIndices("global_idx")};\n      var input_indices: ${a.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${a.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${c.setByOffset("global_idx",a.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...Z(e[0].dims,o)]}),getShaderSource:p}},Rd=e=>{Xp(e.inputs),e.compute(Jp(e.inputs),{inputs:[0]})}});var em,tm,Dd,zd=Y(()=>{"use strict";ye();Se();_e();em=(e,t,r,o,i)=>{let u=j("output_data",i,r.length,4),a=U("a_data",t[1].dataType,t[1].dims.length,4),c=U("b_data",t[2].dataType,t[2].dims.length,4),p=U("c_data",t[0].dataType,t[0].dims.length,4),h,d=(y,w,_)=>`select(${w}, ${y}, ${_})`;if(!o)h=u.setByOffset("global_idx",d(a.getByOffset("global_idx"),c.getByOffset("global_idx"),p.getByOffset("global_idx")));else{let y=(w,_,v="")=>{let S=`a_data[index_a${_}][component_a${_}]`,I=`b_data[index_b${_}][component_b${_}]`,A=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`\n            let output_indices${_} = ${u.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offset_a${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_b${_} = ${c.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_c${_} = ${p.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let index_a${_} = offset_a${_} / 4u;\n            let index_b${_} = offset_b${_} / 4u;\n            let index_c${_} = offset_c${_} / 4u;\n            let component_a${_} = offset_a${_} % 4u;\n            let component_b${_} = offset_b${_} % 4u;\n            let component_c${_} = offset_c${_} % 4u;\n            ${w}[${_}] = ${v}(${d(S,I,A)});\n          `};i===9?h=`\n            var data = vec4<u32>(0);\n            ${y("data",0,"u32")}\n            ${y("data",1,"u32")}\n            ${y("data",2,"u32")}\n            ${y("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`\n            ${y("output_data[global_idx]",0)}\n            ${y("output_data[global_idx]",1)}\n            ${y("output_data[global_idx]",2)}\n            ${y("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(p,a,c,u)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${h}\n      }`},tm=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,i=e[1].dataType,u=!(M.areEqual(t,r)&&M.areEqual(r,o)),a=t,c=M.size(t);if(u){let h=At.calcShape(At.calcShape(t,r,!1),o,!1);if(!h)throw new Error("Can\'t perform where op on the given tensors");a=h,c=M.size(a)}let p=Math.ceil(c/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>em(h,e,a,u,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:p},...Z(o,t,r,a)]})}},Dd=e=>{e.compute(tm(e.inputs))}});var Md,Ud=Y(()=>{"use strict";Ka();Ro();Ja();ts();Vs();Zs();Oo();Uo();lu();mu();gu();$u();xu();Au();Eu();Ou();Du();Mu();Vu();Wo();Gu();qu();Ku();cd();md();In();yd();wd();$d();Cd();Td();kd();Bd();Sr();Rn();zd();Md=new Map([["Abs",[rs]],["Acos",[ns]],["Acosh",[os]],["Add",[Ws]],["ArgMax",[ja,ko]],["ArgMin",[qa,ko]],["Asin",[is]],["Asinh",[as]],["Atan",[ss]],["Atanh",[us]],["Attention",[Xa]],["AveragePool",[rd,td]],["BatchNormalization",[Qa]],["BiasAdd",[es]],["BiasSplitGelu",[Us]],["Cast",[ls,ds]],["Ceil",[ps]],["Clip",[cs]],["Concat",[Ya,Za]],["Conv",[Ho,Go]],["ConvTranspose",[du,uu]],["Cos",[ms]],["Cosh",[fs]],["CumSum",[cu,pu]],["DepthToSpace",[fu,hu]],["Div",[Ns]],["Einsum",[wu,vu]],["Elu",[hs,kn]],["Equal",[Gs]],["Erf",[gs]],["Exp",[ys]],["Expand",[Su]],["FastGelu",[Cu]],["Floor",[bs]],["FusedConv",[Ho,Go]],["Gather",[Tu,Iu]],["GatherElements",[ku,Pu]],["Gelu",[ws]],["Gemm",[Bu,Ru]],["GlobalAveragePool",[id,od]],["GlobalMaxPool",[ld,dd]],["Greater",[qs]],["GreaterOrEqual",[Ks]],["HardSigmoid",[Is,As]],["InstanceNormalization",[zu]],["LayerNormalization",[Uu]],["LeakyRelu",[vs,kn]],["Less",[js]],["LessOrEqual",[Ys]],["Log",[zs]],["MatMul",[ru]],["MatMulNBits",[Wu,Nu]],["MaxPool",[sd,ud]],["Mul",[Hs]],["MultiHeadAttention",[Fu,Lu]],["Neg",[_s]],["Not",[$s]],["Pad",[ju]],["Pow",[Ls]],["Range",[pd]],["Reciprocal",[Ss]],["ReduceMin",[Wa]],["ReduceMean",[Da]],["ReduceMax",[Va]],["ReduceSum",[Ga]],["ReduceProd",[Na]],["ReduceL1",[za]],["ReduceL2",[Ma]],["ReduceLogSum",[La]],["ReduceLogSumExp",[Ua]],["ReduceSumSquare",[Ha]],["Relu",[xs]],["Resize",[hd,gd]],["RotaryEmbedding",[bd]],["Sigmoid",[Cs]],["Sin",[Ts]],["Sinh",[Es]],["Slice",[Sd,xd]],["SkipLayerNormalization",[vd]],["Split",[Ed,Pd]],["Sqrt",[Ps]],["Softmax",[Ad,Id]],["Sub",[Fs]],["Tan",[ks]],["Tanh",[Rs]],["ThresholdedRelu",[Ds,kn]],["Tile",[Rd]],["Transpose",[_a,Sa]],["Where",[Dd]]])});var Hn,Vd=Y(()=>{"use strict";$r();Ht();_e();Hn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,i,u){rr(t.programInfo.name);let a=this.backend.device,c=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let p=[];for(let d of r)p.push({binding:p.length,resource:{buffer:d.buffer}});for(let d of o)p.push({binding:p.length,resource:{buffer:d.buffer}});u&&p.push({binding:p.length,resource:u});let h=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:p,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:h,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}c.setPipeline(t.computePipeline),c.setBindGroup(0,h),c.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Gt(t.programInfo.name)}dispose(){}build(t,r){rr(t.name);let o=this.backend.device,i=[];o.features.has("shader-f16")&&i.push("enable f16;");let u=va(r,this.backend.device.limits),a=t.getShaderSource(u),c=`${i.join(`\n`)}\n${u.additionalImplementations}\n${a}`,p=o.createShaderModule({code:c,label:t.name});Ve("verbose",()=>`[WebGPU] ${t.name} shader code: ${c}`);let h=o.createComputePipeline({compute:{module:p,entryPoint:"main"},layout:"auto",label:t.name});return Gt(t.name),{programInfo:t,computePipeline:h,uniformVariablesInfo:u.variablesInfo}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&o<=u&&i<=u)return[r,o,i];let a=r*o*i,c=Math.ceil(Math.sqrt(a));if(c>u){if(c=Math.ceil(Math.cbrt(a)),c>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}});var rm,nm,Yo,Ln,Wd=Y(()=>{"use strict";$r();ye();Ht();fa();wa();Ud();Vd();rm=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let i=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let u=e[o].dims.length;r.push(`${i};${u}`);break}case"dims":{let u=e[o].dims.join(",");r.push(`${i};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},nm=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${rm(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Yo=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},Ln=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(i),this.adapterInfo=new Yo(await r.requestAdapterInfo()),this.gpuDataManager=ba(this),this.programManager=new Hn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,pa(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;rr(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let u=o[i],a=u.kernelId,c=this.kernels.get(a),p=c.kernelType,h=c.kernelName,d=u.programName,y=u.inputTensorViews,w=u.outputTensorViews,_=r[i*2],v=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let S=Number(_-this.queryTimeBase),I=Number(v-this.queryTimeBase);if(!Number.isSafeInteger(S)||!Number.isSafeInteger(I))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(A=>({dims:A.dims,dataType:Nt(A.dataType)})),outputsMetadata:w.map(A=>({dims:A.dims,dataType:Nt(A.dataType)})),kernelId:a,kernelType:p,kernelName:h,programName:d,startTime:S,endTime:I});else{let A="";y.forEach((E,P)=>{A+=`input[${P}]: [${E.dims}] | ${Nt(E.dataType)}, `});let x="";w.forEach((E,P)=>{x+=`output[${P}]: [${E.dims}] | ${Nt(E.dataType)}, `}),console.log(`[profiling] kernel "${a}|${p}|${h}|${d}" ${A}${x}execution time: ${I-S} ns`)}wo("GPU",`${d}::${_}::${v}`)}t.unmap(),this.pendingQueries.delete(t)}),Gt()}run(t,r,o,i,u,a){rr(t.name);let c=[];for(let E=0;E<r.length;++E){let P=r[E].data;if(P===0)continue;let O=this.gpuDataManager.get(P);if(!O)throw new Error(`no GPU data for input: ${P}`);c.push(O)}let{outputs:p,dispatchGroup:h,programUniforms:d}=t.getRunData(r),y=o.length===0?p.map((E,P)=>P):o;if(y.length!==p.length)throw new Error(`Output size ${y.length} must be equal to ${p.length}.`);let w=[],_=[];for(let E=0;E<p.length;++E){if(!Number.isInteger(y[E])||y[E]<-3||y[E]>=a)throw new Error(`Invalid output index: ${y[E]}`);if(y[E]===-3)continue;let P=y[E]===-1,O=y[E]===-2,R=P||O?u(p[E].dataType,p[E].dims):i(y[E],p[E].dataType,p[E].dims);if(w.push(R),R.data===0)continue;let H=this.gpuDataManager.get(R.data);if(!H)throw new Error(`no GPU data for output: ${R.data}`);if(P&&this.temporaryData.push(H),O){let N=this.kernelPersistentData.get(this.currentKernelId);N||(N=[],this.kernelPersistentData.set(this.currentKernelId,N)),N.push(H)}_.push(H)}if(c.length!==r.length||_.length!==w.length){if(_.length===0)return Gt(t.name),w;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let v;if(d){let E=0,P=[];d.forEach(N=>{let K=typeof N.data=="number"?[N.data]:N.data;if(K.length===0)return;let Q=N.type===10?2:4,he,W;N.type===10?(W=K.length>4?16:K.length>2?8:K.length*Q,he=K.length>4?16:Q*K.length):(W=K.length<=2?K.length*Q:16,he=16),E=Math.ceil(E/W)*W,P.push(E);let se=N.type===10?8:4;E+=K.length>4?Math.ceil(K.length/se)*he:K.length*Q});let O=16;E=Math.ceil(E/O)*O;let R=new ArrayBuffer(E);d.forEach((N,K)=>{let Q=P[K],he=typeof N.data=="number"?[N.data]:N.data;if(N.type===6)new Int32Array(R,Q,he.length).set(he);else if(N.type===12)new Uint32Array(R,Q,he.length).set(he);else if(N.type===10)new Uint16Array(R,Q,he.length).set(he);else if(N.type===1)new Float32Array(R,Q,he.length).set(he);else throw new Error(`Unsupported uniform type: ${Nt(N.type)}`)});let H=this.gpuDataManager.create(E,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(H.buffer,0,R,0,E),this.gpuDataManager.release(H.id),v={offset:0,size:E,buffer:H.buffer}}let S=this.programManager.normalizeDispatchGroupSize(h),I=S[1]===1&&S[2]===1,A=nm(t,r,I),x=this.programManager.getArtifact(A);if(x||(x=this.programManager.build(t,S),this.programManager.setArtifact(A,x),Ve("info",()=>`[artifact] key: ${A}, programName: ${t.name}`)),d&&x.uniformVariablesInfo){if(d.length!==x.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${x.uniformVariablesInfo.length}, got ${d.length} in program "${x.programInfo.name}".`);for(let E=0;E<d.length;E++){let P=d[E],O=P.type,R=typeof P.data=="number"?1:P.data.length,[H,N]=x.uniformVariablesInfo[E];if(O!==H||R!==N)throw new Error(`Uniform variable ${E} mismatch: expect type ${H} with size ${N}, got type ${O} with size ${R} in program "${x.programInfo.name}".`)}}if(Ve("info",()=>`[ProgramManager] run "${t.name}" (key=${A}) with ${S[0]}x${S[1]}x${S[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let E={kernelId:this.currentKernelId,programName:x.programInfo.name,inputTensorViews:r,outputTensorViews:w};this.pendingKernels.push(E),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(E)}return this.programManager.run(x,c,_,S,v),Gt(t.name),w}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,i){let u=Md.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:u[0],attributes:[u[1],o]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let u=i.kernelType,a=i.kernelName,c=i.kernelEntry,p=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,p[0]&&(p[1]=p[0](p[1]),p[0]=void 0),Ve("info",()=>`[WebGPU] Start to run kernel "[${u}] ${a}"...`);let h=this.env.debug;this.temporaryData=[];try{return h&&this.device.pushErrorScope("validation"),c(r,p[1]),0}catch(d){return o.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${a}" failed. ${d}`)),1}finally{h&&o.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${u}] ${a}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,i){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let a=u.get(r),c=this.gpuDataManager.registerExternalBuffer(o,i,a?.[1]);return u.set(r,[c,o]),c}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let i=await xo(this,t,r);return ma(i.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ve("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ve("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ve("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let i=0;i<o;i++){let u=this.getComputePassEncoder(),a=t[i];this.writeTimestamp(this.pendingDispatchNumber*2),u.setPipeline(a.computePipeline),u.setBindGroup(0,a.bindGroup),u.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var Nd={};gn(Nd,{init:()=>om});var qr,Zo,om,Gd=Y(()=>{"use strict";ye();Wd();Ht();Se();qr=class e{constructor(t,r,o,i){this.module=t;this.dataType=r;this.data=o;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(M.size(t)!==M.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Zo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=r.adapterInfo;let i=t.HEAPU32,u=o>>>2;this.opKernelContext=i[u++];let a=i[u++];this.outputCount=i[u++],this.customDataOffset=i[u++],this.customDataSize=i[u++];let c=[];for(let p=0;p<a;p++){let h=i[u++],d=i[u++],y=i[u++],w=[];for(let _=0;_<y;_++)w.push(i[u++]);c.push(new qr(t,h,d,w))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(t,r){let o=r?.inputs?.map(c=>typeof c=="number"?this.inputs[c]:c)??this.inputs,i=r?.outputs??[],u=(c,p,h)=>new qr(this.module,p,this.output(c,h),h),a=(c,p)=>{let h=tr(c);if(!h)throw new Error(`Unsupported data type: ${c}`);let d=h*M.size(p),y=d>0?this.backend.gpuDataManager.create(d).id:0;return new qr(this.module,c,y,p)};return this.backend.run(t,o,i,u,a,this.outputCount)}output(t,r){let o=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),u=i>>2;this.module.HEAPU32[u++]=r.length;for(let a=0;a<r.length;a++)this.module.HEAPU32[u++]=r[a];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(o)}}},om=async(e,t,r,o)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let u=new Ln;await u.initialize(r,o),i("webgpu",[u,a=>u.alloc(a),a=>u.free(a),(a,c,p,h=!1)=>{if(h)Ve("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${a}, dst=${c}, size=${p}`),u.memcpy(a,c);else{Ve("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${a}, gpuDataId=${c}, size=${p}`);let d=t.HEAPU8.subarray(a>>>0,(a>>>0)+p);u.upload(c,d)}},async(a,c,p)=>{Ve("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${c}, size=${p}`),await u.download(a,()=>t.HEAPU8.subarray(c>>>0,(c>>>0)+p))},(a,c,p)=>u.createKernel(a,c,p,t.UTF8ToString(t._JsepGetNodeName(c))),a=>u.releaseKernel(a),(a,c,p,h)=>{Ve("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${a}, contextDataOffset=${c}`);let d=new Zo(t,u,c);return u.computeKernel(a,d,h)},()=>u.captureBegin(),()=>u.captureEnd(),()=>u.replay()])}else i("webnn")}});var Vi;Vi=Ei();var pl=zi(),fo,ho=!1,yn=!1,Ui=!1,ml=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},fl=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},hl=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Wi=async e=>{if(ho)return Promise.resolve();if(yn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Ui)throw new Error("previous call to \'initializeWebAssembly()\' failed.");yn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,i=ml(r),u=o&&fl(),a=e.wasmPaths,c=typeof a=="string"?a:void 0,p=hl(u,i),h=typeof a=="object"?a[p]:void 0,d=!1,y=[];if(t>0&&y.push(new Promise(w=>{setTimeout(()=>{d=!0,w()},t)})),y.push(new Promise((w,_)=>{let v=i?pl:Vi,S={locateFile:(I,A)=>{if(i&&I.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Mi()],{type:"text/javascript"}));if(I.endsWith(".wasm")){if(h)return h;let x=c??A;return p==="ort-wasm-simd.wasm"?x+"ort-wasm-simd.jsep.wasm":p==="ort-wasm-simd-threaded.wasm"?x+"ort-wasm-simd-threaded.jsep.wasm":x+p}return A+I}};if(i)if(S.numThreads=r,typeof Blob>"u")S.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let I=`var ortWasmThreaded=${v.toString()};`;S.mainScriptUrlOrBlob=new Blob([I],{type:"text/javascript"})}v(S).then(I=>{yn=!1,ho=!0,fo=I,w()},I=>{yn=!1,Ui=!0,_(I)})})),await Promise.race(y),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Le=()=>{if(ho&&fo)return fo;throw new Error("WebAssembly is not initialized yet.")};var Fe=(e,t)=>{let r=Le(),o=r.lengthBytesUTF8(e)+1,i=r._malloc(o);return r.stringToUTF8(e,i,o),t.push(i),i},Nr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,u])=>{let a=t?t+i:i;if(typeof u=="object")Nr(u,a+".",r,o);else if(typeof u=="string"||typeof u=="number")o(a,u.toString());else if(typeof u=="boolean")o(a,u?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof u}`)})},Ue=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let i=t.HEAP32[o/4],u=t.HEAPU32[o/4+1],a=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(r)}};var Ni=e=>{let t=Le(),r=0,o=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let u=0;return e?.tag!==void 0&&(u=Fe(e.tag,o)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,u),r===0&&Ue("Can\'t create run options."),e?.extra!==void 0&&Nr(e.extra,"",new WeakSet,(a,c)=>{let p=Fe(a,o),h=Fe(c,o);t._OrtAddRunConfigEntry(r,p,h)!==0&&Ue(`Can\'t set a run config entry: ${a} - ${c}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(a=>t._free(a)),u}};var gl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},yl=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},bl=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},wl=(e,t,r)=>{for(let o of t){let i=typeof o=="string"?o:o.name;switch(i){case"webnn":if(i="WEBNN",typeof o!="string"){let a=o;if(a?.deviceType){let c=Fe("deviceType",r),p=Fe(a.deviceType,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'deviceType\' - ${a.deviceType}.`)}if(a?.numThreads){let c=a.numThreads;(typeof c!="number"||!Number.isInteger(c)||c<0)&&(c=0);let p=Fe("numThreads",r),h=Fe(c.toString(),r);Le()._OrtAddSessionConfigEntry(e,p,h)!==0&&Ue(`Can\'t set a session config entry: \'numThreads\' - ${a.numThreads}.`)}if(a?.powerPreference){let c=Fe("powerPreference",r),p=Fe(a.powerPreference,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'powerPreference\' - ${a.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof o!="string"){let a=o;if(a?.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${a.preferredLayout}`);let c=Fe("preferredLayout",r),p=Fe(a.preferredLayout,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'preferredLayout\' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let u=Fe(i,r);Le()._OrtAppendExecutionProvider(e,u)!==0&&Ue(`Can\'t append execution provider: ${i}.`)}},Gi=e=>{let t=Le(),r=0,o=[],i=e||{};bl(i);try{let u=gl(i.graphOptimizationLevel??"all"),a=yl(i.executionMode??"sequential"),c=typeof i.logId=="string"?Fe(i.logId,o):0,p=i.logSeverityLevel??2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let d=typeof i.optimizedModelFilePath=="string"?Fe(i.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(u,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,c,p,h,d),r===0&&Ue("Can\'t create session options."),i.executionProviders&&wl(r,i.executionProviders,o),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let y=Fe("enableGraphCapture",o),w=Fe(i.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,y,w)!==0&&Ue(`Can\'t set a session config entry: \'enableGraphCapture\' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[y,w]of Object.entries(i.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof w!="number"||!Number.isInteger(w)||w<0)throw new Error(`free dimension override value must be a non-negative integer: ${w}`);let _=Fe(y,o);t._OrtAddFreeDimensionOverride(r,_,w)!==0&&Ue(`Can\'t set a free dimension override: ${y} - ${w}.`)}return i.extra!==void 0&&Nr(i.extra,"",new WeakSet,(y,w)=>{let _=Fe(y,o),v=Fe(w,o);t._OrtAddSessionConfigEntry(r,_,v)!==0&&Ue(`Can\'t set a session config entry: ${y} - ${w}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(a=>t._free(a)),u}};ye();var Li=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let i of r)o.push(i);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),u;try{u=new ArrayBuffer(o)}catch(c){if(c instanceof RangeError){let p=Math.ceil(o/65536);u=new WebAssembly.Memory({initial:p,maximum:p}).buffer}else throw c}let a=0;for(;;){let{done:c,value:p}=await i.read();if(c)break;let h=p.byteLength;new Uint8Array(u,a,h).set(p),a+=h}return new Uint8Array(u,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var im=(e,t)=>{Le()._OrtInit(e,t)!==0&&Ue("Can\'t initialize onnxruntime.")},Ld=async e=>{im(e.wasm.numThreads,Gr(e.logLevel))},Fd=async(e,t)=>{{let r=(Gd(),wr(Nd)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let o=e.webgpu.adapter;if(o){if(typeof o.limits!="object"||typeof o.features!="object"||typeof o.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let u=e.webgpu.forceFallbackAdapter;if(u!==void 0&&typeof u!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${u}"`);if(o=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:u}),!o)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\')}if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",Le(),e,o)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Le(),e)}}},ar=new Map,am=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Ue("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Xo=e=>{let t=Le(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},qd=async(e,t)=>{let r,o,i=Le();Array.isArray(e)?[r,o]=e:e.buffer===i.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Xo(e);let u=0,a=0,c=0,p=[],h=[],d=[];try{if([a,p]=Gi(t),t?.externalData&&i.mountExternalData){let x=[];for(let E of t.externalData){let P=typeof E=="string"?E:E.path;x.push(Li(typeof E=="string"?E:E.data).then(O=>{i.mountExternalData(P,O)}))}await Promise.all(x)}u=await i._OrtCreateSession(r,o,a),u===0&&Ue("Can\'t create a session.");let[y,w]=am(u),_=!!t?.enableGraphCapture,v=[],S=[],I=[];for(let x=0;x<y;x++){let E=i._OrtGetInputName(u,x);E===0&&Ue("Can\'t get an input name."),h.push(E),v.push(i.UTF8ToString(E))}for(let x=0;x<w;x++){let E=i._OrtGetOutputName(u,x);E===0&&Ue("Can\'t get an output name."),d.push(E);let P=i.UTF8ToString(E);S.push(P);{if(_&&t?.preferredOutputLocation===void 0){I.push("gpu-buffer");continue}let O=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[P]??"cpu";if(O!=="cpu"&&O!=="cpu-pinned"&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}.`);if(_&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);I.push(O)}}let A=null;return I.some(x=>x==="gpu-buffer")&&(c=i._OrtCreateBinding(u),c===0&&Ue("Can\'t create IO binding."),A={handle:c,outputPreferredLocations:I,outputPreferredLocationsEncoded:I.map(x=>yo(x))}),ar.set(u,[u,h,d,A,_,!1]),[u,v,S]}catch(y){throw h.forEach(w=>i._OrtFree(w)),d.forEach(w=>i._OrtFree(w)),c!==0&&i._OrtReleaseBinding(c),u!==0&&i._OrtReleaseSession(u),y}finally{i._free(r),a!==0&&i._OrtReleaseSessionOptions(a),p.forEach(y=>i._free(y)),i.unmountExternalData?.()}},jd=e=>{let t=Le(),r=ar.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,i,u,a,c]=r;a&&(c&&t._OrtClearBoundOutputs(a.handle),t._OrtReleaseBinding(a.handle)),t.jsepOnReleaseSession?.(e),i.forEach(p=>t._OrtFree(p)),u.forEach(p=>t._OrtFree(p)),t._OrtReleaseSession(o),ar.delete(e)},Hd=(e,t,r,o,i,u=!1)=>{if(!e){t.push(0);return}let a=Le(),c=e[0],p=e[1],h=e[3],d,y;if(c==="string"&&h==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let v=e[2].gpuBuffer,S=tr(go(c));y=p.reduce((A,x)=>A*x,1)*S;let I=a.jsepRegisterBuffer;if(!I)throw new Error(\'Tensor location "gpu-buffer" is not supported without using WebGPU.\');d=I(o,i,v,y)}else{let v=e[2];if(Array.isArray(v)){y=4*v.length,d=a._malloc(y),r.push(d);let S=d/4;for(let I=0;I<v.length;I++){if(typeof v[I]!="string")throw new TypeError(`tensor data at index ${I} is not a string`);a.HEAPU32[S++]=Fe(v[I],r)}}else y=v.byteLength,d=a._malloc(y),r.push(d),a.HEAPU8.set(new Uint8Array(v.buffer,v.byteOffset,y),d)}let w=a.stackSave(),_=a.stackAlloc(4*p.length);try{let v=_/4;p.forEach(I=>a.HEAP32[v++]=I);let S=a._OrtCreateTensor(go(c),d,y,_,p.length,yo(h));S===0&&Ue(`Can\'t create tensor for input/output. session=${o}, index=${i}.`),t.push(S)}finally{a.stackRestore(w)}},Kd=async(e,t,r,o,i,u)=>{let a=Le(),c=ar.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let p=c[0],h=c[1],d=c[2],y=c[3],w=c[4],_=c[5],v=t.length,S=o.length,I=0,A=[],x=[],E=[],P=[],O=a.stackSave(),R=a.stackAlloc(v*4),H=a.stackAlloc(v*4),N=a.stackAlloc(S*4),K=a.stackAlloc(S*4);try{[I,A]=Ni(u);for(let ee=0;ee<v;ee++)Hd(r[ee],x,P,e,t[ee],w);for(let ee=0;ee<S;ee++)Hd(i[ee],E,P,e,v+o[ee],w);let Q=R/4,he=H/4,W=N/4,se=K/4;for(let ee=0;ee<v;ee++)a.HEAPU32[Q++]=x[ee],a.HEAPU32[he++]=h[t[ee]];for(let ee=0;ee<S;ee++)a.HEAPU32[W++]=E[ee],a.HEAPU32[se++]=d[o[ee]];if(y&&!_){let{handle:ee,outputPreferredLocations:ae,outputPreferredLocationsEncoded:Ae}=y;if(h.length!==v)throw new Error(`input count from feeds (${v}) is expected to be always equal to model\'s input count (${h.length}).`);for(let me=0;me<v;me++){let ie=t[me];await a._OrtBindInput(ee,h[ie],x[me])!==0&&Ue(`Can\'t bind input[${me}] for session=${e}.`)}for(let me=0;me<S;me++){let ie=o[me];i[me]?.[3]?a._OrtBindOutput(ee,d[ie],E[me],0)!==0&&Ue(`Can\'t bind pre-allocated output[${me}] for session=${e}.`):a._OrtBindOutput(ee,d[ie],0,Ae[ie])!==0&&Ue(`Can\'t bind output[${me}] to ${ae[me]} for session=${e}.`)}ar.set(e,[p,h,d,y,w,!0])}a.jsepOnRunStart?.(p);let Ce;y?Ce=await a._OrtRunWithBinding(p,y.handle,S,N,I):Ce=await a._OrtRun(p,H,R,v,K,S,N,I),Ce!==0&&Ue("failed to call OrtRun().");let We=[];for(let ee=0;ee<S;ee++){let ae=a.HEAPU32[N/4+ee];if(ae===E[ee]){We.push(i[ee]);continue}let Ae=a.stackSave(),me=a.stackAlloc(4*4),ie=!1,ue,le=0;try{a._OrtGetTensorData(ae,me,me+4,me+8,me+12)!==0&&Ue(`Can\'t access output tensor data on index ${ee}.`);let G=me/4,ne=a.HEAPU32[G++];le=a.HEAPU32[G++];let xe=a.HEAPU32[G++],Ke=a.HEAPU32[G++],De=[];for(let Ne=0;Ne<Ke;Ne++)De.push(a.HEAPU32[xe/4+Ne]);a._OrtFree(xe);let Ge=De.reduce((Ne,Ye)=>Ne*Ye,1);ue=Nt(ne);let Mt=y?.outputPreferredLocations[o[ee]];if(ue==="string"){if(Mt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Ne=[],Ye=le/4;for(let mt=0;mt<Ge;mt++){let Ot=a.HEAPU32[Ye++],qt=mt===Ge-1?void 0:a.HEAPU32[Ye]-Ot;Ne.push(a.UTF8ToString(Ot,qt))}We.push([ue,De,Ne,"cpu"])}else if(Mt==="gpu-buffer"&&Ge>0){let Ne=a.jsepGetBuffer;if(!Ne)throw new Error(\'preferredLocation "gpu-buffer" is not supported without using WebGPU.\');let Ye=Ne(le),mt=tr(ne);if(mt===void 0||!Hi(ue))throw new Error(`Unsupported data type: ${ue}`);ie=!0,We.push([ue,De,{gpuBuffer:Ye,download:a.jsepCreateDownloader(Ye,Ge*mt,ue),dispose:()=>{a._OrtReleaseTensor(ae)}},"gpu-buffer"])}else{let Ne=bn(ue),Ye=new Ne(Ge);new Uint8Array(Ye.buffer,Ye.byteOffset,Ye.byteLength).set(a.HEAPU8.subarray(le,le+Ye.byteLength)),We.push([ue,De,Ye,"cpu"])}}finally{a.stackRestore(Ae),ue==="string"&&le&&a._free(le),ie||a._OrtReleaseTensor(ae)}}return y&&!w&&(a._OrtClearBoundOutputs(y.handle),ar.set(e,[p,h,d,y,w,!1])),We}finally{a.stackRestore(O),x.forEach(Q=>a._OrtReleaseTensor(Q)),E.forEach(Q=>a._OrtReleaseTensor(Q)),P.forEach(Q=>a._free(Q)),I!==0&&a._OrtReleaseRunOptions(I),A.forEach(Q=>a._free(Q))}},Yd=e=>{let t=Le(),r=ar.get(e);if(!r)throw new Error("invalid session id");let o=r[0],i=t._OrtEndProfiling(o);i===0&&Ue("Can\'t get an profile file name."),t._OrtFree(i)},Zd=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Wi(r.wasm).then(()=>{Ld(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:i}=r;Fd(i,o).then(()=>{postMessage({type:t})},u=>{postMessage({type:t,err:u})});break}case"copy-from":{let{buffer:o}=r,i=Xo(o);postMessage({type:t,out:i});break}case"create":{let{model:o,options:i}=r;qd(o,i).then(u=>{postMessage({type:t,out:u})},u=>{postMessage({type:t,err:u})});break}case"release":jd(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:i,inputs:u,outputIndices:a,options:c}=r;Kd(o,i,u,a,new Array(a.length).fill(null),c).then(p=>{p.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:p},Zd([...u,...p]))},p=>{postMessage({type:t,err:p})});break}case"end-profiling":Yd(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'}),gr,St,sn,pi,mi,Sa,Ca,zr,Br,pf,ci,Wd,Nd,Vd,Hd,Gd,Ld,Fd,Ia=j(()=>{var n;_t(),Md(),Or(),gr=()=>!!ke.wasm.proxy&&typeof document<"u",sn=!1,pi=!1,mi=!1,Ca=new Map,zr=(e,i)=>{let o=Ca.get(e);o?o.push(i):Ca.set(e,[i])},Br=()=>{if(sn||!pi||mi||!St)throw new Error("worker not ready")},pf=e=>{switch(e.data.type){case"init-wasm":sn=!1,e.data.err?(mi=!0,Sa[1](e.data.err)):(pi=!0,Sa[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let i=Ca.get(e.data.type);e.data.err?i.shift()[1](e.data.err):i.shift()[0](e.data.out);break}}},ci=typeof document<"u"?(n=document==null?void 0:document.currentScript)==null?void 0:n.src:void 0,Wd=async()=>{if(!pi){if(sn)throw new Error("multiple calls to 'initWasm()' detected.");if(mi)throw new Error("previous call to 'initWasm()' failed.");if(sn=!0,gr())return ke.wasm.wasmPaths===void 0&&ci&&ci.indexOf("blob:")!==0&&(ke.wasm.wasmPaths=ci.substr(0,+ci.lastIndexOf("/")+1)),new Promise((e,i)=>{St==null||St.terminate();let o=URL.createObjectURL(new Blob([Ud()],{type:"text/javascript"}));St=new Worker(o,{name:"ort-wasm-proxy-worker"}),St.onerror=c=>i(c),St.onmessage=pf,URL.revokeObjectURL(o),Sa=[e,i];let l={type:"init-wasm",in:ke};St.postMessage(l)});try{await Fo(ke.wasm),await kd(ke),pi=!0}catch(e){throw mi=!0,e}finally{sn=!1}}},Nd=async e=>{if(gr())return Br(),new Promise((i,o)=>{zr("init-ep",[i,o]);let l={type:"init-ep",in:{epName:e,env:ke}};St.postMessage(l)});await Od(ke,e)},Vd=async e=>gr()?(Br(),new Promise((i,o)=>{zr("copy-from",[i,o]);let l={type:"copy-from",in:{buffer:e}};St.postMessage(l,[e.buffer])})):xa(e),Hd=async(e,i)=>{if(gr()){if(i!=null&&i.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Br(),new Promise((o,l)=>{zr("create",[o,l]);let c={type:"create",in:{model:e,options:{...i}}},a=[];e instanceof Uint8Array&&a.push(e.buffer),St.postMessage(c,a)})}else return Pd(e,i)},Gd=async e=>{if(gr())return Br(),new Promise((i,o)=>{zr("release",[i,o]);let l={type:"release",in:e};St.postMessage(l)});Rd(e)},Ld=async(e,i,o,l,c,a)=>{if(gr()){if(o.some(h=>h[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(c.some(h=>h))throw new Error("pre-allocated output tensor is not supported for proxy.");return Br(),new Promise((h,f)=>{zr("run",[h,f]);let p=o,d={type:"run",in:{sessionId:e,inputIndices:i,inputs:p,outputIndices:l,options:a}};St.postMessage(d,Dd(p))})}else return zd(e,i,o,l,c,a)},Fd=async e=>{if(gr())return Br(),new Promise((i,o)=>{zr("end-profiling",[i,o]);let l={type:"end-profiling",in:e};St.postMessage(l)});Bd(e)}}),qd,mf,fi,jd=j(()=>{_t(),Ia(),ye(),qi(),qd=(n,e)=>{switch(n.location){case"cpu":return[n.type,n.dims,n.data,"cpu"];case"gpu-buffer":return[n.type,n.dims,{gpuBuffer:n.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${n.location} for ${e()}`)}},mf=n=>{switch(n[3]){case"cpu":return new tt(n[0],n[2],n[1]);case"gpu-buffer":{let e=n[0];if(!Vn(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:i,download:o,dispose:l}=n[2];return tt.fromGpuBuffer(i,{dataType:e,dims:n[1],download:o,dispose:l})}default:throw new Error(`invalid data location: ${n[3]}`)}},fi=class{async fetchModelAndCopyToWasmMemory(n){return Vd(await tn(n))}async loadModel(n,e){yt();let i;typeof n=="string"?typeof process<"u"&&process.versions&&process.versions.node?i=await tn(n):i=await this.fetchModelAndCopyToWasmMemory(n):i=n,[this.sessionId,this.inputNames,this.outputNames]=await Hd(i,e),ut()}async dispose(){return Gd(this.sessionId)}async run(n,e,i){yt();let o=[],l=[];Object.entries(n).forEach(r=>{let t=r[0],u=r[1],s=this.inputNames.indexOf(t);if(s===-1)throw new Error(`invalid input '${t}'`);o.push(u),l.push(s)});let c=[],a=[];Object.entries(e).forEach(r=>{let t=r[0],u=r[1],s=this.outputNames.indexOf(t);if(s===-1)throw new Error(`invalid output '${t}'`);c.push(u),a.push(s)});let h=o.map((r,t)=>qd(r,()=>`input "${this.inputNames[l[t]]}"`)),f=c.map((r,t)=>r?qd(r,()=>`output "${this.outputNames[a[t]]}"`):null),p=await Ld(this.sessionId,l,h,a,f,i),d={};for(let r=0;r<p.length;r++)d[this.outputNames[a[r]]]=c[r]??mf(p[r]);return ut(),d}startProfiling(){}endProfiling(){Fd(this.sessionId)}}}),ff,hi,Kd=j(()=>{_t(),Ia(),jd(),ff=()=>{if((typeof ke.wasm.initTimeout!="number"||ke.wasm.initTimeout<0)&&(ke.wasm.initTimeout=0),typeof ke.wasm.simd!="boolean"&&(ke.wasm.simd=!0),typeof ke.wasm.proxy!="boolean"&&(ke.wasm.proxy=!1),typeof ke.wasm.trace!="boolean"&&(ke.wasm.trace=!1),typeof ke.wasm.numThreads!="number"||!Number.isInteger(ke.wasm.numThreads)||ke.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(ke.wasm.numThreads=1);let n=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;ke.wasm.numThreads=Math.min(4,Math.ceil((n||1)/2))}},hi=class{async init(n){ff(),await Wd(),await Nd(n)}async createInferenceSessionHandler(n,e){let i=new fi;return await i.loadModel(n,e),Promise.resolve(i)}}}),Yd={};kr(Yd,{wasmBackend:()=>hf});var hf,Xd=j(()=>{Kd(),hf=new hi});_t(),_t(),_t();var ko="1.19.0-dev.20240509-69cfcba38a";{let n=(Xd(),sr(Yd)).wasmBackend;lr("webgpu",n,5),lr("webnn",n,5),lr("cpu",n,10),lr("wasm",n,10)}Object.defineProperty(ke.versions,"web",{value:ko,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MODELS={phi3:{name:"phi3",path:"microsoft/Phi-3-mini-4k-instruct-onnx-web",externaldata:!0},phi3dev:{name:"phi3dev",path:"schmuell/Phi-3-mini-4k-instruct-onnx-web",externaldata:!0}};function getConfig(){const n="";var e={model:"phi3",provider:"webgpu",profiler:0,verbose:0,threads:1,show_special:0,csv:0,max_tokens:9999,local:0};let i=n.split("&");for(var o=0;o<i.length;o++){let l=i[o].split("=");if(l[0]in e){const c=l[0],a=decodeURIComponent(l[1]);typeof e[c]=="number"?e[c]=parseInt(a):e[c]=a}else if(l[0].length>0)throw new Error("unknown argument: "+l[0])}return MODELS[e.model]!==void 0&&(e.model=MODELS[e.model]),e}async function hasWebGPU(){if(!("gpu"in navigator))return 2;try{return(await navigator.gpu.requestAdapter()).features.has("shader-f16")?0:1}catch{return 2}}async function fetchAndCache(n,e,i=""){e({text:`Loading ${i}...`,progress:0});const o=1024*1024,l=await caches.open("onnx");try{const c=await l.match(n);if(c)return console.log(`${n} (cached)`),c.arrayBuffer();console.log(`${n} (network)`);const a=await fetch(n);if(!a.ok)throw new Error(`Failed to fetch ${n}: ${a.statusText}`);const h=a.headers.get("content-length"),f=h?parseInt(h,10):0;let p=0,d=0;if(f>o){const r=[],t=a.body.getReader();for(;;){const{done:s,value:m}=await t.read();if(s)break;if(r.push(m),p+=m.length,f){const g=Math.floor(p/f*100);g>d&&(e({text:i,progress:g}),d=g)}}const u=await new Blob(r).arrayBuffer();return await l.put(n,new Response(u.slice(0))),u}else{const r=await a.arrayBuffer();return await l.put(n,new Response(r.slice(0))),r}}catch(c){throw console.error(`Can't fetch ${n}:`,c),c}}ke.wasm.numThreads=1,ke.wasm.simd=!0,ke.wasm.wasmPaths="/task-coach-browser/dist/";class LLM{constructor(e=void 0){Ae(this,"sess");Ae(this,"profiler",!1);Ae(this,"feed",{});Ae(this,"output_tokens",[]);Ae(this,"eos",2);Ae(this,"need_position_ids",!0);Ae(this,"stop",!1);Ae(this,"kv_dims",[]);Ae(this,"dtype","float16");Ae(this,"max_tokens",9999);Ae(this,"model_bytes",null);Ae(this,"opt",null);if(e){ke.wasm.wasmPaths=e.location.pathname.replace("index.html","")+"dist/";return}ke.wasm.wasmPaths="/task-coach-browser/dist/"}async load(e,i,o){const l=i.provider||"webgpu",c=i.verbose,a=i.local,h=l==="wasm"?!1:i.hasFP16;this.profiler=i.profiler;const f=a?"models/"+e.path:"https://huggingface.co/"+e.path+"/resolve/main";let p=e.file||"model";p=h?p+"_q4f16.onnx":p+"_q4.onnx";const d=await fetchAndCache(f+"/config.json",o,"config.json file");let r=new TextDecoder;const t=JSON.parse(r.decode(d)),u=await fetchAndCache(f+"/onnx/"+p,o,"Model file"),s=e.externaldata?await fetchAndCache(f+"/onnx/"+p+"_data",o,"Model external data"):!1;let m=u.byteLength;s&&(m+=s.byteLength),console.log(`model size ${Math.round(m/1024/1024)} MB`);const g={executionProviders:[l],preferredOutputLocation:{}};switch(l){case"webgpu":for(let b=0;b<t.num_hidden_layers;++b)g.preferredOutputLocation[`present.${b}.key`]="gpu-buffer",g.preferredOutputLocation[`present.${b}.value`]="gpu-buffer";break}s!==void 0&&(g.externalData=[{data:s,path:p+"_data"}]),c&&(g.logSeverityLevel=0,g.logVerbosityLevel=0,ke.logLevel="verbose"),ke.webgpu.profiling={},this.profiler&&(g.enableProfiling=!0,ke.webgpu.profilingMode="default",ke.webgpu.profiling.mode="default"),this.model_bytes=u,this.opt=g,this.sess=await uc.create(u,g),this.eos=t.eos_token_id,this.kv_dims=[1,t.num_key_value_heads,0,t.hidden_size/t.num_attention_heads],this.dtype=h?"float16":"float32",this.num_layers=t.num_hidden_layers,await this.initilize_feed(),o(null)}async refreshSession(){this.sess=await uc.create(this.model_bytes,this.opt)}async initilize_feed(){const e=this.feed;for(const o in e){const l=e[o];l.location==="gpu-buffer"&&await l.dispose()}this.feed={};const i=this.dtype==="float16"?new Uint16Array:[];for(let o=0;o<this.num_layers;++o)this.feed[`past_key_values.${o}.key`]=new tt(this.dtype,i,this.kv_dims),this.feed[`past_key_values.${o}.value`]=new tt(this.dtype,i,this.kv_dims);this.output_tokens=[]}argmax(e){const i=e.data,o=e.dims[2]*(e.dims[1]-1);let l=i[o],c=0;for(let a=0;a<e.dims[2];a++){const h=i[a+o];if(!isFinite(h))throw new Error("found infinitive in logits");h>l&&(l=i[a+o],c=a)}return c}update_kv_cache(e,i){for(const o in i)if(o.startsWith("present")){let l=o.replace("present","past_key_values");const c=e[l];c.location==="gpu-buffer"&&c.dispose(),e[l]=i[o]}}abort(){this.stop=!0}async generate(e,i,o){const l=o.max_tokens||256,c=this.feed,a=new tt("int64",BigInt64Array.from(e.map(BigInt)),[1,e.length]);c.input_ids=a,this.stop=!1,this.output_tokens.push(...a.data);let h=0n,f=this.output_tokens.length;const p=a.size;for(this.need_position_ids&&(c.position_ids=new tt("int64",BigInt64Array.from({length:p},(d,r)=>BigInt(f-p+r)),[1,p]));h!=this.eos&&h!=32007&&f<l&&!this.stop;){f=this.output_tokens.length,c.attention_mask=new tt("int64",BigInt64Array.from({length:f},()=>1n),[1,f]);const d=await this.sess.run(c);h=BigInt(this.argmax(d.logits)),this.output_tokens.push(h),i&&!this.profiler&&i(this.output_tokens),this.update_kv_cache(c,d),c.input_ids=new tt("int64",BigInt64Array.from([h]),[1,1]),this.need_position_ids&&(c.position_ids=new tt("int64",BigInt64Array.from([BigInt(f)]),[1,1]))}return this.profiler&&this.sess.endProfiling(),this.output_tokens}}const In=class In{constructor(e=void 0,i={}){var l;if(In.instance)return In.instance;const o=getConfig();env$1.localModelPath="models",env$1.allowRemoteModels=o.local==0,env$1.allowLocalModels=o.local==1,this.document=e||void 0,this.config=o,this.llm={},this.tokenizer=null,this.isModelLoaded=!1,this.progress="starting progress",this.props=i,((l=this.props)==null?void 0:l.setConfig)!==void 0&&this.props.setConfig(o),In.instance=this}static getInstance(e=void 0,i={}){return In.instance||(In.instance=new In(e,i)),In.instance}async initialize(e=void 0,i=void 0){var o;this.isModelLoaded||(e&&(this.props.setProgress=e),i&&(this.props.setIsModelLoaded=i),this.tokenizer=await AutoTokenizer.from_pretrained(this.config.model.path),this.llm=new LLM(this.document),await this.llm.load(this.config.model,{provider:this.config.provider,profiler:this.config.profiler,verbose:this.config.verbose,local:this.config.local,maxTokens:this.config.maxTokens,hasFP16:await hasWebGPU()===0},l=>{var c;this.progress=l,((c=this.props)==null?void 0:c.setProgress)!==void 0&&this.props.setProgress(l)}),this.isModelLoaded=!0,((o=this.props)==null?void 0:o.setIsModelLoaded)!==void 0&&this.props.setIsModelLoaded(!0))}getLLM(){return this.llm}getTokenizer(){return this.tokenizer}getConfig(){return this.config}getIsModelLoaded(){return this.isModelLoaded}getProgress(){return this.progress}getAll(){return{tokenizer:this.tokenizer,config:this.config,isModelLoaded:this.isModelLoaded,progress:this.progress,llm:this.llm}}};Ae(In,"instance",null);let ModelContextSingleton=In;const generatePrompt=(n,e)=>`<|system|>
${e}<|end|>
<|user|>
${n}<|end|>
<|assistant|>
`,token_to_text=(n,e,i,o)=>n.decode(e.slice(i),{skip_special_tokens:o.show_special!=1}),instance=ModelContextSingleton.getInstance();self.addEventListener("message",async n=>{const{query:e,systemPrompt:i,stream:o,event:l,key:c=void 0}=n.data;if(await instance.initialize(m=>self.postMessage({status:"progress",value:m,key:c}),m=>self.postMessage({status:"isModelLoaded",value:m,key:c})),l==="initializingModel")return;const{tokenizer:a,llm:h,config:f}=instance.getAll();if(l==="terminateModel"){await h.initilize_feed(),self.postMessage({status:"terminated",key:c});return}if(!a||!h)return;const p=generatePrompt(e,i),{input_ids:d}=await a(p,{return_tensor:!1,padding:!0,truncation:!0});console.log(`Tokens length = ${d.length}`),await h.initilize_feed();const r=performance.now(),t=h.output_tokens.length+d.length,u=await h.generate(d,m=>{if(m.length==d.length+1){const b=(performance.now()-r)/1e3;console.log(`time to first token in ${b.toFixed(1)}sec, ${d.length} tokens`)}const g=token_to_text(a,m,t,f);o&&self.postMessage({status:"stream",text:g,key:c})},{max_tokens:f.max_tokens}),s=token_to_text(a,u,t,f);self.postMessage({status:"final",text:s,key:c})})})();
